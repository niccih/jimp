!(function(t) {
    var e = {};
    function i(r) {
        if (e[r]) return e[r].exports;
        var n = (e[r] = { i: r, l: !1, exports: {} });
        return t[r].call(n.exports, n, n.exports, i), (n.l = !0), n.exports;
    }
    (i.m = t),
        (i.c = e),
        (i.d = function(t, e, r) {
            i.o(t, e) ||
                Object.defineProperty(t, e, { enumerable: !0, get: r });
        }),
        (i.r = function(t) {
            'undefined' != typeof Symbol &&
                Symbol.toStringTag &&
                Object.defineProperty(t, Symbol.toStringTag, {
                    value: 'Module'
                }),
                Object.defineProperty(t, '__esModule', { value: !0 });
        }),
        (i.t = function(t, e) {
            if ((1 & e && (t = i(t)), 8 & e)) return t;
            if (4 & e && 'object' == typeof t && t && t.__esModule) return t;
            var r = Object.create(null);
            if (
                (i.r(r),
                Object.defineProperty(r, 'default', {
                    enumerable: !0,
                    value: t
                }),
                2 & e && 'string' != typeof t)
            )
                for (var n in t)
                    i.d(
                        r,
                        n,
                        function(e) {
                            return t[e];
                        }.bind(null, n)
                    );
            return r;
        }),
        (i.n = function(t) {
            var e =
                t && t.__esModule
                    ? function() {
                          return t.default;
                      }
                    : function() {
                          return t;
                      };
            return i.d(e, 'a', e), e;
        }),
        (i.o = function(t, e) {
            return Object.prototype.hasOwnProperty.call(t, e);
        }),
        (i.p = ''),
        i((i.s = 1));
})([
    function(t, e) {
        (function(e) {
            t.exports = e;
        }.call(this, {}));
    },
    function(t, e, i) {
        'use strict';
        (function(t) {
            var e,
                r,
                n,
                a =
                    'function' == typeof Symbol &&
                    'symbol' == typeof Symbol.iterator
                        ? function(t) {
                              return typeof t;
                          }
                        : function(t) {
                              return t &&
                                  'function' == typeof Symbol &&
                                  t.constructor === Symbol &&
                                  t !== Symbol.prototype
                                  ? 'symbol'
                                  : typeof t;
                          };
            function o(t) {
                if (Array.isArray(t)) {
                    for (var e = 0, i = Array(t.length); e < t.length; e++)
                        i[e] = t[e];
                    return i;
                }
                return Array.from(t);
            }
            function s(t, e, i) {
                return (
                    e in t
                        ? Object.defineProperty(t, e, {
                              value: i,
                              enumerable: !0,
                              configurable: !0,
                              writable: !0
                          })
                        : (t[e] = i),
                    t
                );
            }
            function l(t, e) {
                if (!t)
                    throw new ReferenceError(
                        "this hasn't been initialised - super() hasn't been called"
                    );
                return !e || ('object' != typeof e && 'function' != typeof e)
                    ? t
                    : e;
            }
            if ((void 0 === f || !f) && 'undefined' != typeof self)
                var f = self;
            !(function() {
                return function t(i, r, n) {
                    function a(s, l) {
                        if (!r[s]) {
                            if (!i[s]) {
                                if (!l && 'function' == typeof e && e)
                                    return e(s, !0);
                                if (o) return o(s, !0);
                                var f = new Error(
                                    "Cannot find module '" + s + "'"
                                );
                                throw ((f.code = 'MODULE_NOT_FOUND'), f);
                            }
                            var h = (r[s] = { exports: {} });
                            i[s][0].call(
                                h.exports,
                                function(t) {
                                    return a(i[s][1][t] || t);
                                },
                                h,
                                h.exports,
                                t,
                                i,
                                r,
                                n
                            );
                        }
                        return r[s].exports;
                    }
                    for (
                        var o = 'function' == typeof e && e, s = 0;
                        s < n.length;
                        s++
                    )
                        a(n[s]);
                    return a;
                };
            })()(
                {
                    1: [
                        function(e, i, r) {
                            (function(t, r, n, o, h, c, u, p) {
                                var d = e('fs'),
                                    m = e('path'),
                                    g = e('events'),
                                    b = e('pngjs').PNG,
                                    v = e('jpeg-js'),
                                    y = e('bmp-js'),
                                    w = e('omggif'),
                                    _ = e('utif'),
                                    x = e('mime'),
                                    k = e('tinycolor2'),
                                    E = e('bignumber.js'),
                                    I = e('load-bmfont'),
                                    S = e('mkdirp'),
                                    A = e('file-type'),
                                    T = e('pixelmatch'),
                                    C = e('exif-parser'),
                                    M = r.Promise || e('es6-promise').Promise,
                                    P = e('./phash.js'),
                                    L = e('./src/request'),
                                    O = e('./resize.js'),
                                    R = e('./resize2.js'),
                                    B = function(t) {
                                        return void 0 !== t && null !== t;
                                    };
                                E.set({
                                    ALPHABET:
                                        '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'
                                });
                                var D = 0;
                                function z(e) {
                                    U(),
                                        void 0 !== t && t && t.stdout
                                            ? t.stdout.write(e)
                                            : 'undefined' != typeof console &&
                                              console &&
                                              console.warn('Jimp', e),
                                        (D = e.length);
                                }
                                function U() {
                                    if (t && t.stdout)
                                        for (; D-- > 0; ) t.stdout.write('\b');
                                }
                                function N() {}
                                function F(t) {
                                    if (void 0 === t) return !1;
                                    if ('function' != typeof t)
                                        throw new TypeError(
                                            'Callback must be a function'
                                        );
                                    return !0;
                                }
                                function j(t, e) {
                                    if (
                                        ('string' == typeof t &&
                                            (t = new Error(t)),
                                        'function' == typeof e)
                                    )
                                        return e.call(this, t);
                                    throw t;
                                }
                                function H(t, e) {
                                    q(t, 'change', e);
                                }
                                t.on('exit', U);
                                var G = (function(t) {
                                    function e() {
                                        var t = arguments;
                                        !(function(t, e) {
                                            if (!(t instanceof e))
                                                throw new TypeError(
                                                    'Cannot call a class as a function'
                                                );
                                        })(this, e);
                                        var i = l(
                                                this,
                                                (
                                                    e.__proto__ ||
                                                    Object.getPrototypeOf(e)
                                                ).call(this)
                                            ),
                                            r = i,
                                            o = N;
                                        function s(t) {
                                            var e = arguments;
                                            ((t || {}).methodName =
                                                'constructor'),
                                                setTimeout(function() {
                                                    var i;
                                                    t
                                                        ? r.emitError(
                                                              'constructor',
                                                              t
                                                          )
                                                        : r.emitMulti(
                                                              'constructor',
                                                              'initialized'
                                                          ),
                                                        (i = o).call.apply(
                                                            i,
                                                            [r].concat(
                                                                Array.prototype.slice.call(
                                                                    e
                                                                )
                                                            )
                                                        );
                                                }, 1);
                                        }
                                        if (
                                            ((function(t) {
                                                return (
                                                    Object.prototype.toString
                                                        .call(t)
                                                        .toLowerCase()
                                                        .indexOf(
                                                            'arraybuffer'
                                                        ) > -1
                                                );
                                            })(arguments[0]) &&
                                                (arguments[0] = (function(t) {
                                                    for (
                                                        var e = n.alloc(
                                                                t.byteLength
                                                            ),
                                                            i = new Uint8Array(
                                                                t
                                                            ),
                                                            r = 0;
                                                        r < e.length;
                                                        ++r
                                                    )
                                                        e[r] = i[r];
                                                    return e;
                                                })(arguments[0])),
                                            'number' == typeof arguments[0] &&
                                                'number' == typeof arguments[1])
                                        ) {
                                            var f,
                                                h = arguments[0],
                                                c = arguments[1];
                                            if (
                                                ((o = arguments[2]),
                                                'number' ==
                                                    typeof arguments[2] &&
                                                    ((i._background =
                                                        arguments[2]),
                                                    (o = arguments[3])),
                                                void 0 === o && (o = N),
                                                'function' != typeof o)
                                            )
                                                return (
                                                    (f = j.call(
                                                        i,
                                                        'cb must be a function',
                                                        s
                                                    )),
                                                    l(i, f)
                                                );
                                            i.bitmap = {
                                                data: n.alloc(h * c * 4),
                                                width: h,
                                                height: c
                                            };
                                            for (
                                                var u = 0;
                                                u < i.bitmap.data.length;
                                                u += 4
                                            )
                                                i.bitmap.data.writeUInt32BE(
                                                    i._background,
                                                    u
                                                );
                                            s(null, i);
                                        } else if (arguments[0] instanceof e) {
                                            var p,
                                                m = arguments[0];
                                            if (
                                                (void 0 ===
                                                    (o = arguments[1]) &&
                                                    (o = N),
                                                'function' != typeof o)
                                            )
                                                return (
                                                    (p = j.call(
                                                        i,
                                                        'cb must be a function',
                                                        s
                                                    )),
                                                    l(i, p)
                                                );
                                            var g = n.alloc(
                                                m.bitmap.data.length
                                            );
                                            m.scanQuiet(
                                                0,
                                                0,
                                                m.bitmap.width,
                                                m.bitmap.height,
                                                function(t, e, i) {
                                                    var r = m.bitmap.data.readUInt32BE(
                                                        i
                                                    );
                                                    g.writeUInt32BE(r, i);
                                                }
                                            ),
                                                (i.bitmap = {
                                                    data: g,
                                                    width: m.bitmap.width,
                                                    height: m.bitmap.height
                                                }),
                                                (i._quality = m._quality),
                                                (i._deflateLevel =
                                                    m._deflateLevel),
                                                (i._deflateStrategy =
                                                    m._deflateStrategy),
                                                (i._filterType = m._filterType),
                                                (i._rgba = m._rgba),
                                                (i._background = m._background),
                                                (i._originalMime =
                                                    m._originalMime),
                                                s(null, i);
                                        } else if (
                                            'string' == typeof arguments[0]
                                        ) {
                                            var b,
                                                v = arguments[0];
                                            if (
                                                (void 0 ===
                                                    (o = arguments[1]) &&
                                                    (o = N),
                                                'function' != typeof o)
                                            )
                                                return (
                                                    (b = j.call(
                                                        i,
                                                        'cb must be a function',
                                                        s
                                                    )),
                                                    l(i, b)
                                                );
                                            !(function(t, e) {
                                                d &&
                                                'function' ==
                                                    typeof d.readFile &&
                                                !t.match(/^(http|ftp)s?:\/\/./)
                                                    ? d.readFile(t, e)
                                                    : L(t, function(i, r, o) {
                                                          if (i) return e(i);
                                                          if (
                                                              'object' ===
                                                                  (void 0 === o
                                                                      ? 'undefined'
                                                                      : a(o)) &&
                                                              n.isBuffer(o)
                                                          )
                                                              return e(null, o);
                                                          var s =
                                                              'Could not load Buffer from <' +
                                                              t +
                                                              '> (HTTP: ' +
                                                              r.statusCode +
                                                              ')';
                                                          return new Error(s);
                                                      });
                                            })(v, function(t, e) {
                                                if (t) return j.call(i, t, s);
                                                W.call(i, e, v, s);
                                            });
                                        } else if (
                                            'object' === a(arguments[0]) &&
                                            n.isBuffer(arguments[0])
                                        ) {
                                            var y,
                                                w = arguments[0];
                                            if (
                                                'function' !=
                                                typeof (o = arguments[1])
                                            )
                                                return (
                                                    (y = j.call(
                                                        i,
                                                        'cb must be a function',
                                                        s
                                                    )),
                                                    l(i, y)
                                                );
                                            W.call(i, w, null, s);
                                        } else {
                                            'function' !=
                                                typeof (o =
                                                    arguments[
                                                        arguments.length - 1
                                                    ]) &&
                                                'function' !=
                                                    typeof (o =
                                                        arguments[
                                                            arguments.length - 2
                                                        ]) &&
                                                (o = N);
                                            var _,
                                                x = e.__extraConstructors.find(
                                                    function(e) {
                                                        return e.test.apply(
                                                            e,
                                                            t
                                                        );
                                                    }
                                                );
                                            if (!x)
                                                return (
                                                    (_ = j.call(
                                                        i,
                                                        'No matching constructor overloading was found. Please see the docs for how to call the Jimp constructor.',
                                                        s
                                                    )),
                                                    l(i, _)
                                                );
                                            new M(function(e, r) {
                                                var n;
                                                return (n = x.run).call.apply(
                                                    n,
                                                    [i, e, r].concat(
                                                        Array.prototype.slice.call(
                                                            t
                                                        )
                                                    )
                                                );
                                            })
                                                .then(function() {
                                                    return s(null, i);
                                                })
                                                .catch(s);
                                        }
                                        return i;
                                    }
                                    return (
                                        (function(t, e) {
                                            if (
                                                'function' != typeof e &&
                                                null !== e
                                            )
                                                throw new TypeError(
                                                    'Super expression must either be null or a function, not ' +
                                                        typeof e
                                                );
                                            (t.prototype = Object.create(
                                                e && e.prototype,
                                                {
                                                    constructor: {
                                                        value: t,
                                                        enumerable: !1,
                                                        writable: !0,
                                                        configurable: !0
                                                    }
                                                }
                                            )),
                                                e &&
                                                    (Object.setPrototypeOf
                                                        ? Object.setPrototypeOf(
                                                              t,
                                                              e
                                                          )
                                                        : (t.__proto__ = e));
                                        })(e, g),
                                        e
                                    );
                                })();
                                function q(t, e, i) {
                                    var r = 'before-' + e,
                                        n = e.replace(/e$/, '') + 'ed';
                                    (G.prototype[t] = function() {
                                        var e = void 0,
                                            a = arguments[i.length - 1],
                                            o = this;
                                        'function' == typeof a
                                            ? ((e = function(e, i) {
                                                  e
                                                      ? o.emitError(t, e)
                                                      : o.emitMulti(
                                                            t,
                                                            n,
                                                            s({}, t, i)
                                                        ),
                                                      a.apply(this, arguments);
                                              }),
                                              (arguments[
                                                  arguments.length - 1
                                              ] = e))
                                            : (e = !1),
                                            this.emitMulti(t, r);
                                        var l = void 0;
                                        try {
                                            (l = i.apply(this, arguments)),
                                                e ||
                                                    this.emitMulti(
                                                        t,
                                                        n,
                                                        s({}, t, l)
                                                    );
                                        } catch (e) {
                                            (e.methodName = t),
                                                this.emitError(t, e);
                                        }
                                        return l;
                                    }),
                                        (G.prototype[t + 'Quiet'] = i);
                                }
                                function W(t, e, i) {
                                    var r = this,
                                        a = (function(t, e) {
                                            var i = A(t);
                                            return i
                                                ? i.mime
                                                : e
                                                    ? x.getType(e)
                                                    : null;
                                        })(t, e);
                                    if ('string' != typeof a)
                                        return i(
                                            new Error(
                                                'Could not find MIME for Buffer <' +
                                                    e +
                                                    '>'
                                            )
                                        );
                                    switch (
                                        ((this._originalMime = a.toLowerCase()),
                                        this.getMIME())
                                    ) {
                                        case G.MIME_PNG:
                                            new b().parse(t, function(t, e) {
                                                if (t) return j.call(r, t, i);
                                                (r.bitmap = {
                                                    data: n.from(e.data),
                                                    width: e.width,
                                                    height: e.height
                                                }),
                                                    i.call(r, null, r);
                                            });
                                            break;
                                        case G.MIME_JPEG:
                                            try {
                                                this.bitmap = v.decode(t);
                                                try {
                                                    (this._exif = C.create(
                                                        t
                                                    ).parse()),
                                                        (function(t) {
                                                            var e = t._exif;
                                                            if (
                                                                e &&
                                                                e.tags &&
                                                                e.tags
                                                                    .Orientation
                                                            )
                                                                switch (
                                                                    t._exif.tags
                                                                        .Orientation
                                                                ) {
                                                                    case 1:
                                                                        break;
                                                                    case 2:
                                                                        t.mirror(
                                                                            !0,
                                                                            !1
                                                                        );
                                                                        break;
                                                                    case 3:
                                                                        t.rotate(
                                                                            180,
                                                                            !1
                                                                        );
                                                                        break;
                                                                    case 4:
                                                                        t.mirror(
                                                                            !1,
                                                                            !0
                                                                        );
                                                                        break;
                                                                    case 5:
                                                                        t.rotate(
                                                                            -90,
                                                                            !1
                                                                        ).mirror(
                                                                            !0,
                                                                            !1
                                                                        );
                                                                        break;
                                                                    case 6:
                                                                        t.rotate(
                                                                            -90,
                                                                            !1
                                                                        );
                                                                        break;
                                                                    case 7:
                                                                        t.rotate(
                                                                            90,
                                                                            !1
                                                                        ).mirror(
                                                                            !0,
                                                                            !1
                                                                        );
                                                                        break;
                                                                    case 8:
                                                                        t.rotate(
                                                                            -270,
                                                                            !1
                                                                        );
                                                                }
                                                        })(this);
                                                } catch (t) {}
                                                i.call(this, null, this);
                                            } catch (t) {
                                                i.call(this, t, this);
                                            }
                                            break;
                                        case G.MIME_TIFF:
                                            var o = _.decode(t),
                                                s = o[0];
                                            _.decodeImages(t, o);
                                            var l = _.toRGBA8(s);
                                            (this.bitmap = {
                                                data: n.from(l),
                                                width: s.t256[0],
                                                height: s.t257[0]
                                            }),
                                                i.call(this, null, this);
                                            break;
                                        case G.MIME_BMP:
                                        case G.MIME_X_MS_BMP:
                                            (this.bitmap = y.decode(t)),
                                                i.call(this, null, this);
                                            break;
                                        case G.MIME_GIF:
                                            (this.bitmap = (function(t) {
                                                var e = new w.GifReader(t),
                                                    i = n.alloc(
                                                        e.width * e.height * 4
                                                    );
                                                return (
                                                    e.decodeAndBlitFrameRGBA(
                                                        0,
                                                        i
                                                    ),
                                                    {
                                                        data: i,
                                                        width: e.width,
                                                        height: e.height
                                                    }
                                                );
                                            })(t)),
                                                i.call(this, null, this);
                                            break;
                                        default:
                                            return j.call(
                                                this,
                                                'Unsupported MIME type: ' + a,
                                                i
                                            );
                                    }
                                    return this;
                                }
                                function Z(t, e, i) {
                                    if (
                                        'number' != typeof t ||
                                        'number' != typeof e
                                    )
                                        return j.call(
                                            this,
                                            'x and y must be numbers',
                                            i
                                        );
                                    (t = Math.round(t)), (e = Math.round(e));
                                    var r = this.getPixelIndex(t, e),
                                        n = this.bitmap.data.readUInt32BE(r);
                                    return F(i) ? i.call(this, null, n) : n;
                                }
                                function X(t, e, i, r) {
                                    if (
                                        'number' != typeof t ||
                                        'number' != typeof e ||
                                        'number' != typeof i
                                    )
                                        return j.call(
                                            this,
                                            'hex, x and y must be numbers',
                                            r
                                        );
                                    (e = Math.round(e)), (i = Math.round(i));
                                    var n = this.getPixelIndex(e, i);
                                    return (
                                        this.bitmap.data.writeUInt32BE(t, n),
                                        F(r) ? r.call(this, null, this) : this
                                    );
                                }
                                (G.__extraConstructors = []),
                                    (G.appendConstructorOption = function(
                                        t,
                                        e,
                                        i
                                    ) {
                                        G.__extraConstructors.push({
                                            name: t,
                                            test: e,
                                            run: i
                                        });
                                    }),
                                    (G.prototype.emitMulti = function(t, e) {
                                        var i =
                                            arguments.length > 2 &&
                                            void 0 !== arguments[2]
                                                ? arguments[2]
                                                : {};
                                        (i = Object.assign(i, {
                                            methodName: t,
                                            eventName: e
                                        })),
                                            this.emit('any', i),
                                            t && this.emit(t, i),
                                            this.emit(e, i);
                                    }),
                                    (G.prototype.emitError = function(t, e) {
                                        this.emitMulti(t, 'error', e);
                                    }),
                                    (G.read = function(t) {
                                        return new M(function(e, i) {
                                            new G(t, function(t, r) {
                                                t ? i(t) : e(r);
                                            });
                                        });
                                    }),
                                    (G.AUTO = -1),
                                    (G.MIME_PNG = 'image/png'),
                                    (G.MIME_TIFF = 'image/tiff'),
                                    (G.MIME_JPEG = 'image/jpeg'),
                                    (G.MIME_JGD = 'image/jgd'),
                                    (G.MIME_BMP = 'image/bmp'),
                                    (G.MIME_X_MS_BMP = 'image/x-ms-bmp'),
                                    (G.MIME_GIF = 'image/gif'),
                                    (G.PNG_FILTER_AUTO = -1),
                                    (G.PNG_FILTER_NONE = 0),
                                    (G.PNG_FILTER_SUB = 1),
                                    (G.PNG_FILTER_UP = 2),
                                    (G.PNG_FILTER_AVERAGE = 3),
                                    (G.PNG_FILTER_PAETH = 4),
                                    (G.RESIZE_NEAREST_NEIGHBOR =
                                        'nearestNeighbor'),
                                    (G.RESIZE_BILINEAR =
                                        'bilinearInterpolation'),
                                    (G.RESIZE_BICUBIC = 'bicubicInterpolation'),
                                    (G.RESIZE_HERMITE = 'hermiteInterpolation'),
                                    (G.RESIZE_BEZIER = 'bezierInterpolation'),
                                    (G.HORIZONTAL_ALIGN_LEFT = 1),
                                    (G.HORIZONTAL_ALIGN_CENTER = 2),
                                    (G.HORIZONTAL_ALIGN_RIGHT = 4),
                                    (G.VERTICAL_ALIGN_TOP = 8),
                                    (G.VERTICAL_ALIGN_MIDDLE = 16),
                                    (G.VERTICAL_ALIGN_BOTTOM = 32),
                                    (G.dirName = (function() {
                                        var t = new Error().stack
                                                .split(/\n/)
                                                .filter(function(t) {
                                                    return t.match(
                                                        /getJimpDir/
                                                    );
                                                })[0],
                                            e = /.*\(([^?]+\/)[^/]+\).*/,
                                            i = /.*@([^?]+\/).*/;
                                        return e.test(t)
                                            ? t.replace(e, '$1')
                                            : i.test(t)
                                                ? t.replace(i, '$1')
                                                : p + '/';
                                    })()),
                                    (G.FONT_SANS_8_BLACK =
                                        G.dirName +
                                        'fonts/open-sans/open-sans-8-black/open-sans-8-black.fnt'),
                                    (G.FONT_SANS_10_BLACK =
                                        G.dirName +
                                        'fonts/open-sans/open-sans-10-black/open-sans-10-black.fnt'),
                                    (G.FONT_SANS_12_BLACK =
                                        G.dirName +
                                        'fonts/open-sans/open-sans-12-black/open-sans-12-black.fnt'),
                                    (G.FONT_SANS_14_BLACK =
                                        G.dirName +
                                        'fonts/open-sans/open-sans-14-black/open-sans-14-black.fnt'),
                                    (G.FONT_SANS_16_BLACK =
                                        G.dirName +
                                        'fonts/open-sans/open-sans-16-black/open-sans-16-black.fnt'),
                                    (G.FONT_SANS_32_BLACK =
                                        G.dirName +
                                        'fonts/open-sans/open-sans-32-black/open-sans-32-black.fnt'),
                                    (G.FONT_SANS_64_BLACK =
                                        G.dirName +
                                        'fonts/open-sans/open-sans-64-black/open-sans-64-black.fnt'),
                                    (G.FONT_SANS_128_BLACK =
                                        G.dirName +
                                        'fonts/open-sans/open-sans-128-black/open-sans-128-black.fnt'),
                                    (G.FONT_SANS_8_WHITE =
                                        G.dirName +
                                        'fonts/open-sans/open-sans-8-white/open-sans-8-white.fnt'),
                                    (G.FONT_SANS_16_WHITE =
                                        G.dirName +
                                        'fonts/open-sans/open-sans-16-white/open-sans-16-white.fnt'),
                                    (G.FONT_SANS_32_WHITE =
                                        G.dirName +
                                        'fonts/open-sans/open-sans-32-white/open-sans-32-white.fnt'),
                                    (G.FONT_SANS_64_WHITE =
                                        G.dirName +
                                        'fonts/open-sans/open-sans-64-white/open-sans-64-white.fnt'),
                                    (G.FONT_SANS_128_WHITE =
                                        G.dirName +
                                        'fonts/open-sans/open-sans-128-white/open-sans-128-white.fnt'),
                                    (G.EDGE_EXTEND = 1),
                                    (G.EDGE_WRAP = 2),
                                    (G.EDGE_CROP = 3),
                                    (G.rgbaToInt = function(t, e, i, r, n) {
                                        if (
                                            'number' != typeof t ||
                                            'number' != typeof e ||
                                            'number' != typeof i ||
                                            'number' != typeof r
                                        )
                                            return j.call(
                                                this,
                                                'r, g, b and a must be numbers',
                                                n
                                            );
                                        if (t < 0 || t > 255)
                                            return j.call(
                                                this,
                                                'r must be between 0 and 255',
                                                n
                                            );
                                        if (
                                            ((e < 0 || e > 255) &&
                                                j.call(
                                                    this,
                                                    'g must be between 0 and 255',
                                                    n
                                                ),
                                            i < 0 || i > 255)
                                        )
                                            return j.call(
                                                this,
                                                'b must be between 0 and 255',
                                                n
                                            );
                                        if (r < 0 || r > 255)
                                            return j.call(
                                                this,
                                                'a must be between 0 and 255',
                                                n
                                            );
                                        (t = Math.round(t)),
                                            (i = Math.round(i)),
                                            (e = Math.round(e)),
                                            (r = Math.round(r));
                                        var a =
                                            t * Math.pow(256, 3) +
                                            e * Math.pow(256, 2) +
                                            i * Math.pow(256, 1) +
                                            r * Math.pow(256, 0);
                                        return F(n) ? n.call(this, null, a) : a;
                                    }),
                                    (G.intToRGBA = function(t, e) {
                                        if ('number' != typeof t)
                                            return j.call(
                                                this,
                                                'i must be a number',
                                                e
                                            );
                                        var i = {};
                                        return (
                                            (i.r = Math.floor(
                                                t / Math.pow(256, 3)
                                            )),
                                            (i.g = Math.floor(
                                                (t - i.r * Math.pow(256, 3)) /
                                                    Math.pow(256, 2)
                                            )),
                                            (i.b = Math.floor(
                                                (t -
                                                    i.r * Math.pow(256, 3) -
                                                    i.g * Math.pow(256, 2)) /
                                                    Math.pow(256, 1)
                                            )),
                                            (i.a = Math.floor(
                                                (t -
                                                    i.r * Math.pow(256, 3) -
                                                    i.g * Math.pow(256, 2) -
                                                    i.b * Math.pow(256, 1)) /
                                                    Math.pow(256, 0)
                                            )),
                                            F(e) ? e.call(this, null, i) : i
                                        );
                                    }),
                                    (G.limit255 = function(t) {
                                        return (
                                            (t = Math.max(t, 0)),
                                            (t = Math.min(t, 255))
                                        );
                                    }),
                                    (G.diff = function(t, e, i) {
                                        if (!(t instanceof G && e instanceof G))
                                            return j.call(
                                                this,
                                                'img1 and img2 must be an Jimp images'
                                            );
                                        var r = t.bitmap,
                                            n = e.bitmap;
                                        if (
                                            ((r.width === n.width &&
                                                r.height === n.height) ||
                                                (r.width * r.height >
                                                n.width * n.height
                                                    ? (t = t
                                                          .cloneQuiet()
                                                          .resize(
                                                              n.width,
                                                              n.height
                                                          ))
                                                    : (e = e
                                                          .cloneQuiet()
                                                          .resize(
                                                              r.width,
                                                              r.height
                                                          ))),
                                            'number' !=
                                                typeof (i = B(i) ? i : 0.1) ||
                                                i < 0 ||
                                                i > 1)
                                        )
                                            return j.call(
                                                this,
                                                'threshold must be a number between 0 and 1'
                                            );
                                        var a = new G(
                                            r.width,
                                            r.height,
                                            4294967295
                                        );
                                        return {
                                            percent:
                                                T(
                                                    r.data,
                                                    n.data,
                                                    a.bitmap.data,
                                                    a.bitmap.width,
                                                    a.bitmap.height,
                                                    { threshold: i }
                                                ) /
                                                (a.bitmap.width *
                                                    a.bitmap.height),
                                            image: a
                                        };
                                    }),
                                    (G.distance = function(t, e) {
                                        var i = new P(),
                                            r = i.getHash(t),
                                            n = i.getHash(e);
                                        return i.distance(r, n);
                                    }),
                                    (G.prototype.bitmap = {
                                        data: null,
                                        width: null,
                                        height: null
                                    }),
                                    (G.prototype._quality = 100),
                                    (G.prototype._deflateLevel = 9),
                                    (G.prototype._deflateStrategy = 3),
                                    (G.prototype._filterType =
                                        G.PNG_FILTER_AUTO),
                                    (G.prototype._rgba = !0),
                                    (G.prototype._background = 0),
                                    (G.prototype._originalMime = G.MIME_PNG),
                                    (G.prototype._exif = null),
                                    q('clone', 'clone', function(t) {
                                        var e = new G(this);
                                        return F(t) ? t.call(e, null, e) : e;
                                    }),
                                    (G.prototype.quality = function(t, e) {
                                        return 'number' != typeof t
                                            ? j.call(
                                                  this,
                                                  'n must be a number',
                                                  e
                                              )
                                            : t < 0 || t > 100
                                                ? j.call(
                                                      this,
                                                      'n must be a number 0 - 100',
                                                      e
                                                  )
                                                : ((this._quality = Math.round(
                                                      t
                                                  )),
                                                  F(e)
                                                      ? e.call(this, null, this)
                                                      : this);
                                    }),
                                    (G.prototype.deflateLevel = function(t, e) {
                                        return 'number' != typeof t
                                            ? j.call(
                                                  this,
                                                  'l must be a number',
                                                  e
                                              )
                                            : t < 0 || t > 9
                                                ? j.call(
                                                      this,
                                                      'l must be a number 0 - 9',
                                                      e
                                                  )
                                                : ((this._deflateLevel = Math.round(
                                                      t
                                                  )),
                                                  F(e)
                                                      ? e.call(this, null, this)
                                                      : this);
                                    }),
                                    (G.prototype.deflateStrategy = function(
                                        t,
                                        e
                                    ) {
                                        return 'number' != typeof t
                                            ? j.call(
                                                  this,
                                                  's must be a number',
                                                  e
                                              )
                                            : t < 0 || t > 3
                                                ? j.call(
                                                      this,
                                                      's must be a number 0 - 3',
                                                      e
                                                  )
                                                : ((this._deflateStrategy = Math.round(
                                                      t
                                                  )),
                                                  F(e)
                                                      ? e.call(this, null, this)
                                                      : this);
                                    }),
                                    (G.prototype.filterType = function(t, e) {
                                        return 'number' != typeof t
                                            ? j.call(
                                                  this,
                                                  'n must be a number',
                                                  e
                                              )
                                            : t < -1 || t > 4
                                                ? j.call(
                                                      this,
                                                      'n must be -1 (auto) or a number 0 - 4',
                                                      e
                                                  )
                                                : ((this._filterType = Math.round(
                                                      t
                                                  )),
                                                  F(e)
                                                      ? e.call(this, null, this)
                                                      : this);
                                    }),
                                    (G.prototype.rgba = function(t, e) {
                                        return 'boolean' != typeof t
                                            ? j.call(
                                                  this,
                                                  'bool must be a boolean, true for RGBA or false for RGB',
                                                  e
                                              )
                                            : ((this._rgba = t),
                                              F(e)
                                                  ? e.call(this, null, this)
                                                  : this);
                                    }),
                                    H('background', function(t, e) {
                                        return 'number' != typeof t
                                            ? j.call(
                                                  this,
                                                  'hex must be a hexadecimal rgba value',
                                                  e
                                              )
                                            : ((this._background = t),
                                              F(e)
                                                  ? e.call(this, null, this)
                                                  : this);
                                    }),
                                    H('scan', function(t, e, i, r, n, a) {
                                        if (
                                            'number' != typeof t ||
                                            'number' != typeof e
                                        )
                                            return j.call(
                                                this,
                                                'x and y must be numbers',
                                                a
                                            );
                                        if (
                                            'number' != typeof i ||
                                            'number' != typeof r
                                        )
                                            return j.call(
                                                this,
                                                'w and h must be numbers',
                                                a
                                            );
                                        if ('function' != typeof n)
                                            return j.call(
                                                this,
                                                'f must be a function',
                                                a
                                            );
                                        (t = Math.round(t)),
                                            (e = Math.round(e)),
                                            (i = Math.round(i)),
                                            (r = Math.round(r));
                                        for (var o = e; o < e + r; o++)
                                            for (var s = t; s < t + i; s++) {
                                                var l =
                                                    (this.bitmap.width * o +
                                                        s) <<
                                                    2;
                                                n.call(this, s, o, l);
                                            }
                                        return F(a)
                                            ? a.call(this, null, this)
                                            : this;
                                    }),
                                    (G.prototype.getMIME = function() {
                                        return this._originalMime || G.MIME_PNG;
                                    }),
                                    (G.prototype.getExtension = function() {
                                        var t = this.getMIME();
                                        return x.getExtension(t);
                                    }),
                                    (G.prototype.getPixelIndex = function(
                                        t,
                                        e,
                                        i,
                                        r
                                    ) {
                                        var n = void 0,
                                            a = void 0;
                                        if (
                                            ('function' == typeof i &&
                                                void 0 === r &&
                                                ((r = i), (i = null)),
                                            i || (i = G.EDGE_EXTEND),
                                            'number' != typeof t ||
                                                'number' != typeof e)
                                        )
                                            return j.call(
                                                this,
                                                'x and y must be numbers',
                                                r
                                            );
                                        (n = t = Math.round(t)),
                                            (a = e = Math.round(e)),
                                            i === G.EDGE_EXTEND &&
                                                (t < 0 && (n = 0),
                                                t >= this.bitmap.width &&
                                                    (n = this.bitmap.width - 1),
                                                e < 0 && (a = 0),
                                                e >= this.bitmap.height &&
                                                    (a =
                                                        this.bitmap.height -
                                                        1)),
                                            i === G.EDGE_WRAP &&
                                                (t < 0 &&
                                                    (n = this.bitmap.width + t),
                                                t >= this.bitmap.width &&
                                                    (n = t % this.bitmap.width),
                                                e < 0 &&
                                                    (n =
                                                        this.bitmap.height + e),
                                                e >= this.bitmap.height &&
                                                    (a =
                                                        e %
                                                        this.bitmap.height));
                                        var o =
                                            (this.bitmap.width * a + n) << 2;
                                        return (
                                            (n < 0 || n >= this.bitmap.width) &&
                                                (o = -1),
                                            (a < 0 ||
                                                a >= this.bitmap.height) &&
                                                (o = -1),
                                            F(r) ? r.call(this, null, o) : o
                                        );
                                    }),
                                    (G.prototype.getPixelColor = Z),
                                    (G.prototype.getPixelColour = Z),
                                    (G.prototype.setPixelColour = X),
                                    (G.prototype.setPixelColor = X);
                                for (var Y = [], J = 0; J < 65; J++) {
                                    var V =
                                        J > 1
                                            ? new E(
                                                  new Array(65).join('1'),
                                                  2
                                              ).toString(J)
                                            : NaN;
                                    Y.push(V.length);
                                }
                                function Q(t, e, i) {
                                    if (
                                        'boolean' != typeof t ||
                                        'boolean' != typeof e
                                    )
                                        return j.call(
                                            this,
                                            'horizontal and vertical must be Booleans',
                                            i
                                        );
                                    var r = n.alloc(this.bitmap.data.length);
                                    return (
                                        this.scanQuiet(
                                            0,
                                            0,
                                            this.bitmap.width,
                                            this.bitmap.height,
                                            function(i, n, a) {
                                                var o = t
                                                        ? this.bitmap.width -
                                                          1 -
                                                          i
                                                        : i,
                                                    s = e
                                                        ? this.bitmap.height -
                                                          1 -
                                                          n
                                                        : n,
                                                    l =
                                                        (this.bitmap.width * s +
                                                            o) <<
                                                        2,
                                                    f = this.bitmap.data.readUInt32BE(
                                                        a
                                                    );
                                                r.writeUInt32BE(f, l);
                                            }
                                        ),
                                        (this.bitmap.data = n.from(r)),
                                        F(i) ? i.call(this, null, this) : this
                                    );
                                }
                                (G.prototype.hash = function(t, e) {
                                    if (
                                        ('function' == typeof (t = t || 64) &&
                                            ((e = t), (t = 64)),
                                        'number' != typeof t)
                                    )
                                        return j.call(
                                            this,
                                            'base must be a number',
                                            e
                                        );
                                    if (t < 2 || t > 64)
                                        return j.call(
                                            this,
                                            'base must be a number between 2 and 64',
                                            e
                                        );
                                    var i = new P().getHash(this);
                                    for (
                                        i = new E(i, 2).toString(t);
                                        i.length < Y[t];

                                    )
                                        i = '0' + i;
                                    return F(e) ? e.call(this, null, i) : i;
                                }),
                                    H('crop', function(t, e, i, r, a) {
                                        if (
                                            'number' != typeof t ||
                                            'number' != typeof e
                                        )
                                            return j.call(
                                                this,
                                                'x and y must be numbers',
                                                a
                                            );
                                        if (
                                            'number' != typeof i ||
                                            'number' != typeof r
                                        )
                                            return j.call(
                                                this,
                                                'w and h must be numbers',
                                                a
                                            );
                                        (t = Math.round(t)),
                                            (e = Math.round(e)),
                                            (i = Math.round(i)),
                                            (r = Math.round(r));
                                        var o = n.alloc(
                                                this.bitmap.data.length
                                            ),
                                            s = 0;
                                        return (
                                            this.scanQuiet(t, e, i, r, function(
                                                t,
                                                e,
                                                i
                                            ) {
                                                var r = this.bitmap.data.readUInt32BE(
                                                    i
                                                );
                                                o.writeUInt32BE(r, s), (s += 4);
                                            }),
                                            (this.bitmap.data = n.from(o)),
                                            (this.bitmap.width = i),
                                            (this.bitmap.height = r),
                                            F(a)
                                                ? a.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.colorDiff = (function() {
                                        var t = function(t) {
                                                return Math.pow(t, 2);
                                            },
                                            e = Math.max;
                                        return function(i, r) {
                                            return (
                                                0 === i.a || i.a || (i.a = 255),
                                                0 === r.a || r.a || (r.a = 255),
                                                (e(
                                                    t(i.r - r.r),
                                                    t(i.r - r.r - i.a + r.a)
                                                ) +
                                                    e(
                                                        t(i.g - r.g),
                                                        t(i.g - r.g - i.a + r.a)
                                                    ) +
                                                    e(
                                                        t(i.b - r.b),
                                                        t(i.b - r.b - i.a + r.a)
                                                    )) /
                                                    195075
                                            );
                                        };
                                    })()),
                                    (G.prototype.autocrop = function() {
                                        for (
                                            var t = this.bitmap.width,
                                                e = this.bitmap.height,
                                                i = void 0,
                                                r = 2e-4,
                                                n = !0,
                                                a = 0,
                                                o = arguments.length;
                                            a < o;
                                            a++
                                        )
                                            'number' == typeof arguments[a] &&
                                                (r = arguments[a]),
                                                'boolean' ==
                                                    typeof arguments[a] &&
                                                    (n = arguments[a]),
                                                'function' ==
                                                    typeof arguments[a] &&
                                                    (i = arguments[a]);
                                        var s = this.getPixelColor(0, 0),
                                            l = G.intToRGBA(s),
                                            f = 0,
                                            h = 0,
                                            c = 0,
                                            u = 0;
                                        t: for (var p = 0; p < e - 1; p++) {
                                            for (var d = 0; d < t; d++) {
                                                var m = this.getPixelColor(
                                                        d,
                                                        p
                                                    ),
                                                    g = G.intToRGBA(m);
                                                if (G.colorDiff(l, g) > r)
                                                    break t;
                                            }
                                            f++;
                                        }
                                        t: for (var b = 0; b < t - 1; b++) {
                                            for (var v = 0 + f; v < e; v++) {
                                                var y = this.getPixelColor(
                                                        b,
                                                        v
                                                    ),
                                                    w = G.intToRGBA(y);
                                                if (G.colorDiff(l, w) > r)
                                                    break t;
                                            }
                                            h++;
                                        }
                                        t: for (
                                            var _ = e - 1;
                                            _ >= f + 1;
                                            _--
                                        ) {
                                            for (
                                                var x = t - h - 1;
                                                x >= 0;
                                                x--
                                            ) {
                                                var k = this.getPixelColor(
                                                        x,
                                                        _
                                                    ),
                                                    E = G.intToRGBA(k);
                                                if (G.colorDiff(l, E) > r)
                                                    break t;
                                            }
                                            c++;
                                        }
                                        t: for (
                                            var I = t - 1;
                                            I >= 0 + h + 1;
                                            I--
                                        ) {
                                            for (
                                                var S = e - 1;
                                                S >= 0 + f;
                                                S--
                                            ) {
                                                var A = this.getPixelColor(
                                                        I,
                                                        S
                                                    ),
                                                    T = G.intToRGBA(A);
                                                if (G.colorDiff(l, T) > r)
                                                    break t;
                                            }
                                            u++;
                                        }
                                        var C = t - (u + h),
                                            M = e - (c + f);
                                        return (
                                            (n
                                                ? 0 !== h &&
                                                  0 !== f &&
                                                  0 !== u &&
                                                  0 !== c
                                                : 0 !== h ||
                                                  0 !== f ||
                                                  0 !== u ||
                                                  0 !== c) &&
                                                this.crop(h, f, C, M),
                                            F(i)
                                                ? i.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.blit = function(
                                        t,
                                        e,
                                        i,
                                        r,
                                        n,
                                        o,
                                        s,
                                        l
                                    ) {
                                        if (!(t instanceof G))
                                            return j.call(
                                                this,
                                                'The source must be a Jimp image',
                                                l
                                            );
                                        if (
                                            'number' != typeof e ||
                                            'number' != typeof i
                                        )
                                            return j.call(
                                                this,
                                                'x and y must be numbers',
                                                l
                                            );
                                        if ('function' == typeof r)
                                            (l = r),
                                                (r = 0),
                                                (n = 0),
                                                (o = t.bitmap.width),
                                                (s = t.bitmap.height);
                                        else {
                                            if (
                                                (void 0 === r
                                                    ? 'undefined'
                                                    : a(r)) !==
                                                    (void 0 === n
                                                        ? 'undefined'
                                                        : a(n)) ||
                                                (void 0 === n
                                                    ? 'undefined'
                                                    : a(n)) !==
                                                    (void 0 === o
                                                        ? 'undefined'
                                                        : a(o)) ||
                                                (void 0 === o
                                                    ? 'undefined'
                                                    : a(o)) !==
                                                    (void 0 === s
                                                        ? 'undefined'
                                                        : a(s))
                                            )
                                                return j.call(
                                                    this,
                                                    'srcx, srcy, srcw, srch must be numbers',
                                                    l
                                                );
                                            (r = r || 0),
                                                (n = n || 0),
                                                (o = o || t.bitmap.width),
                                                (s = s || t.bitmap.height);
                                        }
                                        (e = Math.round(e)),
                                            (i = Math.round(i)),
                                            (r = Math.round(r)),
                                            (n = Math.round(n)),
                                            (o = Math.round(o)),
                                            (s = Math.round(s));
                                        var f = this.bitmap.width,
                                            h = this.bitmap.height,
                                            c = this;
                                        return (
                                            t.scanQuiet(r, n, o, s, function(
                                                t,
                                                a,
                                                o
                                            ) {
                                                if (
                                                    e + t >= 0 &&
                                                    i + a >= 0 &&
                                                    f - e - t > 0 &&
                                                    h - i - a > 0
                                                ) {
                                                    var s = c.getPixelIndex(
                                                        e + t - r,
                                                        i + a - n
                                                    );
                                                    (c.bitmap.data[
                                                        s
                                                    ] = this.bitmap.data[o]),
                                                        (c.bitmap.data[
                                                            s + 1
                                                        ] = this.bitmap.data[
                                                            o + 1
                                                        ]),
                                                        (c.bitmap.data[
                                                            s + 2
                                                        ] = this.bitmap.data[
                                                            o + 2
                                                        ]),
                                                        (c.bitmap.data[
                                                            s + 3
                                                        ] = this.bitmap.data[
                                                            o + 3
                                                        ]);
                                                }
                                            }),
                                            F(l)
                                                ? l.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.mask = function(t) {
                                        var e =
                                                arguments.length > 1 &&
                                                void 0 !== arguments[1]
                                                    ? arguments[1]
                                                    : 0,
                                            i =
                                                arguments.length > 2 &&
                                                void 0 !== arguments[2]
                                                    ? arguments[2]
                                                    : 0,
                                            r = arguments[3];
                                        if (!(t instanceof G))
                                            return j.call(
                                                this,
                                                'The source must be a Jimp image',
                                                r
                                            );
                                        if (
                                            'number' != typeof e ||
                                            'number' != typeof i
                                        )
                                            return j.call(
                                                this,
                                                'x and y must be numbers',
                                                r
                                            );
                                        (e = Math.round(e)),
                                            (i = Math.round(i));
                                        var n = this.bitmap.width,
                                            a = this.bitmap.height,
                                            o = this;
                                        return (
                                            t.scanQuiet(
                                                0,
                                                0,
                                                t.bitmap.width,
                                                t.bitmap.height,
                                                function(t, r, s) {
                                                    var l = e + t,
                                                        f = i + r;
                                                    if (
                                                        l >= 0 &&
                                                        f >= 0 &&
                                                        l < n &&
                                                        f < a
                                                    ) {
                                                        var h = o.getPixelIndex(
                                                                l,
                                                                f
                                                            ),
                                                            c = this.bitmap
                                                                .data,
                                                            u =
                                                                (c[s + 0] +
                                                                    c[s + 1] +
                                                                    c[s + 2]) /
                                                                3;
                                                        o.bitmap.data[h + 3] *=
                                                            u / 255;
                                                    }
                                                }
                                            ),
                                            F(r)
                                                ? r.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.composite = function(
                                        t,
                                        e,
                                        i,
                                        r
                                    ) {
                                        if (!(t instanceof G))
                                            return j.call(
                                                this,
                                                'The source must be a Jimp image',
                                                r
                                            );
                                        if (
                                            'number' != typeof e ||
                                            'number' != typeof i
                                        )
                                            return j.call(
                                                this,
                                                'x and y must be numbers',
                                                r
                                            );
                                        (e = Math.round(e)),
                                            (i = Math.round(i));
                                        var n = this;
                                        return (
                                            t.scanQuiet(
                                                0,
                                                0,
                                                t.bitmap.width,
                                                t.bitmap.height,
                                                function(t, r, a) {
                                                    var o = n.getPixelIndex(
                                                            e + t,
                                                            i + r
                                                        ),
                                                        s =
                                                            this.bitmap.data[
                                                                a + 0
                                                            ] / 255,
                                                        l =
                                                            this.bitmap.data[
                                                                a + 1
                                                            ] / 255,
                                                        f =
                                                            this.bitmap.data[
                                                                a + 2
                                                            ] / 255,
                                                        h =
                                                            this.bitmap.data[
                                                                a + 3
                                                            ] / 255,
                                                        c =
                                                            n.bitmap.data[
                                                                o + 0
                                                            ] / 255,
                                                        u =
                                                            n.bitmap.data[
                                                                o + 1
                                                            ] / 255,
                                                        p =
                                                            n.bitmap.data[
                                                                o + 2
                                                            ] / 255,
                                                        d =
                                                            n.bitmap.data[
                                                                o + 3
                                                            ] / 255,
                                                        m = d + h - d * h,
                                                        g =
                                                            (s * h +
                                                                c *
                                                                    d *
                                                                    (1 - h)) /
                                                            m,
                                                        b =
                                                            (l * h +
                                                                u *
                                                                    d *
                                                                    (1 - h)) /
                                                            m,
                                                        v =
                                                            (f * h +
                                                                p *
                                                                    d *
                                                                    (1 - h)) /
                                                            m;
                                                    (n.bitmap.data[
                                                        o + 0
                                                    ] = G.limit255(255 * g)),
                                                        (n.bitmap.data[
                                                            o + 1
                                                        ] = G.limit255(
                                                            255 * b
                                                        )),
                                                        (n.bitmap.data[
                                                            o + 2
                                                        ] = G.limit255(
                                                            255 * v
                                                        )),
                                                        (n.bitmap.data[
                                                            o + 3
                                                        ] = G.limit255(
                                                            255 * m
                                                        ));
                                                }
                                            ),
                                            F(r)
                                                ? r.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.brightness = function(t, e) {
                                        return 'number' != typeof t
                                            ? j.call(
                                                  this,
                                                  'val must be numbers',
                                                  e
                                              )
                                            : t < -1 || t > 1
                                                ? j.call(
                                                      this,
                                                      'val must be a number between -1 and +1',
                                                      e
                                                  )
                                                : (this.scanQuiet(
                                                      0,
                                                      0,
                                                      this.bitmap.width,
                                                      this.bitmap.height,
                                                      function(e, i, r) {
                                                          t < 0
                                                              ? ((this.bitmap.data[
                                                                    r
                                                                ] =
                                                                    this.bitmap
                                                                        .data[
                                                                        r
                                                                    ] *
                                                                    (1 + t)),
                                                                (this.bitmap.data[
                                                                    r + 1
                                                                ] =
                                                                    this.bitmap
                                                                        .data[
                                                                        r + 1
                                                                    ] *
                                                                    (1 + t)),
                                                                (this.bitmap.data[
                                                                    r + 2
                                                                ] =
                                                                    this.bitmap
                                                                        .data[
                                                                        r + 2
                                                                    ] *
                                                                    (1 + t)))
                                                              : ((this.bitmap.data[
                                                                    r
                                                                ] =
                                                                    this.bitmap
                                                                        .data[
                                                                        r
                                                                    ] +
                                                                    (255 -
                                                                        this
                                                                            .bitmap
                                                                            .data[
                                                                            r
                                                                        ]) *
                                                                        t),
                                                                (this.bitmap.data[
                                                                    r + 1
                                                                ] =
                                                                    this.bitmap
                                                                        .data[
                                                                        r + 1
                                                                    ] +
                                                                    (255 -
                                                                        this
                                                                            .bitmap
                                                                            .data[
                                                                            r +
                                                                                1
                                                                        ]) *
                                                                        t),
                                                                (this.bitmap.data[
                                                                    r + 2
                                                                ] =
                                                                    this.bitmap
                                                                        .data[
                                                                        r + 2
                                                                    ] +
                                                                    (255 -
                                                                        this
                                                                            .bitmap
                                                                            .data[
                                                                            r +
                                                                                2
                                                                        ]) *
                                                                        t));
                                                      }
                                                  ),
                                                  F(e)
                                                      ? e.call(this, null, this)
                                                      : this);
                                    }),
                                    (G.prototype.contrast = function(t, e) {
                                        if ('number' != typeof t)
                                            return j.call(
                                                this,
                                                'val must be numbers',
                                                e
                                            );
                                        if (t < -1 || t > 1)
                                            return j.call(
                                                this,
                                                'val must be a number between -1 and +1',
                                                e
                                            );
                                        function i(e) {
                                            var i = void 0;
                                            return t < 0
                                                ? ((i =
                                                      e > 127
                                                          ? 1 - e / 255
                                                          : e / 255) < 0 &&
                                                      (i = 0),
                                                  (i =
                                                      0.5 *
                                                      Math.pow(2 * i, 1 + t)),
                                                  e > 127
                                                      ? 255 * (1 - i)
                                                      : 255 * i)
                                                : ((i =
                                                      e > 127
                                                          ? 1 - e / 255
                                                          : e / 255) < 0 &&
                                                      (i = 0),
                                                  (i =
                                                      0.5 *
                                                      Math.pow(
                                                          2 * i,
                                                          1 === t
                                                              ? 127
                                                              : 1 / (1 - t)
                                                      )),
                                                  e > 127
                                                      ? 255 * (1 - i)
                                                      : 255 * i);
                                        }
                                        return (
                                            this.scanQuiet(
                                                0,
                                                0,
                                                this.bitmap.width,
                                                this.bitmap.height,
                                                function(t, e, r) {
                                                    (this.bitmap.data[r] = i(
                                                        this.bitmap.data[r]
                                                    )),
                                                        (this.bitmap.data[
                                                            r + 1
                                                        ] = i(
                                                            this.bitmap.data[
                                                                r + 1
                                                            ]
                                                        )),
                                                        (this.bitmap.data[
                                                            r + 2
                                                        ] = i(
                                                            this.bitmap.data[
                                                                r + 2
                                                            ]
                                                        ));
                                                }
                                            ),
                                            F(e)
                                                ? e.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.posterize = function(t, e) {
                                        return 'number' != typeof t
                                            ? j.call(
                                                  this,
                                                  'n must be numbers',
                                                  e
                                              )
                                            : (t < 2 && (t = 2),
                                              this.scanQuiet(
                                                  0,
                                                  0,
                                                  this.bitmap.width,
                                                  this.bitmap.height,
                                                  function(e, i, r) {
                                                      (this.bitmap.data[r] =
                                                          (Math.floor(
                                                              (this.bitmap.data[
                                                                  r
                                                              ] /
                                                                  255) *
                                                                  (t - 1)
                                                          ) /
                                                              (t - 1)) *
                                                          255),
                                                          (this.bitmap.data[
                                                              r + 1
                                                          ] =
                                                              (Math.floor(
                                                                  (this.bitmap
                                                                      .data[
                                                                      r + 1
                                                                  ] /
                                                                      255) *
                                                                      (t - 1)
                                                              ) /
                                                                  (t - 1)) *
                                                              255),
                                                          (this.bitmap.data[
                                                              r + 2
                                                          ] =
                                                              (Math.floor(
                                                                  (this.bitmap
                                                                      .data[
                                                                      r + 2
                                                                  ] /
                                                                      255) *
                                                                      (t - 1)
                                                              ) /
                                                                  (t - 1)) *
                                                              255);
                                                  }
                                              ),
                                              F(e)
                                                  ? e.call(this, null, this)
                                                  : this);
                                    }),
                                    (G.prototype.normalize = function(t) {
                                        var e = function() {
                                                var t = {
                                                    r: new Array(256).fill(0),
                                                    g: new Array(256).fill(0),
                                                    b: new Array(256).fill(0)
                                                };
                                                return (
                                                    this.scanQuiet(
                                                        0,
                                                        0,
                                                        this.bitmap.width,
                                                        this.bitmap.height,
                                                        function(e, i, r) {
                                                            t.r[
                                                                this.bitmap
                                                                    .data[r + 0]
                                                            ]++,
                                                                t.g[
                                                                    this.bitmap
                                                                        .data[
                                                                        r + 1
                                                                    ]
                                                                ]++,
                                                                t.b[
                                                                    this.bitmap
                                                                        .data[
                                                                        r + 2
                                                                    ]
                                                                ]++;
                                                        }
                                                    ),
                                                    t
                                                );
                                            }.call(this),
                                            i = function(t, e, i) {
                                                return (
                                                    (255 * (t - e)) / (i - e)
                                                );
                                            },
                                            r = function(t) {
                                                return [
                                                    t.findIndex(function(t) {
                                                        return t > 0;
                                                    }),
                                                    255 -
                                                        t
                                                            .slice()
                                                            .reverse()
                                                            .findIndex(function(
                                                                t
                                                            ) {
                                                                return t > 0;
                                                            })
                                                ];
                                            },
                                            n = {
                                                r: r(e.r),
                                                g: r(e.g),
                                                b: r(e.b)
                                            };
                                        return (
                                            this.scanQuiet(
                                                0,
                                                0,
                                                this.bitmap.width,
                                                this.bitmap.height,
                                                function(t, e, r) {
                                                    var a = this.bitmap.data[
                                                            r + 0
                                                        ],
                                                        o = this.bitmap.data[
                                                            r + 1
                                                        ],
                                                        s = this.bitmap.data[
                                                            r + 2
                                                        ];
                                                    (this.bitmap.data[
                                                        r + 0
                                                    ] = i(a, n.r[0], n.r[1])),
                                                        (this.bitmap.data[
                                                            r + 1
                                                        ] = i(
                                                            o,
                                                            n.g[0],
                                                            n.g[1]
                                                        )),
                                                        (this.bitmap.data[
                                                            r + 2
                                                        ] = i(
                                                            s,
                                                            n.b[0],
                                                            n.b[1]
                                                        ));
                                                }
                                            ),
                                            F(t)
                                                ? t.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.invert = function(t) {
                                        return (
                                            this.scanQuiet(
                                                0,
                                                0,
                                                this.bitmap.width,
                                                this.bitmap.height,
                                                function(t, e, i) {
                                                    (this.bitmap.data[i] =
                                                        255 -
                                                        this.bitmap.data[i]),
                                                        (this.bitmap.data[
                                                            i + 1
                                                        ] =
                                                            255 -
                                                            this.bitmap.data[
                                                                i + 1
                                                            ]),
                                                        (this.bitmap.data[
                                                            i + 2
                                                        ] =
                                                            255 -
                                                            this.bitmap.data[
                                                                i + 2
                                                            ]);
                                                }
                                            ),
                                            F(t)
                                                ? t.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.flip = Q),
                                    (G.prototype.mirror = Q),
                                    (G.prototype.gaussian = function(t, e) {
                                        if ('number' != typeof t)
                                            return j.call(
                                                this,
                                                'r must be a number',
                                                e
                                            );
                                        if (t < 1)
                                            return j.call(
                                                this,
                                                'r must be greater than 0',
                                                e
                                            );
                                        for (
                                            var i = Math.ceil(2.57 * t), r = 0;
                                            r < this.bitmap.height;
                                            r++
                                        ) {
                                            z(
                                                'Gaussian: ' +
                                                    Math.round(
                                                        (r /
                                                            this.bitmap
                                                                .height) *
                                                            100
                                                    ) +
                                                    '%'
                                            );
                                            for (
                                                var n = 0;
                                                n < this.bitmap.width;
                                                n++
                                            )
                                                for (
                                                    var a = 0,
                                                        o = 0,
                                                        s = 0,
                                                        l = 0,
                                                        f = 0,
                                                        h = r - i;
                                                    h < r + i + 1;
                                                    h++
                                                ) {
                                                    for (
                                                        var c = n - i;
                                                        c < n + i + 1;
                                                        c++
                                                    ) {
                                                        var u = Math.min(
                                                                this.bitmap
                                                                    .width - 1,
                                                                Math.max(0, c)
                                                            ),
                                                            p = Math.min(
                                                                this.bitmap
                                                                    .height - 1,
                                                                Math.max(0, h)
                                                            ),
                                                            d =
                                                                (c - n) *
                                                                    (c - n) +
                                                                (h - r) *
                                                                    (h - r),
                                                            m =
                                                                Math.exp(
                                                                    -d /
                                                                        (2 *
                                                                            t *
                                                                            t)
                                                                ) /
                                                                (2 *
                                                                    Math.PI *
                                                                    t *
                                                                    t),
                                                            g =
                                                                (p *
                                                                    this.bitmap
                                                                        .width +
                                                                    u) <<
                                                                2;
                                                        (a +=
                                                            this.bitmap.data[
                                                                g
                                                            ] * m),
                                                            (o +=
                                                                this.bitmap
                                                                    .data[
                                                                    g + 1
                                                                ] * m),
                                                            (s +=
                                                                this.bitmap
                                                                    .data[
                                                                    g + 2
                                                                ] * m),
                                                            (l +=
                                                                this.bitmap
                                                                    .data[
                                                                    g + 3
                                                                ] * m),
                                                            (f += m);
                                                    }
                                                    var b =
                                                        (r * this.bitmap.width +
                                                            n) <<
                                                        2;
                                                    (this.bitmap.data[
                                                        b
                                                    ] = Math.round(a / f)),
                                                        (this.bitmap.data[
                                                            b + 1
                                                        ] = Math.round(o / f)),
                                                        (this.bitmap.data[
                                                            b + 2
                                                        ] = Math.round(s / f)),
                                                        (this.bitmap.data[
                                                            b + 3
                                                        ] = Math.round(l / f));
                                                }
                                        }
                                        return (
                                            U(),
                                            F(e)
                                                ? e.call(this, null, this)
                                                : this
                                        );
                                    });
                                var K = [
                                        1,
                                        57,
                                        41,
                                        21,
                                        203,
                                        34,
                                        97,
                                        73,
                                        227,
                                        91,
                                        149,
                                        62,
                                        105,
                                        45,
                                        39,
                                        137,
                                        241,
                                        107,
                                        3,
                                        173,
                                        39,
                                        71,
                                        65,
                                        238,
                                        219,
                                        101,
                                        187,
                                        87,
                                        81,
                                        151,
                                        141,
                                        133,
                                        249,
                                        117,
                                        221,
                                        209,
                                        197,
                                        187,
                                        177,
                                        169,
                                        5,
                                        153,
                                        73,
                                        139,
                                        133,
                                        127,
                                        243,
                                        233,
                                        223,
                                        107,
                                        103,
                                        99,
                                        191,
                                        23,
                                        177,
                                        171,
                                        165,
                                        159,
                                        77,
                                        149,
                                        9,
                                        139,
                                        135,
                                        131,
                                        253,
                                        245,
                                        119,
                                        231,
                                        224,
                                        109,
                                        211,
                                        103,
                                        25,
                                        195,
                                        189,
                                        23,
                                        45,
                                        175,
                                        171,
                                        83,
                                        81,
                                        79,
                                        155,
                                        151,
                                        147,
                                        9,
                                        141,
                                        137,
                                        67,
                                        131,
                                        129,
                                        251,
                                        123,
                                        30,
                                        235,
                                        115,
                                        113,
                                        221,
                                        217,
                                        53,
                                        13,
                                        51,
                                        50,
                                        49,
                                        193,
                                        189,
                                        185,
                                        91,
                                        179,
                                        175,
                                        43,
                                        169,
                                        83,
                                        163,
                                        5,
                                        79,
                                        155,
                                        19,
                                        75,
                                        147,
                                        145,
                                        143,
                                        35,
                                        69,
                                        17,
                                        67,
                                        33,
                                        65,
                                        255,
                                        251,
                                        247,
                                        243,
                                        239,
                                        59,
                                        29,
                                        229,
                                        113,
                                        111,
                                        219,
                                        27,
                                        213,
                                        105,
                                        207,
                                        51,
                                        201,
                                        199,
                                        49,
                                        193,
                                        191,
                                        47,
                                        93,
                                        183,
                                        181,
                                        179,
                                        11,
                                        87,
                                        43,
                                        85,
                                        167,
                                        165,
                                        163,
                                        161,
                                        159,
                                        157,
                                        155,
                                        77,
                                        19,
                                        75,
                                        37,
                                        73,
                                        145,
                                        143,
                                        141,
                                        35,
                                        138,
                                        137,
                                        135,
                                        67,
                                        33,
                                        131,
                                        129,
                                        255,
                                        63,
                                        250,
                                        247,
                                        61,
                                        121,
                                        239,
                                        237,
                                        117,
                                        29,
                                        229,
                                        227,
                                        225,
                                        111,
                                        55,
                                        109,
                                        216,
                                        213,
                                        211,
                                        209,
                                        207,
                                        205,
                                        203,
                                        201,
                                        199,
                                        197,
                                        195,
                                        193,
                                        48,
                                        190,
                                        47,
                                        93,
                                        185,
                                        183,
                                        181,
                                        179,
                                        178,
                                        176,
                                        175,
                                        173,
                                        171,
                                        85,
                                        21,
                                        167,
                                        165,
                                        41,
                                        163,
                                        161,
                                        5,
                                        79,
                                        157,
                                        78,
                                        154,
                                        153,
                                        19,
                                        75,
                                        149,
                                        74,
                                        147,
                                        73,
                                        144,
                                        143,
                                        71,
                                        141,
                                        140,
                                        139,
                                        137,
                                        17,
                                        135,
                                        134,
                                        133,
                                        66,
                                        131,
                                        65,
                                        129,
                                        1
                                    ],
                                    $ = [
                                        0,
                                        9,
                                        10,
                                        10,
                                        14,
                                        12,
                                        14,
                                        14,
                                        16,
                                        15,
                                        16,
                                        15,
                                        16,
                                        15,
                                        15,
                                        17,
                                        18,
                                        17,
                                        12,
                                        18,
                                        16,
                                        17,
                                        17,
                                        19,
                                        19,
                                        18,
                                        19,
                                        18,
                                        18,
                                        19,
                                        19,
                                        19,
                                        20,
                                        19,
                                        20,
                                        20,
                                        20,
                                        20,
                                        20,
                                        20,
                                        15,
                                        20,
                                        19,
                                        20,
                                        20,
                                        20,
                                        21,
                                        21,
                                        21,
                                        20,
                                        20,
                                        20,
                                        21,
                                        18,
                                        21,
                                        21,
                                        21,
                                        21,
                                        20,
                                        21,
                                        17,
                                        21,
                                        21,
                                        21,
                                        22,
                                        22,
                                        21,
                                        22,
                                        22,
                                        21,
                                        22,
                                        21,
                                        19,
                                        22,
                                        22,
                                        19,
                                        20,
                                        22,
                                        22,
                                        21,
                                        21,
                                        21,
                                        22,
                                        22,
                                        22,
                                        18,
                                        22,
                                        22,
                                        21,
                                        22,
                                        22,
                                        23,
                                        22,
                                        20,
                                        23,
                                        22,
                                        22,
                                        23,
                                        23,
                                        21,
                                        19,
                                        21,
                                        21,
                                        21,
                                        23,
                                        23,
                                        23,
                                        22,
                                        23,
                                        23,
                                        21,
                                        23,
                                        22,
                                        23,
                                        18,
                                        22,
                                        23,
                                        20,
                                        22,
                                        23,
                                        23,
                                        23,
                                        21,
                                        22,
                                        20,
                                        22,
                                        21,
                                        22,
                                        24,
                                        24,
                                        24,
                                        24,
                                        24,
                                        22,
                                        21,
                                        24,
                                        23,
                                        23,
                                        24,
                                        21,
                                        24,
                                        23,
                                        24,
                                        22,
                                        24,
                                        24,
                                        22,
                                        24,
                                        24,
                                        22,
                                        23,
                                        24,
                                        24,
                                        24,
                                        20,
                                        23,
                                        22,
                                        23,
                                        24,
                                        24,
                                        24,
                                        24,
                                        24,
                                        24,
                                        24,
                                        23,
                                        21,
                                        23,
                                        22,
                                        23,
                                        24,
                                        24,
                                        24,
                                        22,
                                        24,
                                        24,
                                        24,
                                        23,
                                        22,
                                        24,
                                        24,
                                        25,
                                        23,
                                        25,
                                        25,
                                        23,
                                        24,
                                        25,
                                        25,
                                        24,
                                        22,
                                        25,
                                        25,
                                        25,
                                        24,
                                        23,
                                        24,
                                        25,
                                        25,
                                        25,
                                        25,
                                        25,
                                        25,
                                        25,
                                        25,
                                        25,
                                        25,
                                        25,
                                        25,
                                        23,
                                        25,
                                        23,
                                        24,
                                        25,
                                        25,
                                        25,
                                        25,
                                        25,
                                        25,
                                        25,
                                        25,
                                        25,
                                        24,
                                        22,
                                        25,
                                        25,
                                        23,
                                        25,
                                        25,
                                        20,
                                        24,
                                        25,
                                        24,
                                        25,
                                        25,
                                        22,
                                        24,
                                        25,
                                        24,
                                        25,
                                        24,
                                        25,
                                        25,
                                        24,
                                        25,
                                        25,
                                        25,
                                        25,
                                        22,
                                        25,
                                        25,
                                        25,
                                        24,
                                        25,
                                        24,
                                        25,
                                        18
                                    ];
                                function tt(t, e, i, r) {
                                    for (
                                        var n = [0, 0, 0],
                                            a = (e.length - 1) / 2,
                                            o = 0;
                                        o < e.length;
                                        o += 1
                                    )
                                        for (
                                            var s = 0;
                                            s < e[o].length;
                                            s += 1
                                        ) {
                                            var l = t.getPixelIndex(
                                                i + o - a,
                                                r + s - a
                                            );
                                            (n[0] +=
                                                t.bitmap.data[l] * e[o][s]),
                                                (n[1] +=
                                                    t.bitmap.data[l + 1] *
                                                    e[o][s]),
                                                (n[2] +=
                                                    t.bitmap.data[l + 2] *
                                                    e[o][s]);
                                        }
                                    return n;
                                }
                                function et(t) {
                                    return new G(
                                        t.bitmap.width,
                                        t.bitmap.height,
                                        t._background
                                    ).composite(t, 0, 0).bitmap;
                                }
                                function it(t, e) {
                                    if (!t || !Array.isArray(t))
                                        return j.call(
                                            this,
                                            'actions must be an array',
                                            e
                                        );
                                    var i = this;
                                    return (
                                        this.scanQuiet(
                                            0,
                                            0,
                                            this.bitmap.width,
                                            this.bitmap.height,
                                            function(r, n, a) {
                                                var o = k({
                                                        r: this.bitmap.data[a],
                                                        g: this.bitmap.data[
                                                            a + 1
                                                        ],
                                                        b: this.bitmap.data[
                                                            a + 2
                                                        ]
                                                    }),
                                                    s = function(t, e) {
                                                        var i = o.toRgb();
                                                        return (
                                                            (i[t] = Math.max(
                                                                0,
                                                                Math.min(
                                                                    i[t] + e,
                                                                    255
                                                                )
                                                            )),
                                                            k(i)
                                                        );
                                                    };
                                                t.forEach(function(t) {
                                                    if ('mix' === t.apply)
                                                        o = k.mix(
                                                            o,
                                                            t.params[0],
                                                            t.params[1]
                                                        );
                                                    else if ('tint' === t.apply)
                                                        o = k.mix(
                                                            o,
                                                            'white',
                                                            t.params[0]
                                                        );
                                                    else if (
                                                        'shade' === t.apply
                                                    )
                                                        o = k.mix(
                                                            o,
                                                            'black',
                                                            t.params[0]
                                                        );
                                                    else if (
                                                        'xor' === t.apply
                                                    ) {
                                                        var r = k(
                                                            t.params[0]
                                                        ).toRgb();
                                                        (o = o.toRgb()),
                                                            (o = k({
                                                                r: o.r ^ r.r,
                                                                g: o.g ^ r.g,
                                                                b: o.b ^ r.b
                                                            }));
                                                    } else if (
                                                        'red' === t.apply
                                                    )
                                                        o = s('r', t.params[0]);
                                                    else if (
                                                        'green' === t.apply
                                                    )
                                                        o = s('g', t.params[0]);
                                                    else if ('blue' === t.apply)
                                                        o = s('b', t.params[0]);
                                                    else {
                                                        'hue' === t.apply &&
                                                            (t.apply = 'spin');
                                                        var n = o[t.apply];
                                                        if (!n)
                                                            return j.call(
                                                                i,
                                                                'action ' +
                                                                    t.apply +
                                                                    ' not supported',
                                                                e
                                                            );
                                                        o = n.apply(
                                                            o,
                                                            t.params
                                                        );
                                                    }
                                                }),
                                                    (o = o.toRgb()),
                                                    (this.bitmap.data[a] = o.r),
                                                    (this.bitmap.data[a + 1] =
                                                        o.g),
                                                    (this.bitmap.data[a + 2] =
                                                        o.b);
                                            }
                                        ),
                                        F(e) ? e.call(this, null, this) : this
                                    );
                                }
                                function rt(t, e, i, r) {
                                    return r === G.HORIZONTAL_ALIGN_LEFT
                                        ? 0
                                        : r === G.HORIZONTAL_ALIGN_CENTER
                                            ? (i - at(t, e)) / 2
                                            : i - at(t, e);
                                }
                                function nt(t, e, i, r, n) {
                                    if (n.width > 0 && n.height > 0) {
                                        var a = e.pages[n.page]
                                            .cloneQuiet()
                                            .crop(n.x, n.y, n.width, n.height);
                                        return t.composite(
                                            a,
                                            i + n.xoffset,
                                            r + n.yoffset
                                        );
                                    }
                                    return t;
                                }
                                function at(t, e) {
                                    for (var i = 0, r = 0; r < e.length; r++)
                                        t.chars[e[r]] &&
                                            (i +=
                                                t.chars[e[r]].xoffset +
                                                (t.kernings[e[r]] &&
                                                t.kernings[e[r]][e[r + 1]]
                                                    ? t.kernings[e[r]][e[r + 1]]
                                                    : 0) +
                                                (t.chars[e[r]].xadvance || 0));
                                    return i;
                                }
                                function ot(t, e, i) {
                                    for (
                                        var r = e.split(' '),
                                            n = '',
                                            a = t.common.lineHeight,
                                            o = 0;
                                        o < r.length;
                                        o++
                                    ) {
                                        var s = n + r[o] + ' ';
                                        at(t, s) > i && o > 0
                                            ? ((a += t.common.lineHeight),
                                              (n = r[o] + ' '))
                                            : (n = s);
                                    }
                                    return a;
                                }
                                (G.prototype.blur = function(t, e) {
                                    if ('number' != typeof t)
                                        return j.call(
                                            this,
                                            'r must be a number',
                                            e
                                        );
                                    if (t < 1)
                                        return j.call(
                                            this,
                                            'r must be greater than 0',
                                            e
                                        );
                                    for (
                                        var i = void 0,
                                            r = void 0,
                                            n = void 0,
                                            a = void 0,
                                            o = void 0,
                                            s = void 0,
                                            l = void 0,
                                            f = void 0,
                                            h = void 0,
                                            c = void 0,
                                            u = void 0,
                                            p = void 0,
                                            d = void 0,
                                            m = void 0,
                                            g = this.bitmap.width - 1,
                                            b = this.bitmap.height - 1,
                                            v = t + 1,
                                            y = K[t],
                                            w = $[t],
                                            _ = [],
                                            x = [],
                                            k = [],
                                            E = [],
                                            I = [],
                                            S = [],
                                            A = 2;
                                        A-- > 0;

                                    ) {
                                        for (
                                            p = 0, d = 0, s = 0;
                                            s < this.bitmap.height;
                                            s++
                                        ) {
                                            for (
                                                i = this.bitmap.data[d] * v,
                                                    r =
                                                        this.bitmap.data[
                                                            d + 1
                                                        ] * v,
                                                    n =
                                                        this.bitmap.data[
                                                            d + 2
                                                        ] * v,
                                                    a =
                                                        this.bitmap.data[
                                                            d + 3
                                                        ] * v,
                                                    l = 1;
                                                l <= t;
                                                l++
                                            )
                                                (f =
                                                    d + ((l > g ? g : l) << 2)),
                                                    (i += this.bitmap.data[
                                                        f++
                                                    ]),
                                                    (r += this.bitmap.data[
                                                        f++
                                                    ]),
                                                    (n += this.bitmap.data[
                                                        f++
                                                    ]),
                                                    (a += this.bitmap.data[f]);
                                            for (
                                                o = 0;
                                                o < this.bitmap.width;
                                                o++
                                            )
                                                (_[p] = i),
                                                    (x[p] = r),
                                                    (k[p] = n),
                                                    (E[p] = a),
                                                    0 === s &&
                                                        ((I[o] =
                                                            ((f = o + v) < g
                                                                ? f
                                                                : g) << 2),
                                                        (S[o] =
                                                            (f = o - t) > 0
                                                                ? f << 2
                                                                : 0)),
                                                    (h = d + I[o]),
                                                    (c = d + S[o]),
                                                    (i +=
                                                        this.bitmap.data[h++] -
                                                        this.bitmap.data[c++]),
                                                    (r +=
                                                        this.bitmap.data[h++] -
                                                        this.bitmap.data[c++]),
                                                    (n +=
                                                        this.bitmap.data[h++] -
                                                        this.bitmap.data[c++]),
                                                    (a +=
                                                        this.bitmap.data[h] -
                                                        this.bitmap.data[c]),
                                                    p++;
                                            d += this.bitmap.width << 2;
                                        }
                                        for (
                                            o = 0;
                                            o < this.bitmap.width;
                                            o++
                                        ) {
                                            for (
                                                i = _[(u = o)] * v,
                                                    r = x[u] * v,
                                                    n = k[u] * v,
                                                    a = E[u] * v,
                                                    l = 1;
                                                l <= t;
                                                l++
                                            )
                                                (i +=
                                                    _[
                                                        (u +=
                                                            l > b
                                                                ? 0
                                                                : this.bitmap
                                                                      .width)
                                                    ]),
                                                    (r += x[u]),
                                                    (n += k[u]),
                                                    (a += E[u]);
                                            for (
                                                p = o << 2, s = 0;
                                                s < this.bitmap.height;
                                                s++
                                            )
                                                (m = (a * y) >>> w),
                                                    (this.bitmap.data[
                                                        p + 3
                                                    ] = m),
                                                    m > 255 &&
                                                        (this.bitmap.data[
                                                            p + 3
                                                        ] = 255),
                                                    m > 0
                                                        ? ((m = 255 / m),
                                                          (this.bitmap.data[p] =
                                                              ((i * y) >>> w) *
                                                              m),
                                                          (this.bitmap.data[
                                                              p + 1
                                                          ] =
                                                              ((r * y) >>> w) *
                                                              m),
                                                          (this.bitmap.data[
                                                              p + 2
                                                          ] =
                                                              ((n * y) >>> w) *
                                                              m))
                                                        : ((this.bitmap.data[
                                                              p + 2
                                                          ] = 0),
                                                          (this.bitmap.data[
                                                              p + 1
                                                          ] = 0),
                                                          (this.bitmap.data[
                                                              p
                                                          ] = 0)),
                                                    0 === o &&
                                                        ((I[s] =
                                                            ((f = s + v) < b
                                                                ? f
                                                                : b) *
                                                            this.bitmap.width),
                                                        (S[s] =
                                                            (f = s - t) > 0
                                                                ? f *
                                                                  this.bitmap
                                                                      .width
                                                                : 0)),
                                                    (h = o + I[s]),
                                                    (c = o + S[s]),
                                                    (i += _[h] - _[c]),
                                                    (r += x[h] - x[c]),
                                                    (n += k[h] - k[c]),
                                                    (a += E[h] - E[c]),
                                                    (p +=
                                                        this.bitmap.width << 2);
                                        }
                                    }
                                    return F(e)
                                        ? e.call(this, null, this)
                                        : this;
                                }),
                                    (G.prototype.convolution = function(
                                        t,
                                        e,
                                        i
                                    ) {
                                        'function' == typeof e &&
                                            void 0 === i &&
                                            ((i = e), (e = null)),
                                            e || (e = G.EDGE_EXTEND);
                                        var r = n.from(this.bitmap.data),
                                            a = t.length,
                                            o = t[0].length,
                                            s = Math.floor(a / 2),
                                            l = Math.floor(o / 2),
                                            f = -s,
                                            h = -l,
                                            c = void 0,
                                            u = void 0,
                                            p = void 0,
                                            d = void 0,
                                            m = void 0,
                                            g = void 0,
                                            b = void 0,
                                            v = void 0,
                                            y = void 0,
                                            w = void 0;
                                        return (
                                            this.scanQuiet(
                                                0,
                                                0,
                                                this.bitmap.width,
                                                this.bitmap.height,
                                                function(i, n, a) {
                                                    (d = 0), (p = 0), (u = 0);
                                                    for (var o = f; o <= s; o++)
                                                        for (
                                                            var _ = h;
                                                            _ <= l;
                                                            _++
                                                        )
                                                            (v = i + _),
                                                                (y = n + o),
                                                                (c =
                                                                    t[o + s][
                                                                        _ + l
                                                                    ]),
                                                                -1 ===
                                                                (w = this.getPixelIndex(
                                                                    v,
                                                                    y,
                                                                    e
                                                                ))
                                                                    ? ((b = 0),
                                                                      (g = 0),
                                                                      (m = 0))
                                                                    : ((m = this
                                                                          .bitmap
                                                                          .data[
                                                                          w + 0
                                                                      ]),
                                                                      (g = this
                                                                          .bitmap
                                                                          .data[
                                                                          w + 1
                                                                      ]),
                                                                      (b = this
                                                                          .bitmap
                                                                          .data[
                                                                          w + 2
                                                                      ])),
                                                                (u += c * m),
                                                                (p += c * g),
                                                                (d += c * b);
                                                    u < 0 && (u = 0),
                                                        p < 0 && (p = 0),
                                                        d < 0 && (d = 0),
                                                        u > 255 && (u = 255),
                                                        p > 255 && (p = 255),
                                                        d > 255 && (d = 255),
                                                        (r[a + 0] = u),
                                                        (r[a + 1] = p),
                                                        (r[a + 2] = d);
                                                }
                                            ),
                                            (this.bitmap.data = r),
                                            F(i)
                                                ? i.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.greyscale = function(t) {
                                        return (
                                            this.scanQuiet(
                                                0,
                                                0,
                                                this.bitmap.width,
                                                this.bitmap.height,
                                                function(t, e, i) {
                                                    var r = parseInt(
                                                        0.2126 *
                                                            this.bitmap.data[
                                                                i
                                                            ] +
                                                            0.7152 *
                                                                this.bitmap
                                                                    .data[
                                                                    i + 1
                                                                ] +
                                                            0.0722 *
                                                                this.bitmap
                                                                    .data[
                                                                    i + 2
                                                                ],
                                                        10
                                                    );
                                                    (this.bitmap.data[i] = r),
                                                        (this.bitmap.data[
                                                            i + 1
                                                        ] = r),
                                                        (this.bitmap.data[
                                                            i + 2
                                                        ] = r);
                                                }
                                            ),
                                            F(t)
                                                ? t.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.grayscale =
                                        G.prototype.greyscale),
                                    (G.prototype.sepia = function(t) {
                                        return (
                                            this.scanQuiet(
                                                0,
                                                0,
                                                this.bitmap.width,
                                                this.bitmap.height,
                                                function(t, e, i) {
                                                    var r = this.bitmap.data[i],
                                                        n = this.bitmap.data[
                                                            i + 1
                                                        ],
                                                        a = this.bitmap.data[
                                                            i + 2
                                                        ];
                                                    (a =
                                                        0.272 *
                                                            (r =
                                                                0.393 * r +
                                                                0.769 * n +
                                                                0.189 * a) +
                                                        0.534 *
                                                            (n =
                                                                0.349 * r +
                                                                0.686 * n +
                                                                0.168 * a) +
                                                        0.131 * a),
                                                        (this.bitmap.data[i] =
                                                            r < 255 ? r : 255),
                                                        (this.bitmap.data[
                                                            i + 1
                                                        ] =
                                                            n < 255 ? n : 255),
                                                        (this.bitmap.data[
                                                            i + 2
                                                        ] =
                                                            a < 255 ? a : 255);
                                                }
                                            ),
                                            F(t)
                                                ? t.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.opacity = function(t, e) {
                                        return 'number' != typeof t
                                            ? j.call(
                                                  this,
                                                  'f must be a number',
                                                  e
                                              )
                                            : t < 0 || t > 1
                                                ? j.call(
                                                      this,
                                                      'f must be a number from 0 to 1',
                                                      e
                                                  )
                                                : (this.scanQuiet(
                                                      0,
                                                      0,
                                                      this.bitmap.width,
                                                      this.bitmap.height,
                                                      function(e, i, r) {
                                                          var n =
                                                              this.bitmap.data[
                                                                  r + 3
                                                              ] * t;
                                                          this.bitmap.data[
                                                              r + 3
                                                          ] = n;
                                                      }
                                                  ),
                                                  F(e)
                                                      ? e.call(this, null, this)
                                                      : this);
                                    }),
                                    (G.prototype.fade = function(t, e) {
                                        return 'number' != typeof t
                                            ? j.call(
                                                  this,
                                                  'f must be a number',
                                                  e
                                              )
                                            : t < 0 || t > 1
                                                ? j.call(
                                                      this,
                                                      'f must be a number from 0 to 1',
                                                      e
                                                  )
                                                : (this.opacity(1 - t),
                                                  F(e)
                                                      ? e.call(this, null, this)
                                                      : this);
                                    }),
                                    (G.prototype.opaque = function(t) {
                                        return (
                                            this.scanQuiet(
                                                0,
                                                0,
                                                this.bitmap.width,
                                                this.bitmap.height,
                                                function(t, e, i) {
                                                    this.bitmap.data[
                                                        i + 3
                                                    ] = 255;
                                                }
                                            ),
                                            F(t)
                                                ? t.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.resize = function(t, e, i, r) {
                                        if (
                                            'number' != typeof t ||
                                            'number' != typeof e
                                        )
                                            return j.call(
                                                this,
                                                'w and h must be numbers',
                                                r
                                            );
                                        if (
                                            ('function' == typeof i &&
                                                void 0 === r &&
                                                ((r = i), (i = null)),
                                            t === G.AUTO && e === G.AUTO)
                                        )
                                            return j.call(
                                                this,
                                                'w and h cannot both be set to auto',
                                                r
                                            );
                                        if (
                                            (t === G.AUTO &&
                                                (t =
                                                    this.bitmap.width *
                                                    (e / this.bitmap.height)),
                                            e === G.AUTO &&
                                                (e =
                                                    this.bitmap.height *
                                                    (t / this.bitmap.width)),
                                            (t = Math.round(t)),
                                            (e = Math.round(e)),
                                            'function' == typeof R[i])
                                        ) {
                                            var a = {
                                                data: n.alloc(t * e * 4),
                                                width: t,
                                                height: e
                                            };
                                            R[i](this.bitmap, a),
                                                (this.bitmap = a);
                                        } else {
                                            var o = this;
                                            new O(
                                                this.bitmap.width,
                                                this.bitmap.height,
                                                t,
                                                e,
                                                !0,
                                                !0,
                                                function(i) {
                                                    (o.bitmap.data = n.from(i)),
                                                        (o.bitmap.width = t),
                                                        (o.bitmap.height = e);
                                                }
                                            ).resize(this.bitmap.data);
                                        }
                                        return F(r)
                                            ? r.call(this, null, this)
                                            : this;
                                    }),
                                    (G.prototype.cover = function(
                                        t,
                                        e,
                                        i,
                                        r,
                                        n
                                    ) {
                                        if (
                                            'number' != typeof t ||
                                            'number' != typeof e
                                        )
                                            return j.call(
                                                this,
                                                'w and h must be numbers',
                                                n
                                            );
                                        i &&
                                        'function' == typeof i &&
                                        void 0 === n
                                            ? ((n = i), (i = null), (r = null))
                                            : 'function' == typeof r &&
                                              void 0 === n &&
                                              ((n = r), (r = null));
                                        var a =
                                                7 &
                                                (i =
                                                    i ||
                                                    G.HORIZONTAL_ALIGN_CENTER |
                                                        G.VERTICAL_ALIGN_MIDDLE),
                                            o = i >> 3;
                                        if (
                                            (0 === a || a & (a - 1)) &&
                                            (0 === o || o & (o - 1))
                                        )
                                            return j.call(
                                                this,
                                                'only use one flag per alignment direction',
                                                n
                                            );
                                        var s = a >> 1,
                                            l = o >> 1,
                                            f =
                                                t / e >
                                                this.bitmap.width /
                                                    this.bitmap.height
                                                    ? t / this.bitmap.width
                                                    : e / this.bitmap.height;
                                        return (
                                            this.scale(f, r),
                                            this.crop(
                                                ((this.bitmap.width - t) / 2) *
                                                    s,
                                                ((this.bitmap.height - e) / 2) *
                                                    l,
                                                t,
                                                e
                                            ),
                                            F(n)
                                                ? n.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.contain = function(
                                        t,
                                        e,
                                        i,
                                        r,
                                        n
                                    ) {
                                        if (
                                            'number' != typeof t ||
                                            'number' != typeof e
                                        )
                                            return j.call(
                                                this,
                                                'w and h must be numbers',
                                                n
                                            );
                                        'string' == typeof i &&
                                            ('function' == typeof r &&
                                                void 0 === n &&
                                                (n = r),
                                            (r = i),
                                            (i = null)),
                                            'function' == typeof i &&
                                                (void 0 === n && (n = i),
                                                (r = null),
                                                (i = null)),
                                            'function' == typeof r &&
                                                void 0 === n &&
                                                ((n = r), (r = null));
                                        var a =
                                                7 &
                                                (i =
                                                    i ||
                                                    G.HORIZONTAL_ALIGN_CENTER |
                                                        G.VERTICAL_ALIGN_MIDDLE),
                                            o = i >> 3;
                                        if (
                                            (0 === a || a & (a - 1)) &&
                                            (0 === o || o & (o - 1))
                                        )
                                            return j.call(
                                                this,
                                                'only use one flag per alignment direction',
                                                n
                                            );
                                        var s = a >> 1,
                                            l = o >> 1,
                                            f =
                                                t / e >
                                                this.bitmap.width /
                                                    this.bitmap.height
                                                    ? e / this.bitmap.height
                                                    : t / this.bitmap.width,
                                            h = this.cloneQuiet().scale(f, r);
                                        return (
                                            this.resize(t, e, r),
                                            this.scanQuiet(
                                                0,
                                                0,
                                                this.bitmap.width,
                                                this.bitmap.height,
                                                function(t, e, i) {
                                                    this.bitmap.data.writeUInt32BE(
                                                        this._background,
                                                        i
                                                    );
                                                }
                                            ),
                                            this.blit(
                                                h,
                                                ((this.bitmap.width -
                                                    h.bitmap.width) /
                                                    2) *
                                                    s,
                                                ((this.bitmap.height -
                                                    h.bitmap.height) /
                                                    2) *
                                                    l
                                            ),
                                            F(n)
                                                ? n.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.scale = function(t, e, i) {
                                        if ('number' != typeof t)
                                            return j.call(
                                                this,
                                                'f must be a number',
                                                i
                                            );
                                        if (t < 0)
                                            return j.call(
                                                this,
                                                'f must be a positive number',
                                                i
                                            );
                                        'function' == typeof e &&
                                            void 0 === i &&
                                            ((i = e), (e = null));
                                        var r = this.bitmap.width * t,
                                            n = this.bitmap.height * t;
                                        return (
                                            this.resize(r, n, e),
                                            F(i)
                                                ? i.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.scaleToFit = function(
                                        t,
                                        e,
                                        i,
                                        r
                                    ) {
                                        if (
                                            'number' != typeof t ||
                                            'number' != typeof e
                                        )
                                            return j.call(
                                                this,
                                                'w and h must be numbers',
                                                r
                                            );
                                        'function' == typeof i &&
                                            void 0 === r &&
                                            ((r = i), (i = null));
                                        var n =
                                            t / e >
                                            this.bitmap.width /
                                                this.bitmap.height
                                                ? e / this.bitmap.height
                                                : t / this.bitmap.width;
                                        return (
                                            this.scale(n, i),
                                            F(r)
                                                ? r.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.pixelate = function(
                                        t,
                                        e,
                                        i,
                                        r,
                                        n,
                                        a
                                    ) {
                                        if ('function' == typeof e)
                                            (a = e),
                                                (n = null),
                                                (r = null),
                                                (i = null),
                                                (e = null);
                                        else {
                                            if ('number' != typeof t)
                                                return j.call(
                                                    this,
                                                    'size must be a number',
                                                    a
                                                );
                                            if (B(e) && 'number' != typeof e)
                                                return j.call(
                                                    this,
                                                    'x must be a number',
                                                    a
                                                );
                                            if (B(i) && 'number' != typeof i)
                                                return j.call(
                                                    this,
                                                    'y must be a number',
                                                    a
                                                );
                                            if (B(r) && 'number' != typeof r)
                                                return j.call(
                                                    this,
                                                    'w must be a number',
                                                    a
                                                );
                                            if (B(n) && 'number' != typeof n)
                                                return j.call(
                                                    this,
                                                    'h must be a number',
                                                    a
                                                );
                                        }
                                        var o = [
                                            [1 / 16, 0.125, 1 / 16],
                                            [0.125, 0.25, 0.125],
                                            [1 / 16, 0.125, 1 / 16]
                                        ];
                                        (e = e || 0),
                                            (i = i || 0),
                                            (r = B(r)
                                                ? e
                                                : this.bitmap.width - e),
                                            (n = B(n)
                                                ? n
                                                : this.bitmap.height - i);
                                        var s = this.cloneQuiet();
                                        return (
                                            this.scanQuiet(e, i, r, n, function(
                                                e,
                                                i,
                                                r
                                            ) {
                                                (e = t * Math.floor(e / t)),
                                                    (i = t * Math.floor(i / t));
                                                var n = tt(s, o, e, i);
                                                (this.bitmap.data[r] = n[0]),
                                                    (this.bitmap.data[r + 1] =
                                                        n[1]),
                                                    (this.bitmap.data[r + 2] =
                                                        n[2]);
                                            }),
                                            F(a)
                                                ? a.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.convolute = function(
                                        t,
                                        e,
                                        i,
                                        r,
                                        n,
                                        a
                                    ) {
                                        if (!Array.isArray(t))
                                            return j.call(
                                                this,
                                                'the kernel must be an array',
                                                a
                                            );
                                        if ('function' == typeof e)
                                            (a = e),
                                                (e = null),
                                                (i = null),
                                                (r = null),
                                                (n = null);
                                        else {
                                            if (B(e) && 'number' != typeof e)
                                                return j.call(
                                                    this,
                                                    'x must be a number',
                                                    a
                                                );
                                            if (B(i) && 'number' != typeof i)
                                                return j.call(
                                                    this,
                                                    'y must be a number',
                                                    a
                                                );
                                            if (B(r) && 'number' != typeof r)
                                                return j.call(
                                                    this,
                                                    'w must be a number',
                                                    a
                                                );
                                            if (B(n) && 'number' != typeof n)
                                                return j.call(
                                                    this,
                                                    'h must be a number',
                                                    a
                                                );
                                        }
                                        var o = (t.length - 1) / 2;
                                        (e = B(e) ? e : o),
                                            (i = B(i) ? i : o),
                                            (r = B(r)
                                                ? r
                                                : this.bitmap.width - e),
                                            (n = B(n)
                                                ? n
                                                : this.bitmap.height - i);
                                        var s = this.cloneQuiet();
                                        return (
                                            this.scanQuiet(e, i, r, n, function(
                                                e,
                                                i,
                                                r
                                            ) {
                                                var n = tt(s, t, e, i);
                                                (this.bitmap.data[r] = n[0]),
                                                    (this.bitmap.data[r + 1] =
                                                        n[1]),
                                                    (this.bitmap.data[r + 2] =
                                                        n[2]);
                                            }),
                                            F(a)
                                                ? a.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.rotate = function(t, e, i) {
                                        return (
                                            (void 0 !== e && null !== e) ||
                                                (e = !0),
                                            'function' == typeof e &&
                                                void 0 === i &&
                                                ((i = e), (e = !0)),
                                            'number' != typeof t
                                                ? j.call(
                                                      this,
                                                      'deg must be a number',
                                                      i
                                                  )
                                                : 'boolean' != typeof e &&
                                                  'string' != typeof e
                                                    ? j.call(
                                                          this,
                                                          'mode must be a boolean or a string',
                                                          i
                                                      )
                                                    : (t % 90 == 0 &&
                                                      !1 === Boolean(e)
                                                          ? function(t) {
                                                                for (
                                                                    var e =
                                                                        Math.round(
                                                                            t /
                                                                                90
                                                                        ) % 4;
                                                                    e < 0;

                                                                )
                                                                    e += 4;
                                                                for (
                                                                    ;
                                                                    e > 0;

                                                                ) {
                                                                    for (
                                                                        var i = n.alloc(
                                                                                this
                                                                                    .bitmap
                                                                                    .data
                                                                                    .length
                                                                            ),
                                                                            r = 0,
                                                                            a =
                                                                                this
                                                                                    .bitmap
                                                                                    .width -
                                                                                1;
                                                                        a >= 0;
                                                                        a--
                                                                    )
                                                                        for (
                                                                            var o = 0;
                                                                            o <
                                                                            this
                                                                                .bitmap
                                                                                .height;
                                                                            o++
                                                                        ) {
                                                                            var s =
                                                                                    (this
                                                                                        .bitmap
                                                                                        .width *
                                                                                        o +
                                                                                        a) <<
                                                                                    2,
                                                                                l = this.bitmap.data.readUInt32BE(
                                                                                    s
                                                                                );
                                                                            i.writeUInt32BE(
                                                                                l,
                                                                                r
                                                                            ),
                                                                                (r += 4);
                                                                        }
                                                                    this.bitmap.data = n.from(
                                                                        i
                                                                    );
                                                                    var f = this
                                                                        .bitmap
                                                                        .width;
                                                                    (this.bitmap.width = this.bitmap.height),
                                                                        (this.bitmap.height = f),
                                                                        e--;
                                                                }
                                                            }.call(this, t, i)
                                                          : function(t, e) {
                                                                var i =
                                                                        ((t %= 360) *
                                                                            Math.PI) /
                                                                        180,
                                                                    r = Math.cos(
                                                                        i
                                                                    ),
                                                                    a = Math.sin(
                                                                        i
                                                                    ),
                                                                    o = this
                                                                        .bitmap
                                                                        .width,
                                                                    s = this
                                                                        .bitmap
                                                                        .height;
                                                                if (
                                                                    !0 === e ||
                                                                    'string' ==
                                                                        typeof e
                                                                ) {
                                                                    (o =
                                                                        Math.ceil(
                                                                            Math.abs(
                                                                                this
                                                                                    .bitmap
                                                                                    .width *
                                                                                    r
                                                                            ) +
                                                                                Math.abs(
                                                                                    this
                                                                                        .bitmap
                                                                                        .height *
                                                                                        a
                                                                                )
                                                                        ) + 1),
                                                                        (s =
                                                                            Math.ceil(
                                                                                Math.abs(
                                                                                    this
                                                                                        .bitmap
                                                                                        .width *
                                                                                        a
                                                                                ) +
                                                                                    Math.abs(
                                                                                        this
                                                                                            .bitmap
                                                                                            .height *
                                                                                            r
                                                                                    )
                                                                            ) +
                                                                            1),
                                                                        o %
                                                                            2 !=
                                                                            0 &&
                                                                            o++,
                                                                        s %
                                                                            2 !=
                                                                            0 &&
                                                                            s++;
                                                                    var l = this.cloneQuiet();
                                                                    this.scanQuiet(
                                                                        0,
                                                                        0,
                                                                        this
                                                                            .bitmap
                                                                            .width,
                                                                        this
                                                                            .bitmap
                                                                            .height,
                                                                        function(
                                                                            t,
                                                                            e,
                                                                            i
                                                                        ) {
                                                                            this.bitmap.data.writeUInt32BE(
                                                                                this
                                                                                    ._background,
                                                                                i
                                                                            );
                                                                        }
                                                                    );
                                                                    var f = Math.max(
                                                                        o,
                                                                        s,
                                                                        this
                                                                            .bitmap
                                                                            .width,
                                                                        this
                                                                            .bitmap
                                                                            .height
                                                                    );
                                                                    this.resize(
                                                                        f,
                                                                        f,
                                                                        e
                                                                    ),
                                                                        this.blit(
                                                                            l,
                                                                            this
                                                                                .bitmap
                                                                                .width /
                                                                                2 -
                                                                                l
                                                                                    .bitmap
                                                                                    .width /
                                                                                    2,
                                                                            this
                                                                                .bitmap
                                                                                .height /
                                                                                2 -
                                                                                l
                                                                                    .bitmap
                                                                                    .height /
                                                                                    2
                                                                        );
                                                                }
                                                                var h = this
                                                                        .bitmap
                                                                        .width,
                                                                    c = this
                                                                        .bitmap
                                                                        .height,
                                                                    u = n.alloc(
                                                                        this
                                                                            .bitmap
                                                                            .data
                                                                            .length
                                                                    );
                                                                function p(
                                                                    t,
                                                                    e
                                                                ) {
                                                                    return function(
                                                                        i,
                                                                        r
                                                                    ) {
                                                                        return {
                                                                            x:
                                                                                i +
                                                                                t,
                                                                            y:
                                                                                r +
                                                                                e
                                                                        };
                                                                    };
                                                                }
                                                                for (
                                                                    var d = p(
                                                                            -h /
                                                                                2,
                                                                            -c /
                                                                                2
                                                                        ),
                                                                        m = p(
                                                                            h /
                                                                                2 +
                                                                                0.5,
                                                                            c /
                                                                                2 +
                                                                                0.5
                                                                        ),
                                                                        g = 1;
                                                                    g <= c;
                                                                    g++
                                                                )
                                                                    for (
                                                                        var b = 1;
                                                                        b <= h;
                                                                        b++
                                                                    ) {
                                                                        var v = d(
                                                                                b,
                                                                                g
                                                                            ),
                                                                            y = m(
                                                                                r *
                                                                                    v.x -
                                                                                    a *
                                                                                        v.y,
                                                                                r *
                                                                                    v.y +
                                                                                    a *
                                                                                        v.x
                                                                            ),
                                                                            w =
                                                                                (h *
                                                                                    (g -
                                                                                        1) +
                                                                                    b -
                                                                                    1) <<
                                                                                2;
                                                                        if (
                                                                            y.x >=
                                                                                0 &&
                                                                            y.x <
                                                                                h &&
                                                                            y.y >=
                                                                                0 &&
                                                                            y.y <
                                                                                c
                                                                        ) {
                                                                            var _ =
                                                                                    ((h *
                                                                                        (0 |
                                                                                            y.y) +
                                                                                        y.x) |
                                                                                        0) <<
                                                                                    2,
                                                                                x = this.bitmap.data.readUInt32BE(
                                                                                    _
                                                                                );
                                                                            u.writeUInt32BE(
                                                                                x,
                                                                                w
                                                                            );
                                                                        } else
                                                                            u.writeUInt32BE(
                                                                                this
                                                                                    ._background,
                                                                                w
                                                                            );
                                                                    }
                                                                if (
                                                                    ((this.bitmap.data = u),
                                                                    !0 === e ||
                                                                        'string' ==
                                                                            typeof e)
                                                                ) {
                                                                    var k =
                                                                            h /
                                                                                2 -
                                                                            o /
                                                                                2,
                                                                        E =
                                                                            c /
                                                                                2 -
                                                                            s /
                                                                                2;
                                                                    this.crop(
                                                                        k,
                                                                        E,
                                                                        o,
                                                                        s
                                                                    );
                                                                }
                                                            }.call(
                                                                this,
                                                                t,
                                                                e,
                                                                i
                                                            ),
                                                      F(i)
                                                          ? i.call(
                                                                this,
                                                                null,
                                                                this
                                                            )
                                                          : this)
                                        );
                                    }),
                                    (G.prototype.displace = function(t, e, i) {
                                        if (
                                            'object' !==
                                                (void 0 === t
                                                    ? 'undefined'
                                                    : a(t)) ||
                                            t.constructor !== G
                                        )
                                            return j.call(
                                                this,
                                                'The source must be a Jimp image',
                                                i
                                            );
                                        if ('number' != typeof e)
                                            return j.call(
                                                this,
                                                'factor must be a number',
                                                i
                                            );
                                        var r = this.cloneQuiet();
                                        return (
                                            this.scanQuiet(
                                                0,
                                                0,
                                                this.bitmap.width,
                                                this.bitmap.height,
                                                function(i, n, a) {
                                                    var o =
                                                        (t.bitmap.data[a] /
                                                            256) *
                                                        e;
                                                    o = Math.round(o);
                                                    var s = this.getPixelIndex(
                                                        i + o,
                                                        n
                                                    );
                                                    (this.bitmap.data[s] =
                                                        r.bitmap.data[a]),
                                                        (this.bitmap.data[
                                                            s + 1
                                                        ] =
                                                            r.bitmap.data[
                                                                a + 1
                                                            ]),
                                                        (this.bitmap.data[
                                                            s + 2
                                                        ] =
                                                            r.bitmap.data[
                                                                a + 2
                                                            ]);
                                                }
                                            ),
                                            F(i)
                                                ? i.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.getBuffer = function(t, e) {
                                        if (
                                            (t === G.AUTO &&
                                                (t = this.getMIME()),
                                            'string' != typeof t)
                                        )
                                            return j.call(
                                                this,
                                                'mime must be a string',
                                                e
                                            );
                                        if ('function' != typeof e)
                                            return j.call(
                                                this,
                                                'cb must be a function',
                                                e
                                            );
                                        switch (t.toLowerCase()) {
                                            case G.MIME_PNG:
                                                var i = new b({
                                                    width: this.bitmap.width,
                                                    height: this.bitmap.height,
                                                    bitDepth: 8,
                                                    deflateLevel: this
                                                        ._deflateLevel,
                                                    deflateStrategy: this
                                                        ._deflateStrategy,
                                                    filterType: this
                                                        ._filterType,
                                                    colorType: this._rgba
                                                        ? 6
                                                        : 2,
                                                    inputHasAlpha: !0
                                                });
                                                this._rgba
                                                    ? (i.data = n.from(
                                                          this.bitmap.data
                                                      ))
                                                    : (i.data = et(this).data);
                                                var r = b.sync.write(i);
                                                e.call(this, null, r);
                                                break;
                                            case G.MIME_JPEG:
                                                var a = v.encode(
                                                    et(this),
                                                    this._quality
                                                );
                                                e.call(this, null, a.data);
                                                break;
                                            case G.MIME_BMP:
                                            case G.MIME_X_MS_BMP:
                                                var o = y.encode(et(this));
                                                e.call(this, null, o.data);
                                                break;
                                            case G.MIME_TIFF:
                                                var s = et(this),
                                                    l = _.encodeImage(
                                                        s.data,
                                                        s.width,
                                                        s.height
                                                    );
                                                e.call(this, null, n.from(l));
                                                break;
                                            default:
                                                e.call(
                                                    this,
                                                    'Unsupported MIME type: ' +
                                                        t
                                                );
                                        }
                                        return this;
                                    }),
                                    (G.prototype.getBase64 = function(t, e) {
                                        return (
                                            t === G.AUTO &&
                                                (t = this.getMIME()),
                                            'string' != typeof t
                                                ? j.call(
                                                      this,
                                                      'mime must be a string',
                                                      e
                                                  )
                                                : 'function' != typeof e
                                                    ? j.call(
                                                          this,
                                                          'cb must be a function',
                                                          e
                                                      )
                                                    : (this.getBuffer(
                                                          t,
                                                          function(i, r) {
                                                              if (i)
                                                                  return j.call(
                                                                      this,
                                                                      i,
                                                                      e
                                                                  );
                                                              var n =
                                                                  'data:' +
                                                                  t +
                                                                  ';base64,' +
                                                                  r.toString(
                                                                      'base64'
                                                                  );
                                                              return e.call(
                                                                  this,
                                                                  null,
                                                                  n
                                                              );
                                                          }
                                                      ),
                                                      this)
                                        );
                                    }),
                                    (G.prototype.dither565 = function(t) {
                                        var e = [
                                            1,
                                            9,
                                            3,
                                            11,
                                            13,
                                            5,
                                            15,
                                            7,
                                            4,
                                            12,
                                            2,
                                            10,
                                            16,
                                            8,
                                            14,
                                            6
                                        ];
                                        return (
                                            this.scanQuiet(
                                                0,
                                                0,
                                                this.bitmap.width,
                                                this.bitmap.height,
                                                function(t, i, r) {
                                                    var n =
                                                        e[
                                                            ((3 & i) << 2) +
                                                                (t % 4)
                                                        ];
                                                    (this.bitmap.data[
                                                        r
                                                    ] = Math.min(
                                                        this.bitmap.data[r] + n,
                                                        255
                                                    )),
                                                        (this.bitmap.data[
                                                            r + 1
                                                        ] = Math.min(
                                                            this.bitmap.data[
                                                                r + 1
                                                            ] + n,
                                                            255
                                                        )),
                                                        (this.bitmap.data[
                                                            r + 2
                                                        ] = Math.min(
                                                            this.bitmap.data[
                                                                r + 2
                                                            ] + n,
                                                            255
                                                        ));
                                                }
                                            ),
                                            F(t)
                                                ? t.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.dither16 =
                                        G.prototype.dither565),
                                    (G.prototype.color = it),
                                    (G.prototype.colour = it),
                                    (G.loadFont = function(t, e) {
                                        var i = this;
                                        return 'string' != typeof t
                                            ? j.call(
                                                  this,
                                                  'file must be a string',
                                                  e
                                              )
                                            : new M(function(r, n) {
                                                  (e =
                                                      e ||
                                                      function(t, e) {
                                                          t ? n(t) : r(e);
                                                      }),
                                                      I(t, function(r, n) {
                                                          var a = {},
                                                              o = {};
                                                          if (r)
                                                              return j.call(
                                                                  i,
                                                                  r,
                                                                  e
                                                              );
                                                          for (
                                                              var s = 0;
                                                              s <
                                                              n.chars.length;
                                                              s++
                                                          )
                                                              a[
                                                                  String.fromCharCode(
                                                                      n.chars[s]
                                                                          .id
                                                                  )
                                                              ] =
                                                                  n.chars[s];
                                                          for (
                                                              var l = 0;
                                                              l <
                                                              n.kernings.length;
                                                              l++
                                                          ) {
                                                              var f = String.fromCharCode(
                                                                  n.kernings[l]
                                                                      .first
                                                              );
                                                              (o[f] =
                                                                  o[f] || {}),
                                                                  (o[f][
                                                                      String.fromCharCode(
                                                                          n
                                                                              .kernings[
                                                                              l
                                                                          ]
                                                                              .second
                                                                      )
                                                                  ] =
                                                                      n.kernings[
                                                                          l
                                                                      ].amount);
                                                          }
                                                          (function(t, e) {
                                                              var i = e.map(
                                                                  function(e) {
                                                                      return G.read(
                                                                          t +
                                                                              '/' +
                                                                              e
                                                                      );
                                                                  }
                                                              );
                                                              return M.all(i);
                                                          })(
                                                              m.dirname(t),
                                                              n.pages
                                                          ).then(function(t) {
                                                              e(null, {
                                                                  chars: a,
                                                                  kernings: o,
                                                                  pages: t,
                                                                  common:
                                                                      n.common,
                                                                  info: n.info
                                                              });
                                                          });
                                                      });
                                              });
                                    }),
                                    (G.prototype.print = function(
                                        t,
                                        e,
                                        i,
                                        r,
                                        n,
                                        o,
                                        s
                                    ) {
                                        if (
                                            ('function' == typeof n &&
                                                void 0 === s &&
                                                ((s = n), (n = 1 / 0)),
                                            void 0 === n && (n = 1 / 0),
                                            'function' == typeof o &&
                                                void 0 === s &&
                                                ((s = o), (n = 1 / 0)),
                                            void 0 === o && (o = 1 / 0),
                                            'object' !==
                                                (void 0 === t
                                                    ? 'undefined'
                                                    : a(t)))
                                        )
                                            return j.call(
                                                this,
                                                'font must be a Jimp loadFont',
                                                s
                                            );
                                        if (
                                            'number' != typeof e ||
                                            'number' != typeof i ||
                                            'number' != typeof n
                                        )
                                            return j.call(
                                                this,
                                                'x, y and maxWidth must be numbers',
                                                s
                                            );
                                        if (
                                            'string' != typeof r &&
                                            'object' !==
                                                (void 0 === r
                                                    ? 'undefined'
                                                    : a(r))
                                        )
                                            return j.call(
                                                this,
                                                'text must be a string or an object',
                                                s
                                            );
                                        if ('number' != typeof n)
                                            return j.call(
                                                this,
                                                'maxWidth must be a number',
                                                s
                                            );
                                        if ('number' != typeof o)
                                            return j.call(
                                                this,
                                                'maxHeight must be a number',
                                                s
                                            );
                                        var l = void 0,
                                            f = void 0;
                                        'object' ===
                                        (void 0 === r ? 'undefined' : a(r))
                                            ? ((l =
                                                  r.alignmentX ||
                                                  G.HORIZONTAL_ALIGN_LEFT),
                                              (f =
                                                  r.alignmentY ||
                                                  G.VERTICAL_ALIGN_TOP),
                                              (r = r.text))
                                            : ((l = G.HORIZONTAL_ALIGN_LEFT),
                                              (f = G.VERTICAL_ALIGN_TOP));
                                        o !== 1 / 0 &&
                                        f === G.VERTICAL_ALIGN_BOTTOM
                                            ? (i = o - ot(t, r, n))
                                            : o !== 1 / 0 &&
                                              f === G.VERTICAL_ALIGN_MIDDLE &&
                                              (i = o / 2 - ot(t, r, n) / 2);
                                        for (
                                            var h = r.split(' '), c = '', u = 0;
                                            u < h.length;
                                            u++
                                        ) {
                                            var p = c + h[u] + ' ';
                                            at(t, p) > n && u > 0
                                                ? (this.print(
                                                      t,
                                                      e + rt(t, c, n, l),
                                                      i,
                                                      c
                                                  ),
                                                  (c = h[u] + ' '),
                                                  (i += t.common.lineHeight))
                                                : (c = p);
                                        }
                                        return (
                                            function(t, e, i, r) {
                                                for (
                                                    var n = 0;
                                                    n < r.length;
                                                    n++
                                                )
                                                    t.chars[r[n]] &&
                                                        (nt(
                                                            this,
                                                            t,
                                                            e,
                                                            i,
                                                            t.chars[r[n]]
                                                        ),
                                                        (e +=
                                                            (t.kernings[r[n]] &&
                                                            t.kernings[r[n]][
                                                                r[n + 1]
                                                            ]
                                                                ? t.kernings[
                                                                      r[n]
                                                                  ][r[n + 1]]
                                                                : 0) +
                                                            (t.chars[r[n]]
                                                                .xadvance ||
                                                                0)));
                                            }.call(
                                                this,
                                                t,
                                                e + rt(t, c, n, l),
                                                i,
                                                c
                                            ),
                                            F(s)
                                                ? s.call(this, null, this)
                                                : this
                                        );
                                    }),
                                    (G.prototype.write = function(t, e) {
                                        var i = this;
                                        if (!d || !d.createWriteStream)
                                            throw new Error(
                                                'Cant access the filesystem. You can use the getBase64 method.'
                                            );
                                        if ('string' != typeof t)
                                            return j.call(
                                                this,
                                                'path must be a string',
                                                e
                                            );
                                        if (
                                            (void 0 === e && (e = N),
                                            'function' != typeof e)
                                        )
                                            return j.call(
                                                this,
                                                'cb must be a function',
                                                e
                                            );
                                        var r = x.getType(t),
                                            n = m.parse(t);
                                        return (
                                            n.dir && S.sync(n.dir),
                                            this.getBuffer(r, function(r, n) {
                                                if (r) return j.call(i, r, e);
                                                var a = d.createWriteStream(t);
                                                a
                                                    .on('open', function() {
                                                        a.write(n), a.end();
                                                    })
                                                    .on('error', function(t) {
                                                        return j.call(i, t, e);
                                                    }),
                                                    a.on('finish', function() {
                                                        return e.call(
                                                            i,
                                                            null,
                                                            i
                                                        );
                                                    });
                                            }),
                                            this
                                        );
                                    }),
                                    (G.prototype.inspect = function() {
                                        return (
                                            '<Jimp ' +
                                            (this.bitmap === G.prototype.bitmap
                                                ? 'pending...'
                                                : this.bitmap.width +
                                                  'x' +
                                                  this.bitmap.height) +
                                            '>'
                                        );
                                    }),
                                    (G.prototype.toString = function() {
                                        return '[object Jimp]';
                                    });
                                var st = void 0;
                                void 0 !== f &&
                                    'object' ===
                                        (void 0 === f ? 'undefined' : a(f)) &&
                                    (st = f),
                                    'undefined' != typeof self &&
                                        'object' ===
                                            ('undefined' == typeof self
                                                ? 'undefined'
                                                : a(self)) &&
                                        (st = self),
                                    (st.Jimp = G),
                                    (st.Buffer = n),
                                    (i.exports = G);
                            }.call(
                                this,
                                e('_process'),
                                void 0 !== t
                                    ? t
                                    : 'undefined' != typeof self
                                        ? self
                                        : void 0 !== f
                                            ? f
                                            : {},
                                e('buffer').Buffer,
                                arguments[3],
                                arguments[4],
                                arguments[5],
                                arguments[6],
                                '/'
                            ));
                        },
                        {
                            './phash.js': 138,
                            './resize.js': 139,
                            './resize2.js': 140,
                            './src/request': 141,
                            _process: 15,
                            'bignumber.js': 7,
                            'bmp-js': 8,
                            buffer: 17,
                            'es6-promise': 20,
                            events: 21,
                            'exif-parser': 22,
                            'file-type': 31,
                            fs: 14,
                            'jpeg-js': 41,
                            'load-bmfont': 45,
                            mime: 48,
                            mkdirp: 51,
                            omggif: 52,
                            path: 74,
                            pixelmatch: 76,
                            pngjs: 96,
                            tinycolor2: 126,
                            utif: 131
                        }
                    ],
                    2: [
                        function(e, i, r) {
                            (function(t) {
                                function r(t, e) {
                                    if (t === e) return 0;
                                    for (
                                        var i = t.length,
                                            r = e.length,
                                            n = 0,
                                            a = Math.min(i, r);
                                        n < a;
                                        ++n
                                    )
                                        if (t[n] !== e[n]) {
                                            (i = t[n]), (r = e[n]);
                                            break;
                                        }
                                    return i < r ? -1 : r < i ? 1 : 0;
                                }
                                function n(e) {
                                    return t.Buffer &&
                                        'function' == typeof t.Buffer.isBuffer
                                        ? t.Buffer.isBuffer(e)
                                        : !(null == e || !e._isBuffer);
                                }
                                var o = e('util/'),
                                    s = Object.prototype.hasOwnProperty,
                                    l = Array.prototype.slice,
                                    f = 'foo' === function() {}.name;
                                function h(t) {
                                    return Object.prototype.toString.call(t);
                                }
                                function c(e) {
                                    return (
                                        !n(e) &&
                                        ('function' == typeof t.ArrayBuffer &&
                                            ('function' ==
                                            typeof ArrayBuffer.isView
                                                ? ArrayBuffer.isView(e)
                                                : !!e &&
                                                  (e instanceof DataView ||
                                                      !!(
                                                          e.buffer &&
                                                          e.buffer instanceof
                                                              ArrayBuffer
                                                      ))))
                                    );
                                }
                                var u = (i.exports = v),
                                    p = /\s*function\s+([^\(\s]*)\s*/;
                                function d(t) {
                                    if (o.isFunction(t)) {
                                        if (f) return t.name;
                                        var e = t.toString().match(p);
                                        return e && e[1];
                                    }
                                }
                                function m(t, e) {
                                    return 'string' == typeof t
                                        ? t.length < e
                                            ? t
                                            : t.slice(0, e)
                                        : t;
                                }
                                function g(t) {
                                    if (f || !o.isFunction(t))
                                        return o.inspect(t);
                                    var e = d(t);
                                    return (
                                        '[Function' + (e ? ': ' + e : '') + ']'
                                    );
                                }
                                function b(t, e, i, r, n) {
                                    throw new u.AssertionError({
                                        message: i,
                                        actual: t,
                                        expected: e,
                                        operator: r,
                                        stackStartFunction: n
                                    });
                                }
                                function v(t, e) {
                                    t || b(t, !0, e, '==', u.ok);
                                }
                                function y(t, e, i, s) {
                                    if (t === e) return !0;
                                    if (n(t) && n(e)) return 0 === r(t, e);
                                    if (o.isDate(t) && o.isDate(e))
                                        return t.getTime() === e.getTime();
                                    if (o.isRegExp(t) && o.isRegExp(e))
                                        return (
                                            t.source === e.source &&
                                            t.global === e.global &&
                                            t.multiline === e.multiline &&
                                            t.lastIndex === e.lastIndex &&
                                            t.ignoreCase === e.ignoreCase
                                        );
                                    if (
                                        (null !== t &&
                                            'object' ===
                                                (void 0 === t
                                                    ? 'undefined'
                                                    : a(t))) ||
                                        (null !== e &&
                                            'object' ===
                                                (void 0 === e
                                                    ? 'undefined'
                                                    : a(e)))
                                    ) {
                                        if (
                                            c(t) &&
                                            c(e) &&
                                            h(t) === h(e) &&
                                            !(
                                                t instanceof Float32Array ||
                                                t instanceof Float64Array
                                            )
                                        )
                                            return (
                                                0 ===
                                                r(
                                                    new Uint8Array(t.buffer),
                                                    new Uint8Array(e.buffer)
                                                )
                                            );
                                        if (n(t) !== n(e)) return !1;
                                        var f = (s = s || {
                                            actual: [],
                                            expected: []
                                        }).actual.indexOf(t);
                                        return (
                                            (-1 !== f &&
                                                f === s.expected.indexOf(e)) ||
                                            (s.actual.push(t),
                                            s.expected.push(e),
                                            (function(t, e, i, r) {
                                                if (
                                                    null === t ||
                                                    void 0 === t ||
                                                    null === e ||
                                                    void 0 === e
                                                )
                                                    return !1;
                                                if (
                                                    o.isPrimitive(t) ||
                                                    o.isPrimitive(e)
                                                )
                                                    return t === e;
                                                if (
                                                    i &&
                                                    Object.getPrototypeOf(t) !==
                                                        Object.getPrototypeOf(e)
                                                )
                                                    return !1;
                                                var n = w(t),
                                                    a = w(e);
                                                if ((n && !a) || (!n && a))
                                                    return !1;
                                                if (n)
                                                    return (
                                                        (t = l.call(t)),
                                                        (e = l.call(e)),
                                                        y(t, e, i)
                                                    );
                                                var s,
                                                    f,
                                                    h = k(t),
                                                    c = k(e);
                                                if (h.length !== c.length)
                                                    return !1;
                                                for (
                                                    h.sort(),
                                                        c.sort(),
                                                        f = h.length - 1;
                                                    f >= 0;
                                                    f--
                                                )
                                                    if (h[f] !== c[f])
                                                        return !1;
                                                for (
                                                    f = h.length - 1;
                                                    f >= 0;
                                                    f--
                                                )
                                                    if (
                                                        ((s = h[f]),
                                                        !y(t[s], e[s], i, r))
                                                    )
                                                        return !1;
                                                return !0;
                                            })(t, e, i, s))
                                        );
                                    }
                                    return i ? t === e : t == e;
                                }
                                function w(t) {
                                    return (
                                        '[object Arguments]' ==
                                        Object.prototype.toString.call(t)
                                    );
                                }
                                function _(t, e) {
                                    if (!t || !e) return !1;
                                    if (
                                        '[object RegExp]' ==
                                        Object.prototype.toString.call(e)
                                    )
                                        return e.test(t);
                                    try {
                                        if (t instanceof e) return !0;
                                    } catch (t) {}
                                    return (
                                        !Error.isPrototypeOf(e) &&
                                        !0 === e.call({}, t)
                                    );
                                }
                                function x(t, e, i, r) {
                                    var n;
                                    if ('function' != typeof e)
                                        throw new TypeError(
                                            '"block" argument must be a function'
                                        );
                                    'string' == typeof i &&
                                        ((r = i), (i = null)),
                                        (n = (function(t) {
                                            var e;
                                            try {
                                                t();
                                            } catch (t) {
                                                e = t;
                                            }
                                            return e;
                                        })(e)),
                                        (r =
                                            (i && i.name
                                                ? ' (' + i.name + ').'
                                                : '.') + (r ? ' ' + r : '.')),
                                        t &&
                                            !n &&
                                            b(
                                                n,
                                                i,
                                                'Missing expected exception' + r
                                            );
                                    var a = 'string' == typeof r,
                                        s = !t && o.isError(n),
                                        l = !t && n && !i;
                                    if (
                                        (((s && a && _(n, i)) || l) &&
                                            b(
                                                n,
                                                i,
                                                'Got unwanted exception' + r
                                            ),
                                        (t && n && i && !_(n, i)) || (!t && n))
                                    )
                                        throw n;
                                }
                                (u.AssertionError = function(t) {
                                    (this.name = 'AssertionError'),
                                        (this.actual = t.actual),
                                        (this.expected = t.expected),
                                        (this.operator = t.operator),
                                        t.message
                                            ? ((this.message = t.message),
                                              (this.generatedMessage = !1))
                                            : ((this.message = (function(t) {
                                                  return (
                                                      m(g(t.actual), 128) +
                                                      ' ' +
                                                      t.operator +
                                                      ' ' +
                                                      m(g(t.expected), 128)
                                                  );
                                              })(this)),
                                              (this.generatedMessage = !0));
                                    var e = t.stackStartFunction || b;
                                    if (Error.captureStackTrace)
                                        Error.captureStackTrace(this, e);
                                    else {
                                        var i = new Error();
                                        if (i.stack) {
                                            var r = i.stack,
                                                n = d(e),
                                                a = r.indexOf('\n' + n);
                                            if (a >= 0) {
                                                var o = r.indexOf('\n', a + 1);
                                                r = r.substring(o + 1);
                                            }
                                            this.stack = r;
                                        }
                                    }
                                }),
                                    o.inherits(u.AssertionError, Error),
                                    (u.fail = b),
                                    (u.ok = v),
                                    (u.equal = function(t, e, i) {
                                        t != e && b(t, e, i, '==', u.equal);
                                    }),
                                    (u.notEqual = function(t, e, i) {
                                        t == e && b(t, e, i, '!=', u.notEqual);
                                    }),
                                    (u.deepEqual = function(t, e, i) {
                                        y(t, e, !1) ||
                                            b(
                                                t,
                                                e,
                                                i,
                                                'deepEqual',
                                                u.deepEqual
                                            );
                                    }),
                                    (u.deepStrictEqual = function(t, e, i) {
                                        y(t, e, !0) ||
                                            b(
                                                t,
                                                e,
                                                i,
                                                'deepStrictEqual',
                                                u.deepStrictEqual
                                            );
                                    }),
                                    (u.notDeepEqual = function(t, e, i) {
                                        y(t, e, !1) &&
                                            b(
                                                t,
                                                e,
                                                i,
                                                'notDeepEqual',
                                                u.notDeepEqual
                                            );
                                    }),
                                    (u.notDeepStrictEqual = function t(
                                        e,
                                        i,
                                        r
                                    ) {
                                        y(e, i, !0) &&
                                            b(e, i, r, 'notDeepStrictEqual', t);
                                    }),
                                    (u.strictEqual = function(t, e, i) {
                                        t !== e &&
                                            b(t, e, i, '===', u.strictEqual);
                                    }),
                                    (u.notStrictEqual = function(t, e, i) {
                                        t === e &&
                                            b(t, e, i, '!==', u.notStrictEqual);
                                    }),
                                    (u.throws = function(t, e, i) {
                                        x(!0, t, e, i);
                                    }),
                                    (u.doesNotThrow = function(t, e, i) {
                                        x(!1, t, e, i);
                                    }),
                                    (u.ifError = function(t) {
                                        if (t) throw t;
                                    });
                                var k =
                                    Object.keys ||
                                    function(t) {
                                        var e = [];
                                        for (var i in t)
                                            s.call(t, i) && e.push(i);
                                        return e;
                                    };
                            }.call(
                                this,
                                void 0 !== t
                                    ? t
                                    : 'undefined' != typeof self
                                        ? self
                                        : void 0 !== f
                                            ? f
                                            : {}
                            ));
                        },
                        { 'util/': 5 }
                    ],
                    3: [
                        function(t, e, i) {
                            'function' == typeof Object.create
                                ? (e.exports = function(t, e) {
                                      (t.super_ = e),
                                          (t.prototype = Object.create(
                                              e.prototype,
                                              {
                                                  constructor: {
                                                      value: t,
                                                      enumerable: !1,
                                                      writable: !0,
                                                      configurable: !0
                                                  }
                                              }
                                          ));
                                  })
                                : (e.exports = function(t, e) {
                                      t.super_ = e;
                                      var i = function() {};
                                      (i.prototype = e.prototype),
                                          (t.prototype = new i()),
                                          (t.prototype.constructor = t);
                                  });
                        },
                        {}
                    ],
                    4: [
                        function(t, e, i) {
                            e.exports = function(t) {
                                return (
                                    t &&
                                    'object' ===
                                        (void 0 === t ? 'undefined' : a(t)) &&
                                    'function' == typeof t.copy &&
                                    'function' == typeof t.fill &&
                                    'function' == typeof t.readUInt8
                                );
                            };
                        },
                        {}
                    ],
                    5: [
                        function(e, i, r) {
                            (function(t, i) {
                                var n = /%[sdj%]/g;
                                (r.format = function(t) {
                                    if (!v(t)) {
                                        for (
                                            var e = [], i = 0;
                                            i < arguments.length;
                                            i++
                                        )
                                            e.push(l(arguments[i]));
                                        return e.join(' ');
                                    }
                                    i = 1;
                                    for (
                                        var r = arguments,
                                            a = r.length,
                                            o = String(t).replace(n, function(
                                                t
                                            ) {
                                                if ('%%' === t) return '%';
                                                if (i >= a) return t;
                                                switch (t) {
                                                    case '%s':
                                                        return String(r[i++]);
                                                    case '%d':
                                                        return Number(r[i++]);
                                                    case '%j':
                                                        try {
                                                            return JSON.stringify(
                                                                r[i++]
                                                            );
                                                        } catch (t) {
                                                            return '[Circular]';
                                                        }
                                                    default:
                                                        return t;
                                                }
                                            }),
                                            s = r[i];
                                        i < a;
                                        s = r[++i]
                                    )
                                        g(s) || !_(s)
                                            ? (o += ' ' + s)
                                            : (o += ' ' + l(s));
                                    return o;
                                }),
                                    (r.deprecate = function(e, n) {
                                        if (y(i.process))
                                            return function() {
                                                return r
                                                    .deprecate(e, n)
                                                    .apply(this, arguments);
                                            };
                                        if (!0 === t.noDeprecation) return e;
                                        var a = !1;
                                        return function() {
                                            if (!a) {
                                                if (t.throwDeprecation)
                                                    throw new Error(n);
                                                t.traceDeprecation
                                                    ? console.trace(n)
                                                    : console.error(n),
                                                    (a = !0);
                                            }
                                            return e.apply(this, arguments);
                                        };
                                    });
                                var o,
                                    s = {};
                                function l(t, e) {
                                    var i = { seen: [], stylize: h };
                                    return (
                                        arguments.length >= 3 &&
                                            (i.depth = arguments[2]),
                                        arguments.length >= 4 &&
                                            (i.colors = arguments[3]),
                                        m(e)
                                            ? (i.showHidden = e)
                                            : e && r._extend(i, e),
                                        y(i.showHidden) && (i.showHidden = !1),
                                        y(i.depth) && (i.depth = 2),
                                        y(i.colors) && (i.colors = !1),
                                        y(i.customInspect) &&
                                            (i.customInspect = !0),
                                        i.colors && (i.stylize = f),
                                        c(i, t, i.depth)
                                    );
                                }
                                function f(t, e) {
                                    var i = l.styles[e];
                                    return i
                                        ? '[' +
                                              l.colors[i][0] +
                                              'm' +
                                              t +
                                              '[' +
                                              l.colors[i][1] +
                                              'm'
                                        : t;
                                }
                                function h(t, e) {
                                    return t;
                                }
                                function c(t, e, i) {
                                    if (
                                        t.customInspect &&
                                        e &&
                                        E(e.inspect) &&
                                        e.inspect !== r.inspect &&
                                        (!e.constructor ||
                                            e.constructor.prototype !== e)
                                    ) {
                                        var n = e.inspect(i, t);
                                        return v(n) || (n = c(t, n, i)), n;
                                    }
                                    var a = (function(t, e) {
                                        if (y(e))
                                            return t.stylize(
                                                'undefined',
                                                'undefined'
                                            );
                                        if (v(e)) {
                                            var i =
                                                "'" +
                                                JSON.stringify(e)
                                                    .replace(/^"|"$/g, '')
                                                    .replace(/'/g, "\\'")
                                                    .replace(/\\"/g, '"') +
                                                "'";
                                            return t.stylize(i, 'string');
                                        }
                                        if (b(e))
                                            return t.stylize('' + e, 'number');
                                        if (m(e))
                                            return t.stylize('' + e, 'boolean');
                                        if (g(e))
                                            return t.stylize('null', 'null');
                                    })(t, e);
                                    if (a) return a;
                                    var o = Object.keys(e),
                                        s = (function(t) {
                                            var e = {};
                                            return (
                                                t.forEach(function(t, i) {
                                                    e[t] = !0;
                                                }),
                                                e
                                            );
                                        })(o);
                                    if (
                                        (t.showHidden &&
                                            (o = Object.getOwnPropertyNames(e)),
                                        k(e) &&
                                            (o.indexOf('message') >= 0 ||
                                                o.indexOf('description') >= 0))
                                    )
                                        return u(e);
                                    if (0 === o.length) {
                                        if (E(e)) {
                                            var l = e.name ? ': ' + e.name : '';
                                            return t.stylize(
                                                '[Function' + l + ']',
                                                'special'
                                            );
                                        }
                                        if (w(e))
                                            return t.stylize(
                                                RegExp.prototype.toString.call(
                                                    e
                                                ),
                                                'regexp'
                                            );
                                        if (x(e))
                                            return t.stylize(
                                                Date.prototype.toString.call(e),
                                                'date'
                                            );
                                        if (k(e)) return u(e);
                                    }
                                    var f,
                                        h = '',
                                        _ = !1,
                                        I = ['{', '}'];
                                    (d(e) && ((_ = !0), (I = ['[', ']'])),
                                    E(e)) &&
                                        (h =
                                            ' [Function' +
                                            (e.name ? ': ' + e.name : '') +
                                            ']');
                                    return (
                                        w(e) &&
                                            (h =
                                                ' ' +
                                                RegExp.prototype.toString.call(
                                                    e
                                                )),
                                        x(e) &&
                                            (h =
                                                ' ' +
                                                Date.prototype.toUTCString.call(
                                                    e
                                                )),
                                        k(e) && (h = ' ' + u(e)),
                                        0 !== o.length || (_ && 0 != e.length)
                                            ? i < 0
                                                ? w(e)
                                                    ? t.stylize(
                                                          RegExp.prototype.toString.call(
                                                              e
                                                          ),
                                                          'regexp'
                                                      )
                                                    : t.stylize(
                                                          '[Object]',
                                                          'special'
                                                      )
                                                : (t.seen.push(e),
                                                  (f = _
                                                      ? (function(
                                                            t,
                                                            e,
                                                            i,
                                                            r,
                                                            n
                                                        ) {
                                                            for (
                                                                var a = [],
                                                                    o = 0,
                                                                    s =
                                                                        e.length;
                                                                o < s;
                                                                ++o
                                                            )
                                                                T(e, String(o))
                                                                    ? a.push(
                                                                          p(
                                                                              t,
                                                                              e,
                                                                              i,
                                                                              r,
                                                                              String(
                                                                                  o
                                                                              ),
                                                                              !0
                                                                          )
                                                                      )
                                                                    : a.push(
                                                                          ''
                                                                      );
                                                            return (
                                                                n.forEach(
                                                                    function(
                                                                        n
                                                                    ) {
                                                                        n.match(
                                                                            /^\d+$/
                                                                        ) ||
                                                                            a.push(
                                                                                p(
                                                                                    t,
                                                                                    e,
                                                                                    i,
                                                                                    r,
                                                                                    n,
                                                                                    !0
                                                                                )
                                                                            );
                                                                    }
                                                                ),
                                                                a
                                                            );
                                                        })(t, e, i, s, o)
                                                      : o.map(function(r) {
                                                            return p(
                                                                t,
                                                                e,
                                                                i,
                                                                s,
                                                                r,
                                                                _
                                                            );
                                                        })),
                                                  t.seen.pop(),
                                                  (function(t, e, i) {
                                                      if (
                                                          t.reduce(function(
                                                              t,
                                                              e
                                                          ) {
                                                              return (
                                                                  0,
                                                                  e.indexOf(
                                                                      '\n'
                                                                  ) >= 0 && 0,
                                                                  t +
                                                                      e.replace(
                                                                          /\u001b\[\d\d?m/g,
                                                                          ''
                                                                      ).length +
                                                                      1
                                                              );
                                                          },
                                                          0) > 60
                                                      )
                                                          return (
                                                              i[0] +
                                                              ('' === e
                                                                  ? ''
                                                                  : e + '\n ') +
                                                              ' ' +
                                                              t.join(',\n  ') +
                                                              ' ' +
                                                              i[1]
                                                          );
                                                      return (
                                                          i[0] +
                                                          e +
                                                          ' ' +
                                                          t.join(', ') +
                                                          ' ' +
                                                          i[1]
                                                      );
                                                  })(f, h, I))
                                            : I[0] + h + I[1]
                                    );
                                }
                                function u(t) {
                                    return (
                                        '[' +
                                        Error.prototype.toString.call(t) +
                                        ']'
                                    );
                                }
                                function p(t, e, i, r, n, a) {
                                    var o, s, l;
                                    if (
                                        ((l = Object.getOwnPropertyDescriptor(
                                            e,
                                            n
                                        ) || { value: e[n] }).get
                                            ? (s = l.set
                                                  ? t.stylize(
                                                        '[Getter/Setter]',
                                                        'special'
                                                    )
                                                  : t.stylize(
                                                        '[Getter]',
                                                        'special'
                                                    ))
                                            : l.set &&
                                              (s = t.stylize(
                                                  '[Setter]',
                                                  'special'
                                              )),
                                        T(r, n) || (o = '[' + n + ']'),
                                        s ||
                                            (t.seen.indexOf(l.value) < 0
                                                ? (s = g(i)
                                                      ? c(t, l.value, null)
                                                      : c(
                                                            t,
                                                            l.value,
                                                            i - 1
                                                        )).indexOf('\n') > -1 &&
                                                  (s = a
                                                      ? s
                                                            .split('\n')
                                                            .map(function(t) {
                                                                return '  ' + t;
                                                            })
                                                            .join('\n')
                                                            .substr(2)
                                                      : '\n' +
                                                        s
                                                            .split('\n')
                                                            .map(function(t) {
                                                                return (
                                                                    '   ' + t
                                                                );
                                                            })
                                                            .join('\n'))
                                                : (s = t.stylize(
                                                      '[Circular]',
                                                      'special'
                                                  ))),
                                        y(o))
                                    ) {
                                        if (a && n.match(/^\d+$/)) return s;
                                        (o = JSON.stringify('' + n)).match(
                                            /^"([a-zA-Z_][a-zA-Z_0-9]*)"$/
                                        )
                                            ? ((o = o.substr(1, o.length - 2)),
                                              (o = t.stylize(o, 'name')))
                                            : ((o = o
                                                  .replace(/'/g, "\\'")
                                                  .replace(/\\"/g, '"')
                                                  .replace(/(^"|"$)/g, "'")),
                                              (o = t.stylize(o, 'string')));
                                    }
                                    return o + ': ' + s;
                                }
                                function d(t) {
                                    return Array.isArray(t);
                                }
                                function m(t) {
                                    return 'boolean' == typeof t;
                                }
                                function g(t) {
                                    return null === t;
                                }
                                function b(t) {
                                    return 'number' == typeof t;
                                }
                                function v(t) {
                                    return 'string' == typeof t;
                                }
                                function y(t) {
                                    return void 0 === t;
                                }
                                function w(t) {
                                    return _(t) && '[object RegExp]' === I(t);
                                }
                                function _(t) {
                                    return (
                                        'object' ===
                                            (void 0 === t
                                                ? 'undefined'
                                                : a(t)) && null !== t
                                    );
                                }
                                function x(t) {
                                    return _(t) && '[object Date]' === I(t);
                                }
                                function k(t) {
                                    return (
                                        _(t) &&
                                        ('[object Error]' === I(t) ||
                                            t instanceof Error)
                                    );
                                }
                                function E(t) {
                                    return 'function' == typeof t;
                                }
                                function I(t) {
                                    return Object.prototype.toString.call(t);
                                }
                                function S(t) {
                                    return t < 10
                                        ? '0' + t.toString(10)
                                        : t.toString(10);
                                }
                                (r.debuglog = function(e) {
                                    if (
                                        (y(o) && (o = t.env.NODE_DEBUG || ''),
                                        (e = e.toUpperCase()),
                                        !s[e])
                                    )
                                        if (
                                            new RegExp(
                                                '\\b' + e + '\\b',
                                                'i'
                                            ).test(o)
                                        ) {
                                            var i = t.pid;
                                            s[e] = function() {
                                                var t = r.format.apply(
                                                    r,
                                                    arguments
                                                );
                                                console.error(
                                                    '%s %d: %s',
                                                    e,
                                                    i,
                                                    t
                                                );
                                            };
                                        } else s[e] = function() {};
                                    return s[e];
                                }),
                                    (r.inspect = l),
                                    (l.colors = {
                                        bold: [1, 22],
                                        italic: [3, 23],
                                        underline: [4, 24],
                                        inverse: [7, 27],
                                        white: [37, 39],
                                        grey: [90, 39],
                                        black: [30, 39],
                                        blue: [34, 39],
                                        cyan: [36, 39],
                                        green: [32, 39],
                                        magenta: [35, 39],
                                        red: [31, 39],
                                        yellow: [33, 39]
                                    }),
                                    (l.styles = {
                                        special: 'cyan',
                                        number: 'yellow',
                                        boolean: 'yellow',
                                        undefined: 'grey',
                                        null: 'bold',
                                        string: 'green',
                                        date: 'magenta',
                                        regexp: 'red'
                                    }),
                                    (r.isArray = d),
                                    (r.isBoolean = m),
                                    (r.isNull = g),
                                    (r.isNullOrUndefined = function(t) {
                                        return null == t;
                                    }),
                                    (r.isNumber = b),
                                    (r.isString = v),
                                    (r.isSymbol = function(t) {
                                        return (
                                            'symbol' ===
                                            (void 0 === t ? 'undefined' : a(t))
                                        );
                                    }),
                                    (r.isUndefined = y),
                                    (r.isRegExp = w),
                                    (r.isObject = _),
                                    (r.isDate = x),
                                    (r.isError = k),
                                    (r.isFunction = E),
                                    (r.isPrimitive = function(t) {
                                        return (
                                            null === t ||
                                            'boolean' == typeof t ||
                                            'number' == typeof t ||
                                            'string' == typeof t ||
                                            'symbol' ===
                                                (void 0 === t
                                                    ? 'undefined'
                                                    : a(t)) ||
                                            void 0 === t
                                        );
                                    }),
                                    (r.isBuffer = e('./support/isBuffer'));
                                var A = [
                                    'Jan',
                                    'Feb',
                                    'Mar',
                                    'Apr',
                                    'May',
                                    'Jun',
                                    'Jul',
                                    'Aug',
                                    'Sep',
                                    'Oct',
                                    'Nov',
                                    'Dec'
                                ];
                                function T(t, e) {
                                    return Object.prototype.hasOwnProperty.call(
                                        t,
                                        e
                                    );
                                }
                                (r.log = function() {
                                    console.log(
                                        '%s - %s',
                                        (function() {
                                            var t = new Date(),
                                                e = [
                                                    S(t.getHours()),
                                                    S(t.getMinutes()),
                                                    S(t.getSeconds())
                                                ].join(':');
                                            return [
                                                t.getDate(),
                                                A[t.getMonth()],
                                                e
                                            ].join(' ');
                                        })(),
                                        r.format.apply(r, arguments)
                                    );
                                }),
                                    (r.inherits = e('inherits')),
                                    (r._extend = function(t, e) {
                                        if (!e || !_(e)) return t;
                                        for (
                                            var i = Object.keys(e),
                                                r = i.length;
                                            r--;

                                        )
                                            t[i[r]] = e[i[r]];
                                        return t;
                                    });
                            }.call(
                                this,
                                e('_process'),
                                void 0 !== t
                                    ? t
                                    : 'undefined' != typeof self
                                        ? self
                                        : void 0 !== f
                                            ? f
                                            : {}
                            ));
                        },
                        { './support/isBuffer': 4, _process: 15, inherits: 3 }
                    ],
                    6: [
                        function(t, e, i) {
                            (i.byteLength = function(t) {
                                var e = f(t),
                                    i = e[0],
                                    r = e[1];
                                return (3 * (i + r)) / 4 - r;
                            }),
                                (i.toByteArray = function(t) {
                                    for (
                                        var e,
                                            i = f(t),
                                            r = i[0],
                                            o = i[1],
                                            s = new a(
                                                (function(t, e, i) {
                                                    return (
                                                        (3 * (e + i)) / 4 - i
                                                    );
                                                })(0, r, o)
                                            ),
                                            l = 0,
                                            h = o > 0 ? r - 4 : r,
                                            c = 0;
                                        c < h;
                                        c += 4
                                    )
                                        (e =
                                            (n[t.charCodeAt(c)] << 18) |
                                            (n[t.charCodeAt(c + 1)] << 12) |
                                            (n[t.charCodeAt(c + 2)] << 6) |
                                            n[t.charCodeAt(c + 3)]),
                                            (s[l++] = (e >> 16) & 255),
                                            (s[l++] = (e >> 8) & 255),
                                            (s[l++] = 255 & e);
                                    2 === o &&
                                        ((e =
                                            (n[t.charCodeAt(c)] << 2) |
                                            (n[t.charCodeAt(c + 1)] >> 4)),
                                        (s[l++] = 255 & e));
                                    1 === o &&
                                        ((e =
                                            (n[t.charCodeAt(c)] << 10) |
                                            (n[t.charCodeAt(c + 1)] << 4) |
                                            (n[t.charCodeAt(c + 2)] >> 2)),
                                        (s[l++] = (e >> 8) & 255),
                                        (s[l++] = 255 & e));
                                    return s;
                                }),
                                (i.fromByteArray = function(t) {
                                    for (
                                        var e,
                                            i = t.length,
                                            n = i % 3,
                                            a = [],
                                            o = 0,
                                            s = i - n;
                                        o < s;
                                        o += 16383
                                    )
                                        a.push(
                                            c(
                                                t,
                                                o,
                                                o + 16383 > s ? s : o + 16383
                                            )
                                        );
                                    1 === n
                                        ? ((e = t[i - 1]),
                                          a.push(
                                              r[e >> 2] +
                                                  r[(e << 4) & 63] +
                                                  '=='
                                          ))
                                        : 2 === n &&
                                          ((e = (t[i - 2] << 8) + t[i - 1]),
                                          a.push(
                                              r[e >> 10] +
                                                  r[(e >> 4) & 63] +
                                                  r[(e << 2) & 63] +
                                                  '='
                                          ));
                                    return a.join('');
                                });
                            for (
                                var r = [],
                                    n = [],
                                    a =
                                        'undefined' != typeof Uint8Array
                                            ? Uint8Array
                                            : Array,
                                    o =
                                        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
                                    s = 0,
                                    l = o.length;
                                s < l;
                                ++s
                            )
                                (r[s] = o[s]), (n[o.charCodeAt(s)] = s);
                            function f(t) {
                                var e = t.length;
                                if (e % 4 > 0)
                                    throw new Error(
                                        'Invalid string. Length must be a multiple of 4'
                                    );
                                var i = t.indexOf('=');
                                return (
                                    -1 === i && (i = e),
                                    [i, i === e ? 0 : 4 - (i % 4)]
                                );
                            }
                            function h(t) {
                                return (
                                    r[(t >> 18) & 63] +
                                    r[(t >> 12) & 63] +
                                    r[(t >> 6) & 63] +
                                    r[63 & t]
                                );
                            }
                            function c(t, e, i) {
                                for (var r, n = [], a = e; a < i; a += 3)
                                    (r =
                                        ((t[a] << 16) & 16711680) +
                                        ((t[a + 1] << 8) & 65280) +
                                        (255 & t[a + 2])),
                                        n.push(h(r));
                                return n.join('');
                            }
                            (n['-'.charCodeAt(0)] = 62),
                                (n['_'.charCodeAt(0)] = 63);
                        },
                        {}
                    ],
                    7: [
                        function(t, e, r) {
                            !(function(t) {
                                var o,
                                    s = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
                                    l = Math.ceil,
                                    f = Math.floor,
                                    h = '[BigNumber Error] ',
                                    c =
                                        h +
                                        'Number primitive has more than 15 significant digits: ',
                                    u = 1e14,
                                    p = 14,
                                    d = 9007199254740991,
                                    m = [
                                        1,
                                        10,
                                        100,
                                        1e3,
                                        1e4,
                                        1e5,
                                        1e6,
                                        1e7,
                                        1e8,
                                        1e9,
                                        1e10,
                                        1e11,
                                        1e12,
                                        1e13
                                    ],
                                    g = 1e7,
                                    b = 1e9;
                                function v(t) {
                                    var e = 0 | t;
                                    return t > 0 || t === e ? e : e - 1;
                                }
                                function y(t) {
                                    for (
                                        var e,
                                            i,
                                            r = 1,
                                            n = t.length,
                                            a = t[0] + '';
                                        r < n;

                                    ) {
                                        for (
                                            e = t[r++] + '', i = p - e.length;
                                            i--;
                                            e = '0' + e
                                        );
                                        a += e;
                                    }
                                    for (
                                        n = a.length;
                                        48 === a.charCodeAt(--n);

                                    );
                                    return a.slice(0, n + 1 || 1);
                                }
                                function w(t, e) {
                                    var i,
                                        r,
                                        n = t.c,
                                        a = e.c,
                                        o = t.s,
                                        s = e.s,
                                        l = t.e,
                                        f = e.e;
                                    if (!o || !s) return null;
                                    if (
                                        ((i = n && !n[0]),
                                        (r = a && !a[0]),
                                        i || r)
                                    )
                                        return i ? (r ? 0 : -s) : o;
                                    if (o != s) return o;
                                    if (((i = o < 0), (r = l == f), !n || !a))
                                        return r ? 0 : !n ^ i ? 1 : -1;
                                    if (!r) return (l > f) ^ i ? 1 : -1;
                                    for (
                                        s =
                                            (l = n.length) < (f = a.length)
                                                ? l
                                                : f,
                                            o = 0;
                                        o < s;
                                        o++
                                    )
                                        if (n[o] != a[o])
                                            return (n[o] > a[o]) ^ i ? 1 : -1;
                                    return l == f ? 0 : (l > f) ^ i ? 1 : -1;
                                }
                                function _(t, e, i, r) {
                                    if (
                                        t < e ||
                                        t > i ||
                                        t !== (t < 0 ? l(t) : f(t))
                                    )
                                        throw Error(
                                            h +
                                                (r || 'Argument') +
                                                ('number' == typeof t
                                                    ? t < e || t > i
                                                        ? ' out of range: '
                                                        : ' not an integer: '
                                                    : ' not a primitive number: ') +
                                                t
                                        );
                                }
                                function x(t) {
                                    return (
                                        '[object Array]' ==
                                        Object.prototype.toString.call(t)
                                    );
                                }
                                function k(t) {
                                    var e = t.c.length - 1;
                                    return v(t.e / p) == e && t.c[e] % 2 != 0;
                                }
                                function E(t, e) {
                                    return (
                                        (t.length > 1
                                            ? t.charAt(0) + '.' + t.slice(1)
                                            : t) +
                                        (e < 0 ? 'e' : 'e+') +
                                        e
                                    );
                                }
                                function I(t, e, i) {
                                    var r, n;
                                    if (e < 0) {
                                        for (n = i + '.'; ++e; n += i);
                                        t = n + t;
                                    } else if (++e > (r = t.length)) {
                                        for (n = i, e -= r; --e; n += i);
                                        t += n;
                                    } else
                                        e < r &&
                                            (t =
                                                t.slice(0, e) +
                                                '.' +
                                                t.slice(e));
                                    return t;
                                }
                                ((o = (function t(e) {
                                    var i,
                                        r,
                                        n,
                                        o = (U.prototype = {
                                            constructor: U,
                                            toString: null,
                                            valueOf: null
                                        }),
                                        S = new U(1),
                                        A = 20,
                                        T = 4,
                                        C = -7,
                                        M = 21,
                                        P = -1e7,
                                        L = 1e7,
                                        O = !1,
                                        R = 1,
                                        B = 0,
                                        D = {
                                            decimalSeparator: '.',
                                            groupSeparator: ',',
                                            groupSize: 3,
                                            secondaryGroupSize: 0,
                                            fractionGroupSeparator: ' ',
                                            fractionGroupSize: 0
                                        },
                                        z =
                                            '0123456789abcdefghijklmnopqrstuvwxyz';
                                    function U(t, e) {
                                        var i,
                                            a,
                                            o,
                                            l,
                                            h,
                                            u,
                                            m,
                                            g,
                                            b = this;
                                        if (!(b instanceof U))
                                            return new U(t, e);
                                        if (null == e) {
                                            if (t instanceof U)
                                                return (
                                                    (b.s = t.s),
                                                    (b.e = t.e),
                                                    void (b.c = (t = t.c)
                                                        ? t.slice()
                                                        : t)
                                                );
                                            if (
                                                (u = 'number' == typeof t) &&
                                                0 * t == 0
                                            ) {
                                                if (
                                                    ((b.s =
                                                        1 / t < 0
                                                            ? ((t = -t), -1)
                                                            : 1),
                                                    t === ~~t)
                                                ) {
                                                    for (
                                                        l = 0, h = t;
                                                        h >= 10;
                                                        h /= 10, l++
                                                    );
                                                    return (
                                                        (b.e = l),
                                                        void (b.c = [t])
                                                    );
                                                }
                                                g = t + '';
                                            } else {
                                                if (!s.test((g = t + '')))
                                                    return n(b, g, u);
                                                b.s =
                                                    45 == g.charCodeAt(0)
                                                        ? ((g = g.slice(1)), -1)
                                                        : 1;
                                            }
                                            (l = g.indexOf('.')) > -1 &&
                                                (g = g.replace('.', '')),
                                                (h = g.search(/e/i)) > 0
                                                    ? (l < 0 && (l = h),
                                                      (l += +g.slice(h + 1)),
                                                      (g = g.substring(0, h)))
                                                    : l < 0 && (l = g.length);
                                        } else {
                                            if (
                                                (_(e, 2, z.length, 'Base'),
                                                (g = t + ''),
                                                10 == e)
                                            )
                                                return H(
                                                    (b = new U(
                                                        t instanceof U ? t : g
                                                    )),
                                                    A + b.e + 1,
                                                    T
                                                );
                                            if ((u = 'number' == typeof t)) {
                                                if (0 * t != 0)
                                                    return n(b, g, u, e);
                                                if (
                                                    ((b.s =
                                                        1 / t < 0
                                                            ? ((g = g.slice(1)),
                                                              -1)
                                                            : 1),
                                                    U.DEBUG &&
                                                        g.replace(
                                                            /^0\.0*|\./,
                                                            ''
                                                        ).length > 15)
                                                )
                                                    throw Error(c + t);
                                                u = !1;
                                            } else
                                                b.s =
                                                    45 === g.charCodeAt(0)
                                                        ? ((g = g.slice(1)), -1)
                                                        : 1;
                                            for (
                                                i = z.slice(0, e),
                                                    l = h = 0,
                                                    m = g.length;
                                                h < m;
                                                h++
                                            )
                                                if (
                                                    i.indexOf(
                                                        (a = g.charAt(h))
                                                    ) < 0
                                                ) {
                                                    if ('.' == a) {
                                                        if (h > l) {
                                                            l = m;
                                                            continue;
                                                        }
                                                    } else if (
                                                        !o &&
                                                        ((g ==
                                                            g.toUpperCase() &&
                                                            (g = g.toLowerCase())) ||
                                                            (g ==
                                                                g.toLowerCase() &&
                                                                (g = g.toUpperCase())))
                                                    ) {
                                                        (o = !0),
                                                            (h = -1),
                                                            (l = 0);
                                                        continue;
                                                    }
                                                    return n(b, t + '', u, e);
                                                }
                                            (l = (g = r(g, e, 10, b.s)).indexOf(
                                                '.'
                                            )) > -1
                                                ? (g = g.replace('.', ''))
                                                : (l = g.length);
                                        }
                                        for (
                                            h = 0;
                                            48 === g.charCodeAt(h);
                                            h++
                                        );
                                        for (
                                            m = g.length;
                                            48 === g.charCodeAt(--m);

                                        );
                                        if ((g = g.slice(h, ++m))) {
                                            if (
                                                ((m -= h),
                                                u &&
                                                    U.DEBUG &&
                                                    m > 15 &&
                                                    (t > d || t !== f(t)))
                                            )
                                                throw Error(c + b.s * t);
                                            if ((l = l - h - 1) > L)
                                                b.c = b.e = null;
                                            else if (l < P) b.c = [(b.e = 0)];
                                            else {
                                                if (
                                                    ((b.e = l),
                                                    (b.c = []),
                                                    (h = (l + 1) % p),
                                                    l < 0 && (h += p),
                                                    h < m)
                                                ) {
                                                    for (
                                                        h &&
                                                            b.c.push(
                                                                +g.slice(0, h)
                                                            ),
                                                            m -= p;
                                                        h < m;

                                                    )
                                                        b.c.push(
                                                            +g.slice(
                                                                h,
                                                                (h += p)
                                                            )
                                                        );
                                                    (g = g.slice(h)),
                                                        (h = p - g.length);
                                                } else h -= m;
                                                for (; h--; g += '0');
                                                b.c.push(+g);
                                            }
                                        } else b.c = [(b.e = 0)];
                                    }
                                    function N(t, e, i, r) {
                                        var n, a, o, s, l;
                                        if (
                                            (null == i ? (i = T) : _(i, 0, 8),
                                            !t.c)
                                        )
                                            return t.toString();
                                        if (
                                            ((n = t.c[0]), (o = t.e), null == e)
                                        )
                                            (l = y(t.c)),
                                                (l =
                                                    1 == r || (2 == r && o <= C)
                                                        ? E(l, o)
                                                        : I(l, o, '0'));
                                        else if (
                                            ((a = (t = H(new U(t), e, i)).e),
                                            (s = (l = y(t.c)).length),
                                            1 == r ||
                                                (2 == r && (e <= a || a <= C)))
                                        ) {
                                            for (; s < e; l += '0', s++);
                                            l = E(l, a);
                                        } else if (
                                            ((e -= o),
                                            (l = I(l, a, '0')),
                                            a + 1 > s)
                                        ) {
                                            if (--e > 0)
                                                for (l += '.'; e--; l += '0');
                                        } else if ((e += a - s) > 0)
                                            for (
                                                a + 1 == s && (l += '.');
                                                e--;
                                                l += '0'
                                            );
                                        return t.s < 0 && n ? '-' + l : l;
                                    }
                                    function F(t, e) {
                                        var i,
                                            r,
                                            n = 0;
                                        for (
                                            x(t[0]) && (t = t[0]),
                                                i = new U(t[0]);
                                            ++n < t.length;

                                        ) {
                                            if (!(r = new U(t[n])).s) {
                                                i = r;
                                                break;
                                            }
                                            e.call(i, r) && (i = r);
                                        }
                                        return i;
                                    }
                                    function j(t, e, i) {
                                        for (
                                            var r = 1, n = e.length;
                                            !e[--n];
                                            e.pop()
                                        );
                                        for (n = e[0]; n >= 10; n /= 10, r++);
                                        return (
                                            (i = r + i * p - 1) > L
                                                ? (t.c = t.e = null)
                                                : i < P
                                                    ? (t.c = [(t.e = 0)])
                                                    : ((t.e = i), (t.c = e)),
                                            t
                                        );
                                    }
                                    function H(t, e, i, r) {
                                        var n,
                                            a,
                                            o,
                                            s,
                                            h,
                                            c,
                                            d,
                                            g = t.c,
                                            b = m;
                                        if (g) {
                                            t: {
                                                for (
                                                    n = 1, s = g[0];
                                                    s >= 10;
                                                    s /= 10, n++
                                                );
                                                if ((a = e - n) < 0)
                                                    (a += p),
                                                        (o = e),
                                                        (d =
                                                            ((h = g[(c = 0)]) /
                                                                b[n - o - 1]) %
                                                            10 |
                                                            0);
                                                else if (
                                                    (c = l((a + 1) / p)) >=
                                                    g.length
                                                ) {
                                                    if (!r) break t;
                                                    for (
                                                        ;
                                                        g.length <= c;
                                                        g.push(0)
                                                    );
                                                    (h = d = 0),
                                                        (n = 1),
                                                        (o = (a %= p) - p + 1);
                                                } else {
                                                    for (
                                                        h = s = g[c], n = 1;
                                                        s >= 10;
                                                        s /= 10, n++
                                                    );
                                                    d =
                                                        (o = (a %= p) - p + n) <
                                                        0
                                                            ? 0
                                                            : (h /
                                                                  b[
                                                                      n - o - 1
                                                                  ]) %
                                                              10 |
                                                              0;
                                                }
                                                if (
                                                    ((r =
                                                        r ||
                                                        e < 0 ||
                                                        null != g[c + 1] ||
                                                        (o < 0
                                                            ? h
                                                            : h %
                                                              b[n - o - 1])),
                                                    (r =
                                                        i < 4
                                                            ? (d || r) &&
                                                              (0 == i ||
                                                                  i ==
                                                                      (t.s < 0
                                                                          ? 3
                                                                          : 2))
                                                            : d > 5 ||
                                                              (5 == d &&
                                                                  (4 == i ||
                                                                      r ||
                                                                      (6 == i &&
                                                                          (a > 0
                                                                              ? o >
                                                                                0
                                                                                  ? h /
                                                                                    b[
                                                                                        n -
                                                                                            o
                                                                                    ]
                                                                                  : 0
                                                                              : g[
                                                                                    c -
                                                                                        1
                                                                                ]) %
                                                                              10 &
                                                                              1) ||
                                                                      i ==
                                                                          (t.s <
                                                                          0
                                                                              ? 8
                                                                              : 7)))),
                                                    e < 1 || !g[0])
                                                )
                                                    return (
                                                        (g.length = 0),
                                                        r
                                                            ? ((e -= t.e + 1),
                                                              (g[0] =
                                                                  b[
                                                                      (p -
                                                                          (e %
                                                                              p)) %
                                                                          p
                                                                  ]),
                                                              (t.e = -e || 0))
                                                            : (g[0] = t.e = 0),
                                                        t
                                                    );
                                                if (
                                                    (0 == a
                                                        ? ((g.length = c),
                                                          (s = 1),
                                                          c--)
                                                        : ((g.length = c + 1),
                                                          (s = b[p - a]),
                                                          (g[c] =
                                                              o > 0
                                                                  ? f(
                                                                        (h /
                                                                            b[
                                                                                n -
                                                                                    o
                                                                            ]) %
                                                                            b[o]
                                                                    ) * s
                                                                  : 0)),
                                                    r)
                                                )
                                                    for (;;) {
                                                        if (0 == c) {
                                                            for (
                                                                a = 1, o = g[0];
                                                                o >= 10;
                                                                o /= 10, a++
                                                            );
                                                            for (
                                                                o = g[0] += s,
                                                                    s = 1;
                                                                o >= 10;
                                                                o /= 10, s++
                                                            );
                                                            a != s &&
                                                                (t.e++,
                                                                g[0] == u &&
                                                                    (g[0] = 1));
                                                            break;
                                                        }
                                                        if (
                                                            ((g[c] += s),
                                                            g[c] != u)
                                                        )
                                                            break;
                                                        (g[c--] = 0), (s = 1);
                                                    }
                                                for (
                                                    a = g.length;
                                                    0 === g[--a];
                                                    g.pop()
                                                );
                                            }
                                            t.e > L
                                                ? (t.c = t.e = null)
                                                : t.e < P &&
                                                  (t.c = [(t.e = 0)]);
                                        }
                                        return t;
                                    }
                                    return (
                                        (U.clone = t),
                                        (U.ROUND_UP = 0),
                                        (U.ROUND_DOWN = 1),
                                        (U.ROUND_CEIL = 2),
                                        (U.ROUND_FLOOR = 3),
                                        (U.ROUND_HALF_UP = 4),
                                        (U.ROUND_HALF_DOWN = 5),
                                        (U.ROUND_HALF_EVEN = 6),
                                        (U.ROUND_HALF_CEIL = 7),
                                        (U.ROUND_HALF_FLOOR = 8),
                                        (U.EUCLID = 9),
                                        (U.config = U.set = function(t) {
                                            var e, i;
                                            if (null != t) {
                                                if (
                                                    'object' !=
                                                    (void 0 === t
                                                        ? 'undefined'
                                                        : a(t))
                                                )
                                                    throw Error(
                                                        h +
                                                            'Object expected: ' +
                                                            t
                                                    );
                                                if (
                                                    (t.hasOwnProperty(
                                                        (e = 'DECIMAL_PLACES')
                                                    ) &&
                                                        (_((i = t[e]), 0, b, e),
                                                        (A = i)),
                                                    t.hasOwnProperty(
                                                        (e = 'ROUNDING_MODE')
                                                    ) &&
                                                        (_((i = t[e]), 0, 8, e),
                                                        (T = i)),
                                                    t.hasOwnProperty(
                                                        (e = 'EXPONENTIAL_AT')
                                                    ) &&
                                                        (x((i = t[e]))
                                                            ? (_(
                                                                  i[0],
                                                                  -b,
                                                                  0,
                                                                  e
                                                              ),
                                                              _(i[1], 0, b, e),
                                                              (C = i[0]),
                                                              (M = i[1]))
                                                            : (_(i, -b, b, e),
                                                              (C = -(M =
                                                                  i < 0
                                                                      ? -i
                                                                      : i)))),
                                                    t.hasOwnProperty(
                                                        (e = 'RANGE')
                                                    ))
                                                )
                                                    if (x((i = t[e])))
                                                        _(i[0], -b, -1, e),
                                                            _(i[1], 1, b, e),
                                                            (P = i[0]),
                                                            (L = i[1]);
                                                    else {
                                                        if (
                                                            (_(i, -b, b, e), !i)
                                                        )
                                                            throw Error(
                                                                h +
                                                                    e +
                                                                    ' cannot be zero: ' +
                                                                    i
                                                            );
                                                        P = -(L =
                                                            i < 0 ? -i : i);
                                                    }
                                                if (
                                                    t.hasOwnProperty(
                                                        (e = 'CRYPTO')
                                                    )
                                                ) {
                                                    if ((i = t[e]) !== !!i)
                                                        throw Error(
                                                            h +
                                                                e +
                                                                ' not true or false: ' +
                                                                i
                                                        );
                                                    if (i) {
                                                        if (
                                                            'undefined' ==
                                                                typeof crypto ||
                                                            !crypto ||
                                                            (!crypto.getRandomValues &&
                                                                !crypto.randomBytes)
                                                        )
                                                            throw ((O = !i),
                                                            Error(
                                                                h +
                                                                    'crypto unavailable'
                                                            ));
                                                        O = i;
                                                    } else O = i;
                                                }
                                                if (
                                                    (t.hasOwnProperty(
                                                        (e = 'MODULO_MODE')
                                                    ) &&
                                                        (_((i = t[e]), 0, 9, e),
                                                        (R = i)),
                                                    t.hasOwnProperty(
                                                        (e = 'POW_PRECISION')
                                                    ) &&
                                                        (_((i = t[e]), 0, b, e),
                                                        (B = i)),
                                                    t.hasOwnProperty(
                                                        (e = 'FORMAT')
                                                    ))
                                                ) {
                                                    if (
                                                        'object' !=
                                                        (void 0 === (i = t[e])
                                                            ? 'undefined'
                                                            : a(i))
                                                    )
                                                        throw Error(
                                                            h +
                                                                e +
                                                                ' not an object: ' +
                                                                i
                                                        );
                                                    D = i;
                                                }
                                                if (
                                                    t.hasOwnProperty(
                                                        (e = 'ALPHABET')
                                                    )
                                                ) {
                                                    if (
                                                        'string' !=
                                                            typeof (i = t[e]) ||
                                                        /^.$|\.|(.).*\1/.test(i)
                                                    )
                                                        throw Error(
                                                            h +
                                                                e +
                                                                ' invalid: ' +
                                                                i
                                                        );
                                                    z = i;
                                                }
                                            }
                                            return {
                                                DECIMAL_PLACES: A,
                                                ROUNDING_MODE: T,
                                                EXPONENTIAL_AT: [C, M],
                                                RANGE: [P, L],
                                                CRYPTO: O,
                                                MODULO_MODE: R,
                                                POW_PRECISION: B,
                                                FORMAT: D,
                                                ALPHABET: z
                                            };
                                        }),
                                        (U.isBigNumber = function(t) {
                                            return (
                                                t instanceof U ||
                                                (t && !0 === t._isBigNumber) ||
                                                !1
                                            );
                                        }),
                                        (U.maximum = U.max = function() {
                                            return F(arguments, o.lt);
                                        }),
                                        (U.minimum = U.min = function() {
                                            return F(arguments, o.gt);
                                        }),
                                        (U.random = (function() {
                                            var t =
                                                (9007199254740992 *
                                                    Math.random()) &
                                                2097151
                                                    ? function() {
                                                          return f(
                                                              9007199254740992 *
                                                                  Math.random()
                                                          );
                                                      }
                                                    : function() {
                                                          return (
                                                              8388608 *
                                                                  ((1073741824 *
                                                                      Math.random()) |
                                                                      0) +
                                                              ((8388608 *
                                                                  Math.random()) |
                                                                  0)
                                                          );
                                                      };
                                            return function(e) {
                                                var i,
                                                    r,
                                                    n,
                                                    a,
                                                    o,
                                                    s = 0,
                                                    c = [],
                                                    u = new U(S);
                                                if (
                                                    (null == e
                                                        ? (e = A)
                                                        : _(e, 0, b),
                                                    (a = l(e / p)),
                                                    O)
                                                )
                                                    if (
                                                        crypto.getRandomValues
                                                    ) {
                                                        for (
                                                            i = crypto.getRandomValues(
                                                                new Uint32Array(
                                                                    (a *= 2)
                                                                )
                                                            );
                                                            s < a;

                                                        )
                                                            (o =
                                                                131072 * i[s] +
                                                                (i[s + 1] >>>
                                                                    11)) >= 9e15
                                                                ? ((r = crypto.getRandomValues(
                                                                      new Uint32Array(
                                                                          2
                                                                      )
                                                                  )),
                                                                  (i[s] = r[0]),
                                                                  (i[s + 1] =
                                                                      r[1]))
                                                                : (c.push(
                                                                      o % 1e14
                                                                  ),
                                                                  (s += 2));
                                                        s = a / 2;
                                                    } else {
                                                        if (!crypto.randomBytes)
                                                            throw ((O = !1),
                                                            Error(
                                                                h +
                                                                    'crypto unavailable'
                                                            ));
                                                        for (
                                                            i = crypto.randomBytes(
                                                                (a *= 7)
                                                            );
                                                            s < a;

                                                        )
                                                            (o =
                                                                281474976710656 *
                                                                    (31 &
                                                                        i[s]) +
                                                                1099511627776 *
                                                                    i[s + 1] +
                                                                4294967296 *
                                                                    i[s + 2] +
                                                                16777216 *
                                                                    i[s + 3] +
                                                                (i[s + 4] <<
                                                                    16) +
                                                                (i[s + 5] <<
                                                                    8) +
                                                                i[s + 6]) >=
                                                            9e15
                                                                ? crypto
                                                                      .randomBytes(
                                                                          7
                                                                      )
                                                                      .copy(
                                                                          i,
                                                                          s
                                                                      )
                                                                : (c.push(
                                                                      o % 1e14
                                                                  ),
                                                                  (s += 7));
                                                        s = a / 7;
                                                    }
                                                if (!O)
                                                    for (; s < a; )
                                                        (o = t()) < 9e15 &&
                                                            (c[s++] = o % 1e14);
                                                for (
                                                    a = c[--s],
                                                        e %= p,
                                                        a &&
                                                            e &&
                                                            ((o = m[p - e]),
                                                            (c[s] =
                                                                f(a / o) * o));
                                                    0 === c[s];
                                                    c.pop(), s--
                                                );
                                                if (s < 0) c = [(n = 0)];
                                                else {
                                                    for (
                                                        n = -1;
                                                        0 === c[0];
                                                        c.splice(0, 1), n -= p
                                                    );
                                                    for (
                                                        s = 1, o = c[0];
                                                        o >= 10;
                                                        o /= 10, s++
                                                    );
                                                    s < p && (n -= p - s);
                                                }
                                                return (u.e = n), (u.c = c), u;
                                            };
                                        })()),
                                        (r = (function() {
                                            function t(t, e, i, r) {
                                                for (
                                                    var n,
                                                        a,
                                                        o = [0],
                                                        s = 0,
                                                        l = t.length;
                                                    s < l;

                                                ) {
                                                    for (
                                                        a = o.length;
                                                        a--;
                                                        o[a] *= e
                                                    );
                                                    for (
                                                        o[0] += r.indexOf(
                                                            t.charAt(s++)
                                                        ),
                                                            n = 0;
                                                        n < o.length;
                                                        n++
                                                    )
                                                        o[n] > i - 1 &&
                                                            (null == o[n + 1] &&
                                                                (o[n + 1] = 0),
                                                            (o[n + 1] +=
                                                                (o[n] / i) | 0),
                                                            (o[n] %= i));
                                                }
                                                return o.reverse();
                                            }
                                            return function(e, r, n, a, o) {
                                                var s,
                                                    l,
                                                    f,
                                                    h,
                                                    c,
                                                    u,
                                                    p,
                                                    d,
                                                    m = e.indexOf('.'),
                                                    g = A,
                                                    b = T;
                                                for (
                                                    m >= 0 &&
                                                        ((h = B),
                                                        (B = 0),
                                                        (e = e.replace(
                                                            '.',
                                                            ''
                                                        )),
                                                        (u = (d = new U(r)).pow(
                                                            e.length - m
                                                        )),
                                                        (B = h),
                                                        (d.c = t(
                                                            I(y(u.c), u.e, '0'),
                                                            10,
                                                            n,
                                                            '0123456789'
                                                        )),
                                                        (d.e = d.c.length)),
                                                        f = h = (p = t(
                                                            e,
                                                            r,
                                                            n,
                                                            o
                                                                ? ((s = z),
                                                                  '0123456789')
                                                                : ((s =
                                                                      '0123456789'),
                                                                  z)
                                                        )).length;
                                                    0 == p[--h];
                                                    p.pop()
                                                );
                                                if (!p[0]) return s.charAt(0);
                                                if (
                                                    (m < 0
                                                        ? --f
                                                        : ((u.c = p),
                                                          (u.e = f),
                                                          (u.s = a),
                                                          (p = (u = i(
                                                              u,
                                                              d,
                                                              g,
                                                              b,
                                                              n
                                                          )).c),
                                                          (c = u.r),
                                                          (f = u.e)),
                                                    (m = p[(l = f + g + 1)]),
                                                    (h = n / 2),
                                                    (c =
                                                        c ||
                                                        l < 0 ||
                                                        null != p[l + 1]),
                                                    (c =
                                                        b < 4
                                                            ? (null != m ||
                                                                  c) &&
                                                              (0 == b ||
                                                                  b ==
                                                                      (u.s < 0
                                                                          ? 3
                                                                          : 2))
                                                            : m > h ||
                                                              (m == h &&
                                                                  (4 == b ||
                                                                      c ||
                                                                      (6 == b &&
                                                                          1 &
                                                                              p[
                                                                                  l -
                                                                                      1
                                                                              ]) ||
                                                                      b ==
                                                                          (u.s <
                                                                          0
                                                                              ? 8
                                                                              : 7)))),
                                                    l < 1 || !p[0])
                                                )
                                                    e = c
                                                        ? I(
                                                              s.charAt(1),
                                                              -g,
                                                              s.charAt(0)
                                                          )
                                                        : s.charAt(0);
                                                else {
                                                    if (((p.length = l), c))
                                                        for (
                                                            --n;
                                                            ++p[--l] > n;

                                                        )
                                                            (p[l] = 0),
                                                                l ||
                                                                    (++f,
                                                                    (p = [
                                                                        1
                                                                    ].concat(
                                                                        p
                                                                    )));
                                                    for (
                                                        h = p.length;
                                                        !p[--h];

                                                    );
                                                    for (
                                                        m = 0, e = '';
                                                        m <= h;
                                                        e += s.charAt(p[m++])
                                                    );
                                                    e = I(e, f, s.charAt(0));
                                                }
                                                return e;
                                            };
                                        })()),
                                        (i = (function() {
                                            function t(t, e, i) {
                                                var r,
                                                    n,
                                                    a,
                                                    o,
                                                    s = 0,
                                                    l = t.length,
                                                    f = e % g,
                                                    h = (e / g) | 0;
                                                for (t = t.slice(); l--; )
                                                    (s =
                                                        (((n =
                                                            f * (a = t[l] % g) +
                                                            ((r =
                                                                h * a +
                                                                (o =
                                                                    (t[l] / g) |
                                                                    0) *
                                                                    f) %
                                                                g) *
                                                                g +
                                                            s) /
                                                            i) |
                                                            0) +
                                                        ((r / g) | 0) +
                                                        h * o),
                                                        (t[l] = n % i);
                                                return (
                                                    s && (t = [s].concat(t)), t
                                                );
                                            }
                                            function e(t, e, i, r) {
                                                var n, a;
                                                if (i != r) a = i > r ? 1 : -1;
                                                else
                                                    for (n = a = 0; n < i; n++)
                                                        if (t[n] != e[n]) {
                                                            a =
                                                                t[n] > e[n]
                                                                    ? 1
                                                                    : -1;
                                                            break;
                                                        }
                                                return a;
                                            }
                                            function i(t, e, i, r) {
                                                for (var n = 0; i--; )
                                                    (t[i] -= n),
                                                        (n =
                                                            t[i] < e[i]
                                                                ? 1
                                                                : 0),
                                                        (t[i] =
                                                            n * r +
                                                            t[i] -
                                                            e[i]);
                                                for (
                                                    ;
                                                    !t[0] && t.length > 1;
                                                    t.splice(0, 1)
                                                );
                                            }
                                            return function(r, n, a, o, s) {
                                                var l,
                                                    h,
                                                    c,
                                                    d,
                                                    m,
                                                    g,
                                                    b,
                                                    y,
                                                    w,
                                                    _,
                                                    x,
                                                    k,
                                                    E,
                                                    I,
                                                    S,
                                                    A,
                                                    T,
                                                    C = r.s == n.s ? 1 : -1,
                                                    M = r.c,
                                                    P = n.c;
                                                if (!(M && M[0] && P && P[0]))
                                                    return new U(
                                                        r.s &&
                                                        n.s &&
                                                        (M
                                                            ? !P || M[0] != P[0]
                                                            : P)
                                                            ? (M &&
                                                                  0 == M[0]) ||
                                                              !P
                                                                ? 0 * C
                                                                : C / 0
                                                            : NaN
                                                    );
                                                for (
                                                    w = (y = new U(C)).c = [],
                                                        C =
                                                            a +
                                                            (h = r.e - n.e) +
                                                            1,
                                                        s ||
                                                            ((s = u),
                                                            (h =
                                                                v(r.e / p) -
                                                                v(n.e / p)),
                                                            (C = (C / p) | 0)),
                                                        c = 0;
                                                    P[c] == (M[c] || 0);
                                                    c++
                                                );
                                                if (
                                                    (P[c] > (M[c] || 0) && h--,
                                                    C < 0)
                                                )
                                                    w.push(1), (d = !0);
                                                else {
                                                    for (
                                                        I = M.length,
                                                            A = P.length,
                                                            c = 0,
                                                            C += 2,
                                                            (m = f(
                                                                s / (P[0] + 1)
                                                            )) > 1 &&
                                                                ((P = t(
                                                                    P,
                                                                    m,
                                                                    s
                                                                )),
                                                                (M = t(
                                                                    M,
                                                                    m,
                                                                    s
                                                                )),
                                                                (A = P.length),
                                                                (I = M.length)),
                                                            E = A,
                                                            x = (_ = M.slice(
                                                                0,
                                                                A
                                                            )).length;
                                                        x < A;
                                                        _[x++] = 0
                                                    );
                                                    (T = P.slice()),
                                                        (T = [0].concat(T)),
                                                        (S = P[0]),
                                                        P[1] >= s / 2 && S++;
                                                    do {
                                                        if (
                                                            ((m = 0),
                                                            (l = e(
                                                                P,
                                                                _,
                                                                A,
                                                                x
                                                            )) < 0)
                                                        ) {
                                                            if (
                                                                ((k = _[0]),
                                                                A != x &&
                                                                    (k =
                                                                        k * s +
                                                                        (_[1] ||
                                                                            0)),
                                                                (m = f(k / S)) >
                                                                    1)
                                                            )
                                                                for (
                                                                    m >= s &&
                                                                        (m =
                                                                            s -
                                                                            1),
                                                                        b = (g = t(
                                                                            P,
                                                                            m,
                                                                            s
                                                                        ))
                                                                            .length,
                                                                        x =
                                                                            _.length;
                                                                    1 ==
                                                                    e(
                                                                        g,
                                                                        _,
                                                                        b,
                                                                        x
                                                                    );

                                                                )
                                                                    m--,
                                                                        i(
                                                                            g,
                                                                            A <
                                                                            b
                                                                                ? T
                                                                                : P,
                                                                            b,
                                                                            s
                                                                        ),
                                                                        (b =
                                                                            g.length),
                                                                        (l = 1);
                                                            else
                                                                0 == m &&
                                                                    (l = m = 1),
                                                                    (b = (g = P.slice())
                                                                        .length);
                                                            if (
                                                                (b < x &&
                                                                    (g = [
                                                                        0
                                                                    ].concat(
                                                                        g
                                                                    )),
                                                                i(_, g, x, s),
                                                                (x = _.length),
                                                                -1 == l)
                                                            )
                                                                for (
                                                                    ;
                                                                    e(
                                                                        P,
                                                                        _,
                                                                        A,
                                                                        x
                                                                    ) < 1;

                                                                )
                                                                    m++,
                                                                        i(
                                                                            _,
                                                                            A <
                                                                            x
                                                                                ? T
                                                                                : P,
                                                                            x,
                                                                            s
                                                                        ),
                                                                        (x =
                                                                            _.length);
                                                        } else
                                                            0 === l &&
                                                                (m++,
                                                                (_ = [0]));
                                                        (w[c++] = m),
                                                            _[0]
                                                                ? (_[x++] =
                                                                      M[E] || 0)
                                                                : ((_ = [M[E]]),
                                                                  (x = 1));
                                                    } while (
                                                        (E++ < I ||
                                                            null != _[0]) &&
                                                        C--
                                                    );
                                                    (d = null != _[0]),
                                                        w[0] || w.splice(0, 1);
                                                }
                                                if (s == u) {
                                                    for (
                                                        c = 1, C = w[0];
                                                        C >= 10;
                                                        C /= 10, c++
                                                    );
                                                    H(
                                                        y,
                                                        a +
                                                            (y.e =
                                                                c + h * p - 1) +
                                                            1,
                                                        o,
                                                        d
                                                    );
                                                } else (y.e = h), (y.r = +d);
                                                return y;
                                            };
                                        })()),
                                        (n = (function() {
                                            var t = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
                                                e = /^([^.]+)\.$/,
                                                i = /^\.([^.]+)$/,
                                                r = /^-?(Infinity|NaN)$/,
                                                n = /^\s*\+(?=[\w.])|^\s+|\s+$/g;
                                            return function(a, o, s, l) {
                                                var f,
                                                    c = s
                                                        ? o
                                                        : o.replace(n, '');
                                                if (r.test(c))
                                                    (a.s = isNaN(c)
                                                        ? null
                                                        : c < 0
                                                            ? -1
                                                            : 1),
                                                        (a.c = a.e = null);
                                                else {
                                                    if (
                                                        !s &&
                                                        ((c = c.replace(
                                                            t,
                                                            function(t, e, i) {
                                                                return (
                                                                    (f =
                                                                        'x' ==
                                                                        (i = i.toLowerCase())
                                                                            ? 16
                                                                            : 'b' ==
                                                                              i
                                                                                ? 2
                                                                                : 8),
                                                                    l && l != f
                                                                        ? t
                                                                        : e
                                                                );
                                                            }
                                                        )),
                                                        l &&
                                                            ((f = l),
                                                            (c = c
                                                                .replace(
                                                                    e,
                                                                    '$1'
                                                                )
                                                                .replace(
                                                                    i,
                                                                    '0.$1'
                                                                ))),
                                                        o != c)
                                                    )
                                                        return new U(c, f);
                                                    if (U.DEBUG)
                                                        throw Error(
                                                            h +
                                                                'Not a' +
                                                                (l
                                                                    ? ' base ' +
                                                                      l
                                                                    : '') +
                                                                ' number: ' +
                                                                o
                                                        );
                                                    a.c = a.e = a.s = null;
                                                }
                                            };
                                        })()),
                                        (o.absoluteValue = o.abs = function() {
                                            var t = new U(this);
                                            return t.s < 0 && (t.s = 1), t;
                                        }),
                                        (o.comparedTo = function(t, e) {
                                            return w(this, new U(t, e));
                                        }),
                                        (o.decimalPlaces = o.dp = function(
                                            t,
                                            e
                                        ) {
                                            var i,
                                                r,
                                                n,
                                                a = this;
                                            if (null != t)
                                                return (
                                                    _(t, 0, b),
                                                    null == e
                                                        ? (e = T)
                                                        : _(e, 0, 8),
                                                    H(new U(a), t + a.e + 1, e)
                                                );
                                            if (!(i = a.c)) return null;
                                            if (
                                                ((r =
                                                    ((n = i.length - 1) -
                                                        v(this.e / p)) *
                                                    p),
                                                (n = i[n]))
                                            )
                                                for (
                                                    ;
                                                    n % 10 == 0;
                                                    n /= 10, r--
                                                );
                                            return r < 0 && (r = 0), r;
                                        }),
                                        (o.dividedBy = o.div = function(t, e) {
                                            return i(this, new U(t, e), A, T);
                                        }),
                                        (o.dividedToIntegerBy = o.idiv = function(
                                            t,
                                            e
                                        ) {
                                            return i(this, new U(t, e), 0, 1);
                                        }),
                                        (o.exponentiatedBy = o.pow = function(
                                            t,
                                            e
                                        ) {
                                            var i,
                                                r,
                                                n,
                                                a,
                                                o,
                                                s,
                                                c,
                                                u = this;
                                            if (
                                                (t = new U(t)).c &&
                                                !t.isInteger()
                                            )
                                                throw Error(
                                                    h +
                                                        'Exponent not an integer: ' +
                                                        t
                                                );
                                            if (
                                                (null != e && (e = new U(e)),
                                                (a = t.e > 14),
                                                !u.c ||
                                                    !u.c[0] ||
                                                    (1 == u.c[0] &&
                                                        !u.e &&
                                                        1 == u.c.length) ||
                                                    !t.c ||
                                                    !t.c[0])
                                            )
                                                return (
                                                    (c = new U(
                                                        Math.pow(
                                                            +u.valueOf(),
                                                            a ? 2 - k(t) : +t
                                                        )
                                                    )),
                                                    e ? c.mod(e) : c
                                                );
                                            if (((o = t.s < 0), e)) {
                                                if (e.c ? !e.c[0] : !e.s)
                                                    return new U(NaN);
                                                (r =
                                                    !o &&
                                                    u.isInteger() &&
                                                    e.isInteger()) &&
                                                    (u = u.mod(e));
                                            } else {
                                                if (
                                                    t.e > 9 &&
                                                    (u.e > 0 ||
                                                        u.e < -1 ||
                                                        (0 == u.e
                                                            ? u.c[0] > 1 ||
                                                              (a &&
                                                                  u.c[1] >=
                                                                      24e7)
                                                            : u.c[0] < 8e13 ||
                                                              (a &&
                                                                  u.c[0] <=
                                                                      9999975e7)))
                                                )
                                                    return (
                                                        (n =
                                                            u.s < 0 && k(t)
                                                                ? -0
                                                                : 0),
                                                        u.e > -1 && (n = 1 / n),
                                                        new U(o ? 1 / n : n)
                                                    );
                                                B && (n = l(B / p + 2));
                                            }
                                            for (
                                                a
                                                    ? ((i = new U(0.5)),
                                                      (s = k(t)))
                                                    : (s = t % 2),
                                                    o && (t.s = 1),
                                                    c = new U(S);
                                                ;

                                            ) {
                                                if (s) {
                                                    if (!(c = c.times(u)).c)
                                                        break;
                                                    n
                                                        ? c.c.length > n &&
                                                          (c.c.length = n)
                                                        : r && (c = c.mod(e));
                                                }
                                                if (a) {
                                                    if (
                                                        (H(
                                                            (t = t.times(i)),
                                                            t.e + 1,
                                                            1
                                                        ),
                                                        !t.c[0])
                                                    )
                                                        break;
                                                    (a = t.e > 14), (s = k(t));
                                                } else {
                                                    if (!(t = f(t / 2))) break;
                                                    s = t % 2;
                                                }
                                                (u = u.times(u)),
                                                    n
                                                        ? u.c &&
                                                          u.c.length > n &&
                                                          (u.c.length = n)
                                                        : r && (u = u.mod(e));
                                            }
                                            return r
                                                ? c
                                                : (o && (c = S.div(c)),
                                                  e
                                                      ? c.mod(e)
                                                      : n
                                                          ? H(c, B, T, void 0)
                                                          : c);
                                        }),
                                        (o.integerValue = function(t) {
                                            var e = new U(this);
                                            return (
                                                null == t
                                                    ? (t = T)
                                                    : _(t, 0, 8),
                                                H(e, e.e + 1, t)
                                            );
                                        }),
                                        (o.isEqualTo = o.eq = function(t, e) {
                                            return 0 === w(this, new U(t, e));
                                        }),
                                        (o.isFinite = function() {
                                            return !!this.c;
                                        }),
                                        (o.isGreaterThan = o.gt = function(
                                            t,
                                            e
                                        ) {
                                            return w(this, new U(t, e)) > 0;
                                        }),
                                        (o.isGreaterThanOrEqualTo = o.gte = function(
                                            t,
                                            e
                                        ) {
                                            return (
                                                1 ===
                                                    (e = w(
                                                        this,
                                                        new U(t, e)
                                                    )) || 0 === e
                                            );
                                        }),
                                        (o.isInteger = function() {
                                            return (
                                                !!this.c &&
                                                v(this.e / p) >
                                                    this.c.length - 2
                                            );
                                        }),
                                        (o.isLessThan = o.lt = function(t, e) {
                                            return w(this, new U(t, e)) < 0;
                                        }),
                                        (o.isLessThanOrEqualTo = o.lte = function(
                                            t,
                                            e
                                        ) {
                                            return (
                                                -1 ===
                                                    (e = w(
                                                        this,
                                                        new U(t, e)
                                                    )) || 0 === e
                                            );
                                        }),
                                        (o.isNaN = function() {
                                            return !this.s;
                                        }),
                                        (o.isNegative = function() {
                                            return this.s < 0;
                                        }),
                                        (o.isPositive = function() {
                                            return this.s > 0;
                                        }),
                                        (o.isZero = function() {
                                            return !!this.c && 0 == this.c[0];
                                        }),
                                        (o.minus = function(t, e) {
                                            var i,
                                                r,
                                                n,
                                                a,
                                                o = this,
                                                s = o.s;
                                            if (
                                                ((e = (t = new U(t, e)).s),
                                                !s || !e)
                                            )
                                                return new U(NaN);
                                            if (s != e)
                                                return (t.s = -e), o.plus(t);
                                            var l = o.e / p,
                                                f = t.e / p,
                                                h = o.c,
                                                c = t.c;
                                            if (!l || !f) {
                                                if (!h || !c)
                                                    return h
                                                        ? ((t.s = -e), t)
                                                        : new U(c ? o : NaN);
                                                if (!h[0] || !c[0])
                                                    return c[0]
                                                        ? ((t.s = -e), t)
                                                        : new U(
                                                              h[0]
                                                                  ? o
                                                                  : 3 == T
                                                                      ? -0
                                                                      : 0
                                                          );
                                            }
                                            if (
                                                ((l = v(l)),
                                                (f = v(f)),
                                                (h = h.slice()),
                                                (s = l - f))
                                            ) {
                                                for (
                                                    (a = s < 0)
                                                        ? ((s = -s), (n = h))
                                                        : ((f = l), (n = c)),
                                                        n.reverse(),
                                                        e = s;
                                                    e--;
                                                    n.push(0)
                                                );
                                                n.reverse();
                                            } else
                                                for (
                                                    r = (a =
                                                        (s = h.length) <
                                                        (e = c.length))
                                                        ? s
                                                        : e,
                                                        s = e = 0;
                                                    e < r;
                                                    e++
                                                )
                                                    if (h[e] != c[e]) {
                                                        a = h[e] < c[e];
                                                        break;
                                                    }
                                            if (
                                                (a &&
                                                    ((n = h),
                                                    (h = c),
                                                    (c = n),
                                                    (t.s = -t.s)),
                                                (e =
                                                    (r = c.length) -
                                                    (i = h.length)) > 0)
                                            )
                                                for (; e--; h[i++] = 0);
                                            for (e = u - 1; r > s; ) {
                                                if (h[--r] < c[r]) {
                                                    for (
                                                        i = r;
                                                        i && !h[--i];
                                                        h[i] = e
                                                    );
                                                    --h[i], (h[r] += u);
                                                }
                                                h[r] -= c[r];
                                            }
                                            for (
                                                ;
                                                0 == h[0];
                                                h.splice(0, 1), --f
                                            );
                                            return h[0]
                                                ? j(t, h, f)
                                                : ((t.s = 3 == T ? -1 : 1),
                                                  (t.c = [(t.e = 0)]),
                                                  t);
                                        }),
                                        (o.modulo = o.mod = function(t, e) {
                                            var r,
                                                n,
                                                a = this;
                                            return (
                                                (t = new U(t, e)),
                                                !a.c || !t.s || (t.c && !t.c[0])
                                                    ? new U(NaN)
                                                    : !t.c || (a.c && !a.c[0])
                                                        ? new U(a)
                                                        : (9 == R
                                                              ? ((n = t.s),
                                                                (t.s = 1),
                                                                (r = i(
                                                                    a,
                                                                    t,
                                                                    0,
                                                                    3
                                                                )),
                                                                (t.s = n),
                                                                (r.s *= n))
                                                              : (r = i(
                                                                    a,
                                                                    t,
                                                                    0,
                                                                    R
                                                                )),
                                                          (t = a.minus(
                                                              r.times(t)
                                                          )).c[0] ||
                                                              1 != R ||
                                                              (t.s = a.s),
                                                          t)
                                            );
                                        }),
                                        (o.multipliedBy = o.times = function(
                                            t,
                                            e
                                        ) {
                                            var i,
                                                r,
                                                n,
                                                a,
                                                o,
                                                s,
                                                l,
                                                f,
                                                h,
                                                c,
                                                d,
                                                m,
                                                b,
                                                y,
                                                w,
                                                _ = this,
                                                x = _.c,
                                                k = (t = new U(t, e)).c;
                                            if (!(x && k && x[0] && k[0]))
                                                return (
                                                    !_.s ||
                                                    !t.s ||
                                                    (x && !x[0] && !k) ||
                                                    (k && !k[0] && !x)
                                                        ? (t.c = t.e = t.s = null)
                                                        : ((t.s *= _.s),
                                                          x && k
                                                              ? ((t.c = [0]),
                                                                (t.e = 0))
                                                              : (t.c = t.e = null)),
                                                    t
                                                );
                                            for (
                                                r = v(_.e / p) + v(t.e / p),
                                                    t.s *= _.s,
                                                    (l = x.length) <
                                                        (c = k.length) &&
                                                        ((b = x),
                                                        (x = k),
                                                        (k = b),
                                                        (n = l),
                                                        (l = c),
                                                        (c = n)),
                                                    n = l + c,
                                                    b = [];
                                                n--;
                                                b.push(0)
                                            );
                                            for (
                                                y = u, w = g, n = c;
                                                --n >= 0;

                                            ) {
                                                for (
                                                    i = 0,
                                                        d = k[n] % w,
                                                        m = (k[n] / w) | 0,
                                                        a = n + (o = l);
                                                    a > n;

                                                )
                                                    (i =
                                                        (((f =
                                                            d *
                                                                (f =
                                                                    x[--o] %
                                                                    w) +
                                                            ((s =
                                                                m * f +
                                                                (h =
                                                                    (x[o] / w) |
                                                                    0) *
                                                                    d) %
                                                                w) *
                                                                w +
                                                            b[a] +
                                                            i) /
                                                            y) |
                                                            0) +
                                                        ((s / w) | 0) +
                                                        m * h),
                                                        (b[a--] = f % y);
                                                b[a] = i;
                                            }
                                            return (
                                                i ? ++r : b.splice(0, 1),
                                                j(t, b, r)
                                            );
                                        }),
                                        (o.negated = function() {
                                            var t = new U(this);
                                            return (t.s = -t.s || null), t;
                                        }),
                                        (o.plus = function(t, e) {
                                            var i,
                                                r = this,
                                                n = r.s;
                                            if (
                                                ((e = (t = new U(t, e)).s),
                                                !n || !e)
                                            )
                                                return new U(NaN);
                                            if (n != e)
                                                return (t.s = -e), r.minus(t);
                                            var a = r.e / p,
                                                o = t.e / p,
                                                s = r.c,
                                                l = t.c;
                                            if (!a || !o) {
                                                if (!s || !l)
                                                    return new U(n / 0);
                                                if (!s[0] || !l[0])
                                                    return l[0]
                                                        ? t
                                                        : new U(
                                                              s[0] ? r : 0 * n
                                                          );
                                            }
                                            if (
                                                ((a = v(a)),
                                                (o = v(o)),
                                                (s = s.slice()),
                                                (n = a - o))
                                            ) {
                                                for (
                                                    n > 0
                                                        ? ((o = a), (i = l))
                                                        : ((n = -n), (i = s)),
                                                        i.reverse();
                                                    n--;
                                                    i.push(0)
                                                );
                                                i.reverse();
                                            }
                                            for (
                                                (n = s.length) -
                                                    (e = l.length) <
                                                    0 &&
                                                    ((i = l),
                                                    (l = s),
                                                    (s = i),
                                                    (e = n)),
                                                    n = 0;
                                                e;

                                            )
                                                (n =
                                                    ((s[--e] =
                                                        s[e] + l[e] + n) /
                                                        u) |
                                                    0),
                                                    (s[e] =
                                                        u === s[e]
                                                            ? 0
                                                            : s[e] % u);
                                            return (
                                                n && ((s = [n].concat(s)), ++o),
                                                j(t, s, o)
                                            );
                                        }),
                                        (o.precision = o.sd = function(t, e) {
                                            var i,
                                                r,
                                                n,
                                                a = this;
                                            if (null != t && t !== !!t)
                                                return (
                                                    _(t, 1, b),
                                                    null == e
                                                        ? (e = T)
                                                        : _(e, 0, 8),
                                                    H(new U(a), t, e)
                                                );
                                            if (!(i = a.c)) return null;
                                            if (
                                                ((r =
                                                    (n = i.length - 1) * p + 1),
                                                (n = i[n]))
                                            ) {
                                                for (
                                                    ;
                                                    n % 10 == 0;
                                                    n /= 10, r--
                                                );
                                                for (
                                                    n = i[0];
                                                    n >= 10;
                                                    n /= 10, r++
                                                );
                                            }
                                            return (
                                                t &&
                                                    a.e + 1 > r &&
                                                    (r = a.e + 1),
                                                r
                                            );
                                        }),
                                        (o.shiftedBy = function(t) {
                                            return (
                                                _(t, -d, d),
                                                this.times('1e' + t)
                                            );
                                        }),
                                        (o.squareRoot = o.sqrt = function() {
                                            var t,
                                                e,
                                                r,
                                                n,
                                                a,
                                                o = this,
                                                s = o.c,
                                                l = o.s,
                                                f = o.e,
                                                h = A + 4,
                                                c = new U('0.5');
                                            if (1 !== l || !s || !s[0])
                                                return new U(
                                                    !l ||
                                                    (l < 0 && (!s || s[0]))
                                                        ? NaN
                                                        : s
                                                            ? o
                                                            : 1 / 0
                                                );
                                            if (
                                                (0 == (l = Math.sqrt(+o)) ||
                                                l == 1 / 0
                                                    ? (((e = y(s)).length + f) %
                                                          2 ==
                                                          0 && (e += '0'),
                                                      (l = Math.sqrt(e)),
                                                      (f =
                                                          v((f + 1) / 2) -
                                                          (f < 0 || f % 2)),
                                                      (r = new U(
                                                          (e =
                                                              l == 1 / 0
                                                                  ? '1e' + f
                                                                  : (e = l.toExponential()).slice(
                                                                        0,
                                                                        e.indexOf(
                                                                            'e'
                                                                        ) + 1
                                                                    ) + f)
                                                      )))
                                                    : (r = new U(l + '')),
                                                r.c[0])
                                            )
                                                for (
                                                    (l = (f = r.e) + h) < 3 &&
                                                    (l = 0);
                                                    ;

                                                )
                                                    if (
                                                        ((a = r),
                                                        (r = c.times(
                                                            a.plus(
                                                                i(o, a, h, 1)
                                                            )
                                                        )),
                                                        y(a.c).slice(0, l) ===
                                                            (e = y(r.c)).slice(
                                                                0,
                                                                l
                                                            ))
                                                    ) {
                                                        if (
                                                            (r.e < f && --l,
                                                            '9999' !=
                                                                (e = e.slice(
                                                                    l - 3,
                                                                    l + 1
                                                                )) &&
                                                                (n ||
                                                                    '4999' !=
                                                                        e))
                                                        ) {
                                                            (+e &&
                                                                (+e.slice(1) ||
                                                                    '5' !=
                                                                        e.charAt(
                                                                            0
                                                                        ))) ||
                                                                (H(
                                                                    r,
                                                                    r.e + A + 2,
                                                                    1
                                                                ),
                                                                (t = !r
                                                                    .times(r)
                                                                    .eq(o)));
                                                            break;
                                                        }
                                                        if (
                                                            !n &&
                                                            (H(
                                                                a,
                                                                a.e + A + 2,
                                                                0
                                                            ),
                                                            a.times(a).eq(o))
                                                        ) {
                                                            r = a;
                                                            break;
                                                        }
                                                        (h += 4),
                                                            (l += 4),
                                                            (n = 1);
                                                    }
                                            return H(r, r.e + A + 1, T, t);
                                        }),
                                        (o.toExponential = function(t, e) {
                                            return (
                                                null != t && (_(t, 0, b), t++),
                                                N(this, t, e, 1)
                                            );
                                        }),
                                        (o.toFixed = function(t, e) {
                                            return (
                                                null != t &&
                                                    (_(t, 0, b),
                                                    (t = t + this.e + 1)),
                                                N(this, t, e)
                                            );
                                        }),
                                        (o.toFormat = function(t, e) {
                                            var i = this.toFixed(t, e);
                                            if (this.c) {
                                                var r,
                                                    n = i.split('.'),
                                                    a = +D.groupSize,
                                                    o = +D.secondaryGroupSize,
                                                    s = D.groupSeparator,
                                                    l = n[0],
                                                    f = n[1],
                                                    h = this.s < 0,
                                                    c = h ? l.slice(1) : l,
                                                    u = c.length;
                                                if (
                                                    (o &&
                                                        ((r = a),
                                                        (a = o),
                                                        (o = r),
                                                        (u -= r)),
                                                    a > 0 && u > 0)
                                                ) {
                                                    for (
                                                        r = u % a || a,
                                                            l = c.substr(0, r);
                                                        r < u;
                                                        r += a
                                                    )
                                                        l += s + c.substr(r, a);
                                                    o > 0 &&
                                                        (l += s + c.slice(r)),
                                                        h && (l = '-' + l);
                                                }
                                                i = f
                                                    ? l +
                                                      D.decimalSeparator +
                                                      ((o = +D.fractionGroupSize)
                                                          ? f.replace(
                                                                new RegExp(
                                                                    '\\d{' +
                                                                        o +
                                                                        '}\\B',
                                                                    'g'
                                                                ),
                                                                '$&' +
                                                                    D.fractionGroupSeparator
                                                            )
                                                          : f)
                                                    : l;
                                            }
                                            return i;
                                        }),
                                        (o.toFraction = function(t) {
                                            var e,
                                                r,
                                                n,
                                                a,
                                                o,
                                                s,
                                                l,
                                                f,
                                                c,
                                                u,
                                                d,
                                                g,
                                                b = this,
                                                v = b.c;
                                            if (
                                                null != t &&
                                                ((!(f = new U(t)).isInteger() &&
                                                    (f.c || 1 !== f.s)) ||
                                                    f.lt(S))
                                            )
                                                throw Error(
                                                    h +
                                                        'Argument ' +
                                                        (f.isInteger()
                                                            ? 'out of range: '
                                                            : 'not an integer: ') +
                                                        t
                                                );
                                            if (!v) return b.toString();
                                            for (
                                                r = new U(S),
                                                    u = n = new U(S),
                                                    a = c = new U(S),
                                                    g = y(v),
                                                    s = r.e =
                                                        g.length - b.e - 1,
                                                    r.c[0] =
                                                        m[
                                                            (l = s % p) < 0
                                                                ? p + l
                                                                : l
                                                        ],
                                                    t =
                                                        !t ||
                                                        f.comparedTo(r) > 0
                                                            ? s > 0
                                                                ? r
                                                                : u
                                                            : f,
                                                    l = L,
                                                    L = 1 / 0,
                                                    f = new U(g),
                                                    c.c[0] = 0;
                                                (d = i(f, r, 0, 1)),
                                                    1 !=
                                                        (o = n.plus(
                                                            d.times(a)
                                                        )).comparedTo(t);

                                            )
                                                (n = a),
                                                    (a = o),
                                                    (u = c.plus(
                                                        d.times((o = u))
                                                    )),
                                                    (c = o),
                                                    (r = f.minus(
                                                        d.times((o = r))
                                                    )),
                                                    (f = o);
                                            return (
                                                (o = i(t.minus(n), a, 0, 1)),
                                                (c = c.plus(o.times(u))),
                                                (n = n.plus(o.times(a))),
                                                (c.s = u.s = b.s),
                                                (e =
                                                    i(u, a, (s *= 2), T)
                                                        .minus(b)
                                                        .abs()
                                                        .comparedTo(
                                                            i(c, n, s, T)
                                                                .minus(b)
                                                                .abs()
                                                        ) < 1
                                                        ? [
                                                              u.toString(),
                                                              a.toString()
                                                          ]
                                                        : [
                                                              c.toString(),
                                                              n.toString()
                                                          ]),
                                                (L = l),
                                                e
                                            );
                                        }),
                                        (o.toNumber = function() {
                                            return +this;
                                        }),
                                        (o.toPrecision = function(t, e) {
                                            return (
                                                null != t && _(t, 1, b),
                                                N(this, t, e, 2)
                                            );
                                        }),
                                        (o.toString = function(t) {
                                            var e,
                                                i = this,
                                                n = i.s,
                                                a = i.e;
                                            return (
                                                null === a
                                                    ? n
                                                        ? ((e = 'Infinity'),
                                                          n < 0 &&
                                                              (e = '-' + e))
                                                        : (e = 'NaN')
                                                    : ((e = y(i.c)),
                                                      null == t
                                                          ? (e =
                                                                a <= C || a >= M
                                                                    ? E(e, a)
                                                                    : I(
                                                                          e,
                                                                          a,
                                                                          '0'
                                                                      ))
                                                          : (_(
                                                                t,
                                                                2,
                                                                z.length,
                                                                'Base'
                                                            ),
                                                            (e = r(
                                                                I(e, a, '0'),
                                                                10,
                                                                t,
                                                                n,
                                                                !0
                                                            ))),
                                                      n < 0 &&
                                                          i.c[0] &&
                                                          (e = '-' + e)),
                                                e
                                            );
                                        }),
                                        (o.valueOf = o.toJSON = function() {
                                            var t,
                                                e = this,
                                                i = e.e;
                                            return null === i
                                                ? e.toString()
                                                : ((t = y(e.c)),
                                                  (t =
                                                      i <= C || i >= M
                                                          ? E(t, i)
                                                          : I(t, i, '0')),
                                                  e.s < 0 ? '-' + t : t);
                                        }),
                                        (o._isBigNumber = !0),
                                        null != e && U.set(e),
                                        U
                                    );
                                })()).default = o.BigNumber = o),
                                    void 0 ===
                                        (n = function() {
                                            return o;
                                        }.call(r, i, r, e)) || (e.exports = n);
                            })();
                        },
                        {}
                    ],
                    8: [
                        function(t, e, i) {
                            var r = t('./lib/encoder'),
                                n = t('./lib/decoder');
                            e.exports = { encode: r, decode: n };
                        },
                        { './lib/decoder': 9, './lib/encoder': 10 }
                    ],
                    9: [
                        function(t, e, i) {
                            (function(t) {
                                function i(t, e) {
                                    if (
                                        ((this.pos = 0),
                                        (this.buffer = t),
                                        (this.is_with_alpha = !!e),
                                        (this.bottom_up = !0),
                                        (this.flag = this.buffer.toString(
                                            'utf-8',
                                            0,
                                            (this.pos += 2)
                                        )),
                                        'BM' != this.flag)
                                    )
                                        throw new Error('Invalid BMP File');
                                    this.parseHeader(), this.parseRGBA();
                                }
                                (i.prototype.parseHeader = function() {
                                    if (
                                        ((this.fileSize = this.buffer.readUInt32LE(
                                            this.pos
                                        )),
                                        (this.pos += 4),
                                        (this.reserved = this.buffer.readUInt32LE(
                                            this.pos
                                        )),
                                        (this.pos += 4),
                                        (this.offset = this.buffer.readUInt32LE(
                                            this.pos
                                        )),
                                        (this.pos += 4),
                                        (this.headerSize = this.buffer.readUInt32LE(
                                            this.pos
                                        )),
                                        (this.pos += 4),
                                        (this.width = this.buffer.readUInt32LE(
                                            this.pos
                                        )),
                                        (this.pos += 4),
                                        (this.height = this.buffer.readInt32LE(
                                            this.pos
                                        )),
                                        (this.pos += 4),
                                        (this.planes = this.buffer.readUInt16LE(
                                            this.pos
                                        )),
                                        (this.pos += 2),
                                        (this.bitPP = this.buffer.readUInt16LE(
                                            this.pos
                                        )),
                                        (this.pos += 2),
                                        (this.compress = this.buffer.readUInt32LE(
                                            this.pos
                                        )),
                                        (this.pos += 4),
                                        (this.rawSize = this.buffer.readUInt32LE(
                                            this.pos
                                        )),
                                        (this.pos += 4),
                                        (this.hr = this.buffer.readUInt32LE(
                                            this.pos
                                        )),
                                        (this.pos += 4),
                                        (this.vr = this.buffer.readUInt32LE(
                                            this.pos
                                        )),
                                        (this.pos += 4),
                                        (this.colors = this.buffer.readUInt32LE(
                                            this.pos
                                        )),
                                        (this.pos += 4),
                                        (this.importantColors = this.buffer.readUInt32LE(
                                            this.pos
                                        )),
                                        (this.pos += 4),
                                        16 === this.bitPP &&
                                            this.is_with_alpha &&
                                            (this.bitPP = 15),
                                        this.bitPP < 15)
                                    ) {
                                        var t =
                                            0 === this.colors
                                                ? 1 << this.bitPP
                                                : this.colors;
                                        this.palette = new Array(t);
                                        for (var e = 0; e < t; e++) {
                                            var i = this.buffer.readUInt8(
                                                    this.pos++
                                                ),
                                                r = this.buffer.readUInt8(
                                                    this.pos++
                                                ),
                                                n = this.buffer.readUInt8(
                                                    this.pos++
                                                ),
                                                a = this.buffer.readUInt8(
                                                    this.pos++
                                                );
                                            this.palette[e] = {
                                                red: n,
                                                green: r,
                                                blue: i,
                                                quad: a
                                            };
                                        }
                                    }
                                    this.height < 0 &&
                                        ((this.height *= -1),
                                        (this.bottom_up = !1));
                                }),
                                    (i.prototype.parseRGBA = function() {
                                        var e = 'bit' + this.bitPP,
                                            i = this.width * this.height * 4;
                                        (this.data = new t(i)), this[e]();
                                    }),
                                    (i.prototype.bit1 = function() {
                                        var t = Math.ceil(this.width / 8),
                                            e = t % 4,
                                            i =
                                                this.height >= 0
                                                    ? this.height - 1
                                                    : -this.height;
                                        for (i = this.height - 1; i >= 0; i--) {
                                            for (
                                                var r = this.bottom_up
                                                        ? i
                                                        : this.height - 1 - i,
                                                    n = 0;
                                                n < t;
                                                n++
                                            )
                                                for (
                                                    var a = this.buffer.readUInt8(
                                                            this.pos++
                                                        ),
                                                        o =
                                                            r * this.width * 4 +
                                                            8 * n * 4,
                                                        s = 0;
                                                    s < 8 &&
                                                    8 * n + s < this.width;
                                                    s++
                                                ) {
                                                    var l = this.palette[
                                                        (a >> (7 - s)) & 1
                                                    ];
                                                    (this.data[o + 4 * s] = 0),
                                                        (this.data[
                                                            o + 4 * s + 1
                                                        ] =
                                                            l.blue),
                                                        (this.data[
                                                            o + 4 * s + 2
                                                        ] =
                                                            l.green),
                                                        (this.data[
                                                            o + 4 * s + 3
                                                        ] =
                                                            l.red);
                                                }
                                            0 != e && (this.pos += 4 - e);
                                        }
                                    }),
                                    (i.prototype.bit4 = function() {
                                        if (2 == this.compress) {
                                            var t = function(t) {
                                                var i = this.palette[t];
                                                (this.data[e] = 0),
                                                    (this.data[e + 1] = i.blue),
                                                    (this.data[e + 2] =
                                                        i.green),
                                                    (this.data[e + 3] = i.red),
                                                    (e += 4);
                                            };
                                            this.data.fill(255);
                                            for (
                                                var e = 0,
                                                    i = this.bottom_up
                                                        ? this.height - 1
                                                        : 0,
                                                    r = !1;
                                                e < this.data.length;

                                            ) {
                                                var n = this.buffer.readUInt8(
                                                        this.pos++
                                                    ),
                                                    a = this.buffer.readUInt8(
                                                        this.pos++
                                                    );
                                                if (0 == n) {
                                                    if (0 == a) {
                                                        this.bottom_up
                                                            ? i--
                                                            : i++,
                                                            (e =
                                                                i *
                                                                this.width *
                                                                4),
                                                            (r = !1);
                                                        continue;
                                                    }
                                                    if (1 == a) break;
                                                    if (2 == a) {
                                                        var o = this.buffer.readUInt8(
                                                                this.pos++
                                                            ),
                                                            s = this.buffer.readUInt8(
                                                                this.pos++
                                                            );
                                                        this.bottom_up
                                                            ? (i -= s)
                                                            : (i += s),
                                                            (e +=
                                                                s *
                                                                    this.width *
                                                                    4 +
                                                                4 * o);
                                                    } else {
                                                        for (
                                                            var l = this.buffer.readUInt8(
                                                                    this.pos++
                                                                ),
                                                                f = 0;
                                                            f < a;
                                                            f++
                                                        )
                                                            t.call(
                                                                this,
                                                                r
                                                                    ? 15 & l
                                                                    : (240 &
                                                                          l) >>
                                                                      4
                                                            ),
                                                                1 & f &&
                                                                    f + 1 < a &&
                                                                    (l = this.buffer.readUInt8(
                                                                        this
                                                                            .pos++
                                                                    )),
                                                                (r = !r);
                                                        1 ==
                                                            (((a + 1) >> 1) &
                                                                1) &&
                                                            this.pos++;
                                                    }
                                                } else
                                                    for (f = 0; f < n; f++)
                                                        t.call(
                                                            this,
                                                            r
                                                                ? 15 & a
                                                                : (240 & a) >> 4
                                                        ),
                                                            (r = !r);
                                            }
                                        } else {
                                            var h = Math.ceil(this.width / 2),
                                                c = h % 4;
                                            for (
                                                s = this.height - 1;
                                                s >= 0;
                                                s--
                                            ) {
                                                var u = this.bottom_up
                                                    ? s
                                                    : this.height - 1 - s;
                                                for (o = 0; o < h; o++) {
                                                    (a = this.buffer.readUInt8(
                                                        this.pos++
                                                    )),
                                                        (e =
                                                            u * this.width * 4 +
                                                            2 * o * 4);
                                                    var p = a >> 4,
                                                        d = 15 & a,
                                                        m = this.palette[p];
                                                    if (
                                                        ((this.data[e] = 0),
                                                        (this.data[e + 1] =
                                                            m.blue),
                                                        (this.data[e + 2] =
                                                            m.green),
                                                        (this.data[e + 3] =
                                                            m.red),
                                                        2 * o + 1 >= this.width)
                                                    )
                                                        break;
                                                    (m = this.palette[d]),
                                                        (this.data[e + 4] = 0),
                                                        (this.data[e + 4 + 1] =
                                                            m.blue),
                                                        (this.data[e + 4 + 2] =
                                                            m.green),
                                                        (this.data[e + 4 + 3] =
                                                            m.red);
                                                }
                                                0 != c && (this.pos += 4 - c);
                                            }
                                        }
                                    }),
                                    (i.prototype.bit8 = function() {
                                        if (1 == this.compress) {
                                            var t = function(t) {
                                                var i = this.palette[t];
                                                (this.data[e] = 0),
                                                    (this.data[e + 1] = i.blue),
                                                    (this.data[e + 2] =
                                                        i.green),
                                                    (this.data[e + 3] = i.red),
                                                    (e += 4);
                                            };
                                            this.data.fill(255);
                                            for (
                                                var e = 0,
                                                    i = this.bottom_up
                                                        ? this.height - 1
                                                        : 0;
                                                e < this.data.length;

                                            ) {
                                                var r = this.buffer.readUInt8(
                                                        this.pos++
                                                    ),
                                                    n = this.buffer.readUInt8(
                                                        this.pos++
                                                    );
                                                if (0 == r) {
                                                    if (0 == n) {
                                                        this.bottom_up
                                                            ? i--
                                                            : i++,
                                                            (e =
                                                                i *
                                                                this.width *
                                                                4);
                                                        continue;
                                                    }
                                                    if (1 == n) break;
                                                    if (2 == n) {
                                                        var a = this.buffer.readUInt8(
                                                                this.pos++
                                                            ),
                                                            o = this.buffer.readUInt8(
                                                                this.pos++
                                                            );
                                                        this.bottom_up
                                                            ? (i -= o)
                                                            : (i += o),
                                                            (e +=
                                                                o *
                                                                    this.width *
                                                                    4 +
                                                                4 * a);
                                                    } else {
                                                        for (
                                                            var s = 0;
                                                            s < n;
                                                            s++
                                                        ) {
                                                            var l = this.buffer.readUInt8(
                                                                this.pos++
                                                            );
                                                            t.call(this, l);
                                                        }
                                                        !0 & n && this.pos++;
                                                    }
                                                } else
                                                    for (s = 0; s < r; s++)
                                                        t.call(this, n);
                                            }
                                        } else {
                                            var f = this.width % 4;
                                            for (
                                                o = this.height - 1;
                                                o >= 0;
                                                o--
                                            ) {
                                                var h = this.bottom_up
                                                    ? o
                                                    : this.height - 1 - o;
                                                for (
                                                    a = 0;
                                                    a < this.width;
                                                    a++
                                                ) {
                                                    (n = this.buffer.readUInt8(
                                                        this.pos++
                                                    )),
                                                        (e =
                                                            h * this.width * 4 +
                                                            4 * a);
                                                    if (
                                                        n < this.palette.length
                                                    ) {
                                                        var c = this.palette[n];
                                                        (this.data[e] = 0),
                                                            (this.data[e + 1] =
                                                                c.blue),
                                                            (this.data[e + 2] =
                                                                c.green),
                                                            (this.data[e + 3] =
                                                                c.red);
                                                    } else
                                                        (this.data[e] = 0),
                                                            (this.data[
                                                                e + 1
                                                            ] = 255),
                                                            (this.data[
                                                                e + 2
                                                            ] = 255),
                                                            (this.data[
                                                                e + 3
                                                            ] = 255);
                                                }
                                                0 != f && (this.pos += 4 - f);
                                            }
                                        }
                                    }),
                                    (i.prototype.bit15 = function() {
                                        for (
                                            var t = this.width % 3,
                                                e = parseInt('11111', 2),
                                                i = this.height - 1;
                                            i >= 0;
                                            i--
                                        ) {
                                            for (
                                                var r = this.bottom_up
                                                        ? i
                                                        : this.height - 1 - i,
                                                    n = 0;
                                                n < this.width;
                                                n++
                                            ) {
                                                var a = this.buffer.readUInt16LE(
                                                    this.pos
                                                );
                                                this.pos += 2;
                                                var o =
                                                        (((a & e) / e) * 255) |
                                                        0,
                                                    s =
                                                        ((((a >> 5) & e) / e) *
                                                            255) |
                                                        0,
                                                    l =
                                                        ((((a >> 10) & e) / e) *
                                                            255) |
                                                        0,
                                                    f = a >> 15 ? 255 : 0,
                                                    h =
                                                        r * this.width * 4 +
                                                        4 * n;
                                                (this.data[h] = f),
                                                    (this.data[h + 1] = o),
                                                    (this.data[h + 2] = s),
                                                    (this.data[h + 3] = l);
                                            }
                                            this.pos += t;
                                        }
                                    }),
                                    (i.prototype.bit16 = function() {
                                        var t = (this.width % 2) * 2;
                                        (this.maskRed = 31744),
                                            (this.maskGreen = 992),
                                            (this.maskBlue = 31),
                                            (this.mask0 = 0),
                                            3 == this.compress &&
                                                ((this.maskRed = this.buffer.readUInt32LE(
                                                    this.pos
                                                )),
                                                (this.pos += 4),
                                                (this.maskGreen = this.buffer.readUInt32LE(
                                                    this.pos
                                                )),
                                                (this.pos += 4),
                                                (this.maskBlue = this.buffer.readUInt32LE(
                                                    this.pos
                                                )),
                                                (this.pos += 4),
                                                (this.mask0 = this.buffer.readUInt32LE(
                                                    this.pos
                                                )),
                                                (this.pos += 4));
                                        for (
                                            var e = [0, 0, 0], i = 0;
                                            i < 16;
                                            i++
                                        )
                                            (this.maskRed >> i) & 1 && e[0]++,
                                                (this.maskGreen >> i) & 1 &&
                                                    e[1]++,
                                                (this.maskBlue >> i) & 1 &&
                                                    e[2]++;
                                        (e[1] += e[0]),
                                            (e[2] += e[1]),
                                            (e[0] = 8 - e[0]),
                                            (e[1] -= 8),
                                            (e[2] -= 8);
                                        for (
                                            var r = this.height - 1;
                                            r >= 0;
                                            r--
                                        ) {
                                            for (
                                                var n = this.bottom_up
                                                        ? r
                                                        : this.height - 1 - r,
                                                    a = 0;
                                                a < this.width;
                                                a++
                                            ) {
                                                var o = this.buffer.readUInt16LE(
                                                    this.pos
                                                );
                                                this.pos += 2;
                                                var s =
                                                        (o & this.maskBlue) <<
                                                        e[0],
                                                    l =
                                                        (o & this.maskGreen) >>
                                                        e[1],
                                                    f =
                                                        (o & this.maskRed) >>
                                                        e[2],
                                                    h =
                                                        n * this.width * 4 +
                                                        4 * a;
                                                (this.data[h] = 0),
                                                    (this.data[h + 1] = s),
                                                    (this.data[h + 2] = l),
                                                    (this.data[h + 3] = f);
                                            }
                                            this.pos += t;
                                        }
                                    }),
                                    (i.prototype.bit24 = function() {
                                        for (
                                            var t = this.height - 1;
                                            t >= 0;
                                            t--
                                        ) {
                                            for (
                                                var e = this.bottom_up
                                                        ? t
                                                        : this.height - 1 - t,
                                                    i = 0;
                                                i < this.width;
                                                i++
                                            ) {
                                                var r = this.buffer.readUInt8(
                                                        this.pos++
                                                    ),
                                                    n = this.buffer.readUInt8(
                                                        this.pos++
                                                    ),
                                                    a = this.buffer.readUInt8(
                                                        this.pos++
                                                    ),
                                                    o =
                                                        e * this.width * 4 +
                                                        4 * i;
                                                (this.data[o] = 0),
                                                    (this.data[o + 1] = r),
                                                    (this.data[o + 2] = n),
                                                    (this.data[o + 3] = a);
                                            }
                                            this.pos += this.width % 4;
                                        }
                                    }),
                                    (i.prototype.bit32 = function() {
                                        if (3 == this.compress) {
                                            (this.maskRed = this.buffer.readUInt32LE(
                                                this.pos
                                            )),
                                                (this.pos += 4),
                                                (this.maskGreen = this.buffer.readUInt32LE(
                                                    this.pos
                                                )),
                                                (this.pos += 4),
                                                (this.maskBlue = this.buffer.readUInt32LE(
                                                    this.pos
                                                )),
                                                (this.pos += 4),
                                                (this.mask0 = this.buffer.readUInt32LE(
                                                    this.pos
                                                )),
                                                (this.pos += 4);
                                            for (
                                                var t = this.height - 1;
                                                t >= 0;
                                                t--
                                            )
                                                for (
                                                    var e = this.bottom_up
                                                            ? t
                                                            : this.height -
                                                              1 -
                                                              t,
                                                        i = 0;
                                                    i < this.width;
                                                    i++
                                                ) {
                                                    var r = this.buffer.readUInt8(
                                                            this.pos++
                                                        ),
                                                        n = this.buffer.readUInt8(
                                                            this.pos++
                                                        ),
                                                        a = this.buffer.readUInt8(
                                                            this.pos++
                                                        ),
                                                        o = this.buffer.readUInt8(
                                                            this.pos++
                                                        ),
                                                        s =
                                                            e * this.width * 4 +
                                                            4 * i;
                                                    (this.data[s] = r),
                                                        (this.data[s + 1] = n),
                                                        (this.data[s + 2] = a),
                                                        (this.data[s + 3] = o);
                                                }
                                        } else
                                            for (
                                                t = this.height - 1;
                                                t >= 0;
                                                t--
                                            )
                                                for (
                                                    e = this.bottom_up
                                                        ? t
                                                        : this.height - 1 - t,
                                                        i = 0;
                                                    i < this.width;
                                                    i++
                                                ) {
                                                    (n = this.buffer.readUInt8(
                                                        this.pos++
                                                    )),
                                                        (a = this.buffer.readUInt8(
                                                            this.pos++
                                                        )),
                                                        (o = this.buffer.readUInt8(
                                                            this.pos++
                                                        )),
                                                        (r = this.buffer.readUInt8(
                                                            this.pos++
                                                        )),
                                                        (s =
                                                            e * this.width * 4 +
                                                            4 * i);
                                                    (this.data[s] = r),
                                                        (this.data[s + 1] = n),
                                                        (this.data[s + 2] = a),
                                                        (this.data[s + 3] = o);
                                                }
                                    }),
                                    (i.prototype.getData = function() {
                                        return this.data;
                                    }),
                                    (e.exports = function(t) {
                                        return new i(t);
                                    });
                            }.call(this, t('buffer').Buffer));
                        },
                        { buffer: 17 }
                    ],
                    10: [
                        function(t, e, i) {
                            (function(t) {
                                function i(t) {
                                    (this.buffer = t.data),
                                        (this.width = t.width),
                                        (this.height = t.height),
                                        (this.extraBytes = this.width % 4),
                                        (this.rgbSize =
                                            this.height *
                                            (3 * this.width + this.extraBytes)),
                                        (this.headerInfoSize = 40),
                                        (this.data = []),
                                        (this.flag = 'BM'),
                                        (this.reserved = 0),
                                        (this.offset = 54),
                                        (this.fileSize =
                                            this.rgbSize + this.offset),
                                        (this.planes = 1),
                                        (this.bitPP = 24),
                                        (this.compress = 0),
                                        (this.hr = 0),
                                        (this.vr = 0),
                                        (this.colors = 0),
                                        (this.importantColors = 0);
                                }
                                (i.prototype.encode = function() {
                                    var e = new t(this.offset + this.rgbSize);
                                    (this.pos = 0),
                                        e.write(this.flag, this.pos, 2),
                                        (this.pos += 2),
                                        e.writeUInt32LE(
                                            this.fileSize,
                                            this.pos
                                        ),
                                        (this.pos += 4),
                                        e.writeUInt32LE(
                                            this.reserved,
                                            this.pos
                                        ),
                                        (this.pos += 4),
                                        e.writeUInt32LE(this.offset, this.pos),
                                        (this.pos += 4),
                                        e.writeUInt32LE(
                                            this.headerInfoSize,
                                            this.pos
                                        ),
                                        (this.pos += 4),
                                        e.writeUInt32LE(this.width, this.pos),
                                        (this.pos += 4),
                                        e.writeInt32LE(-this.height, this.pos),
                                        (this.pos += 4),
                                        e.writeUInt16LE(this.planes, this.pos),
                                        (this.pos += 2),
                                        e.writeUInt16LE(this.bitPP, this.pos),
                                        (this.pos += 2),
                                        e.writeUInt32LE(
                                            this.compress,
                                            this.pos
                                        ),
                                        (this.pos += 4),
                                        e.writeUInt32LE(this.rgbSize, this.pos),
                                        (this.pos += 4),
                                        e.writeUInt32LE(this.hr, this.pos),
                                        (this.pos += 4),
                                        e.writeUInt32LE(this.vr, this.pos),
                                        (this.pos += 4),
                                        e.writeUInt32LE(this.colors, this.pos),
                                        (this.pos += 4),
                                        e.writeUInt32LE(
                                            this.importantColors,
                                            this.pos
                                        ),
                                        (this.pos += 4);
                                    for (
                                        var i = 0,
                                            r =
                                                3 * this.width +
                                                this.extraBytes,
                                            n = 0;
                                        n < this.height;
                                        n++
                                    ) {
                                        for (var a = 0; a < this.width; a++) {
                                            var o = this.pos + n * r + 3 * a;
                                            i++,
                                                (e[o] = this.buffer[i++]),
                                                (e[o + 1] = this.buffer[i++]),
                                                (e[o + 2] = this.buffer[i++]);
                                        }
                                        if (this.extraBytes > 0) {
                                            var s =
                                                this.pos +
                                                n * r +
                                                3 * this.width;
                                            e.fill(0, s, s + this.extraBytes);
                                        }
                                    }
                                    return e;
                                }),
                                    (e.exports = function(t, e) {
                                        return (
                                            void 0 === e && (e = 100),
                                            {
                                                data: new i(t).encode(),
                                                width: t.width,
                                                height: t.height
                                            }
                                        );
                                    });
                            }.call(this, t('buffer').Buffer));
                        },
                        { buffer: 17 }
                    ],
                    11: [function(t, e, i) {}, {}],
                    12: [
                        function(t, e, i) {
                            (function(e, r) {
                                var n = t('assert'),
                                    a = t('pako/lib/zlib/zstream'),
                                    o = t('pako/lib/zlib/deflate.js'),
                                    s = t('pako/lib/zlib/inflate.js'),
                                    l = t('pako/lib/zlib/constants');
                                for (var f in l) i[f] = l[f];
                                (i.NONE = 0),
                                    (i.DEFLATE = 1),
                                    (i.INFLATE = 2),
                                    (i.GZIP = 3),
                                    (i.GUNZIP = 4),
                                    (i.DEFLATERAW = 5),
                                    (i.INFLATERAW = 6),
                                    (i.UNZIP = 7);
                                function h(t) {
                                    if (
                                        'number' != typeof t ||
                                        t < i.DEFLATE ||
                                        t > i.UNZIP
                                    )
                                        throw new TypeError('Bad argument');
                                    (this.dictionary = null),
                                        (this.err = 0),
                                        (this.flush = 0),
                                        (this.init_done = !1),
                                        (this.level = 0),
                                        (this.memLevel = 0),
                                        (this.mode = t),
                                        (this.strategy = 0),
                                        (this.windowBits = 0),
                                        (this.write_in_progress = !1),
                                        (this.pending_close = !1),
                                        (this.gzip_id_bytes_read = 0);
                                }
                                (h.prototype.close = function() {
                                    this.write_in_progress
                                        ? (this.pending_close = !0)
                                        : ((this.pending_close = !1),
                                          n(
                                              this.init_done,
                                              'close before init'
                                          ),
                                          n(this.mode <= i.UNZIP),
                                          this.mode === i.DEFLATE ||
                                          this.mode === i.GZIP ||
                                          this.mode === i.DEFLATERAW
                                              ? o.deflateEnd(this.strm)
                                              : (this.mode !== i.INFLATE &&
                                                    this.mode !== i.GUNZIP &&
                                                    this.mode !==
                                                        i.INFLATERAW &&
                                                    this.mode !== i.UNZIP) ||
                                                s.inflateEnd(this.strm),
                                          (this.mode = i.NONE),
                                          (this.dictionary = null));
                                }),
                                    (h.prototype.write = function(
                                        t,
                                        e,
                                        i,
                                        r,
                                        n,
                                        a,
                                        o
                                    ) {
                                        return this._write(
                                            !0,
                                            t,
                                            e,
                                            i,
                                            r,
                                            n,
                                            a,
                                            o
                                        );
                                    }),
                                    (h.prototype.writeSync = function(
                                        t,
                                        e,
                                        i,
                                        r,
                                        n,
                                        a,
                                        o
                                    ) {
                                        return this._write(
                                            !1,
                                            t,
                                            e,
                                            i,
                                            r,
                                            n,
                                            a,
                                            o
                                        );
                                    }),
                                    (h.prototype._write = function(
                                        t,
                                        a,
                                        o,
                                        s,
                                        l,
                                        f,
                                        h,
                                        c
                                    ) {
                                        if (
                                            (n.equal(arguments.length, 8),
                                            n(
                                                this.init_done,
                                                'write before init'
                                            ),
                                            n(
                                                this.mode !== i.NONE,
                                                'already finalized'
                                            ),
                                            n.equal(
                                                !1,
                                                this.write_in_progress,
                                                'write already in progress'
                                            ),
                                            n.equal(
                                                !1,
                                                this.pending_close,
                                                'close is pending'
                                            ),
                                            (this.write_in_progress = !0),
                                            n.equal(
                                                !1,
                                                void 0 === a,
                                                'must provide flush value'
                                            ),
                                            (this.write_in_progress = !0),
                                            a !== i.Z_NO_FLUSH &&
                                                a !== i.Z_PARTIAL_FLUSH &&
                                                a !== i.Z_SYNC_FLUSH &&
                                                a !== i.Z_FULL_FLUSH &&
                                                a !== i.Z_FINISH &&
                                                a !== i.Z_BLOCK)
                                        )
                                            throw new Error(
                                                'Invalid flush value'
                                            );
                                        if (
                                            (null == o &&
                                                ((o = r.alloc(0)),
                                                (l = 0),
                                                (s = 0)),
                                            (this.strm.avail_in = l),
                                            (this.strm.input = o),
                                            (this.strm.next_in = s),
                                            (this.strm.avail_out = c),
                                            (this.strm.output = f),
                                            (this.strm.next_out = h),
                                            (this.flush = a),
                                            !t)
                                        )
                                            return (
                                                this._process(),
                                                this._checkError()
                                                    ? this._afterSync()
                                                    : void 0
                                            );
                                        var u = this;
                                        return (
                                            e.nextTick(function() {
                                                u._process(), u._after();
                                            }),
                                            this
                                        );
                                    }),
                                    (h.prototype._afterSync = function() {
                                        var t = this.strm.avail_out,
                                            e = this.strm.avail_in;
                                        return (
                                            (this.write_in_progress = !1),
                                            [e, t]
                                        );
                                    }),
                                    (h.prototype._process = function() {
                                        var t = null;
                                        switch (this.mode) {
                                            case i.DEFLATE:
                                            case i.GZIP:
                                            case i.DEFLATERAW:
                                                this.err = o.deflate(
                                                    this.strm,
                                                    this.flush
                                                );
                                                break;
                                            case i.UNZIP:
                                                switch (
                                                    (this.strm.avail_in > 0 &&
                                                        (t = this.strm.next_in),
                                                    this.gzip_id_bytes_read)
                                                ) {
                                                    case 0:
                                                        if (null === t) break;
                                                        if (
                                                            31 !==
                                                            this.strm.input[t]
                                                        ) {
                                                            this.mode =
                                                                i.INFLATE;
                                                            break;
                                                        }
                                                        if (
                                                            ((this.gzip_id_bytes_read = 1),
                                                            t++,
                                                            1 ===
                                                                this.strm
                                                                    .avail_in)
                                                        )
                                                            break;
                                                    case 1:
                                                        if (null === t) break;
                                                        139 ===
                                                        this.strm.input[t]
                                                            ? ((this.gzip_id_bytes_read = 2),
                                                              (this.mode =
                                                                  i.GUNZIP))
                                                            : (this.mode =
                                                                  i.INFLATE);
                                                        break;
                                                    default:
                                                        throw new Error(
                                                            'invalid number of gzip magic number bytes read'
                                                        );
                                                }
                                            case i.INFLATE:
                                            case i.GUNZIP:
                                            case i.INFLATERAW:
                                                for (
                                                    this.err = s.inflate(
                                                        this.strm,
                                                        this.flush
                                                    ),
                                                        this.err ===
                                                            i.Z_NEED_DICT &&
                                                            this.dictionary &&
                                                            ((this.err = s.inflateSetDictionary(
                                                                this.strm,
                                                                this.dictionary
                                                            )),
                                                            this.err === i.Z_OK
                                                                ? (this.err = s.inflate(
                                                                      this.strm,
                                                                      this.flush
                                                                  ))
                                                                : this.err ===
                                                                      i.Z_DATA_ERROR &&
                                                                  (this.err =
                                                                      i.Z_NEED_DICT));
                                                    this.strm.avail_in > 0 &&
                                                    this.mode === i.GUNZIP &&
                                                    this.err ===
                                                        i.Z_STREAM_END &&
                                                    0 !== this.strm.next_in[0];

                                                )
                                                    this.reset(),
                                                        (this.err = s.inflate(
                                                            this.strm,
                                                            this.flush
                                                        ));
                                                break;
                                            default:
                                                throw new Error(
                                                    'Unknown mode ' + this.mode
                                                );
                                        }
                                    }),
                                    (h.prototype._checkError = function() {
                                        switch (this.err) {
                                            case i.Z_OK:
                                            case i.Z_BUF_ERROR:
                                                if (
                                                    0 !== this.strm.avail_out &&
                                                    this.flush === i.Z_FINISH
                                                )
                                                    return (
                                                        this._error(
                                                            'unexpected end of file'
                                                        ),
                                                        !1
                                                    );
                                                break;
                                            case i.Z_STREAM_END:
                                                break;
                                            case i.Z_NEED_DICT:
                                                return (
                                                    null == this.dictionary
                                                        ? this._error(
                                                              'Missing dictionary'
                                                          )
                                                        : this._error(
                                                              'Bad dictionary'
                                                          ),
                                                    !1
                                                );
                                            default:
                                                return (
                                                    this._error('Zlib error'),
                                                    !1
                                                );
                                        }
                                        return !0;
                                    }),
                                    (h.prototype._after = function() {
                                        if (this._checkError()) {
                                            var t = this.strm.avail_out,
                                                e = this.strm.avail_in;
                                            (this.write_in_progress = !1),
                                                this.callback(e, t),
                                                this.pending_close &&
                                                    this.close();
                                        }
                                    }),
                                    (h.prototype._error = function(t) {
                                        this.strm.msg && (t = this.strm.msg),
                                            this.onerror(t, this.err),
                                            (this.write_in_progress = !1),
                                            this.pending_close && this.close();
                                    }),
                                    (h.prototype.init = function(
                                        t,
                                        e,
                                        r,
                                        a,
                                        o
                                    ) {
                                        n(
                                            4 === arguments.length ||
                                                5 === arguments.length,
                                            'init(windowBits, level, memLevel, strategy, [dictionary])'
                                        ),
                                            n(
                                                t >= 8 && t <= 15,
                                                'invalid windowBits'
                                            ),
                                            n(
                                                e >= -1 && e <= 9,
                                                'invalid compression level'
                                            ),
                                            n(
                                                r >= 1 && r <= 9,
                                                'invalid memlevel'
                                            ),
                                            n(
                                                a === i.Z_FILTERED ||
                                                    a === i.Z_HUFFMAN_ONLY ||
                                                    a === i.Z_RLE ||
                                                    a === i.Z_FIXED ||
                                                    a === i.Z_DEFAULT_STRATEGY,
                                                'invalid strategy'
                                            ),
                                            this._init(e, t, r, a, o),
                                            this._setDictionary();
                                    }),
                                    (h.prototype.params = function() {
                                        throw new Error(
                                            'deflateParams Not supported'
                                        );
                                    }),
                                    (h.prototype.reset = function() {
                                        this._reset(), this._setDictionary();
                                    }),
                                    (h.prototype._init = function(
                                        t,
                                        e,
                                        r,
                                        n,
                                        l
                                    ) {
                                        switch (
                                            ((this.level = t),
                                            (this.windowBits = e),
                                            (this.memLevel = r),
                                            (this.strategy = n),
                                            (this.flush = i.Z_NO_FLUSH),
                                            (this.err = i.Z_OK),
                                            (this.mode !== i.GZIP &&
                                                this.mode !== i.GUNZIP) ||
                                                (this.windowBits += 16),
                                            this.mode === i.UNZIP &&
                                                (this.windowBits += 32),
                                            (this.mode !== i.DEFLATERAW &&
                                                this.mode !== i.INFLATERAW) ||
                                                (this.windowBits =
                                                    -1 * this.windowBits),
                                            (this.strm = new a()),
                                            this.mode)
                                        ) {
                                            case i.DEFLATE:
                                            case i.GZIP:
                                            case i.DEFLATERAW:
                                                this.err = o.deflateInit2(
                                                    this.strm,
                                                    this.level,
                                                    i.Z_DEFLATED,
                                                    this.windowBits,
                                                    this.memLevel,
                                                    this.strategy
                                                );
                                                break;
                                            case i.INFLATE:
                                            case i.GUNZIP:
                                            case i.INFLATERAW:
                                            case i.UNZIP:
                                                this.err = s.inflateInit2(
                                                    this.strm,
                                                    this.windowBits
                                                );
                                                break;
                                            default:
                                                throw new Error(
                                                    'Unknown mode ' + this.mode
                                                );
                                        }
                                        this.err !== i.Z_OK &&
                                            this._error('Init error'),
                                            (this.dictionary = l),
                                            (this.write_in_progress = !1),
                                            (this.init_done = !0);
                                    }),
                                    (h.prototype._setDictionary = function() {
                                        if (null != this.dictionary) {
                                            switch (
                                                ((this.err = i.Z_OK), this.mode)
                                            ) {
                                                case i.DEFLATE:
                                                case i.DEFLATERAW:
                                                    this.err = o.deflateSetDictionary(
                                                        this.strm,
                                                        this.dictionary
                                                    );
                                            }
                                            this.err !== i.Z_OK &&
                                                this._error(
                                                    'Failed to set dictionary'
                                                );
                                        }
                                    }),
                                    (h.prototype._reset = function() {
                                        switch (
                                            ((this.err = i.Z_OK), this.mode)
                                        ) {
                                            case i.DEFLATE:
                                            case i.DEFLATERAW:
                                            case i.GZIP:
                                                this.err = o.deflateReset(
                                                    this.strm
                                                );
                                                break;
                                            case i.INFLATE:
                                            case i.INFLATERAW:
                                            case i.GUNZIP:
                                                this.err = s.inflateReset(
                                                    this.strm
                                                );
                                        }
                                        this.err !== i.Z_OK &&
                                            this._error(
                                                'Failed to reset stream'
                                            );
                                    }),
                                    (i.Zlib = h);
                            }.call(this, t('_process'), t('buffer').Buffer));
                        },
                        {
                            _process: 15,
                            assert: 2,
                            buffer: 17,
                            'pako/lib/zlib/constants': 59,
                            'pako/lib/zlib/deflate.js': 61,
                            'pako/lib/zlib/inflate.js': 64,
                            'pako/lib/zlib/zstream': 68
                        }
                    ],
                    13: [
                        function(t, e, i) {
                            (function(e) {
                                var r = t('buffer').Buffer,
                                    n = t('stream').Transform,
                                    a = t('./binding'),
                                    o = t('util'),
                                    s = t('assert').ok,
                                    l = t('buffer').kMaxLength,
                                    f =
                                        'Cannot create final Buffer. It would be larger than 0x' +
                                        l.toString(16) +
                                        ' bytes';
                                (a.Z_MIN_WINDOWBITS = 8),
                                    (a.Z_MAX_WINDOWBITS = 15),
                                    (a.Z_DEFAULT_WINDOWBITS = 15),
                                    (a.Z_MIN_CHUNK = 64),
                                    (a.Z_MAX_CHUNK = 1 / 0),
                                    (a.Z_DEFAULT_CHUNK = 16384),
                                    (a.Z_MIN_MEMLEVEL = 1),
                                    (a.Z_MAX_MEMLEVEL = 9),
                                    (a.Z_DEFAULT_MEMLEVEL = 8),
                                    (a.Z_MIN_LEVEL = -1),
                                    (a.Z_MAX_LEVEL = 9),
                                    (a.Z_DEFAULT_LEVEL =
                                        a.Z_DEFAULT_COMPRESSION);
                                for (
                                    var h = Object.keys(a), c = 0;
                                    c < h.length;
                                    c++
                                ) {
                                    var u = h[c];
                                    u.match(/^Z/) &&
                                        Object.defineProperty(i, u, {
                                            enumerable: !0,
                                            value: a[u],
                                            writable: !1
                                        });
                                }
                                for (
                                    var p = {
                                            Z_OK: a.Z_OK,
                                            Z_STREAM_END: a.Z_STREAM_END,
                                            Z_NEED_DICT: a.Z_NEED_DICT,
                                            Z_ERRNO: a.Z_ERRNO,
                                            Z_STREAM_ERROR: a.Z_STREAM_ERROR,
                                            Z_DATA_ERROR: a.Z_DATA_ERROR,
                                            Z_MEM_ERROR: a.Z_MEM_ERROR,
                                            Z_BUF_ERROR: a.Z_BUF_ERROR,
                                            Z_VERSION_ERROR: a.Z_VERSION_ERROR
                                        },
                                        d = Object.keys(p),
                                        m = 0;
                                    m < d.length;
                                    m++
                                ) {
                                    var g = d[m];
                                    p[p[g]] = g;
                                }
                                function b(t, e, i) {
                                    var n = [],
                                        a = 0;
                                    function o() {
                                        for (var e; null !== (e = t.read()); )
                                            n.push(e), (a += e.length);
                                        t.once('readable', o);
                                    }
                                    function s() {
                                        var e,
                                            o = null;
                                        a >= l
                                            ? (o = new RangeError(f))
                                            : (e = r.concat(n, a)),
                                            (n = []),
                                            t.close(),
                                            i(o, e);
                                    }
                                    t.on('error', function(e) {
                                        t.removeListener('end', s),
                                            t.removeListener('readable', o),
                                            i(e);
                                    }),
                                        t.on('end', s),
                                        t.end(e),
                                        o();
                                }
                                function v(t, e) {
                                    if (
                                        ('string' == typeof e &&
                                            (e = r.from(e)),
                                        !r.isBuffer(e))
                                    )
                                        throw new TypeError(
                                            'Not a string or buffer'
                                        );
                                    var i = t._finishFlushFlag;
                                    return t._processChunk(e, i);
                                }
                                function y(t) {
                                    if (!(this instanceof y)) return new y(t);
                                    A.call(this, t, a.DEFLATE);
                                }
                                function w(t) {
                                    if (!(this instanceof w)) return new w(t);
                                    A.call(this, t, a.INFLATE);
                                }
                                function _(t) {
                                    if (!(this instanceof _)) return new _(t);
                                    A.call(this, t, a.GZIP);
                                }
                                function x(t) {
                                    if (!(this instanceof x)) return new x(t);
                                    A.call(this, t, a.GUNZIP);
                                }
                                function k(t) {
                                    if (!(this instanceof k)) return new k(t);
                                    A.call(this, t, a.DEFLATERAW);
                                }
                                function E(t) {
                                    if (!(this instanceof E)) return new E(t);
                                    A.call(this, t, a.INFLATERAW);
                                }
                                function I(t) {
                                    if (!(this instanceof I)) return new I(t);
                                    A.call(this, t, a.UNZIP);
                                }
                                function S(t) {
                                    return (
                                        t === a.Z_NO_FLUSH ||
                                        t === a.Z_PARTIAL_FLUSH ||
                                        t === a.Z_SYNC_FLUSH ||
                                        t === a.Z_FULL_FLUSH ||
                                        t === a.Z_FINISH ||
                                        t === a.Z_BLOCK
                                    );
                                }
                                function A(t, e) {
                                    var o = this;
                                    if (
                                        ((this._opts = t = t || {}),
                                        (this._chunkSize =
                                            t.chunkSize || i.Z_DEFAULT_CHUNK),
                                        n.call(this, t),
                                        t.flush && !S(t.flush))
                                    )
                                        throw new Error(
                                            'Invalid flush flag: ' + t.flush
                                        );
                                    if (t.finishFlush && !S(t.finishFlush))
                                        throw new Error(
                                            'Invalid flush flag: ' +
                                                t.finishFlush
                                        );
                                    if (
                                        ((this._flushFlag =
                                            t.flush || a.Z_NO_FLUSH),
                                        (this._finishFlushFlag =
                                            void 0 !== t.finishFlush
                                                ? t.finishFlush
                                                : a.Z_FINISH),
                                        t.chunkSize &&
                                            (t.chunkSize < i.Z_MIN_CHUNK ||
                                                t.chunkSize > i.Z_MAX_CHUNK))
                                    )
                                        throw new Error(
                                            'Invalid chunk size: ' + t.chunkSize
                                        );
                                    if (
                                        t.windowBits &&
                                        (t.windowBits < i.Z_MIN_WINDOWBITS ||
                                            t.windowBits > i.Z_MAX_WINDOWBITS)
                                    )
                                        throw new Error(
                                            'Invalid windowBits: ' +
                                                t.windowBits
                                        );
                                    if (
                                        t.level &&
                                        (t.level < i.Z_MIN_LEVEL ||
                                            t.level > i.Z_MAX_LEVEL)
                                    )
                                        throw new Error(
                                            'Invalid compression level: ' +
                                                t.level
                                        );
                                    if (
                                        t.memLevel &&
                                        (t.memLevel < i.Z_MIN_MEMLEVEL ||
                                            t.memLevel > i.Z_MAX_MEMLEVEL)
                                    )
                                        throw new Error(
                                            'Invalid memLevel: ' + t.memLevel
                                        );
                                    if (
                                        t.strategy &&
                                        t.strategy != i.Z_FILTERED &&
                                        t.strategy != i.Z_HUFFMAN_ONLY &&
                                        t.strategy != i.Z_RLE &&
                                        t.strategy != i.Z_FIXED &&
                                        t.strategy != i.Z_DEFAULT_STRATEGY
                                    )
                                        throw new Error(
                                            'Invalid strategy: ' + t.strategy
                                        );
                                    if (
                                        t.dictionary &&
                                        !r.isBuffer(t.dictionary)
                                    )
                                        throw new Error(
                                            'Invalid dictionary: it should be a Buffer instance'
                                        );
                                    this._handle = new a.Zlib(e);
                                    var s = this;
                                    (this._hadError = !1),
                                        (this._handle.onerror = function(t, e) {
                                            T(s), (s._hadError = !0);
                                            var r = new Error(t);
                                            (r.errno = e),
                                                (r.code = i.codes[e]),
                                                s.emit('error', r);
                                        });
                                    var l = i.Z_DEFAULT_COMPRESSION;
                                    'number' == typeof t.level && (l = t.level);
                                    var f = i.Z_DEFAULT_STRATEGY;
                                    'number' == typeof t.strategy &&
                                        (f = t.strategy),
                                        this._handle.init(
                                            t.windowBits ||
                                                i.Z_DEFAULT_WINDOWBITS,
                                            l,
                                            t.memLevel || i.Z_DEFAULT_MEMLEVEL,
                                            f,
                                            t.dictionary
                                        ),
                                        (this._buffer = r.allocUnsafe(
                                            this._chunkSize
                                        )),
                                        (this._offset = 0),
                                        (this._level = l),
                                        (this._strategy = f),
                                        this.once('end', this.close),
                                        Object.defineProperty(this, '_closed', {
                                            get: function() {
                                                return !o._handle;
                                            },
                                            configurable: !0,
                                            enumerable: !0
                                        });
                                }
                                function T(t, i) {
                                    i && e.nextTick(i),
                                        t._handle &&
                                            (t._handle.close(),
                                            (t._handle = null));
                                }
                                function C(t) {
                                    t.emit('close');
                                }
                                Object.defineProperty(i, 'codes', {
                                    enumerable: !0,
                                    value: Object.freeze(p),
                                    writable: !1
                                }),
                                    (i.Deflate = y),
                                    (i.Inflate = w),
                                    (i.Gzip = _),
                                    (i.Gunzip = x),
                                    (i.DeflateRaw = k),
                                    (i.InflateRaw = E),
                                    (i.Unzip = I),
                                    (i.createDeflate = function(t) {
                                        return new y(t);
                                    }),
                                    (i.createInflate = function(t) {
                                        return new w(t);
                                    }),
                                    (i.createDeflateRaw = function(t) {
                                        return new k(t);
                                    }),
                                    (i.createInflateRaw = function(t) {
                                        return new E(t);
                                    }),
                                    (i.createGzip = function(t) {
                                        return new _(t);
                                    }),
                                    (i.createGunzip = function(t) {
                                        return new x(t);
                                    }),
                                    (i.createUnzip = function(t) {
                                        return new I(t);
                                    }),
                                    (i.deflate = function(t, e, i) {
                                        return (
                                            'function' == typeof e &&
                                                ((i = e), (e = {})),
                                            b(new y(e), t, i)
                                        );
                                    }),
                                    (i.deflateSync = function(t, e) {
                                        return v(new y(e), t);
                                    }),
                                    (i.gzip = function(t, e, i) {
                                        return (
                                            'function' == typeof e &&
                                                ((i = e), (e = {})),
                                            b(new _(e), t, i)
                                        );
                                    }),
                                    (i.gzipSync = function(t, e) {
                                        return v(new _(e), t);
                                    }),
                                    (i.deflateRaw = function(t, e, i) {
                                        return (
                                            'function' == typeof e &&
                                                ((i = e), (e = {})),
                                            b(new k(e), t, i)
                                        );
                                    }),
                                    (i.deflateRawSync = function(t, e) {
                                        return v(new k(e), t);
                                    }),
                                    (i.unzip = function(t, e, i) {
                                        return (
                                            'function' == typeof e &&
                                                ((i = e), (e = {})),
                                            b(new I(e), t, i)
                                        );
                                    }),
                                    (i.unzipSync = function(t, e) {
                                        return v(new I(e), t);
                                    }),
                                    (i.inflate = function(t, e, i) {
                                        return (
                                            'function' == typeof e &&
                                                ((i = e), (e = {})),
                                            b(new w(e), t, i)
                                        );
                                    }),
                                    (i.inflateSync = function(t, e) {
                                        return v(new w(e), t);
                                    }),
                                    (i.gunzip = function(t, e, i) {
                                        return (
                                            'function' == typeof e &&
                                                ((i = e), (e = {})),
                                            b(new x(e), t, i)
                                        );
                                    }),
                                    (i.gunzipSync = function(t, e) {
                                        return v(new x(e), t);
                                    }),
                                    (i.inflateRaw = function(t, e, i) {
                                        return (
                                            'function' == typeof e &&
                                                ((i = e), (e = {})),
                                            b(new E(e), t, i)
                                        );
                                    }),
                                    (i.inflateRawSync = function(t, e) {
                                        return v(new E(e), t);
                                    }),
                                    o.inherits(A, n),
                                    (A.prototype.params = function(t, r, n) {
                                        if (
                                            t < i.Z_MIN_LEVEL ||
                                            t > i.Z_MAX_LEVEL
                                        )
                                            throw new RangeError(
                                                'Invalid compression level: ' +
                                                    t
                                            );
                                        if (
                                            r != i.Z_FILTERED &&
                                            r != i.Z_HUFFMAN_ONLY &&
                                            r != i.Z_RLE &&
                                            r != i.Z_FIXED &&
                                            r != i.Z_DEFAULT_STRATEGY
                                        )
                                            throw new TypeError(
                                                'Invalid strategy: ' + r
                                            );
                                        if (
                                            this._level !== t ||
                                            this._strategy !== r
                                        ) {
                                            var o = this;
                                            this.flush(
                                                a.Z_SYNC_FLUSH,
                                                function() {
                                                    s(
                                                        o._handle,
                                                        'zlib binding closed'
                                                    ),
                                                        o._handle.params(t, r),
                                                        o._hadError ||
                                                            ((o._level = t),
                                                            (o._strategy = r),
                                                            n && n());
                                                }
                                            );
                                        } else e.nextTick(n);
                                    }),
                                    (A.prototype.reset = function() {
                                        return (
                                            s(
                                                this._handle,
                                                'zlib binding closed'
                                            ),
                                            this._handle.reset()
                                        );
                                    }),
                                    (A.prototype._flush = function(t) {
                                        this._transform(r.alloc(0), '', t);
                                    }),
                                    (A.prototype.flush = function(t, i) {
                                        var n = this,
                                            o = this._writableState;
                                        ('function' == typeof t ||
                                            (void 0 === t && !i)) &&
                                            ((i = t), (t = a.Z_FULL_FLUSH)),
                                            o.ended
                                                ? i && e.nextTick(i)
                                                : o.ending
                                                    ? i && this.once('end', i)
                                                    : o.needDrain
                                                        ? i &&
                                                          this.once(
                                                              'drain',
                                                              function() {
                                                                  return n.flush(
                                                                      t,
                                                                      i
                                                                  );
                                                              }
                                                          )
                                                        : ((this._flushFlag = t),
                                                          this.write(
                                                              r.alloc(0),
                                                              '',
                                                              i
                                                          ));
                                    }),
                                    (A.prototype.close = function(t) {
                                        T(this, t), e.nextTick(C, this);
                                    }),
                                    (A.prototype._transform = function(
                                        t,
                                        e,
                                        i
                                    ) {
                                        var n,
                                            o = this._writableState,
                                            s =
                                                (o.ending || o.ended) &&
                                                (!t || o.length === t.length);
                                        return null === t || r.isBuffer(t)
                                            ? this._handle
                                                ? (s
                                                      ? (n = this
                                                            ._finishFlushFlag)
                                                      : ((n = this._flushFlag),
                                                        t.length >= o.length &&
                                                            (this._flushFlag =
                                                                this._opts
                                                                    .flush ||
                                                                a.Z_NO_FLUSH)),
                                                  void this._processChunk(
                                                      t,
                                                      n,
                                                      i
                                                  ))
                                                : i(
                                                      new Error(
                                                          'zlib binding closed'
                                                      )
                                                  )
                                            : i(new Error('invalid input'));
                                    }),
                                    (A.prototype._processChunk = function(
                                        t,
                                        e,
                                        i
                                    ) {
                                        var n = t && t.length,
                                            a = this._chunkSize - this._offset,
                                            o = 0,
                                            h = this,
                                            c = 'function' == typeof i;
                                        if (!c) {
                                            var u,
                                                p = [],
                                                d = 0;
                                            this.on('error', function(t) {
                                                u = t;
                                            }),
                                                s(
                                                    this._handle,
                                                    'zlib binding closed'
                                                );
                                            do {
                                                var m = this._handle.writeSync(
                                                    e,
                                                    t,
                                                    o,
                                                    n,
                                                    this._buffer,
                                                    this._offset,
                                                    a
                                                );
                                            } while (
                                                !this._hadError &&
                                                v(m[0], m[1])
                                            );
                                            if (this._hadError) throw u;
                                            if (d >= l)
                                                throw (T(this),
                                                new RangeError(f));
                                            var g = r.concat(p, d);
                                            return T(this), g;
                                        }
                                        s(this._handle, 'zlib binding closed');
                                        var b = this._handle.write(
                                            e,
                                            t,
                                            o,
                                            n,
                                            this._buffer,
                                            this._offset,
                                            a
                                        );
                                        function v(l, f) {
                                            if (
                                                (this &&
                                                    ((this.buffer = null),
                                                    (this.callback = null)),
                                                !h._hadError)
                                            ) {
                                                var u = a - f;
                                                if (
                                                    (s(
                                                        u >= 0,
                                                        'have should not go down'
                                                    ),
                                                    u > 0)
                                                ) {
                                                    var m = h._buffer.slice(
                                                        h._offset,
                                                        h._offset + u
                                                    );
                                                    (h._offset += u),
                                                        c
                                                            ? h.push(m)
                                                            : (p.push(m),
                                                              (d += m.length));
                                                }
                                                if (
                                                    ((0 === f ||
                                                        h._offset >=
                                                            h._chunkSize) &&
                                                        ((a = h._chunkSize),
                                                        (h._offset = 0),
                                                        (h._buffer = r.allocUnsafe(
                                                            h._chunkSize
                                                        ))),
                                                    0 === f)
                                                ) {
                                                    if (
                                                        ((o += n - l),
                                                        (n = l),
                                                        !c)
                                                    )
                                                        return !0;
                                                    var g = h._handle.write(
                                                        e,
                                                        t,
                                                        o,
                                                        n,
                                                        h._buffer,
                                                        h._offset,
                                                        h._chunkSize
                                                    );
                                                    return (
                                                        (g.callback = v),
                                                        void (g.buffer = t)
                                                    );
                                                }
                                                if (!c) return !1;
                                                i();
                                            }
                                        }
                                        (b.buffer = t), (b.callback = v);
                                    }),
                                    o.inherits(y, A),
                                    o.inherits(w, A),
                                    o.inherits(_, A),
                                    o.inherits(x, A),
                                    o.inherits(k, A),
                                    o.inherits(E, A),
                                    o.inherits(I, A);
                            }.call(this, t('_process')));
                        },
                        {
                            './binding': 12,
                            _process: 15,
                            assert: 2,
                            buffer: 17,
                            stream: 118,
                            util: 134
                        }
                    ],
                    14: [
                        function(t, e, i) {
                            arguments[4][11][0].apply(i, arguments);
                        },
                        { dup: 11 }
                    ],
                    15: [
                        function(t, e, i) {
                            var r,
                                n,
                                a = (e.exports = {});
                            function o() {
                                throw new Error(
                                    'setTimeout has not been defined'
                                );
                            }
                            function s() {
                                throw new Error(
                                    'clearTimeout has not been defined'
                                );
                            }
                            function l(t) {
                                if (r === setTimeout) return setTimeout(t, 0);
                                if ((r === o || !r) && setTimeout)
                                    return (r = setTimeout), setTimeout(t, 0);
                                try {
                                    return r(t, 0);
                                } catch (e) {
                                    try {
                                        return r.call(null, t, 0);
                                    } catch (e) {
                                        return r.call(this, t, 0);
                                    }
                                }
                            }
                            !(function() {
                                try {
                                    r =
                                        'function' == typeof setTimeout
                                            ? setTimeout
                                            : o;
                                } catch (t) {
                                    r = o;
                                }
                                try {
                                    n =
                                        'function' == typeof clearTimeout
                                            ? clearTimeout
                                            : s;
                                } catch (t) {
                                    n = s;
                                }
                            })();
                            var f,
                                h = [],
                                c = !1,
                                u = -1;
                            function p() {
                                c &&
                                    f &&
                                    ((c = !1),
                                    f.length ? (h = f.concat(h)) : (u = -1),
                                    h.length && d());
                            }
                            function d() {
                                if (!c) {
                                    var t = l(p);
                                    c = !0;
                                    for (var e = h.length; e; ) {
                                        for (f = h, h = []; ++u < e; )
                                            f && f[u].run();
                                        (u = -1), (e = h.length);
                                    }
                                    (f = null),
                                        (c = !1),
                                        (function(t) {
                                            if (n === clearTimeout)
                                                return clearTimeout(t);
                                            if ((n === s || !n) && clearTimeout)
                                                return (
                                                    (n = clearTimeout),
                                                    clearTimeout(t)
                                                );
                                            try {
                                                n(t);
                                            } catch (e) {
                                                try {
                                                    return n.call(null, t);
                                                } catch (e) {
                                                    return n.call(this, t);
                                                }
                                            }
                                        })(t);
                                }
                            }
                            function m(t, e) {
                                (this.fun = t), (this.array = e);
                            }
                            function g() {}
                            (a.nextTick = function(t) {
                                var e = new Array(arguments.length - 1);
                                if (arguments.length > 1)
                                    for (var i = 1; i < arguments.length; i++)
                                        e[i - 1] = arguments[i];
                                h.push(new m(t, e)),
                                    1 !== h.length || c || l(d);
                            }),
                                (m.prototype.run = function() {
                                    this.fun.apply(null, this.array);
                                }),
                                (a.title = 'browser'),
                                (a.browser = !0),
                                (a.env = {}),
                                (a.argv = []),
                                (a.version = ''),
                                (a.versions = {}),
                                (a.on = g),
                                (a.addListener = g),
                                (a.once = g),
                                (a.off = g),
                                (a.removeListener = g),
                                (a.removeAllListeners = g),
                                (a.emit = g),
                                (a.prependListener = g),
                                (a.prependOnceListener = g),
                                (a.listeners = function(t) {
                                    return [];
                                }),
                                (a.binding = function(t) {
                                    throw new Error(
                                        'process.binding is not supported'
                                    );
                                }),
                                (a.cwd = function() {
                                    return '/';
                                }),
                                (a.chdir = function(t) {
                                    throw new Error(
                                        'process.chdir is not supported'
                                    );
                                }),
                                (a.umask = function() {
                                    return 0;
                                });
                        },
                        {}
                    ],
                    16: [
                        function(t, e, i) {
                            var r = t('buffer').Buffer;
                            e.exports = function(t, e) {
                                if (r.isBuffer(t) && r.isBuffer(e)) {
                                    if ('function' == typeof t.equals)
                                        return t.equals(e);
                                    if (t.length !== e.length) return !1;
                                    for (var i = 0; i < t.length; i++)
                                        if (t[i] !== e[i]) return !1;
                                    return !0;
                                }
                            };
                        },
                        { buffer: 17 }
                    ],
                    17: [
                        function(t, e, i) {
                            var r = t('base64-js'),
                                n = t('ieee754');
                            (i.Buffer = l),
                                (i.SlowBuffer = function(t) {
                                    +t != t && (t = 0);
                                    return l.alloc(+t);
                                }),
                                (i.INSPECT_MAX_BYTES = 50);
                            var o = 2147483647;
                            function s(t) {
                                if (t > o)
                                    throw new RangeError(
                                        'The value "' +
                                            t +
                                            '" is invalid for option "size"'
                                    );
                                var e = new Uint8Array(t);
                                return (e.__proto__ = l.prototype), e;
                            }
                            function l(t, e, i) {
                                if ('number' == typeof t) {
                                    if ('string' == typeof e)
                                        throw new TypeError(
                                            'The "string" argument must be of type string. Received type number'
                                        );
                                    return c(t);
                                }
                                return f(t, e, i);
                            }
                            function f(t, e, i) {
                                if ('string' == typeof t)
                                    return (function(t, e) {
                                        ('string' == typeof e && '' !== e) ||
                                            (e = 'utf8');
                                        if (!l.isEncoding(e))
                                            throw new TypeError(
                                                'Unknown encoding: ' + e
                                            );
                                        var i = 0 | d(t, e),
                                            r = s(i),
                                            n = r.write(t, e);
                                        n !== i && (r = r.slice(0, n));
                                        return r;
                                    })(t, e);
                                if (ArrayBuffer.isView(t)) return u(t);
                                if (null == t)
                                    throw TypeError(
                                        'The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' +
                                            (void 0 === t ? 'undefined' : a(t))
                                    );
                                if (
                                    j(t, ArrayBuffer) ||
                                    (t && j(t.buffer, ArrayBuffer))
                                )
                                    return (function(t, e, i) {
                                        if (e < 0 || t.byteLength < e)
                                            throw new RangeError(
                                                '"offset" is outside of buffer bounds'
                                            );
                                        if (t.byteLength < e + (i || 0))
                                            throw new RangeError(
                                                '"length" is outside of buffer bounds'
                                            );
                                        var r;
                                        r =
                                            void 0 === e && void 0 === i
                                                ? new Uint8Array(t)
                                                : void 0 === i
                                                    ? new Uint8Array(t, e)
                                                    : new Uint8Array(t, e, i);
                                        return (r.__proto__ = l.prototype), r;
                                    })(t, e, i);
                                if ('number' == typeof t)
                                    throw new TypeError(
                                        'The "value" argument must not be of type number. Received type number'
                                    );
                                var r = t.valueOf && t.valueOf();
                                if (null != r && r !== t)
                                    return l.from(r, e, i);
                                var n = (function(t) {
                                    if (l.isBuffer(t)) {
                                        var e = 0 | p(t.length),
                                            i = s(e);
                                        return 0 === i.length
                                            ? i
                                            : (t.copy(i, 0, 0, e), i);
                                    }
                                    if (void 0 !== t.length)
                                        return 'number' != typeof t.length ||
                                            H(t.length)
                                            ? s(0)
                                            : u(t);
                                    if (
                                        'Buffer' === t.type &&
                                        Array.isArray(t.data)
                                    )
                                        return u(t.data);
                                })(t);
                                if (n) return n;
                                if (
                                    'undefined' != typeof Symbol &&
                                    null != Symbol.toPrimitive &&
                                    'function' == typeof t[Symbol.toPrimitive]
                                )
                                    return l.from(
                                        t[Symbol.toPrimitive]('string'),
                                        e,
                                        i
                                    );
                                throw new TypeError(
                                    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' +
                                        (void 0 === t ? 'undefined' : a(t))
                                );
                            }
                            function h(t) {
                                if ('number' != typeof t)
                                    throw new TypeError(
                                        '"size" argument must be of type number'
                                    );
                                if (t < 0)
                                    throw new RangeError(
                                        'The value "' +
                                            t +
                                            '" is invalid for option "size"'
                                    );
                            }
                            function c(t) {
                                return h(t), s(t < 0 ? 0 : 0 | p(t));
                            }
                            function u(t) {
                                for (
                                    var e = t.length < 0 ? 0 : 0 | p(t.length),
                                        i = s(e),
                                        r = 0;
                                    r < e;
                                    r += 1
                                )
                                    i[r] = 255 & t[r];
                                return i;
                            }
                            function p(t) {
                                if (t >= o)
                                    throw new RangeError(
                                        'Attempt to allocate Buffer larger than maximum size: 0x' +
                                            o.toString(16) +
                                            ' bytes'
                                    );
                                return 0 | t;
                            }
                            function d(t, e) {
                                if (l.isBuffer(t)) return t.length;
                                if (ArrayBuffer.isView(t) || j(t, ArrayBuffer))
                                    return t.byteLength;
                                if ('string' != typeof t)
                                    throw new TypeError(
                                        'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' +
                                            (void 0 === t ? 'undefined' : a(t))
                                    );
                                var i = t.length,
                                    r =
                                        arguments.length > 2 &&
                                        !0 === arguments[2];
                                if (!r && 0 === i) return 0;
                                for (var n = !1; ; )
                                    switch (e) {
                                        case 'ascii':
                                        case 'latin1':
                                        case 'binary':
                                            return i;
                                        case 'utf8':
                                        case 'utf-8':
                                            return U(t).length;
                                        case 'ucs2':
                                        case 'ucs-2':
                                        case 'utf16le':
                                        case 'utf-16le':
                                            return 2 * i;
                                        case 'hex':
                                            return i >>> 1;
                                        case 'base64':
                                            return N(t).length;
                                        default:
                                            if (n) return r ? -1 : U(t).length;
                                            (e = ('' + e).toLowerCase()),
                                                (n = !0);
                                    }
                            }
                            function m(t, e, i) {
                                var r = t[e];
                                (t[e] = t[i]), (t[i] = r);
                            }
                            function g(t, e, i, r, n) {
                                if (0 === t.length) return -1;
                                if (
                                    ('string' == typeof i
                                        ? ((r = i), (i = 0))
                                        : i > 2147483647
                                            ? (i = 2147483647)
                                            : i < -2147483648 &&
                                              (i = -2147483648),
                                    H((i = +i)) && (i = n ? 0 : t.length - 1),
                                    i < 0 && (i = t.length + i),
                                    i >= t.length)
                                ) {
                                    if (n) return -1;
                                    i = t.length - 1;
                                } else if (i < 0) {
                                    if (!n) return -1;
                                    i = 0;
                                }
                                if (
                                    ('string' == typeof e && (e = l.from(e, r)),
                                    l.isBuffer(e))
                                )
                                    return 0 === e.length
                                        ? -1
                                        : b(t, e, i, r, n);
                                if ('number' == typeof e)
                                    return (
                                        (e &= 255),
                                        'function' ==
                                        typeof Uint8Array.prototype.indexOf
                                            ? n
                                                ? Uint8Array.prototype.indexOf.call(
                                                      t,
                                                      e,
                                                      i
                                                  )
                                                : Uint8Array.prototype.lastIndexOf.call(
                                                      t,
                                                      e,
                                                      i
                                                  )
                                            : b(t, [e], i, r, n)
                                    );
                                throw new TypeError(
                                    'val must be string, number or Buffer'
                                );
                            }
                            function b(t, e, i, r, n) {
                                var a,
                                    o = 1,
                                    s = t.length,
                                    l = e.length;
                                if (
                                    void 0 !== r &&
                                    ('ucs2' === (r = String(r).toLowerCase()) ||
                                        'ucs-2' === r ||
                                        'utf16le' === r ||
                                        'utf-16le' === r)
                                ) {
                                    if (t.length < 2 || e.length < 2) return -1;
                                    (o = 2), (s /= 2), (l /= 2), (i /= 2);
                                }
                                function f(t, e) {
                                    return 1 === o
                                        ? t[e]
                                        : t.readUInt16BE(e * o);
                                }
                                if (n) {
                                    var h = -1;
                                    for (a = i; a < s; a++)
                                        if (
                                            f(t, a) ===
                                            f(e, -1 === h ? 0 : a - h)
                                        ) {
                                            if (
                                                (-1 === h && (h = a),
                                                a - h + 1 === l)
                                            )
                                                return h * o;
                                        } else
                                            -1 !== h && (a -= a - h), (h = -1);
                                } else
                                    for (
                                        i + l > s && (i = s - l), a = i;
                                        a >= 0;
                                        a--
                                    ) {
                                        for (var c = !0, u = 0; u < l; u++)
                                            if (f(t, a + u) !== f(e, u)) {
                                                c = !1;
                                                break;
                                            }
                                        if (c) return a;
                                    }
                                return -1;
                            }
                            function v(t, e, i, r) {
                                i = Number(i) || 0;
                                var n = t.length - i;
                                r ? (r = Number(r)) > n && (r = n) : (r = n);
                                var a = e.length;
                                r > a / 2 && (r = a / 2);
                                for (var o = 0; o < r; ++o) {
                                    var s = parseInt(e.substr(2 * o, 2), 16);
                                    if (H(s)) return o;
                                    t[i + o] = s;
                                }
                                return o;
                            }
                            function y(t, e, i, r) {
                                return F(U(e, t.length - i), t, i, r);
                            }
                            function w(t, e, i, r) {
                                return F(
                                    (function(t) {
                                        for (
                                            var e = [], i = 0;
                                            i < t.length;
                                            ++i
                                        )
                                            e.push(255 & t.charCodeAt(i));
                                        return e;
                                    })(e),
                                    t,
                                    i,
                                    r
                                );
                            }
                            function _(t, e, i, r) {
                                return w(t, e, i, r);
                            }
                            function x(t, e, i, r) {
                                return F(N(e), t, i, r);
                            }
                            function k(t, e, i, r) {
                                return F(
                                    (function(t, e) {
                                        for (
                                            var i, r, n, a = [], o = 0;
                                            o < t.length && !((e -= 2) < 0);
                                            ++o
                                        )
                                            (i = t.charCodeAt(o)),
                                                (r = i >> 8),
                                                (n = i % 256),
                                                a.push(n),
                                                a.push(r);
                                        return a;
                                    })(e, t.length - i),
                                    t,
                                    i,
                                    r
                                );
                            }
                            function E(t, e, i) {
                                return 0 === e && i === t.length
                                    ? r.fromByteArray(t)
                                    : r.fromByteArray(t.slice(e, i));
                            }
                            function I(t, e, i) {
                                i = Math.min(t.length, i);
                                for (var r = [], n = e; n < i; ) {
                                    var a,
                                        o,
                                        s,
                                        l,
                                        f = t[n],
                                        h = null,
                                        c =
                                            f > 239
                                                ? 4
                                                : f > 223
                                                    ? 3
                                                    : f > 191
                                                        ? 2
                                                        : 1;
                                    if (n + c <= i)
                                        switch (c) {
                                            case 1:
                                                f < 128 && (h = f);
                                                break;
                                            case 2:
                                                128 == (192 & (a = t[n + 1])) &&
                                                    (l =
                                                        ((31 & f) << 6) |
                                                        (63 & a)) > 127 &&
                                                    (h = l);
                                                break;
                                            case 3:
                                                (a = t[n + 1]),
                                                    (o = t[n + 2]),
                                                    128 == (192 & a) &&
                                                        128 == (192 & o) &&
                                                        (l =
                                                            ((15 & f) << 12) |
                                                            ((63 & a) << 6) |
                                                            (63 & o)) > 2047 &&
                                                        (l < 55296 ||
                                                            l > 57343) &&
                                                        (h = l);
                                                break;
                                            case 4:
                                                (a = t[n + 1]),
                                                    (o = t[n + 2]),
                                                    (s = t[n + 3]),
                                                    128 == (192 & a) &&
                                                        128 == (192 & o) &&
                                                        128 == (192 & s) &&
                                                        (l =
                                                            ((15 & f) << 18) |
                                                            ((63 & a) << 12) |
                                                            ((63 & o) << 6) |
                                                            (63 & s)) > 65535 &&
                                                        l < 1114112 &&
                                                        (h = l);
                                        }
                                    null === h
                                        ? ((h = 65533), (c = 1))
                                        : h > 65535 &&
                                          ((h -= 65536),
                                          r.push(((h >>> 10) & 1023) | 55296),
                                          (h = 56320 | (1023 & h))),
                                        r.push(h),
                                        (n += c);
                                }
                                return (function(t) {
                                    var e = t.length;
                                    if (e <= S)
                                        return String.fromCharCode.apply(
                                            String,
                                            t
                                        );
                                    var i = '',
                                        r = 0;
                                    for (; r < e; )
                                        i += String.fromCharCode.apply(
                                            String,
                                            t.slice(r, (r += S))
                                        );
                                    return i;
                                })(r);
                            }
                            (i.kMaxLength = o),
                                (l.TYPED_ARRAY_SUPPORT = (function() {
                                    try {
                                        var t = new Uint8Array(1);
                                        return (
                                            (t.__proto__ = {
                                                __proto__: Uint8Array.prototype,
                                                foo: function() {
                                                    return 42;
                                                }
                                            }),
                                            42 === t.foo()
                                        );
                                    } catch (t) {
                                        return !1;
                                    }
                                })()),
                                l.TYPED_ARRAY_SUPPORT ||
                                    'undefined' == typeof console ||
                                    'function' != typeof console.error ||
                                    console.error(
                                        'This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
                                    ),
                                Object.defineProperty(l.prototype, 'parent', {
                                    enumerable: !0,
                                    get: function() {
                                        if (l.isBuffer(this))
                                            return this.buffer;
                                    }
                                }),
                                Object.defineProperty(l.prototype, 'offset', {
                                    enumerable: !0,
                                    get: function() {
                                        if (l.isBuffer(this))
                                            return this.byteOffset;
                                    }
                                }),
                                'undefined' != typeof Symbol &&
                                    null != Symbol.species &&
                                    l[Symbol.species] === l &&
                                    Object.defineProperty(l, Symbol.species, {
                                        value: null,
                                        configurable: !0,
                                        enumerable: !1,
                                        writable: !1
                                    }),
                                (l.poolSize = 8192),
                                (l.from = function(t, e, i) {
                                    return f(t, e, i);
                                }),
                                (l.prototype.__proto__ = Uint8Array.prototype),
                                (l.__proto__ = Uint8Array),
                                (l.alloc = function(t, e, i) {
                                    return (function(t, e, i) {
                                        return (
                                            h(t),
                                            t <= 0
                                                ? s(t)
                                                : void 0 !== e
                                                    ? 'string' == typeof i
                                                        ? s(t).fill(e, i)
                                                        : s(t).fill(e)
                                                    : s(t)
                                        );
                                    })(t, e, i);
                                }),
                                (l.allocUnsafe = function(t) {
                                    return c(t);
                                }),
                                (l.allocUnsafeSlow = function(t) {
                                    return c(t);
                                }),
                                (l.isBuffer = function(t) {
                                    return (
                                        null != t &&
                                        !0 === t._isBuffer &&
                                        t !== l.prototype
                                    );
                                }),
                                (l.compare = function(t, e) {
                                    if (
                                        (j(t, Uint8Array) &&
                                            (t = l.from(
                                                t,
                                                t.offset,
                                                t.byteLength
                                            )),
                                        j(e, Uint8Array) &&
                                            (e = l.from(
                                                e,
                                                e.offset,
                                                e.byteLength
                                            )),
                                        !l.isBuffer(t) || !l.isBuffer(e))
                                    )
                                        throw new TypeError(
                                            'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
                                        );
                                    if (t === e) return 0;
                                    for (
                                        var i = t.length,
                                            r = e.length,
                                            n = 0,
                                            a = Math.min(i, r);
                                        n < a;
                                        ++n
                                    )
                                        if (t[n] !== e[n]) {
                                            (i = t[n]), (r = e[n]);
                                            break;
                                        }
                                    return i < r ? -1 : r < i ? 1 : 0;
                                }),
                                (l.isEncoding = function(t) {
                                    switch (String(t).toLowerCase()) {
                                        case 'hex':
                                        case 'utf8':
                                        case 'utf-8':
                                        case 'ascii':
                                        case 'latin1':
                                        case 'binary':
                                        case 'base64':
                                        case 'ucs2':
                                        case 'ucs-2':
                                        case 'utf16le':
                                        case 'utf-16le':
                                            return !0;
                                        default:
                                            return !1;
                                    }
                                }),
                                (l.concat = function(t, e) {
                                    if (!Array.isArray(t))
                                        throw new TypeError(
                                            '"list" argument must be an Array of Buffers'
                                        );
                                    if (0 === t.length) return l.alloc(0);
                                    var i;
                                    if (void 0 === e)
                                        for (e = 0, i = 0; i < t.length; ++i)
                                            e += t[i].length;
                                    var r = l.allocUnsafe(e),
                                        n = 0;
                                    for (i = 0; i < t.length; ++i) {
                                        var a = t[i];
                                        if (
                                            (j(a, Uint8Array) &&
                                                (a = l.from(a)),
                                            !l.isBuffer(a))
                                        )
                                            throw new TypeError(
                                                '"list" argument must be an Array of Buffers'
                                            );
                                        a.copy(r, n), (n += a.length);
                                    }
                                    return r;
                                }),
                                (l.byteLength = d),
                                (l.prototype._isBuffer = !0),
                                (l.prototype.swap16 = function() {
                                    var t = this.length;
                                    if (t % 2 != 0)
                                        throw new RangeError(
                                            'Buffer size must be a multiple of 16-bits'
                                        );
                                    for (var e = 0; e < t; e += 2)
                                        m(this, e, e + 1);
                                    return this;
                                }),
                                (l.prototype.swap32 = function() {
                                    var t = this.length;
                                    if (t % 4 != 0)
                                        throw new RangeError(
                                            'Buffer size must be a multiple of 32-bits'
                                        );
                                    for (var e = 0; e < t; e += 4)
                                        m(this, e, e + 3),
                                            m(this, e + 1, e + 2);
                                    return this;
                                }),
                                (l.prototype.swap64 = function() {
                                    var t = this.length;
                                    if (t % 8 != 0)
                                        throw new RangeError(
                                            'Buffer size must be a multiple of 64-bits'
                                        );
                                    for (var e = 0; e < t; e += 8)
                                        m(this, e, e + 7),
                                            m(this, e + 1, e + 6),
                                            m(this, e + 2, e + 5),
                                            m(this, e + 3, e + 4);
                                    return this;
                                }),
                                (l.prototype.toString = function() {
                                    var t = this.length;
                                    return 0 === t
                                        ? ''
                                        : 0 === arguments.length
                                            ? I(this, 0, t)
                                            : function(t, e, i) {
                                                  var r = !1;
                                                  if (
                                                      ((void 0 === e ||
                                                          e < 0) &&
                                                          (e = 0),
                                                      e > this.length)
                                                  )
                                                      return '';
                                                  if (
                                                      ((void 0 === i ||
                                                          i > this.length) &&
                                                          (i = this.length),
                                                      i <= 0)
                                                  )
                                                      return '';
                                                  if ((i >>>= 0) <= (e >>>= 0))
                                                      return '';
                                                  for (t || (t = 'utf8'); ; )
                                                      switch (t) {
                                                          case 'hex':
                                                              return C(
                                                                  this,
                                                                  e,
                                                                  i
                                                              );
                                                          case 'utf8':
                                                          case 'utf-8':
                                                              return I(
                                                                  this,
                                                                  e,
                                                                  i
                                                              );
                                                          case 'ascii':
                                                              return A(
                                                                  this,
                                                                  e,
                                                                  i
                                                              );
                                                          case 'latin1':
                                                          case 'binary':
                                                              return T(
                                                                  this,
                                                                  e,
                                                                  i
                                                              );
                                                          case 'base64':
                                                              return E(
                                                                  this,
                                                                  e,
                                                                  i
                                                              );
                                                          case 'ucs2':
                                                          case 'ucs-2':
                                                          case 'utf16le':
                                                          case 'utf-16le':
                                                              return M(
                                                                  this,
                                                                  e,
                                                                  i
                                                              );
                                                          default:
                                                              if (r)
                                                                  throw new TypeError(
                                                                      'Unknown encoding: ' +
                                                                          t
                                                                  );
                                                              (t = (
                                                                  t + ''
                                                              ).toLowerCase()),
                                                                  (r = !0);
                                                      }
                                              }.apply(this, arguments);
                                }),
                                (l.prototype.toLocaleString =
                                    l.prototype.toString),
                                (l.prototype.equals = function(t) {
                                    if (!l.isBuffer(t))
                                        throw new TypeError(
                                            'Argument must be a Buffer'
                                        );
                                    return (
                                        this === t || 0 === l.compare(this, t)
                                    );
                                }),
                                (l.prototype.inspect = function() {
                                    var t = '',
                                        e = i.INSPECT_MAX_BYTES;
                                    return (
                                        (t = this.toString('hex', 0, e)
                                            .replace(/(.{2})/g, '$1 ')
                                            .trim()),
                                        this.length > e && (t += ' ... '),
                                        '<Buffer ' + t + '>'
                                    );
                                }),
                                (l.prototype.compare = function(t, e, i, r, n) {
                                    if (
                                        (j(t, Uint8Array) &&
                                            (t = l.from(
                                                t,
                                                t.offset,
                                                t.byteLength
                                            )),
                                        !l.isBuffer(t))
                                    )
                                        throw new TypeError(
                                            'The "target" argument must be one of type Buffer or Uint8Array. Received type ' +
                                                (void 0 === t
                                                    ? 'undefined'
                                                    : a(t))
                                        );
                                    if (
                                        (void 0 === e && (e = 0),
                                        void 0 === i && (i = t ? t.length : 0),
                                        void 0 === r && (r = 0),
                                        void 0 === n && (n = this.length),
                                        e < 0 ||
                                            i > t.length ||
                                            r < 0 ||
                                            n > this.length)
                                    )
                                        throw new RangeError(
                                            'out of range index'
                                        );
                                    if (r >= n && e >= i) return 0;
                                    if (r >= n) return -1;
                                    if (e >= i) return 1;
                                    if (
                                        ((e >>>= 0),
                                        (i >>>= 0),
                                        (r >>>= 0),
                                        (n >>>= 0),
                                        this === t)
                                    )
                                        return 0;
                                    for (
                                        var o = n - r,
                                            s = i - e,
                                            f = Math.min(o, s),
                                            h = this.slice(r, n),
                                            c = t.slice(e, i),
                                            u = 0;
                                        u < f;
                                        ++u
                                    )
                                        if (h[u] !== c[u]) {
                                            (o = h[u]), (s = c[u]);
                                            break;
                                        }
                                    return o < s ? -1 : s < o ? 1 : 0;
                                }),
                                (l.prototype.includes = function(t, e, i) {
                                    return -1 !== this.indexOf(t, e, i);
                                }),
                                (l.prototype.indexOf = function(t, e, i) {
                                    return g(this, t, e, i, !0);
                                }),
                                (l.prototype.lastIndexOf = function(t, e, i) {
                                    return g(this, t, e, i, !1);
                                }),
                                (l.prototype.write = function(t, e, i, r) {
                                    if (void 0 === e)
                                        (r = 'utf8'),
                                            (i = this.length),
                                            (e = 0);
                                    else if (
                                        void 0 === i &&
                                        'string' == typeof e
                                    )
                                        (r = e), (i = this.length), (e = 0);
                                    else {
                                        if (!isFinite(e))
                                            throw new Error(
                                                'Buffer.write(string, encoding, offset[, length]) is no longer supported'
                                            );
                                        (e >>>= 0),
                                            isFinite(i)
                                                ? ((i >>>= 0),
                                                  void 0 === r && (r = 'utf8'))
                                                : ((r = i), (i = void 0));
                                    }
                                    var n = this.length - e;
                                    if (
                                        ((void 0 === i || i > n) && (i = n),
                                        (t.length > 0 && (i < 0 || e < 0)) ||
                                            e > this.length)
                                    )
                                        throw new RangeError(
                                            'Attempt to write outside buffer bounds'
                                        );
                                    r || (r = 'utf8');
                                    for (var a = !1; ; )
                                        switch (r) {
                                            case 'hex':
                                                return v(this, t, e, i);
                                            case 'utf8':
                                            case 'utf-8':
                                                return y(this, t, e, i);
                                            case 'ascii':
                                                return w(this, t, e, i);
                                            case 'latin1':
                                            case 'binary':
                                                return _(this, t, e, i);
                                            case 'base64':
                                                return x(this, t, e, i);
                                            case 'ucs2':
                                            case 'ucs-2':
                                            case 'utf16le':
                                            case 'utf-16le':
                                                return k(this, t, e, i);
                                            default:
                                                if (a)
                                                    throw new TypeError(
                                                        'Unknown encoding: ' + r
                                                    );
                                                (r = ('' + r).toLowerCase()),
                                                    (a = !0);
                                        }
                                }),
                                (l.prototype.toJSON = function() {
                                    return {
                                        type: 'Buffer',
                                        data: Array.prototype.slice.call(
                                            this._arr || this,
                                            0
                                        )
                                    };
                                });
                            var S = 4096;
                            function A(t, e, i) {
                                var r = '';
                                i = Math.min(t.length, i);
                                for (var n = e; n < i; ++n)
                                    r += String.fromCharCode(127 & t[n]);
                                return r;
                            }
                            function T(t, e, i) {
                                var r = '';
                                i = Math.min(t.length, i);
                                for (var n = e; n < i; ++n)
                                    r += String.fromCharCode(t[n]);
                                return r;
                            }
                            function C(t, e, i) {
                                var r = t.length;
                                (!e || e < 0) && (e = 0),
                                    (!i || i < 0 || i > r) && (i = r);
                                for (var n = '', a = e; a < i; ++a)
                                    n += z(t[a]);
                                return n;
                            }
                            function M(t, e, i) {
                                for (
                                    var r = t.slice(e, i), n = '', a = 0;
                                    a < r.length;
                                    a += 2
                                )
                                    n += String.fromCharCode(
                                        r[a] + 256 * r[a + 1]
                                    );
                                return n;
                            }
                            function P(t, e, i) {
                                if (t % 1 != 0 || t < 0)
                                    throw new RangeError('offset is not uint');
                                if (t + e > i)
                                    throw new RangeError(
                                        'Trying to access beyond buffer length'
                                    );
                            }
                            function L(t, e, i, r, n, a) {
                                if (!l.isBuffer(t))
                                    throw new TypeError(
                                        '"buffer" argument must be a Buffer instance'
                                    );
                                if (e > n || e < a)
                                    throw new RangeError(
                                        '"value" argument is out of bounds'
                                    );
                                if (i + r > t.length)
                                    throw new RangeError('Index out of range');
                            }
                            function O(t, e, i, r, n, a) {
                                if (i + r > t.length)
                                    throw new RangeError('Index out of range');
                                if (i < 0)
                                    throw new RangeError('Index out of range');
                            }
                            function R(t, e, i, r, a) {
                                return (
                                    (e = +e),
                                    (i >>>= 0),
                                    a || O(t, 0, i, 4),
                                    n.write(t, e, i, r, 23, 4),
                                    i + 4
                                );
                            }
                            function B(t, e, i, r, a) {
                                return (
                                    (e = +e),
                                    (i >>>= 0),
                                    a || O(t, 0, i, 8),
                                    n.write(t, e, i, r, 52, 8),
                                    i + 8
                                );
                            }
                            (l.prototype.slice = function(t, e) {
                                var i = this.length;
                                (t = ~~t),
                                    (e = void 0 === e ? i : ~~e),
                                    t < 0
                                        ? (t += i) < 0 && (t = 0)
                                        : t > i && (t = i),
                                    e < 0
                                        ? (e += i) < 0 && (e = 0)
                                        : e > i && (e = i),
                                    e < t && (e = t);
                                var r = this.subarray(t, e);
                                return (r.__proto__ = l.prototype), r;
                            }),
                                (l.prototype.readUIntLE = function(t, e, i) {
                                    (t >>>= 0),
                                        (e >>>= 0),
                                        i || P(t, e, this.length);
                                    for (
                                        var r = this[t], n = 1, a = 0;
                                        ++a < e && (n *= 256);

                                    )
                                        r += this[t + a] * n;
                                    return r;
                                }),
                                (l.prototype.readUIntBE = function(t, e, i) {
                                    (t >>>= 0),
                                        (e >>>= 0),
                                        i || P(t, e, this.length);
                                    for (
                                        var r = this[t + --e], n = 1;
                                        e > 0 && (n *= 256);

                                    )
                                        r += this[t + --e] * n;
                                    return r;
                                }),
                                (l.prototype.readUInt8 = function(t, e) {
                                    return (
                                        (t >>>= 0),
                                        e || P(t, 1, this.length),
                                        this[t]
                                    );
                                }),
                                (l.prototype.readUInt16LE = function(t, e) {
                                    return (
                                        (t >>>= 0),
                                        e || P(t, 2, this.length),
                                        this[t] | (this[t + 1] << 8)
                                    );
                                }),
                                (l.prototype.readUInt16BE = function(t, e) {
                                    return (
                                        (t >>>= 0),
                                        e || P(t, 2, this.length),
                                        (this[t] << 8) | this[t + 1]
                                    );
                                }),
                                (l.prototype.readUInt32LE = function(t, e) {
                                    return (
                                        (t >>>= 0),
                                        e || P(t, 4, this.length),
                                        (this[t] |
                                            (this[t + 1] << 8) |
                                            (this[t + 2] << 16)) +
                                            16777216 * this[t + 3]
                                    );
                                }),
                                (l.prototype.readUInt32BE = function(t, e) {
                                    return (
                                        (t >>>= 0),
                                        e || P(t, 4, this.length),
                                        16777216 * this[t] +
                                            ((this[t + 1] << 16) |
                                                (this[t + 2] << 8) |
                                                this[t + 3])
                                    );
                                }),
                                (l.prototype.readIntLE = function(t, e, i) {
                                    (t >>>= 0),
                                        (e >>>= 0),
                                        i || P(t, e, this.length);
                                    for (
                                        var r = this[t], n = 1, a = 0;
                                        ++a < e && (n *= 256);

                                    )
                                        r += this[t + a] * n;
                                    return (
                                        r >= (n *= 128) &&
                                            (r -= Math.pow(2, 8 * e)),
                                        r
                                    );
                                }),
                                (l.prototype.readIntBE = function(t, e, i) {
                                    (t >>>= 0),
                                        (e >>>= 0),
                                        i || P(t, e, this.length);
                                    for (
                                        var r = e, n = 1, a = this[t + --r];
                                        r > 0 && (n *= 256);

                                    )
                                        a += this[t + --r] * n;
                                    return (
                                        a >= (n *= 128) &&
                                            (a -= Math.pow(2, 8 * e)),
                                        a
                                    );
                                }),
                                (l.prototype.readInt8 = function(t, e) {
                                    return (
                                        (t >>>= 0),
                                        e || P(t, 1, this.length),
                                        128 & this[t]
                                            ? -1 * (255 - this[t] + 1)
                                            : this[t]
                                    );
                                }),
                                (l.prototype.readInt16LE = function(t, e) {
                                    (t >>>= 0), e || P(t, 2, this.length);
                                    var i = this[t] | (this[t + 1] << 8);
                                    return 32768 & i ? 4294901760 | i : i;
                                }),
                                (l.prototype.readInt16BE = function(t, e) {
                                    (t >>>= 0), e || P(t, 2, this.length);
                                    var i = this[t + 1] | (this[t] << 8);
                                    return 32768 & i ? 4294901760 | i : i;
                                }),
                                (l.prototype.readInt32LE = function(t, e) {
                                    return (
                                        (t >>>= 0),
                                        e || P(t, 4, this.length),
                                        this[t] |
                                            (this[t + 1] << 8) |
                                            (this[t + 2] << 16) |
                                            (this[t + 3] << 24)
                                    );
                                }),
                                (l.prototype.readInt32BE = function(t, e) {
                                    return (
                                        (t >>>= 0),
                                        e || P(t, 4, this.length),
                                        (this[t] << 24) |
                                            (this[t + 1] << 16) |
                                            (this[t + 2] << 8) |
                                            this[t + 3]
                                    );
                                }),
                                (l.prototype.readFloatLE = function(t, e) {
                                    return (
                                        (t >>>= 0),
                                        e || P(t, 4, this.length),
                                        n.read(this, t, !0, 23, 4)
                                    );
                                }),
                                (l.prototype.readFloatBE = function(t, e) {
                                    return (
                                        (t >>>= 0),
                                        e || P(t, 4, this.length),
                                        n.read(this, t, !1, 23, 4)
                                    );
                                }),
                                (l.prototype.readDoubleLE = function(t, e) {
                                    return (
                                        (t >>>= 0),
                                        e || P(t, 8, this.length),
                                        n.read(this, t, !0, 52, 8)
                                    );
                                }),
                                (l.prototype.readDoubleBE = function(t, e) {
                                    return (
                                        (t >>>= 0),
                                        e || P(t, 8, this.length),
                                        n.read(this, t, !1, 52, 8)
                                    );
                                }),
                                (l.prototype.writeUIntLE = function(
                                    t,
                                    e,
                                    i,
                                    r
                                ) {
                                    ((t = +t), (e >>>= 0), (i >>>= 0), r) ||
                                        L(
                                            this,
                                            t,
                                            e,
                                            i,
                                            Math.pow(2, 8 * i) - 1,
                                            0
                                        );
                                    var n = 1,
                                        a = 0;
                                    for (
                                        this[e] = 255 & t;
                                        ++a < i && (n *= 256);

                                    )
                                        this[e + a] = (t / n) & 255;
                                    return e + i;
                                }),
                                (l.prototype.writeUIntBE = function(
                                    t,
                                    e,
                                    i,
                                    r
                                ) {
                                    ((t = +t), (e >>>= 0), (i >>>= 0), r) ||
                                        L(
                                            this,
                                            t,
                                            e,
                                            i,
                                            Math.pow(2, 8 * i) - 1,
                                            0
                                        );
                                    var n = i - 1,
                                        a = 1;
                                    for (
                                        this[e + n] = 255 & t;
                                        --n >= 0 && (a *= 256);

                                    )
                                        this[e + n] = (t / a) & 255;
                                    return e + i;
                                }),
                                (l.prototype.writeUInt8 = function(t, e, i) {
                                    return (
                                        (t = +t),
                                        (e >>>= 0),
                                        i || L(this, t, e, 1, 255, 0),
                                        (this[e] = 255 & t),
                                        e + 1
                                    );
                                }),
                                (l.prototype.writeUInt16LE = function(t, e, i) {
                                    return (
                                        (t = +t),
                                        (e >>>= 0),
                                        i || L(this, t, e, 2, 65535, 0),
                                        (this[e] = 255 & t),
                                        (this[e + 1] = t >>> 8),
                                        e + 2
                                    );
                                }),
                                (l.prototype.writeUInt16BE = function(t, e, i) {
                                    return (
                                        (t = +t),
                                        (e >>>= 0),
                                        i || L(this, t, e, 2, 65535, 0),
                                        (this[e] = t >>> 8),
                                        (this[e + 1] = 255 & t),
                                        e + 2
                                    );
                                }),
                                (l.prototype.writeUInt32LE = function(t, e, i) {
                                    return (
                                        (t = +t),
                                        (e >>>= 0),
                                        i || L(this, t, e, 4, 4294967295, 0),
                                        (this[e + 3] = t >>> 24),
                                        (this[e + 2] = t >>> 16),
                                        (this[e + 1] = t >>> 8),
                                        (this[e] = 255 & t),
                                        e + 4
                                    );
                                }),
                                (l.prototype.writeUInt32BE = function(t, e, i) {
                                    return (
                                        (t = +t),
                                        (e >>>= 0),
                                        i || L(this, t, e, 4, 4294967295, 0),
                                        (this[e] = t >>> 24),
                                        (this[e + 1] = t >>> 16),
                                        (this[e + 2] = t >>> 8),
                                        (this[e + 3] = 255 & t),
                                        e + 4
                                    );
                                }),
                                (l.prototype.writeIntLE = function(t, e, i, r) {
                                    if (((t = +t), (e >>>= 0), !r)) {
                                        var n = Math.pow(2, 8 * i - 1);
                                        L(this, t, e, i, n - 1, -n);
                                    }
                                    var a = 0,
                                        o = 1,
                                        s = 0;
                                    for (
                                        this[e] = 255 & t;
                                        ++a < i && (o *= 256);

                                    )
                                        t < 0 &&
                                            0 === s &&
                                            0 !== this[e + a - 1] &&
                                            (s = 1),
                                            (this[e + a] =
                                                (((t / o) >> 0) - s) & 255);
                                    return e + i;
                                }),
                                (l.prototype.writeIntBE = function(t, e, i, r) {
                                    if (((t = +t), (e >>>= 0), !r)) {
                                        var n = Math.pow(2, 8 * i - 1);
                                        L(this, t, e, i, n - 1, -n);
                                    }
                                    var a = i - 1,
                                        o = 1,
                                        s = 0;
                                    for (
                                        this[e + a] = 255 & t;
                                        --a >= 0 && (o *= 256);

                                    )
                                        t < 0 &&
                                            0 === s &&
                                            0 !== this[e + a + 1] &&
                                            (s = 1),
                                            (this[e + a] =
                                                (((t / o) >> 0) - s) & 255);
                                    return e + i;
                                }),
                                (l.prototype.writeInt8 = function(t, e, i) {
                                    return (
                                        (t = +t),
                                        (e >>>= 0),
                                        i || L(this, t, e, 1, 127, -128),
                                        t < 0 && (t = 255 + t + 1),
                                        (this[e] = 255 & t),
                                        e + 1
                                    );
                                }),
                                (l.prototype.writeInt16LE = function(t, e, i) {
                                    return (
                                        (t = +t),
                                        (e >>>= 0),
                                        i || L(this, t, e, 2, 32767, -32768),
                                        (this[e] = 255 & t),
                                        (this[e + 1] = t >>> 8),
                                        e + 2
                                    );
                                }),
                                (l.prototype.writeInt16BE = function(t, e, i) {
                                    return (
                                        (t = +t),
                                        (e >>>= 0),
                                        i || L(this, t, e, 2, 32767, -32768),
                                        (this[e] = t >>> 8),
                                        (this[e + 1] = 255 & t),
                                        e + 2
                                    );
                                }),
                                (l.prototype.writeInt32LE = function(t, e, i) {
                                    return (
                                        (t = +t),
                                        (e >>>= 0),
                                        i ||
                                            L(
                                                this,
                                                t,
                                                e,
                                                4,
                                                2147483647,
                                                -2147483648
                                            ),
                                        (this[e] = 255 & t),
                                        (this[e + 1] = t >>> 8),
                                        (this[e + 2] = t >>> 16),
                                        (this[e + 3] = t >>> 24),
                                        e + 4
                                    );
                                }),
                                (l.prototype.writeInt32BE = function(t, e, i) {
                                    return (
                                        (t = +t),
                                        (e >>>= 0),
                                        i ||
                                            L(
                                                this,
                                                t,
                                                e,
                                                4,
                                                2147483647,
                                                -2147483648
                                            ),
                                        t < 0 && (t = 4294967295 + t + 1),
                                        (this[e] = t >>> 24),
                                        (this[e + 1] = t >>> 16),
                                        (this[e + 2] = t >>> 8),
                                        (this[e + 3] = 255 & t),
                                        e + 4
                                    );
                                }),
                                (l.prototype.writeFloatLE = function(t, e, i) {
                                    return R(this, t, e, !0, i);
                                }),
                                (l.prototype.writeFloatBE = function(t, e, i) {
                                    return R(this, t, e, !1, i);
                                }),
                                (l.prototype.writeDoubleLE = function(t, e, i) {
                                    return B(this, t, e, !0, i);
                                }),
                                (l.prototype.writeDoubleBE = function(t, e, i) {
                                    return B(this, t, e, !1, i);
                                }),
                                (l.prototype.copy = function(t, e, i, r) {
                                    if (!l.isBuffer(t))
                                        throw new TypeError(
                                            'argument should be a Buffer'
                                        );
                                    if (
                                        (i || (i = 0),
                                        r || 0 === r || (r = this.length),
                                        e >= t.length && (e = t.length),
                                        e || (e = 0),
                                        r > 0 && r < i && (r = i),
                                        r === i)
                                    )
                                        return 0;
                                    if (0 === t.length || 0 === this.length)
                                        return 0;
                                    if (e < 0)
                                        throw new RangeError(
                                            'targetStart out of bounds'
                                        );
                                    if (i < 0 || i >= this.length)
                                        throw new RangeError(
                                            'Index out of range'
                                        );
                                    if (r < 0)
                                        throw new RangeError(
                                            'sourceEnd out of bounds'
                                        );
                                    r > this.length && (r = this.length),
                                        t.length - e < r - i &&
                                            (r = t.length - e + i);
                                    var n = r - i;
                                    if (
                                        this === t &&
                                        'function' ==
                                            typeof Uint8Array.prototype
                                                .copyWithin
                                    )
                                        this.copyWithin(e, i, r);
                                    else if (this === t && i < e && e < r)
                                        for (var a = n - 1; a >= 0; --a)
                                            t[a + e] = this[a + i];
                                    else
                                        Uint8Array.prototype.set.call(
                                            t,
                                            this.subarray(i, r),
                                            e
                                        );
                                    return n;
                                }),
                                (l.prototype.fill = function(t, e, i, r) {
                                    if ('string' == typeof t) {
                                        if (
                                            ('string' == typeof e
                                                ? ((r = e),
                                                  (e = 0),
                                                  (i = this.length))
                                                : 'string' == typeof i &&
                                                  ((r = i), (i = this.length)),
                                            void 0 !== r &&
                                                'string' != typeof r)
                                        )
                                            throw new TypeError(
                                                'encoding must be a string'
                                            );
                                        if (
                                            'string' == typeof r &&
                                            !l.isEncoding(r)
                                        )
                                            throw new TypeError(
                                                'Unknown encoding: ' + r
                                            );
                                        if (1 === t.length) {
                                            var n = t.charCodeAt(0);
                                            (('utf8' === r && n < 128) ||
                                                'latin1' === r) &&
                                                (t = n);
                                        }
                                    } else 'number' == typeof t && (t &= 255);
                                    if (
                                        e < 0 ||
                                        this.length < e ||
                                        this.length < i
                                    )
                                        throw new RangeError(
                                            'Out of range index'
                                        );
                                    if (i <= e) return this;
                                    var a;
                                    if (
                                        ((e >>>= 0),
                                        (i =
                                            void 0 === i
                                                ? this.length
                                                : i >>> 0),
                                        t || (t = 0),
                                        'number' == typeof t)
                                    )
                                        for (a = e; a < i; ++a) this[a] = t;
                                    else {
                                        var o = l.isBuffer(t)
                                                ? t
                                                : l.from(t, r),
                                            s = o.length;
                                        if (0 === s)
                                            throw new TypeError(
                                                'The value "' +
                                                    t +
                                                    '" is invalid for argument "value"'
                                            );
                                        for (a = 0; a < i - e; ++a)
                                            this[a + e] = o[a % s];
                                    }
                                    return this;
                                });
                            var D = /[^+/0-9A-Za-z-_]/g;
                            function z(t) {
                                return t < 16
                                    ? '0' + t.toString(16)
                                    : t.toString(16);
                            }
                            function U(t, e) {
                                var i;
                                e = e || 1 / 0;
                                for (
                                    var r = t.length, n = null, a = [], o = 0;
                                    o < r;
                                    ++o
                                ) {
                                    if (
                                        (i = t.charCodeAt(o)) > 55295 &&
                                        i < 57344
                                    ) {
                                        if (!n) {
                                            if (i > 56319) {
                                                (e -= 3) > -1 &&
                                                    a.push(239, 191, 189);
                                                continue;
                                            }
                                            if (o + 1 === r) {
                                                (e -= 3) > -1 &&
                                                    a.push(239, 191, 189);
                                                continue;
                                            }
                                            n = i;
                                            continue;
                                        }
                                        if (i < 56320) {
                                            (e -= 3) > -1 &&
                                                a.push(239, 191, 189),
                                                (n = i);
                                            continue;
                                        }
                                        i =
                                            65536 +
                                            (((n - 55296) << 10) | (i - 56320));
                                    } else
                                        n &&
                                            (e -= 3) > -1 &&
                                            a.push(239, 191, 189);
                                    if (((n = null), i < 128)) {
                                        if ((e -= 1) < 0) break;
                                        a.push(i);
                                    } else if (i < 2048) {
                                        if ((e -= 2) < 0) break;
                                        a.push((i >> 6) | 192, (63 & i) | 128);
                                    } else if (i < 65536) {
                                        if ((e -= 3) < 0) break;
                                        a.push(
                                            (i >> 12) | 224,
                                            ((i >> 6) & 63) | 128,
                                            (63 & i) | 128
                                        );
                                    } else {
                                        if (!(i < 1114112))
                                            throw new Error(
                                                'Invalid code point'
                                            );
                                        if ((e -= 4) < 0) break;
                                        a.push(
                                            (i >> 18) | 240,
                                            ((i >> 12) & 63) | 128,
                                            ((i >> 6) & 63) | 128,
                                            (63 & i) | 128
                                        );
                                    }
                                }
                                return a;
                            }
                            function N(t) {
                                return r.toByteArray(
                                    (function(t) {
                                        if (
                                            (t = (t = t.split('=')[0])
                                                .trim()
                                                .replace(D, '')).length < 2
                                        )
                                            return '';
                                        for (; t.length % 4 != 0; ) t += '=';
                                        return t;
                                    })(t)
                                );
                            }
                            function F(t, e, i, r) {
                                for (
                                    var n = 0;
                                    n < r &&
                                    !(n + i >= e.length || n >= t.length);
                                    ++n
                                )
                                    e[n + i] = t[n];
                                return n;
                            }
                            function j(t, e) {
                                return (
                                    t instanceof e ||
                                    (null != t &&
                                        null != t.constructor &&
                                        null != t.constructor.name &&
                                        t.constructor.name === e.name)
                                );
                            }
                            function H(t) {
                                return t != t;
                            }
                        },
                        { 'base64-js': 6, ieee754: 35 }
                    ],
                    18: [
                        function(t, e, i) {
                            e.exports = {
                                100: 'Continue',
                                101: 'Switching Protocols',
                                102: 'Processing',
                                200: 'OK',
                                201: 'Created',
                                202: 'Accepted',
                                203: 'Non-Authoritative Information',
                                204: 'No Content',
                                205: 'Reset Content',
                                206: 'Partial Content',
                                207: 'Multi-Status',
                                208: 'Already Reported',
                                226: 'IM Used',
                                300: 'Multiple Choices',
                                301: 'Moved Permanently',
                                302: 'Found',
                                303: 'See Other',
                                304: 'Not Modified',
                                305: 'Use Proxy',
                                307: 'Temporary Redirect',
                                308: 'Permanent Redirect',
                                400: 'Bad Request',
                                401: 'Unauthorized',
                                402: 'Payment Required',
                                403: 'Forbidden',
                                404: 'Not Found',
                                405: 'Method Not Allowed',
                                406: 'Not Acceptable',
                                407: 'Proxy Authentication Required',
                                408: 'Request Timeout',
                                409: 'Conflict',
                                410: 'Gone',
                                411: 'Length Required',
                                412: 'Precondition Failed',
                                413: 'Payload Too Large',
                                414: 'URI Too Long',
                                415: 'Unsupported Media Type',
                                416: 'Range Not Satisfiable',
                                417: 'Expectation Failed',
                                418: "I'm a teapot",
                                421: 'Misdirected Request',
                                422: 'Unprocessable Entity',
                                423: 'Locked',
                                424: 'Failed Dependency',
                                425: 'Unordered Collection',
                                426: 'Upgrade Required',
                                428: 'Precondition Required',
                                429: 'Too Many Requests',
                                431: 'Request Header Fields Too Large',
                                451: 'Unavailable For Legal Reasons',
                                500: 'Internal Server Error',
                                501: 'Not Implemented',
                                502: 'Bad Gateway',
                                503: 'Service Unavailable',
                                504: 'Gateway Timeout',
                                505: 'HTTP Version Not Supported',
                                506: 'Variant Also Negotiates',
                                507: 'Insufficient Storage',
                                508: 'Loop Detected',
                                509: 'Bandwidth Limit Exceeded',
                                510: 'Not Extended',
                                511: 'Network Authentication Required'
                            };
                        },
                        {}
                    ],
                    19: [
                        function(t, e, i) {
                            (function(t) {
                                function e(t) {
                                    return Object.prototype.toString.call(t);
                                }
                                (i.isArray = function(t) {
                                    return Array.isArray
                                        ? Array.isArray(t)
                                        : '[object Array]' === e(t);
                                }),
                                    (i.isBoolean = function(t) {
                                        return 'boolean' == typeof t;
                                    }),
                                    (i.isNull = function(t) {
                                        return null === t;
                                    }),
                                    (i.isNullOrUndefined = function(t) {
                                        return null == t;
                                    }),
                                    (i.isNumber = function(t) {
                                        return 'number' == typeof t;
                                    }),
                                    (i.isString = function(t) {
                                        return 'string' == typeof t;
                                    }),
                                    (i.isSymbol = function(t) {
                                        return (
                                            'symbol' ===
                                            (void 0 === t ? 'undefined' : a(t))
                                        );
                                    }),
                                    (i.isUndefined = function(t) {
                                        return void 0 === t;
                                    }),
                                    (i.isRegExp = function(t) {
                                        return '[object RegExp]' === e(t);
                                    }),
                                    (i.isObject = function(t) {
                                        return (
                                            'object' ===
                                                (void 0 === t
                                                    ? 'undefined'
                                                    : a(t)) && null !== t
                                        );
                                    }),
                                    (i.isDate = function(t) {
                                        return '[object Date]' === e(t);
                                    }),
                                    (i.isError = function(t) {
                                        return (
                                            '[object Error]' === e(t) ||
                                            t instanceof Error
                                        );
                                    }),
                                    (i.isFunction = function(t) {
                                        return 'function' == typeof t;
                                    }),
                                    (i.isPrimitive = function(t) {
                                        return (
                                            null === t ||
                                            'boolean' == typeof t ||
                                            'number' == typeof t ||
                                            'string' == typeof t ||
                                            'symbol' ===
                                                (void 0 === t
                                                    ? 'undefined'
                                                    : a(t)) ||
                                            void 0 === t
                                        );
                                    }),
                                    (i.isBuffer = t.isBuffer);
                            }.call(this, {
                                isBuffer: t('../../is-buffer/index.js')
                            }));
                        },
                        { '../../is-buffer/index.js': 37 }
                    ],
                    20: [
                        function(e, o, s) {
                            (function(t, l) {
                                !(function(t, e) {
                                    'object' ===
                                        (void 0 === s ? 'undefined' : a(s)) &&
                                    void 0 !== o
                                        ? (o.exports = e())
                                        : void 0 ===
                                              (n =
                                                  'function' == typeof (r = e)
                                                      ? r.call(s, i, s, o)
                                                      : r) || (o.exports = n);
                                })(0, function() {
                                    function i(t) {
                                        return 'function' == typeof t;
                                    }
                                    var r = Array.isArray
                                            ? Array.isArray
                                            : function(t) {
                                                  return (
                                                      '[object Array]' ===
                                                      Object.prototype.toString.call(
                                                          t
                                                      )
                                                  );
                                              },
                                        n = 0,
                                        o = void 0,
                                        s = void 0,
                                        h = function(t, e) {
                                            (b[n] = t),
                                                (b[n + 1] = e),
                                                2 === (n += 2) &&
                                                    (s ? s(v) : y());
                                        };
                                    var c = void 0 !== f ? f : void 0,
                                        u = c || {},
                                        p =
                                            u.MutationObserver ||
                                            u.WebKitMutationObserver,
                                        d =
                                            'undefined' == typeof self &&
                                            void 0 !== t &&
                                            '[object process]' ===
                                                {}.toString.call(t),
                                        m =
                                            'undefined' !=
                                                typeof Uint8ClampedArray &&
                                            'undefined' !=
                                                typeof importScripts &&
                                            'undefined' !=
                                                typeof MessageChannel;
                                    function g() {
                                        var t = setTimeout;
                                        return function() {
                                            return t(v, 1);
                                        };
                                    }
                                    var b = new Array(1e3);
                                    function v() {
                                        for (var t = 0; t < n; t += 2) {
                                            (0, b[t])(b[t + 1]),
                                                (b[t] = void 0),
                                                (b[t + 1] = void 0);
                                        }
                                        n = 0;
                                    }
                                    var y = void 0;
                                    function w(t, e) {
                                        var i = this,
                                            r = new this.constructor(k);
                                        void 0 === r[x] && U(r);
                                        var n = i._state;
                                        if (n) {
                                            var a = arguments[n - 1];
                                            h(function() {
                                                return D(n, r, a, i._result);
                                            });
                                        } else R(i, r, t, e);
                                        return r;
                                    }
                                    function _(t) {
                                        if (
                                            t &&
                                            'object' ===
                                                (void 0 === t
                                                    ? 'undefined'
                                                    : a(t)) &&
                                            t.constructor === this
                                        )
                                            return t;
                                        var e = new this(k);
                                        return M(e, t), e;
                                    }
                                    y = d
                                        ? function() {
                                              return t.nextTick(v);
                                          }
                                        : p
                                            ? (function() {
                                                  var t = 0,
                                                      e = new p(v),
                                                      i = document.createTextNode(
                                                          ''
                                                      );
                                                  return (
                                                      e.observe(i, {
                                                          characterData: !0
                                                      }),
                                                      function() {
                                                          i.data = t = ++t % 2;
                                                      }
                                                  );
                                              })()
                                            : m
                                                ? (function() {
                                                      var t = new MessageChannel();
                                                      return (
                                                          (t.port1.onmessage = v),
                                                          function() {
                                                              return t.port2.postMessage(
                                                                  0
                                                              );
                                                          }
                                                      );
                                                  })()
                                                : void 0 === c &&
                                                  'function' == typeof e
                                                    ? (function() {
                                                          try {
                                                              var t = Function(
                                                                  'return this'
                                                              )().require(
                                                                  'vertx'
                                                              );
                                                              return void 0 !==
                                                                  (o =
                                                                      t.runOnLoop ||
                                                                      t.runOnContext)
                                                                  ? function() {
                                                                        o(v);
                                                                    }
                                                                  : g();
                                                          } catch (t) {
                                                              return g();
                                                          }
                                                      })()
                                                    : g();
                                    var x = Math.random()
                                        .toString(36)
                                        .substring(2);
                                    function k() {}
                                    var E = void 0,
                                        I = 1,
                                        S = 2,
                                        A = { error: null };
                                    function T(t) {
                                        try {
                                            return t.then;
                                        } catch (t) {
                                            return (A.error = t), A;
                                        }
                                    }
                                    function C(t, e, r) {
                                        e.constructor === t.constructor &&
                                        r === w &&
                                        e.constructor.resolve === _
                                            ? (function(t, e) {
                                                  e._state === I
                                                      ? L(t, e._result)
                                                      : e._state === S
                                                          ? O(t, e._result)
                                                          : R(
                                                                e,
                                                                void 0,
                                                                function(e) {
                                                                    return M(
                                                                        t,
                                                                        e
                                                                    );
                                                                },
                                                                function(e) {
                                                                    return O(
                                                                        t,
                                                                        e
                                                                    );
                                                                }
                                                            );
                                              })(t, e)
                                            : r === A
                                                ? (O(t, A.error),
                                                  (A.error = null))
                                                : void 0 === r
                                                    ? L(t, e)
                                                    : i(r)
                                                        ? (function(t, e, i) {
                                                              h(function(t) {
                                                                  var r = !1,
                                                                      n = (function(
                                                                          t,
                                                                          e,
                                                                          i,
                                                                          r
                                                                      ) {
                                                                          try {
                                                                              t.call(
                                                                                  e,
                                                                                  i,
                                                                                  r
                                                                              );
                                                                          } catch (t) {
                                                                              return t;
                                                                          }
                                                                      })(
                                                                          i,
                                                                          e,
                                                                          function(
                                                                              i
                                                                          ) {
                                                                              r ||
                                                                                  ((r = !0),
                                                                                  e !==
                                                                                  i
                                                                                      ? M(
                                                                                            t,
                                                                                            i
                                                                                        )
                                                                                      : L(
                                                                                            t,
                                                                                            i
                                                                                        ));
                                                                          },
                                                                          function(
                                                                              e
                                                                          ) {
                                                                              r ||
                                                                                  ((r = !0),
                                                                                  O(
                                                                                      t,
                                                                                      e
                                                                                  ));
                                                                          },
                                                                          t._label
                                                                      );
                                                                  !r &&
                                                                      n &&
                                                                      ((r = !0),
                                                                      O(t, n));
                                                              }, t);
                                                          })(t, e, r)
                                                        : L(t, e);
                                    }
                                    function M(t, e) {
                                        t === e
                                            ? O(
                                                  t,
                                                  new TypeError(
                                                      'You cannot resolve a promise with itself'
                                                  )
                                              )
                                            : !(function(t) {
                                                  var e =
                                                      void 0 === t
                                                          ? 'undefined'
                                                          : a(t);
                                                  return (
                                                      null !== t &&
                                                      ('object' === e ||
                                                          'function' === e)
                                                  );
                                              })(e)
                                                ? L(t, e)
                                                : C(t, e, T(e));
                                    }
                                    function P(t) {
                                        t._onerror && t._onerror(t._result),
                                            B(t);
                                    }
                                    function L(t, e) {
                                        t._state === E &&
                                            ((t._result = e),
                                            (t._state = I),
                                            0 !== t._subscribers.length &&
                                                h(B, t));
                                    }
                                    function O(t, e) {
                                        t._state === E &&
                                            ((t._state = S),
                                            (t._result = e),
                                            h(P, t));
                                    }
                                    function R(t, e, i, r) {
                                        var n = t._subscribers,
                                            a = n.length;
                                        (t._onerror = null),
                                            (n[a] = e),
                                            (n[a + I] = i),
                                            (n[a + S] = r),
                                            0 === a && t._state && h(B, t);
                                    }
                                    function B(t) {
                                        var e = t._subscribers,
                                            i = t._state;
                                        if (0 !== e.length) {
                                            for (
                                                var r = void 0,
                                                    n = void 0,
                                                    a = t._result,
                                                    o = 0;
                                                o < e.length;
                                                o += 3
                                            )
                                                (r = e[o]),
                                                    (n = e[o + i]),
                                                    r ? D(i, r, n, a) : n(a);
                                            t._subscribers.length = 0;
                                        }
                                    }
                                    function D(t, e, r, n) {
                                        var a = i(r),
                                            o = void 0,
                                            s = void 0,
                                            l = void 0,
                                            f = void 0;
                                        if (a) {
                                            if (
                                                ((o = (function(t, e) {
                                                    try {
                                                        return t(e);
                                                    } catch (t) {
                                                        return (A.error = t), A;
                                                    }
                                                })(r, n)) === A
                                                    ? ((f = !0),
                                                      (s = o.error),
                                                      (o.error = null))
                                                    : (l = !0),
                                                e === o)
                                            )
                                                return void O(
                                                    e,
                                                    new TypeError(
                                                        'A promises callback cannot return that same promise.'
                                                    )
                                                );
                                        } else (o = n), (l = !0);
                                        e._state !== E ||
                                            (a && l
                                                ? M(e, o)
                                                : f
                                                    ? O(e, s)
                                                    : t === I
                                                        ? L(e, o)
                                                        : t === S && O(e, o));
                                    }
                                    var z = 0;
                                    function U(t) {
                                        (t[x] = z++),
                                            (t._state = void 0),
                                            (t._result = void 0),
                                            (t._subscribers = []);
                                    }
                                    var N = (function() {
                                        function t(t, e) {
                                            (this._instanceConstructor = t),
                                                (this.promise = new t(k)),
                                                this.promise[x] ||
                                                    U(this.promise),
                                                r(e)
                                                    ? ((this.length = e.length),
                                                      (this._remaining =
                                                          e.length),
                                                      (this._result = new Array(
                                                          this.length
                                                      )),
                                                      0 === this.length
                                                          ? L(
                                                                this.promise,
                                                                this._result
                                                            )
                                                          : ((this.length =
                                                                this.length ||
                                                                0),
                                                            this._enumerate(e),
                                                            0 ===
                                                                this
                                                                    ._remaining &&
                                                                L(
                                                                    this
                                                                        .promise,
                                                                    this._result
                                                                )))
                                                    : O(
                                                          this.promise,
                                                          new Error(
                                                              'Array Methods must be provided an Array'
                                                          )
                                                      );
                                        }
                                        return (
                                            (t.prototype._enumerate = function(
                                                t
                                            ) {
                                                for (
                                                    var e = 0;
                                                    this._state === E &&
                                                    e < t.length;
                                                    e++
                                                )
                                                    this._eachEntry(t[e], e);
                                            }),
                                            (t.prototype._eachEntry = function(
                                                t,
                                                e
                                            ) {
                                                var i = this
                                                        ._instanceConstructor,
                                                    r = i.resolve;
                                                if (r === _) {
                                                    var n = T(t);
                                                    if (
                                                        n === w &&
                                                        t._state !== E
                                                    )
                                                        this._settledAt(
                                                            t._state,
                                                            e,
                                                            t._result
                                                        );
                                                    else if (
                                                        'function' != typeof n
                                                    )
                                                        this._remaining--,
                                                            (this._result[
                                                                e
                                                            ] = t);
                                                    else if (i === F) {
                                                        var a = new i(k);
                                                        C(a, t, n),
                                                            this._willSettleAt(
                                                                a,
                                                                e
                                                            );
                                                    } else
                                                        this._willSettleAt(
                                                            new i(function(e) {
                                                                return e(t);
                                                            }),
                                                            e
                                                        );
                                                } else
                                                    this._willSettleAt(r(t), e);
                                            }),
                                            (t.prototype._settledAt = function(
                                                t,
                                                e,
                                                i
                                            ) {
                                                var r = this.promise;
                                                r._state === E &&
                                                    (this._remaining--,
                                                    t === S
                                                        ? O(r, i)
                                                        : (this._result[
                                                              e
                                                          ] = i)),
                                                    0 === this._remaining &&
                                                        L(r, this._result);
                                            }),
                                            (t.prototype._willSettleAt = function(
                                                t,
                                                e
                                            ) {
                                                var i = this;
                                                R(
                                                    t,
                                                    void 0,
                                                    function(t) {
                                                        return i._settledAt(
                                                            I,
                                                            e,
                                                            t
                                                        );
                                                    },
                                                    function(t) {
                                                        return i._settledAt(
                                                            S,
                                                            e,
                                                            t
                                                        );
                                                    }
                                                );
                                            }),
                                            t
                                        );
                                    })();
                                    var F = (function() {
                                        function t(e) {
                                            (this[x] = z++),
                                                (this._result = this._state = void 0),
                                                (this._subscribers = []),
                                                k !== e &&
                                                    ('function' != typeof e &&
                                                        (function() {
                                                            throw new TypeError(
                                                                'You must pass a resolver function as the first argument to the promise constructor'
                                                            );
                                                        })(),
                                                    this instanceof t
                                                        ? (function(t, e) {
                                                              try {
                                                                  e(
                                                                      function(
                                                                          e
                                                                      ) {
                                                                          M(
                                                                              t,
                                                                              e
                                                                          );
                                                                      },
                                                                      function(
                                                                          e
                                                                      ) {
                                                                          O(
                                                                              t,
                                                                              e
                                                                          );
                                                                      }
                                                                  );
                                                              } catch (e) {
                                                                  O(t, e);
                                                              }
                                                          })(this, e)
                                                        : (function() {
                                                              throw new TypeError(
                                                                  "Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function."
                                                              );
                                                          })());
                                        }
                                        return (
                                            (t.prototype.catch = function(t) {
                                                return this.then(null, t);
                                            }),
                                            (t.prototype.finally = function(t) {
                                                var e = this.constructor;
                                                return this.then(
                                                    function(i) {
                                                        return e
                                                            .resolve(t())
                                                            .then(function() {
                                                                return i;
                                                            });
                                                    },
                                                    function(i) {
                                                        return e
                                                            .resolve(t())
                                                            .then(function() {
                                                                throw i;
                                                            });
                                                    }
                                                );
                                            }),
                                            t
                                        );
                                    })();
                                    return (
                                        (F.prototype.then = w),
                                        (F.all = function(t) {
                                            return new N(this, t).promise;
                                        }),
                                        (F.race = function(t) {
                                            var e = this;
                                            return r(t)
                                                ? new e(function(i, r) {
                                                      for (
                                                          var n = t.length,
                                                              a = 0;
                                                          a < n;
                                                          a++
                                                      )
                                                          e.resolve(t[a]).then(
                                                              i,
                                                              r
                                                          );
                                                  })
                                                : new e(function(t, e) {
                                                      return e(
                                                          new TypeError(
                                                              'You must pass an array to race.'
                                                          )
                                                      );
                                                  });
                                        }),
                                        (F.resolve = _),
                                        (F.reject = function(t) {
                                            var e = new this(k);
                                            return O(e, t), e;
                                        }),
                                        (F._setScheduler = function(t) {
                                            s = t;
                                        }),
                                        (F._setAsap = function(t) {
                                            h = t;
                                        }),
                                        (F._asap = h),
                                        (F.polyfill = function() {
                                            var t = void 0;
                                            if (void 0 !== l) t = l;
                                            else if ('undefined' != typeof self)
                                                t = self;
                                            else
                                                try {
                                                    t = Function(
                                                        'return this'
                                                    )();
                                                } catch (t) {
                                                    throw new Error(
                                                        'polyfill failed because global object is unavailable in this environment'
                                                    );
                                                }
                                            var e = t.Promise;
                                            if (e) {
                                                var i = null;
                                                try {
                                                    i = Object.prototype.toString.call(
                                                        e.resolve()
                                                    );
                                                } catch (t) {}
                                                if (
                                                    '[object Promise]' === i &&
                                                    !e.cast
                                                )
                                                    return;
                                            }
                                            t.Promise = F;
                                        }),
                                        (F.Promise = F),
                                        F
                                    );
                                });
                            }.call(
                                this,
                                e('_process'),
                                void 0 !== t
                                    ? t
                                    : 'undefined' != typeof self
                                        ? self
                                        : void 0 !== f
                                            ? f
                                            : {}
                            ));
                        },
                        { _process: 15 }
                    ],
                    21: [
                        function(t, e, i) {
                            var r =
                                    Object.create ||
                                    function(t) {
                                        var e = function() {};
                                        return (e.prototype = t), new e();
                                    },
                                n =
                                    Object.keys ||
                                    function(t) {
                                        var e = [];
                                        for (var i in t)
                                            Object.prototype.hasOwnProperty.call(
                                                t,
                                                i
                                            ) && e.push(i);
                                        return i;
                                    },
                                o =
                                    Function.prototype.bind ||
                                    function(t) {
                                        var e = this;
                                        return function() {
                                            return e.apply(t, arguments);
                                        };
                                    };
                            function s() {
                                (this._events &&
                                    Object.prototype.hasOwnProperty.call(
                                        this,
                                        '_events'
                                    )) ||
                                    ((this._events = r(null)),
                                    (this._eventsCount = 0)),
                                    (this._maxListeners =
                                        this._maxListeners || void 0);
                            }
                            (e.exports = s),
                                (s.EventEmitter = s),
                                (s.prototype._events = void 0),
                                (s.prototype._maxListeners = void 0);
                            var l,
                                f = 10;
                            try {
                                var h = {};
                                Object.defineProperty &&
                                    Object.defineProperty(h, 'x', { value: 0 }),
                                    (l = 0 === h.x);
                            } catch (t) {
                                l = !1;
                            }
                            function c(t) {
                                return void 0 === t._maxListeners
                                    ? s.defaultMaxListeners
                                    : t._maxListeners;
                            }
                            function u(t, e, i, n) {
                                var o, s, l;
                                if ('function' != typeof i)
                                    throw new TypeError(
                                        '"listener" argument must be a function'
                                    );
                                if (
                                    ((s = t._events)
                                        ? (s.newListener &&
                                              (t.emit(
                                                  'newListener',
                                                  e,
                                                  i.listener ? i.listener : i
                                              ),
                                              (s = t._events)),
                                          (l = s[e]))
                                        : ((s = t._events = r(null)),
                                          (t._eventsCount = 0)),
                                    l)
                                ) {
                                    if (
                                        ('function' == typeof l
                                            ? (l = s[e] = n ? [i, l] : [l, i])
                                            : n
                                                ? l.unshift(i)
                                                : l.push(i),
                                        !l.warned &&
                                            (o = c(t)) &&
                                            o > 0 &&
                                            l.length > o)
                                    ) {
                                        l.warned = !0;
                                        var f = new Error(
                                            'Possible EventEmitter memory leak detected. ' +
                                                l.length +
                                                ' "' +
                                                String(e) +
                                                '" listeners added. Use emitter.setMaxListeners() to increase limit.'
                                        );
                                        (f.name =
                                            'MaxListenersExceededWarning'),
                                            (f.emitter = t),
                                            (f.type = e),
                                            (f.count = l.length),
                                            'object' ===
                                                ('undefined' == typeof console
                                                    ? 'undefined'
                                                    : a(console)) &&
                                                console.warn &&
                                                console.warn(
                                                    '%s: %s',
                                                    f.name,
                                                    f.message
                                                );
                                    }
                                } else (l = s[e] = i), ++t._eventsCount;
                                return t;
                            }
                            function p() {
                                if (!this.fired)
                                    switch (
                                        (this.target.removeListener(
                                            this.type,
                                            this.wrapFn
                                        ),
                                        (this.fired = !0),
                                        arguments.length)
                                    ) {
                                        case 0:
                                            return this.listener.call(
                                                this.target
                                            );
                                        case 1:
                                            return this.listener.call(
                                                this.target,
                                                arguments[0]
                                            );
                                        case 2:
                                            return this.listener.call(
                                                this.target,
                                                arguments[0],
                                                arguments[1]
                                            );
                                        case 3:
                                            return this.listener.call(
                                                this.target,
                                                arguments[0],
                                                arguments[1],
                                                arguments[2]
                                            );
                                        default:
                                            for (
                                                var t = new Array(
                                                        arguments.length
                                                    ),
                                                    e = 0;
                                                e < t.length;
                                                ++e
                                            )
                                                t[e] = arguments[e];
                                            this.listener.apply(this.target, t);
                                    }
                            }
                            function d(t, e, i) {
                                var r = {
                                        fired: !1,
                                        wrapFn: void 0,
                                        target: t,
                                        type: e,
                                        listener: i
                                    },
                                    n = o.call(p, r);
                                return (n.listener = i), (r.wrapFn = n), n;
                            }
                            function m(t, e, i) {
                                var r = t._events;
                                if (!r) return [];
                                var n = r[e];
                                return n
                                    ? 'function' == typeof n
                                        ? i
                                            ? [n.listener || n]
                                            : [n]
                                        : i
                                            ? (function(t) {
                                                  for (
                                                      var e = new Array(
                                                              t.length
                                                          ),
                                                          i = 0;
                                                      i < e.length;
                                                      ++i
                                                  )
                                                      e[i] =
                                                          t[i].listener || t[i];
                                                  return e;
                                              })(n)
                                            : b(n, n.length)
                                    : [];
                            }
                            function g(t) {
                                var e = this._events;
                                if (e) {
                                    var i = e[t];
                                    if ('function' == typeof i) return 1;
                                    if (i) return i.length;
                                }
                                return 0;
                            }
                            function b(t, e) {
                                for (var i = new Array(e), r = 0; r < e; ++r)
                                    i[r] = t[r];
                                return i;
                            }
                            l
                                ? Object.defineProperty(
                                      s,
                                      'defaultMaxListeners',
                                      {
                                          enumerable: !0,
                                          get: function() {
                                              return f;
                                          },
                                          set: function(t) {
                                              if (
                                                  'number' != typeof t ||
                                                  t < 0 ||
                                                  t != t
                                              )
                                                  throw new TypeError(
                                                      '"defaultMaxListeners" must be a positive number'
                                                  );
                                              f = t;
                                          }
                                      }
                                  )
                                : (s.defaultMaxListeners = f),
                                (s.prototype.setMaxListeners = function(t) {
                                    if (
                                        'number' != typeof t ||
                                        t < 0 ||
                                        isNaN(t)
                                    )
                                        throw new TypeError(
                                            '"n" argument must be a positive number'
                                        );
                                    return (this._maxListeners = t), this;
                                }),
                                (s.prototype.getMaxListeners = function() {
                                    return c(this);
                                }),
                                (s.prototype.emit = function(t) {
                                    var e,
                                        i,
                                        r,
                                        n,
                                        a,
                                        o,
                                        s = 'error' === t;
                                    if ((o = this._events))
                                        s = s && null == o.error;
                                    else if (!s) return !1;
                                    if (s) {
                                        if (
                                            (arguments.length > 1 &&
                                                (e = arguments[1]),
                                            e instanceof Error)
                                        )
                                            throw e;
                                        var l = new Error(
                                            'Unhandled "error" event. (' +
                                                e +
                                                ')'
                                        );
                                        throw ((l.context = e), l);
                                    }
                                    if (!(i = o[t])) return !1;
                                    var f = 'function' == typeof i;
                                    switch ((r = arguments.length)) {
                                        case 1:
                                            !(function(t, e, i) {
                                                if (e) t.call(i);
                                                else
                                                    for (
                                                        var r = t.length,
                                                            n = b(t, r),
                                                            a = 0;
                                                        a < r;
                                                        ++a
                                                    )
                                                        n[a].call(i);
                                            })(i, f, this);
                                            break;
                                        case 2:
                                            !(function(t, e, i, r) {
                                                if (e) t.call(i, r);
                                                else
                                                    for (
                                                        var n = t.length,
                                                            a = b(t, n),
                                                            o = 0;
                                                        o < n;
                                                        ++o
                                                    )
                                                        a[o].call(i, r);
                                            })(i, f, this, arguments[1]);
                                            break;
                                        case 3:
                                            !(function(t, e, i, r, n) {
                                                if (e) t.call(i, r, n);
                                                else
                                                    for (
                                                        var a = t.length,
                                                            o = b(t, a),
                                                            s = 0;
                                                        s < a;
                                                        ++s
                                                    )
                                                        o[s].call(i, r, n);
                                            })(
                                                i,
                                                f,
                                                this,
                                                arguments[1],
                                                arguments[2]
                                            );
                                            break;
                                        case 4:
                                            !(function(t, e, i, r, n, a) {
                                                if (e) t.call(i, r, n, a);
                                                else
                                                    for (
                                                        var o = t.length,
                                                            s = b(t, o),
                                                            l = 0;
                                                        l < o;
                                                        ++l
                                                    )
                                                        s[l].call(i, r, n, a);
                                            })(
                                                i,
                                                f,
                                                this,
                                                arguments[1],
                                                arguments[2],
                                                arguments[3]
                                            );
                                            break;
                                        default:
                                            for (
                                                n = new Array(r - 1), a = 1;
                                                a < r;
                                                a++
                                            )
                                                n[a - 1] = arguments[a];
                                            !(function(t, e, i, r) {
                                                if (e) t.apply(i, r);
                                                else
                                                    for (
                                                        var n = t.length,
                                                            a = b(t, n),
                                                            o = 0;
                                                        o < n;
                                                        ++o
                                                    )
                                                        a[o].apply(i, r);
                                            })(i, f, this, n);
                                    }
                                    return !0;
                                }),
                                (s.prototype.addListener = function(t, e) {
                                    return u(this, t, e, !1);
                                }),
                                (s.prototype.on = s.prototype.addListener),
                                (s.prototype.prependListener = function(t, e) {
                                    return u(this, t, e, !0);
                                }),
                                (s.prototype.once = function(t, e) {
                                    if ('function' != typeof e)
                                        throw new TypeError(
                                            '"listener" argument must be a function'
                                        );
                                    return this.on(t, d(this, t, e)), this;
                                }),
                                (s.prototype.prependOnceListener = function(
                                    t,
                                    e
                                ) {
                                    if ('function' != typeof e)
                                        throw new TypeError(
                                            '"listener" argument must be a function'
                                        );
                                    return (
                                        this.prependListener(t, d(this, t, e)),
                                        this
                                    );
                                }),
                                (s.prototype.removeListener = function(t, e) {
                                    var i, n, a, o, s;
                                    if ('function' != typeof e)
                                        throw new TypeError(
                                            '"listener" argument must be a function'
                                        );
                                    if (!(n = this._events)) return this;
                                    if (!(i = n[t])) return this;
                                    if (i === e || i.listener === e)
                                        0 == --this._eventsCount
                                            ? (this._events = r(null))
                                            : (delete n[t],
                                              n.removeListener &&
                                                  this.emit(
                                                      'removeListener',
                                                      t,
                                                      i.listener || e
                                                  ));
                                    else if ('function' != typeof i) {
                                        for (
                                            a = -1, o = i.length - 1;
                                            o >= 0;
                                            o--
                                        )
                                            if (
                                                i[o] === e ||
                                                i[o].listener === e
                                            ) {
                                                (s = i[o].listener), (a = o);
                                                break;
                                            }
                                        if (a < 0) return this;
                                        0 === a
                                            ? i.shift()
                                            : (function(t, e) {
                                                  for (
                                                      var i = e,
                                                          r = i + 1,
                                                          n = t.length;
                                                      r < n;
                                                      i += 1, r += 1
                                                  )
                                                      t[i] = t[r];
                                                  t.pop();
                                              })(i, a),
                                            1 === i.length && (n[t] = i[0]),
                                            n.removeListener &&
                                                this.emit(
                                                    'removeListener',
                                                    t,
                                                    s || e
                                                );
                                    }
                                    return this;
                                }),
                                (s.prototype.removeAllListeners = function(t) {
                                    var e, i, a;
                                    if (!(i = this._events)) return this;
                                    if (!i.removeListener)
                                        return (
                                            0 === arguments.length
                                                ? ((this._events = r(null)),
                                                  (this._eventsCount = 0))
                                                : i[t] &&
                                                  (0 == --this._eventsCount
                                                      ? (this._events = r(null))
                                                      : delete i[t]),
                                            this
                                        );
                                    if (0 === arguments.length) {
                                        var o,
                                            s = n(i);
                                        for (a = 0; a < s.length; ++a)
                                            'removeListener' !== (o = s[a]) &&
                                                this.removeAllListeners(o);
                                        return (
                                            this.removeAllListeners(
                                                'removeListener'
                                            ),
                                            (this._events = r(null)),
                                            (this._eventsCount = 0),
                                            this
                                        );
                                    }
                                    if ('function' == typeof (e = i[t]))
                                        this.removeListener(t, e);
                                    else if (e)
                                        for (a = e.length - 1; a >= 0; a--)
                                            this.removeListener(t, e[a]);
                                    return this;
                                }),
                                (s.prototype.listeners = function(t) {
                                    return m(this, t, !0);
                                }),
                                (s.prototype.rawListeners = function(t) {
                                    return m(this, t, !1);
                                }),
                                (s.listenerCount = function(t, e) {
                                    return 'function' == typeof t.listenerCount
                                        ? t.listenerCount(e)
                                        : g.call(t, e);
                                }),
                                (s.prototype.listenerCount = g),
                                (s.prototype.eventNames = function() {
                                    return this._eventsCount > 0
                                        ? Reflect.ownKeys(this._events)
                                        : [];
                                });
                        },
                        {}
                    ],
                    22: [
                        function(t, e, i) {
                            var r = t('./lib/parser');
                            e.exports = {
                                create: function(e, i) {
                                    if (
                                        e instanceof
                                        (i = i || (0, eval)('this')).ArrayBuffer
                                    ) {
                                        var n = t('./lib/dom-bufferstream');
                                        return new r(
                                            new n(e, 0, e.byteLength, !0, i)
                                        );
                                    }
                                    var a = t('./lib/bufferstream');
                                    return new r(new a(e, 0, e.length, !0));
                                }
                            };
                        },
                        {
                            './lib/bufferstream': 23,
                            './lib/dom-bufferstream': 25,
                            './lib/parser': 29
                        }
                    ],
                    23: [
                        function(t, e, i) {
                            function r(t, e, i, r) {
                                (this.buffer = t),
                                    (this.offset = e || 0),
                                    (i = 'number' == typeof i ? i : t.length),
                                    (this.endPosition = this.offset + i),
                                    this.setBigEndian(r);
                            }
                            (r.prototype = {
                                setBigEndian: function(t) {
                                    this.bigEndian = !!t;
                                },
                                nextUInt8: function() {
                                    var t = this.buffer.readUInt8(this.offset);
                                    return (this.offset += 1), t;
                                },
                                nextInt8: function() {
                                    var t = this.buffer.readInt8(this.offset);
                                    return (this.offset += 1), t;
                                },
                                nextUInt16: function() {
                                    var t = this.bigEndian
                                        ? this.buffer.readUInt16BE(this.offset)
                                        : this.buffer.readUInt16LE(this.offset);
                                    return (this.offset += 2), t;
                                },
                                nextUInt32: function() {
                                    var t = this.bigEndian
                                        ? this.buffer.readUInt32BE(this.offset)
                                        : this.buffer.readUInt32LE(this.offset);
                                    return (this.offset += 4), t;
                                },
                                nextInt16: function() {
                                    var t = this.bigEndian
                                        ? this.buffer.readInt16BE(this.offset)
                                        : this.buffer.readInt16LE(this.offset);
                                    return (this.offset += 2), t;
                                },
                                nextInt32: function() {
                                    var t = this.bigEndian
                                        ? this.buffer.readInt32BE(this.offset)
                                        : this.buffer.readInt32LE(this.offset);
                                    return (this.offset += 4), t;
                                },
                                nextFloat: function() {
                                    var t = this.bigEndian
                                        ? this.buffer.readFloatBE(this.offset)
                                        : this.buffer.readFloatLE(this.offset);
                                    return (this.offset += 4), t;
                                },
                                nextDouble: function() {
                                    var t = this.bigEndian
                                        ? this.buffer.readDoubleBE(this.offset)
                                        : this.buffer.readDoubleLE(this.offset);
                                    return (this.offset += 8), t;
                                },
                                nextBuffer: function(t) {
                                    var e = this.buffer.slice(
                                        this.offset,
                                        this.offset + t
                                    );
                                    return (this.offset += t), e;
                                },
                                remainingLength: function() {
                                    return this.endPosition - this.offset;
                                },
                                nextString: function(t) {
                                    var e = this.buffer.toString(
                                        'utf8',
                                        this.offset,
                                        this.offset + t
                                    );
                                    return (this.offset += t), e;
                                },
                                mark: function() {
                                    var t = this;
                                    return {
                                        openWithOffset: function(e) {
                                            return (
                                                (e = (e || 0) + this.offset),
                                                new r(
                                                    t.buffer,
                                                    e,
                                                    t.endPosition - e,
                                                    t.bigEndian
                                                )
                                            );
                                        },
                                        offset: this.offset
                                    };
                                },
                                offsetFrom: function(t) {
                                    return this.offset - t.offset;
                                },
                                skip: function(t) {
                                    this.offset += t;
                                },
                                branch: function(t, e) {
                                    return (
                                        (e =
                                            'number' == typeof e
                                                ? e
                                                : this.endPosition -
                                                  (this.offset + t)),
                                        new r(
                                            this.buffer,
                                            this.offset + t,
                                            e,
                                            this.bigEndian
                                        )
                                    );
                                }
                            }),
                                (e.exports = r);
                        },
                        {}
                    ],
                    24: [
                        function(t, e, i) {
                            function r(t) {
                                return parseInt(t, 10);
                            }
                            var n = 3600,
                                a = 60;
                            function o(t, e) {
                                (t = t.map(r)), (e = e.map(r));
                                var i = t[0],
                                    n = t[1] - 1,
                                    a = t[2],
                                    o = e[0],
                                    s = e[1],
                                    l = e[2];
                                return Date.UTC(i, n, a, o, s, l, 0) / 1e3;
                            }
                            function s(t) {
                                var e = t.substr(0, 10).split('-'),
                                    i = t.substr(11, 8).split(':'),
                                    s = t
                                        .substr(19, 6)
                                        .split(':')
                                        .map(r),
                                    l = s[0] * n + s[1] * a,
                                    f = o(e, i);
                                if ('number' == typeof (f -= l) && !isNaN(f))
                                    return f;
                            }
                            function l(t) {
                                var e = t.split(' '),
                                    i = o(e[0].split(':'), e[1].split(':'));
                                if ('number' == typeof i && !isNaN(i)) return i;
                            }
                            e.exports = {
                                parseDateWithSpecFormat: l,
                                parseDateWithTimezoneFormat: s,
                                parseExifDate: function(t) {
                                    var e =
                                        19 === t.length && ':' === t.charAt(4);
                                    return 25 === t.length &&
                                        'T' === t.charAt(10)
                                        ? s(t)
                                        : e
                                            ? l(t)
                                            : void 0;
                                }
                            };
                        },
                        {}
                    ],
                    25: [
                        function(t, e, i) {
                            function r(t, e, i, r, n, a) {
                                (this.global = n),
                                    (e = e || 0),
                                    (i = i || t.byteLength - e),
                                    (this.arrayBuffer = t.slice(e, e + i)),
                                    (this.view = new n.DataView(
                                        this.arrayBuffer,
                                        0,
                                        this.arrayBuffer.byteLength
                                    )),
                                    this.setBigEndian(r),
                                    (this.offset = 0),
                                    (this.parentOffset = (a || 0) + e);
                            }
                            (r.prototype = {
                                setBigEndian: function(t) {
                                    this.littleEndian = !t;
                                },
                                nextUInt8: function() {
                                    var t = this.view.getUint8(this.offset);
                                    return (this.offset += 1), t;
                                },
                                nextInt8: function() {
                                    var t = this.view.getInt8(this.offset);
                                    return (this.offset += 1), t;
                                },
                                nextUInt16: function() {
                                    var t = this.view.getUint16(
                                        this.offset,
                                        this.littleEndian
                                    );
                                    return (this.offset += 2), t;
                                },
                                nextUInt32: function() {
                                    var t = this.view.getUint32(
                                        this.offset,
                                        this.littleEndian
                                    );
                                    return (this.offset += 4), t;
                                },
                                nextInt16: function() {
                                    var t = this.view.getInt16(
                                        this.offset,
                                        this.littleEndian
                                    );
                                    return (this.offset += 2), t;
                                },
                                nextInt32: function() {
                                    var t = this.view.getInt32(
                                        this.offset,
                                        this.littleEndian
                                    );
                                    return (this.offset += 4), t;
                                },
                                nextFloat: function() {
                                    var t = this.view.getFloat32(
                                        this.offset,
                                        this.littleEndian
                                    );
                                    return (this.offset += 4), t;
                                },
                                nextDouble: function() {
                                    var t = this.view.getFloat64(
                                        this.offset,
                                        this.littleEndian
                                    );
                                    return (this.offset += 8), t;
                                },
                                nextBuffer: function(t) {
                                    var e = this.arrayBuffer.slice(
                                        this.offset,
                                        this.offset + t
                                    );
                                    return (this.offset += t), e;
                                },
                                remainingLength: function() {
                                    return (
                                        this.arrayBuffer.byteLength -
                                        this.offset
                                    );
                                },
                                nextString: function(t) {
                                    var e = this.arrayBuffer.slice(
                                        this.offset,
                                        this.offset + t
                                    );
                                    return (
                                        (e = String.fromCharCode.apply(
                                            null,
                                            new this.global.Uint8Array(e)
                                        )),
                                        (this.offset += t),
                                        e
                                    );
                                },
                                mark: function() {
                                    var t = this;
                                    return {
                                        openWithOffset: function(e) {
                                            return (
                                                (e = (e || 0) + this.offset),
                                                new r(
                                                    t.arrayBuffer,
                                                    e,
                                                    t.arrayBuffer.byteLength -
                                                        e,
                                                    !t.littleEndian,
                                                    t.global,
                                                    t.parentOffset
                                                )
                                            );
                                        },
                                        offset: this.offset,
                                        getParentOffset: function() {
                                            return t.parentOffset;
                                        }
                                    };
                                },
                                offsetFrom: function(t) {
                                    return (
                                        this.parentOffset +
                                        this.offset -
                                        (t.offset + t.getParentOffset())
                                    );
                                },
                                skip: function(t) {
                                    this.offset += t;
                                },
                                branch: function(t, e) {
                                    return (
                                        (e =
                                            'number' == typeof e
                                                ? e
                                                : this.arrayBuffer.byteLength -
                                                  (this.offset + t)),
                                        new r(
                                            this.arrayBuffer,
                                            this.offset + t,
                                            e,
                                            !this.littleEndian,
                                            this.global,
                                            this.parentOffset
                                        )
                                    );
                                }
                            }),
                                (e.exports = r);
                        },
                        {}
                    ],
                    26: [
                        function(t, e, i) {
                            e.exports = {
                                exif: {
                                    1: 'InteropIndex',
                                    2: 'InteropVersion',
                                    11: 'ProcessingSoftware',
                                    254: 'SubfileType',
                                    255: 'OldSubfileType',
                                    256: 'ImageWidth',
                                    257: 'ImageHeight',
                                    258: 'BitsPerSample',
                                    259: 'Compression',
                                    262: 'PhotometricInterpretation',
                                    263: 'Thresholding',
                                    264: 'CellWidth',
                                    265: 'CellLength',
                                    266: 'FillOrder',
                                    269: 'DocumentName',
                                    270: 'ImageDescription',
                                    271: 'Make',
                                    272: 'Model',
                                    273: 'StripOffsets',
                                    274: 'Orientation',
                                    277: 'SamplesPerPixel',
                                    278: 'RowsPerStrip',
                                    279: 'StripByteCounts',
                                    280: 'MinSampleValue',
                                    281: 'MaxSampleValue',
                                    282: 'XResolution',
                                    283: 'YResolution',
                                    284: 'PlanarConfiguration',
                                    285: 'PageName',
                                    286: 'XPosition',
                                    287: 'YPosition',
                                    288: 'FreeOffsets',
                                    289: 'FreeByteCounts',
                                    290: 'GrayResponseUnit',
                                    291: 'GrayResponseCurve',
                                    292: 'T4Options',
                                    293: 'T6Options',
                                    296: 'ResolutionUnit',
                                    297: 'PageNumber',
                                    300: 'ColorResponseUnit',
                                    301: 'TransferFunction',
                                    305: 'Software',
                                    306: 'ModifyDate',
                                    315: 'Artist',
                                    316: 'HostComputer',
                                    317: 'Predictor',
                                    318: 'WhitePoint',
                                    319: 'PrimaryChromaticities',
                                    320: 'ColorMap',
                                    321: 'HalftoneHints',
                                    322: 'TileWidth',
                                    323: 'TileLength',
                                    324: 'TileOffsets',
                                    325: 'TileByteCounts',
                                    326: 'BadFaxLines',
                                    327: 'CleanFaxData',
                                    328: 'ConsecutiveBadFaxLines',
                                    330: 'SubIFD',
                                    332: 'InkSet',
                                    333: 'InkNames',
                                    334: 'NumberofInks',
                                    336: 'DotRange',
                                    337: 'TargetPrinter',
                                    338: 'ExtraSamples',
                                    339: 'SampleFormat',
                                    340: 'SMinSampleValue',
                                    341: 'SMaxSampleValue',
                                    342: 'TransferRange',
                                    343: 'ClipPath',
                                    344: 'XClipPathUnits',
                                    345: 'YClipPathUnits',
                                    346: 'Indexed',
                                    347: 'JPEGTables',
                                    351: 'OPIProxy',
                                    400: 'GlobalParametersIFD',
                                    401: 'ProfileType',
                                    402: 'FaxProfile',
                                    403: 'CodingMethods',
                                    404: 'VersionYear',
                                    405: 'ModeNumber',
                                    433: 'Decode',
                                    434: 'DefaultImageColor',
                                    435: 'T82Options',
                                    437: 'JPEGTables',
                                    512: 'JPEGProc',
                                    513: 'ThumbnailOffset',
                                    514: 'ThumbnailLength',
                                    515: 'JPEGRestartInterval',
                                    517: 'JPEGLosslessPredictors',
                                    518: 'JPEGPointTransforms',
                                    519: 'JPEGQTables',
                                    520: 'JPEGDCTables',
                                    521: 'JPEGACTables',
                                    529: 'YCbCrCoefficients',
                                    530: 'YCbCrSubSampling',
                                    531: 'YCbCrPositioning',
                                    532: 'ReferenceBlackWhite',
                                    559: 'StripRowCounts',
                                    700: 'ApplicationNotes',
                                    999: 'USPTOMiscellaneous',
                                    4096: 'RelatedImageFileFormat',
                                    4097: 'RelatedImageWidth',
                                    4098: 'RelatedImageHeight',
                                    18246: 'Rating',
                                    18247: 'XP_DIP_XML',
                                    18248: 'StitchInfo',
                                    18249: 'RatingPercent',
                                    32781: 'ImageID',
                                    32931: 'WangTag1',
                                    32932: 'WangAnnotation',
                                    32933: 'WangTag3',
                                    32934: 'WangTag4',
                                    32995: 'Matteing',
                                    32996: 'DataType',
                                    32997: 'ImageDepth',
                                    32998: 'TileDepth',
                                    33405: 'Model2',
                                    33421: 'CFARepeatPatternDim',
                                    33422: 'CFAPattern2',
                                    33423: 'BatteryLevel',
                                    33424: 'KodakIFD',
                                    33432: 'Copyright',
                                    33434: 'ExposureTime',
                                    33437: 'FNumber',
                                    33445: 'MDFileTag',
                                    33446: 'MDScalePixel',
                                    33447: 'MDColorTable',
                                    33448: 'MDLabName',
                                    33449: 'MDSampleInfo',
                                    33450: 'MDPrepDate',
                                    33451: 'MDPrepTime',
                                    33452: 'MDFileUnits',
                                    33550: 'PixelScale',
                                    33589: 'AdventScale',
                                    33590: 'AdventRevision',
                                    33628: 'UIC1Tag',
                                    33629: 'UIC2Tag',
                                    33630: 'UIC3Tag',
                                    33631: 'UIC4Tag',
                                    33723: 'IPTC-NAA',
                                    33918: 'IntergraphPacketData',
                                    33919: 'IntergraphFlagRegisters',
                                    33920: 'IntergraphMatrix',
                                    33921: 'INGRReserved',
                                    33922: 'ModelTiePoint',
                                    34016: 'Site',
                                    34017: 'ColorSequence',
                                    34018: 'IT8Header',
                                    34019: 'RasterPadding',
                                    34020: 'BitsPerRunLength',
                                    34021: 'BitsPerExtendedRunLength',
                                    34022: 'ColorTable',
                                    34023: 'ImageColorIndicator',
                                    34024: 'BackgroundColorIndicator',
                                    34025: 'ImageColorValue',
                                    34026: 'BackgroundColorValue',
                                    34027: 'PixelIntensityRange',
                                    34028: 'TransparencyIndicator',
                                    34029: 'ColorCharacterization',
                                    34030: 'HCUsage',
                                    34031: 'TrapIndicator',
                                    34032: 'CMYKEquivalent',
                                    34118: 'SEMInfo',
                                    34152: 'AFCP_IPTC',
                                    34232: 'PixelMagicJBIGOptions',
                                    34264: 'ModelTransform',
                                    34306: 'WB_GRGBLevels',
                                    34310: 'LeafData',
                                    34377: 'PhotoshopSettings',
                                    34665: 'ExifOffset',
                                    34675: 'ICC_Profile',
                                    34687: 'TIFF_FXExtensions',
                                    34688: 'MultiProfiles',
                                    34689: 'SharedData',
                                    34690: 'T88Options',
                                    34732: 'ImageLayer',
                                    34735: 'GeoTiffDirectory',
                                    34736: 'GeoTiffDoubleParams',
                                    34737: 'GeoTiffAsciiParams',
                                    34850: 'ExposureProgram',
                                    34852: 'SpectralSensitivity',
                                    34853: 'GPSInfo',
                                    34855: 'ISO',
                                    34856: 'Opto-ElectricConvFactor',
                                    34857: 'Interlace',
                                    34858: 'TimeZoneOffset',
                                    34859: 'SelfTimerMode',
                                    34864: 'SensitivityType',
                                    34865: 'StandardOutputSensitivity',
                                    34866: 'RecommendedExposureIndex',
                                    34867: 'ISOSpeed',
                                    34868: 'ISOSpeedLatitudeyyy',
                                    34869: 'ISOSpeedLatitudezzz',
                                    34908: 'FaxRecvParams',
                                    34909: 'FaxSubAddress',
                                    34910: 'FaxRecvTime',
                                    34954: 'LeafSubIFD',
                                    36864: 'ExifVersion',
                                    36867: 'DateTimeOriginal',
                                    36868: 'CreateDate',
                                    37121: 'ComponentsConfiguration',
                                    37122: 'CompressedBitsPerPixel',
                                    37377: 'ShutterSpeedValue',
                                    37378: 'ApertureValue',
                                    37379: 'BrightnessValue',
                                    37380: 'ExposureCompensation',
                                    37381: 'MaxApertureValue',
                                    37382: 'SubjectDistance',
                                    37383: 'MeteringMode',
                                    37384: 'LightSource',
                                    37385: 'Flash',
                                    37386: 'FocalLength',
                                    37387: 'FlashEnergy',
                                    37388: 'SpatialFrequencyResponse',
                                    37389: 'Noise',
                                    37390: 'FocalPlaneXResolution',
                                    37391: 'FocalPlaneYResolution',
                                    37392: 'FocalPlaneResolutionUnit',
                                    37393: 'ImageNumber',
                                    37394: 'SecurityClassification',
                                    37395: 'ImageHistory',
                                    37396: 'SubjectArea',
                                    37397: 'ExposureIndex',
                                    37398: 'TIFF-EPStandardID',
                                    37399: 'SensingMethod',
                                    37434: 'CIP3DataFile',
                                    37435: 'CIP3Sheet',
                                    37436: 'CIP3Side',
                                    37439: 'StoNits',
                                    37500: 'MakerNote',
                                    37510: 'UserComment',
                                    37520: 'SubSecTime',
                                    37521: 'SubSecTimeOriginal',
                                    37522: 'SubSecTimeDigitized',
                                    37679: 'MSDocumentText',
                                    37680: 'MSPropertySetStorage',
                                    37681: 'MSDocumentTextPosition',
                                    37724: 'ImageSourceData',
                                    40091: 'XPTitle',
                                    40092: 'XPComment',
                                    40093: 'XPAuthor',
                                    40094: 'XPKeywords',
                                    40095: 'XPSubject',
                                    40960: 'FlashpixVersion',
                                    40961: 'ColorSpace',
                                    40962: 'ExifImageWidth',
                                    40963: 'ExifImageHeight',
                                    40964: 'RelatedSoundFile',
                                    40965: 'InteropOffset',
                                    41483: 'FlashEnergy',
                                    41484: 'SpatialFrequencyResponse',
                                    41485: 'Noise',
                                    41486: 'FocalPlaneXResolution',
                                    41487: 'FocalPlaneYResolution',
                                    41488: 'FocalPlaneResolutionUnit',
                                    41489: 'ImageNumber',
                                    41490: 'SecurityClassification',
                                    41491: 'ImageHistory',
                                    41492: 'SubjectLocation',
                                    41493: 'ExposureIndex',
                                    41494: 'TIFF-EPStandardID',
                                    41495: 'SensingMethod',
                                    41728: 'FileSource',
                                    41729: 'SceneType',
                                    41730: 'CFAPattern',
                                    41985: 'CustomRendered',
                                    41986: 'ExposureMode',
                                    41987: 'WhiteBalance',
                                    41988: 'DigitalZoomRatio',
                                    41989: 'FocalLengthIn35mmFormat',
                                    41990: 'SceneCaptureType',
                                    41991: 'GainControl',
                                    41992: 'Contrast',
                                    41993: 'Saturation',
                                    41994: 'Sharpness',
                                    41995: 'DeviceSettingDescription',
                                    41996: 'SubjectDistanceRange',
                                    42016: 'ImageUniqueID',
                                    42032: 'OwnerName',
                                    42033: 'SerialNumber',
                                    42034: 'LensInfo',
                                    42035: 'LensMake',
                                    42036: 'LensModel',
                                    42037: 'LensSerialNumber',
                                    42112: 'GDALMetadata',
                                    42113: 'GDALNoData',
                                    42240: 'Gamma',
                                    44992: 'ExpandSoftware',
                                    44993: 'ExpandLens',
                                    44994: 'ExpandFilm',
                                    44995: 'ExpandFilterLens',
                                    44996: 'ExpandScanner',
                                    44997: 'ExpandFlashLamp',
                                    48129: 'PixelFormat',
                                    48130: 'Transformation',
                                    48131: 'Uncompressed',
                                    48132: 'ImageType',
                                    48256: 'ImageWidth',
                                    48257: 'ImageHeight',
                                    48258: 'WidthResolution',
                                    48259: 'HeightResolution',
                                    48320: 'ImageOffset',
                                    48321: 'ImageByteCount',
                                    48322: 'AlphaOffset',
                                    48323: 'AlphaByteCount',
                                    48324: 'ImageDataDiscard',
                                    48325: 'AlphaDataDiscard',
                                    50215: 'OceScanjobDesc',
                                    50216: 'OceApplicationSelector',
                                    50217: 'OceIDNumber',
                                    50218: 'OceImageLogic',
                                    50255: 'Annotations',
                                    50341: 'PrintIM',
                                    50560: 'USPTOOriginalContentType',
                                    50706: 'DNGVersion',
                                    50707: 'DNGBackwardVersion',
                                    50708: 'UniqueCameraModel',
                                    50709: 'LocalizedCameraModel',
                                    50710: 'CFAPlaneColor',
                                    50711: 'CFALayout',
                                    50712: 'LinearizationTable',
                                    50713: 'BlackLevelRepeatDim',
                                    50714: 'BlackLevel',
                                    50715: 'BlackLevelDeltaH',
                                    50716: 'BlackLevelDeltaV',
                                    50717: 'WhiteLevel',
                                    50718: 'DefaultScale',
                                    50719: 'DefaultCropOrigin',
                                    50720: 'DefaultCropSize',
                                    50721: 'ColorMatrix1',
                                    50722: 'ColorMatrix2',
                                    50723: 'CameraCalibration1',
                                    50724: 'CameraCalibration2',
                                    50725: 'ReductionMatrix1',
                                    50726: 'ReductionMatrix2',
                                    50727: 'AnalogBalance',
                                    50728: 'AsShotNeutral',
                                    50729: 'AsShotWhiteXY',
                                    50730: 'BaselineExposure',
                                    50731: 'BaselineNoise',
                                    50732: 'BaselineSharpness',
                                    50733: 'BayerGreenSplit',
                                    50734: 'LinearResponseLimit',
                                    50735: 'CameraSerialNumber',
                                    50736: 'DNGLensInfo',
                                    50737: 'ChromaBlurRadius',
                                    50738: 'AntiAliasStrength',
                                    50739: 'ShadowScale',
                                    50740: 'DNGPrivateData',
                                    50741: 'MakerNoteSafety',
                                    50752: 'RawImageSegmentation',
                                    50778: 'CalibrationIlluminant1',
                                    50779: 'CalibrationIlluminant2',
                                    50780: 'BestQualityScale',
                                    50781: 'RawDataUniqueID',
                                    50784: 'AliasLayerMetadata',
                                    50827: 'OriginalRawFileName',
                                    50828: 'OriginalRawFileData',
                                    50829: 'ActiveArea',
                                    50830: 'MaskedAreas',
                                    50831: 'AsShotICCProfile',
                                    50832: 'AsShotPreProfileMatrix',
                                    50833: 'CurrentICCProfile',
                                    50834: 'CurrentPreProfileMatrix',
                                    50879: 'ColorimetricReference',
                                    50898: 'PanasonicTitle',
                                    50899: 'PanasonicTitle2',
                                    50931: 'CameraCalibrationSig',
                                    50932: 'ProfileCalibrationSig',
                                    50933: 'ProfileIFD',
                                    50934: 'AsShotProfileName',
                                    50935: 'NoiseReductionApplied',
                                    50936: 'ProfileName',
                                    50937: 'ProfileHueSatMapDims',
                                    50938: 'ProfileHueSatMapData1',
                                    50939: 'ProfileHueSatMapData2',
                                    50940: 'ProfileToneCurve',
                                    50941: 'ProfileEmbedPolicy',
                                    50942: 'ProfileCopyright',
                                    50964: 'ForwardMatrix1',
                                    50965: 'ForwardMatrix2',
                                    50966: 'PreviewApplicationName',
                                    50967: 'PreviewApplicationVersion',
                                    50968: 'PreviewSettingsName',
                                    50969: 'PreviewSettingsDigest',
                                    50970: 'PreviewColorSpace',
                                    50971: 'PreviewDateTime',
                                    50972: 'RawImageDigest',
                                    50973: 'OriginalRawFileDigest',
                                    50974: 'SubTileBlockSize',
                                    50975: 'RowInterleaveFactor',
                                    50981: 'ProfileLookTableDims',
                                    50982: 'ProfileLookTableData',
                                    51008: 'OpcodeList1',
                                    51009: 'OpcodeList2',
                                    51022: 'OpcodeList3',
                                    51041: 'NoiseProfile',
                                    51043: 'TimeCodes',
                                    51044: 'FrameRate',
                                    51058: 'TStop',
                                    51081: 'ReelName',
                                    51089: 'OriginalDefaultFinalSize',
                                    51090: 'OriginalBestQualitySize',
                                    51091: 'OriginalDefaultCropSize',
                                    51105: 'CameraLabel',
                                    51107: 'ProfileHueSatMapEncoding',
                                    51108: 'ProfileLookTableEncoding',
                                    51109: 'BaselineExposureOffset',
                                    51110: 'DefaultBlackRender',
                                    51111: 'NewRawImageDigest',
                                    51112: 'RawToPreviewGain',
                                    51125: 'DefaultUserCrop',
                                    59932: 'Padding',
                                    59933: 'OffsetSchema',
                                    65e3: 'OwnerName',
                                    65001: 'SerialNumber',
                                    65002: 'Lens',
                                    65024: 'KDC_IFD',
                                    65100: 'RawFile',
                                    65101: 'Converter',
                                    65102: 'WhiteBalance',
                                    65105: 'Exposure',
                                    65106: 'Shadows',
                                    65107: 'Brightness',
                                    65108: 'Contrast',
                                    65109: 'Saturation',
                                    65110: 'Sharpness',
                                    65111: 'Smoothness',
                                    65112: 'MoireFilter'
                                },
                                gps: {
                                    0: 'GPSVersionID',
                                    1: 'GPSLatitudeRef',
                                    2: 'GPSLatitude',
                                    3: 'GPSLongitudeRef',
                                    4: 'GPSLongitude',
                                    5: 'GPSAltitudeRef',
                                    6: 'GPSAltitude',
                                    7: 'GPSTimeStamp',
                                    8: 'GPSSatellites',
                                    9: 'GPSStatus',
                                    10: 'GPSMeasureMode',
                                    11: 'GPSDOP',
                                    12: 'GPSSpeedRef',
                                    13: 'GPSSpeed',
                                    14: 'GPSTrackRef',
                                    15: 'GPSTrack',
                                    16: 'GPSImgDirectionRef',
                                    17: 'GPSImgDirection',
                                    18: 'GPSMapDatum',
                                    19: 'GPSDestLatitudeRef',
                                    20: 'GPSDestLatitude',
                                    21: 'GPSDestLongitudeRef',
                                    22: 'GPSDestLongitude',
                                    23: 'GPSDestBearingRef',
                                    24: 'GPSDestBearing',
                                    25: 'GPSDestDistanceRef',
                                    26: 'GPSDestDistance',
                                    27: 'GPSProcessingMethod',
                                    28: 'GPSAreaInformation',
                                    29: 'GPSDateStamp',
                                    30: 'GPSDifferential',
                                    31: 'GPSHPositioningError'
                                }
                            };
                        },
                        {}
                    ],
                    27: [
                        function(t, e, i) {
                            function r(t, e) {
                                switch (t) {
                                    case 1:
                                        return e.nextUInt8();
                                    case 3:
                                        return e.nextUInt16();
                                    case 4:
                                        return e.nextUInt32();
                                    case 5:
                                        return [e.nextUInt32(), e.nextUInt32()];
                                    case 6:
                                        return e.nextInt8();
                                    case 8:
                                        return e.nextUInt16();
                                    case 9:
                                        return e.nextUInt32();
                                    case 10:
                                        return [e.nextInt32(), e.nextInt32()];
                                    case 11:
                                        return e.nextFloat();
                                    case 12:
                                        return e.nextDouble();
                                    default:
                                        throw new Error(
                                            'Invalid format while decoding: ' +
                                                t
                                        );
                                }
                            }
                            function n(t, e) {
                                var i,
                                    n,
                                    a = e.nextUInt16(),
                                    o = e.nextUInt16(),
                                    s = (function(t) {
                                        switch (t) {
                                            case 1:
                                            case 2:
                                            case 6:
                                            case 7:
                                                return 1;
                                            case 3:
                                            case 8:
                                                return 2;
                                            case 4:
                                            case 9:
                                            case 11:
                                                return 4;
                                            case 5:
                                            case 10:
                                            case 12:
                                                return 8;
                                            default:
                                                return 0;
                                        }
                                    })(o),
                                    l = e.nextUInt32(),
                                    f = s * l;
                                if (
                                    (f > 4 &&
                                        (e = t.openWithOffset(e.nextUInt32())),
                                    2 === o)
                                ) {
                                    var h = (i = e.nextString(l)).indexOf('\0');
                                    -1 !== h && (i = i.substr(0, h));
                                } else if (7 === o) i = e.nextBuffer(l);
                                else if (0 !== o)
                                    for (i = [], n = 0; n < l; ++n)
                                        i.push(r(o, e));
                                return f < 4 && e.skip(4 - f), [a, i, o];
                            }
                            function a(t, e, i) {
                                var r,
                                    a,
                                    o = e.nextUInt16();
                                for (a = 0; a < o; ++a)
                                    i((r = n(t, e))[0], r[1], r[2]);
                            }
                            e.exports = {
                                IFD0: 1,
                                IFD1: 2,
                                GPSIFD: 3,
                                SubIFD: 4,
                                InteropIFD: 5,
                                parseTags: function(t, e) {
                                    var i, r, n, o;
                                    try {
                                        i = (function(t) {
                                            if ('Exif\0\0' !== t.nextString(6))
                                                throw new Error(
                                                    'Invalid EXIF header'
                                                );
                                            var e = t.mark(),
                                                i = t.nextUInt16();
                                            if (18761 === i) t.setBigEndian(!1);
                                            else {
                                                if (19789 !== i)
                                                    throw new Error(
                                                        'Invalid TIFF header'
                                                    );
                                                t.setBigEndian(!0);
                                            }
                                            if (42 !== t.nextUInt16())
                                                throw new Error(
                                                    'Invalid TIFF data'
                                                );
                                            return e;
                                        })(t);
                                    } catch (t) {
                                        return !1;
                                    }
                                    var s = i.openWithOffset(t.nextUInt32()),
                                        l = this.IFD0;
                                    a(i, s, function(t, i, a) {
                                        switch (t) {
                                            case 34853:
                                                n = i[0];
                                                break;
                                            case 34665:
                                                r = i[0];
                                                break;
                                            default:
                                                e(l, t, i, a);
                                        }
                                    });
                                    var f = s.nextUInt32();
                                    0 !== f &&
                                        a(
                                            i,
                                            i.openWithOffset(f),
                                            e.bind(null, this.IFD1)
                                        );
                                    n &&
                                        a(
                                            i,
                                            i.openWithOffset(n),
                                            e.bind(null, this.GPSIFD)
                                        );
                                    if (r) {
                                        var h = i.openWithOffset(r),
                                            c = this.InteropIFD;
                                        a(i, h, function(t, i, r) {
                                            40965 === t
                                                ? (o = i[0])
                                                : e(c, t, i, r);
                                        });
                                    }
                                    o &&
                                        a(
                                            i,
                                            i.openWithOffset(o),
                                            e.bind(null, this.InteropIFD)
                                        );
                                    return !0;
                                }
                            };
                        },
                        {}
                    ],
                    28: [
                        function(t, e, i) {
                            e.exports = {
                                parseSections: function(t, e) {
                                    var i, r;
                                    for (
                                        t.setBigEndian(!0);
                                        t.remainingLength() > 0 && 218 !== r;

                                    ) {
                                        if (255 !== t.nextUInt8())
                                            throw new Error(
                                                'Invalid JPEG section offset'
                                            );
                                        (i =
                                            ((r = t.nextUInt8()) >= 208 &&
                                                r <= 217) ||
                                            218 === r
                                                ? 0
                                                : t.nextUInt16() - 2),
                                            e(r, t.branch(0, i)),
                                            t.skip(i);
                                    }
                                },
                                getSizeFromSOFSection: function(t) {
                                    return (
                                        t.skip(1),
                                        {
                                            height: t.nextUInt16(),
                                            width: t.nextUInt16()
                                        }
                                    );
                                },
                                getSectionName: function(t) {
                                    var e, i;
                                    switch (t) {
                                        case 216:
                                            e = 'SOI';
                                            break;
                                        case 196:
                                            e = 'DHT';
                                            break;
                                        case 219:
                                            e = 'DQT';
                                            break;
                                        case 221:
                                            e = 'DRI';
                                            break;
                                        case 218:
                                            e = 'SOS';
                                            break;
                                        case 254:
                                            e = 'COM';
                                            break;
                                        case 217:
                                            e = 'EOI';
                                            break;
                                        default:
                                            t >= 224 && t <= 239
                                                ? ((e = 'APP'), (i = t - 224))
                                                : t >= 192 &&
                                                  t <= 207 &&
                                                  196 !== t &&
                                                  200 !== t &&
                                                  204 !== t
                                                    ? ((e = 'SOF'),
                                                      (i = t - 192))
                                                    : t >= 208 &&
                                                      t <= 215 &&
                                                      ((e = 'RST'),
                                                      (i = t - 208));
                                    }
                                    var r = { name: e };
                                    return (
                                        'number' == typeof i && (r.index = i), r
                                    );
                                }
                            };
                        },
                        {}
                    ],
                    29: [
                        function(t, e, i) {
                            var r = t('./jpeg'),
                                n = t('./exif'),
                                a = t('./simplify');
                            function o(t, e, i, r, n, a, o) {
                                (this.startMarker = t),
                                    (this.tags = e),
                                    (this.imageSize = i),
                                    (this.thumbnailOffset = r),
                                    (this.thumbnailLength = n),
                                    (this.thumbnailType = a),
                                    (this.app1Offset = o);
                            }
                            function s(t) {
                                (this.stream = t),
                                    (this.flags = {
                                        readBinaryTags: !1,
                                        resolveTagNames: !0,
                                        simplifyValues: !0,
                                        imageSize: !0,
                                        hidePointers: !0,
                                        returnTags: !0
                                    });
                            }
                            (o.prototype = {
                                hasThumbnail: function(t) {
                                    return (
                                        !(
                                            !this.thumbnailOffset ||
                                            !this.thumbnailLength
                                        ) &&
                                        ('string' != typeof t ||
                                            ('image/jpeg' ===
                                            t.toLowerCase().trim()
                                                ? 6 === this.thumbnailType
                                                : 'image/tiff' ===
                                                      t.toLowerCase().trim() &&
                                                  1 === this.thumbnailType))
                                    );
                                },
                                getThumbnailOffset: function() {
                                    return (
                                        this.app1Offset +
                                        6 +
                                        this.thumbnailOffset
                                    );
                                },
                                getThumbnailLength: function() {
                                    return this.thumbnailLength;
                                },
                                getThumbnailBuffer: function() {
                                    return this._getThumbnailStream().nextBuffer(
                                        this.thumbnailLength
                                    );
                                },
                                _getThumbnailStream: function() {
                                    return this.startMarker.openWithOffset(
                                        this.getThumbnailOffset()
                                    );
                                },
                                getImageSize: function() {
                                    return this.imageSize;
                                },
                                getThumbnailSize: function() {
                                    var t,
                                        e = this._getThumbnailStream();
                                    return (
                                        r.parseSections(e, function(e, i) {
                                            'SOF' ===
                                                r.getSectionName(e).name &&
                                                (t = r.getSizeFromSOFSection(
                                                    i
                                                ));
                                        }),
                                        t
                                    );
                                }
                            }),
                                (s.prototype = {
                                    enableBinaryFields: function(t) {
                                        return (
                                            (this.flags.readBinaryTags = !!t),
                                            this
                                        );
                                    },
                                    enablePointers: function(t) {
                                        return (
                                            (this.flags.hidePointers = !t), this
                                        );
                                    },
                                    enableTagNames: function(t) {
                                        return (
                                            (this.flags.resolveTagNames = !!t),
                                            this
                                        );
                                    },
                                    enableImageSize: function(t) {
                                        return (
                                            (this.flags.imageSize = !!t), this
                                        );
                                    },
                                    enableReturnTags: function(t) {
                                        return (
                                            (this.flags.returnTags = !!t), this
                                        );
                                    },
                                    enableSimpleValues: function(t) {
                                        return (
                                            (this.flags.simplifyValues = !!t),
                                            this
                                        );
                                    },
                                    parse: function() {
                                        var e,
                                            i,
                                            s,
                                            l,
                                            f,
                                            h,
                                            c,
                                            u,
                                            p,
                                            d = this.stream.mark(),
                                            m = d.openWithOffset(0),
                                            g = this.flags;
                                        return (
                                            g.resolveTagNames &&
                                                (c = t('./exif-tags')),
                                            g.resolveTagNames
                                                ? ((e = {}),
                                                  (u = function(t) {
                                                      return e[t.name];
                                                  }),
                                                  (p = function(t, i) {
                                                      e[t.name] = i;
                                                  }))
                                                : ((e = []),
                                                  (u = function(t) {
                                                      var i;
                                                      for (
                                                          i = 0;
                                                          i < e.length;
                                                          ++i
                                                      )
                                                          if (
                                                              e[i].type ===
                                                                  t.type &&
                                                              e[i].section ===
                                                                  t.section
                                                          )
                                                              return e.value;
                                                  }),
                                                  (p = function(t, i) {
                                                      var r;
                                                      for (
                                                          r = 0;
                                                          r < e.length;
                                                          ++r
                                                      )
                                                          if (
                                                              e[r].type ===
                                                                  t.type &&
                                                              e[r].section ===
                                                                  t.section
                                                          )
                                                              return void (e.value = i);
                                                  })),
                                            r.parseSections(m, function(t, o) {
                                                var u = o.offsetFrom(d);
                                                225 === t
                                                    ? n.parseTags(o, function(
                                                          t,
                                                          i,
                                                          r,
                                                          o
                                                      ) {
                                                          if (
                                                              g.readBinaryTags ||
                                                              7 !== o
                                                          ) {
                                                              if (513 === i) {
                                                                  if (
                                                                      ((s =
                                                                          r[0]),
                                                                      g.hidePointers)
                                                                  )
                                                                      return;
                                                              } else if (
                                                                  514 === i
                                                              ) {
                                                                  if (
                                                                      ((l =
                                                                          r[0]),
                                                                      g.hidePointers)
                                                                  )
                                                                      return;
                                                              } else if (
                                                                  259 === i &&
                                                                  ((f = r[0]),
                                                                  g.hidePointers)
                                                              )
                                                                  return;
                                                              if (g.returnTags)
                                                                  if (
                                                                      (g.simplifyValues &&
                                                                          (r = a.simplifyValue(
                                                                              r,
                                                                              o
                                                                          )),
                                                                      g.resolveTagNames)
                                                                  ) {
                                                                      var h = (t ===
                                                                      n.GPSIFD
                                                                          ? c.gps
                                                                          : c.exif)[
                                                                          i
                                                                      ];
                                                                      h ||
                                                                          (h =
                                                                              c
                                                                                  .exif[
                                                                                  i
                                                                              ]),
                                                                          e.hasOwnProperty(
                                                                              h
                                                                          ) ||
                                                                              (e[
                                                                                  h
                                                                              ] = r);
                                                                  } else
                                                                      e.push({
                                                                          section: t,
                                                                          type: i,
                                                                          value: r
                                                                      });
                                                          }
                                                      }) && (h = u)
                                                    : g.imageSize &&
                                                      'SOF' ===
                                                          r.getSectionName(t)
                                                              .name &&
                                                      (i = r.getSizeFromSOFSection(
                                                          o
                                                      ));
                                            }),
                                            g.simplifyValues &&
                                                (a.castDegreeValues(u, p),
                                                a.castDateValues(u, p)),
                                            new o(d, e, i, s, l, f, h)
                                        );
                                    }
                                }),
                                (e.exports = s);
                        },
                        {
                            './exif': 27,
                            './exif-tags': 26,
                            './jpeg': 28,
                            './simplify': 30
                        }
                    ],
                    30: [
                        function(t, e, i) {
                            var r = t('./exif'),
                                n = t('./date'),
                                a = [
                                    {
                                        section: r.GPSIFD,
                                        type: 2,
                                        name: 'GPSLatitude',
                                        refType: 1,
                                        refName: 'GPSLatitudeRef',
                                        posVal: 'N'
                                    },
                                    {
                                        section: r.GPSIFD,
                                        type: 4,
                                        name: 'GPSLongitude',
                                        refType: 3,
                                        refName: 'GPSLongitudeRef',
                                        posVal: 'E'
                                    }
                                ],
                                o = [
                                    {
                                        section: r.SubIFD,
                                        type: 306,
                                        name: 'ModifyDate'
                                    },
                                    {
                                        section: r.SubIFD,
                                        type: 36867,
                                        name: 'DateTimeOriginal'
                                    },
                                    {
                                        section: r.SubIFD,
                                        type: 36868,
                                        name: 'CreateDate'
                                    },
                                    {
                                        section: r.SubIFD,
                                        type: 306,
                                        name: 'ModifyDate'
                                    }
                                ];
                            e.exports = {
                                castDegreeValues: function(t, e) {
                                    a.forEach(function(i) {
                                        var r = t(i);
                                        if (r) {
                                            var n =
                                                    t({
                                                        section: i.section,
                                                        type: i.refType,
                                                        name: i.refName
                                                    }) === i.posVal
                                                        ? 1
                                                        : -1,
                                                a =
                                                    (r[0] +
                                                        r[1] / 60 +
                                                        r[2] / 3600) *
                                                    n;
                                            e(i, a);
                                        }
                                    });
                                },
                                castDateValues: function(t, e) {
                                    o.forEach(function(i) {
                                        var r = t(i);
                                        if (r) {
                                            var a = n.parseExifDate(r);
                                            void 0 !== a && e(i, a);
                                        }
                                    });
                                },
                                simplifyValue: function(t, e) {
                                    return (
                                        Array.isArray(t) &&
                                            1 ===
                                                (t = t.map(function(t) {
                                                    return 10 === e || 5 === e
                                                        ? t[0] / t[1]
                                                        : t;
                                                })).length &&
                                            (t = t[0]),
                                        t
                                    );
                                }
                            };
                        },
                        { './date': 24, './exif': 27 }
                    ],
                    31: [
                        function(t, e, i) {
                            var r = function(t) {
                                    return [].concat(o(t)).map(function(t) {
                                        return t.charCodeAt(0);
                                    });
                                },
                                n = r('META-INF/mozilla.rsa'),
                                a = r('[Content_Types].xml'),
                                s = r('_rels/.rels');
                            e.exports = function(t) {
                                var e =
                                    t instanceof Uint8Array
                                        ? t
                                        : new Uint8Array(t);
                                if (!(e && e.length > 1)) return null;
                                var i = function(t, i) {
                                        i = Object.assign({ offset: 0 }, i);
                                        for (var r = 0; r < t.length; r++)
                                            if (i.mask) {
                                                if (
                                                    t[r] !==
                                                    (i.mask[r] &
                                                        e[r + i.offset])
                                                )
                                                    return !1;
                                            } else if (t[r] !== e[r + i.offset])
                                                return !1;
                                        return !0;
                                    },
                                    l = function(t, e) {
                                        return i(r(t), e);
                                    };
                                if (i([255, 216, 255]))
                                    return { ext: 'jpg', mime: 'image/jpeg' };
                                if (i([137, 80, 78, 71, 13, 10, 26, 10]))
                                    return { ext: 'png', mime: 'image/png' };
                                if (i([71, 73, 70]))
                                    return { ext: 'gif', mime: 'image/gif' };
                                if (i([87, 69, 66, 80], { offset: 8 }))
                                    return { ext: 'webp', mime: 'image/webp' };
                                if (i([70, 76, 73, 70]))
                                    return { ext: 'flif', mime: 'image/flif' };
                                if (
                                    (i([73, 73, 42, 0]) ||
                                        i([77, 77, 0, 42])) &&
                                    i([67, 82], { offset: 8 })
                                )
                                    return {
                                        ext: 'cr2',
                                        mime: 'image/x-canon-cr2'
                                    };
                                if (i([73, 73, 42, 0]) || i([77, 77, 0, 42]))
                                    return { ext: 'tif', mime: 'image/tiff' };
                                if (i([66, 77]))
                                    return { ext: 'bmp', mime: 'image/bmp' };
                                if (i([73, 73, 188]))
                                    return {
                                        ext: 'jxr',
                                        mime: 'image/vnd.ms-photo'
                                    };
                                if (i([56, 66, 80, 83]))
                                    return {
                                        ext: 'psd',
                                        mime: 'image/vnd.adobe.photoshop'
                                    };
                                if (i([80, 75, 3, 4])) {
                                    if (
                                        i(
                                            [
                                                109,
                                                105,
                                                109,
                                                101,
                                                116,
                                                121,
                                                112,
                                                101,
                                                97,
                                                112,
                                                112,
                                                108,
                                                105,
                                                99,
                                                97,
                                                116,
                                                105,
                                                111,
                                                110,
                                                47,
                                                101,
                                                112,
                                                117,
                                                98,
                                                43,
                                                122,
                                                105,
                                                112
                                            ],
                                            { offset: 30 }
                                        )
                                    )
                                        return {
                                            ext: 'epub',
                                            mime: 'application/epub+zip'
                                        };
                                    if (i(n, { offset: 30 }))
                                        return {
                                            ext: 'xpi',
                                            mime: 'application/x-xpinstall'
                                        };
                                    if (
                                        l(
                                            'mimetypeapplication/vnd.oasis.opendocument.text',
                                            { offset: 30 }
                                        )
                                    )
                                        return {
                                            ext: 'odt',
                                            mime:
                                                'application/vnd.oasis.opendocument.text'
                                        };
                                    if (
                                        l(
                                            'mimetypeapplication/vnd.oasis.opendocument.spreadsheet',
                                            { offset: 30 }
                                        )
                                    )
                                        return {
                                            ext: 'ods',
                                            mime:
                                                'application/vnd.oasis.opendocument.spreadsheet'
                                        };
                                    if (
                                        l(
                                            'mimetypeapplication/vnd.oasis.opendocument.presentation',
                                            { offset: 30 }
                                        )
                                    )
                                        return {
                                            ext: 'odp',
                                            mime:
                                                'application/vnd.oasis.opendocument.presentation'
                                        };
                                    if (
                                        i(a, { offset: 30 }) ||
                                        i(s, { offset: 30 })
                                    ) {
                                        var f = function(t) {
                                                return t.findIndex(function(
                                                    t,
                                                    e,
                                                    i
                                                ) {
                                                    return (
                                                        80 === i[e] &&
                                                        75 === i[e + 1] &&
                                                        3 === i[e + 2] &&
                                                        4 === i[e + 3]
                                                    );
                                                });
                                            },
                                            h = f(e.subarray(4, 2004));
                                        if (-1 !== h) {
                                            var c = f(
                                                e.subarray(h + 8, h + 8 + 1e3)
                                            );
                                            if (-1 !== c) {
                                                var u = 8 + h + c + 30;
                                                if (l('word/', { offset: u }))
                                                    return {
                                                        ext: 'docx',
                                                        mime:
                                                            'application/vnd.openxmlformats-officedocument.wordprocessingml.document'
                                                    };
                                                if (l('ppt/', { offset: u }))
                                                    return {
                                                        ext: 'pptx',
                                                        mime:
                                                            'application/vnd.openxmlformats-officedocument.presentationml.presentation'
                                                    };
                                                if (l('xl/', { offset: u }))
                                                    return {
                                                        ext: 'xlsx',
                                                        mime:
                                                            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
                                                    };
                                            }
                                        }
                                    }
                                }
                                if (
                                    i([80, 75]) &&
                                    (3 === e[2] || 5 === e[2] || 7 === e[2]) &&
                                    (4 === e[3] || 6 === e[3] || 8 === e[3])
                                )
                                    return {
                                        ext: 'zip',
                                        mime: 'application/zip'
                                    };
                                if (
                                    i([117, 115, 116, 97, 114], { offset: 257 })
                                )
                                    return {
                                        ext: 'tar',
                                        mime: 'application/x-tar'
                                    };
                                if (
                                    i([82, 97, 114, 33, 26, 7]) &&
                                    (0 === e[6] || 1 === e[6])
                                )
                                    return {
                                        ext: 'rar',
                                        mime: 'application/x-rar-compressed'
                                    };
                                if (i([31, 139, 8]))
                                    return {
                                        ext: 'gz',
                                        mime: 'application/gzip'
                                    };
                                if (i([66, 90, 104]))
                                    return {
                                        ext: 'bz2',
                                        mime: 'application/x-bzip2'
                                    };
                                if (i([55, 122, 188, 175, 39, 28]))
                                    return {
                                        ext: '7z',
                                        mime: 'application/x-7z-compressed'
                                    };
                                if (i([120, 1]))
                                    return {
                                        ext: 'dmg',
                                        mime: 'application/x-apple-diskimage'
                                    };
                                if (
                                    i([51, 103, 112, 53]) ||
                                    (i([0, 0, 0]) &&
                                        i([102, 116, 121, 112], {
                                            offset: 4
                                        }) &&
                                        (i([109, 112, 52, 49], { offset: 8 }) ||
                                            i([109, 112, 52, 50], {
                                                offset: 8
                                            }) ||
                                            i([105, 115, 111, 109], {
                                                offset: 8
                                            }) ||
                                            i([105, 115, 111, 50], {
                                                offset: 8
                                            }) ||
                                            i([109, 109, 112, 52], {
                                                offset: 8
                                            }) ||
                                            i([77, 52, 86], { offset: 8 }) ||
                                            i([100, 97, 115, 104], {
                                                offset: 8
                                            })))
                                )
                                    return { ext: 'mp4', mime: 'video/mp4' };
                                if (i([77, 84, 104, 100]))
                                    return { ext: 'mid', mime: 'audio/midi' };
                                if (i([26, 69, 223, 163])) {
                                    var p = e.subarray(4, 4100),
                                        d = p.findIndex(function(t, e, i) {
                                            return (
                                                66 === i[e] && 130 === i[e + 1]
                                            );
                                        });
                                    if (-1 !== d) {
                                        var m = d + 3,
                                            g = function(t) {
                                                return []
                                                    .concat(o(t))
                                                    .every(function(t, e) {
                                                        return (
                                                            p[m + e] ===
                                                            t.charCodeAt(0)
                                                        );
                                                    });
                                            };
                                        if (g('matroska'))
                                            return {
                                                ext: 'mkv',
                                                mime: 'video/x-matroska'
                                            };
                                        if (g('webm'))
                                            return {
                                                ext: 'webm',
                                                mime: 'video/webm'
                                            };
                                    }
                                }
                                if (
                                    i([
                                        0,
                                        0,
                                        0,
                                        20,
                                        102,
                                        116,
                                        121,
                                        112,
                                        113,
                                        116,
                                        32,
                                        32
                                    ]) ||
                                    i([102, 114, 101, 101], { offset: 4 }) ||
                                    i([102, 116, 121, 112, 113, 116, 32, 32], {
                                        offset: 4
                                    }) ||
                                    i([109, 100, 97, 116], { offset: 4 }) ||
                                    i([119, 105, 100, 101], { offset: 4 })
                                )
                                    return {
                                        ext: 'mov',
                                        mime: 'video/quicktime'
                                    };
                                if (i([82, 73, 70, 70])) {
                                    if (i([65, 86, 73], { offset: 8 }))
                                        return {
                                            ext: 'avi',
                                            mime: 'video/x-msvideo'
                                        };
                                    if (i([87, 65, 86, 69], { offset: 8 }))
                                        return {
                                            ext: 'wav',
                                            mime: 'audio/x-wav'
                                        };
                                    if (i([81, 76, 67, 77], { offset: 8 }))
                                        return {
                                            ext: 'qcp',
                                            mime: 'audio/qcelp'
                                        };
                                }
                                if (
                                    i([
                                        48,
                                        38,
                                        178,
                                        117,
                                        142,
                                        102,
                                        207,
                                        17,
                                        166,
                                        217
                                    ])
                                )
                                    return {
                                        ext: 'wmv',
                                        mime: 'video/x-ms-wmv'
                                    };
                                if (i([0, 0, 1, 186]) || i([0, 0, 1, 179]))
                                    return { ext: 'mpg', mime: 'video/mpeg' };
                                if (
                                    i([102, 116, 121, 112, 51, 103], {
                                        offset: 4
                                    })
                                )
                                    return { ext: '3gp', mime: 'video/3gpp' };
                                for (
                                    var b = 0;
                                    b < 2 && b < e.length - 16;
                                    b++
                                ) {
                                    if (
                                        i([73, 68, 51], { offset: b }) ||
                                        i([255, 226], {
                                            offset: b,
                                            mask: [255, 226]
                                        })
                                    )
                                        return {
                                            ext: 'mp3',
                                            mime: 'audio/mpeg'
                                        };
                                    if (
                                        i([255, 228], {
                                            offset: b,
                                            mask: [255, 228]
                                        })
                                    )
                                        return {
                                            ext: 'mp2',
                                            mime: 'audio/mpeg'
                                        };
                                    if (
                                        i([255, 248], {
                                            offset: b,
                                            mask: [255, 252]
                                        })
                                    )
                                        return {
                                            ext: 'mp2',
                                            mime: 'audio/mpeg'
                                        };
                                    if (
                                        i([255, 240], {
                                            offset: b,
                                            mask: [255, 252]
                                        })
                                    )
                                        return {
                                            ext: 'mp4',
                                            mime: 'audio/mpeg'
                                        };
                                }
                                if (
                                    i([102, 116, 121, 112, 77, 52, 65], {
                                        offset: 4
                                    }) ||
                                    i([77, 52, 65, 32])
                                )
                                    return { ext: 'm4a', mime: 'audio/m4a' };
                                if (
                                    i([79, 112, 117, 115, 72, 101, 97, 100], {
                                        offset: 28
                                    })
                                )
                                    return { ext: 'opus', mime: 'audio/opus' };
                                if (i([79, 103, 103, 83]))
                                    return i(
                                        [128, 116, 104, 101, 111, 114, 97],
                                        { offset: 28 }
                                    )
                                        ? { ext: 'ogv', mime: 'video/ogg' }
                                        : i([1, 118, 105, 100, 101, 111, 0], {
                                              offset: 28
                                          })
                                            ? { ext: 'ogm', mime: 'video/ogg' }
                                            : i([127, 70, 76, 65, 67], {
                                                  offset: 28
                                              })
                                                ? {
                                                      ext: 'oga',
                                                      mime: 'audio/ogg'
                                                  }
                                                : i(
                                                      [
                                                          83,
                                                          112,
                                                          101,
                                                          101,
                                                          120,
                                                          32,
                                                          32
                                                      ],
                                                      { offset: 28 }
                                                  )
                                                    ? {
                                                          ext: 'spx',
                                                          mime: 'audio/ogg'
                                                      }
                                                    : i(
                                                          [
                                                              1,
                                                              118,
                                                              111,
                                                              114,
                                                              98,
                                                              105,
                                                              115
                                                          ],
                                                          { offset: 28 }
                                                      )
                                                        ? {
                                                              ext: 'ogg',
                                                              mime: 'audio/ogg'
                                                          }
                                                        : {
                                                              ext: 'ogx',
                                                              mime:
                                                                  'application/ogg'
                                                          };
                                if (i([102, 76, 97, 67]))
                                    return {
                                        ext: 'flac',
                                        mime: 'audio/x-flac'
                                    };
                                if (i([77, 65, 67, 32]))
                                    return { ext: 'ape', mime: 'audio/ape' };
                                if (i([35, 33, 65, 77, 82, 10]))
                                    return { ext: 'amr', mime: 'audio/amr' };
                                if (i([37, 80, 68, 70]))
                                    return {
                                        ext: 'pdf',
                                        mime: 'application/pdf'
                                    };
                                if (i([77, 90]))
                                    return {
                                        ext: 'exe',
                                        mime: 'application/x-msdownload'
                                    };
                                if (
                                    (67 === e[0] || 70 === e[0]) &&
                                    i([87, 83], { offset: 1 })
                                )
                                    return {
                                        ext: 'swf',
                                        mime: 'application/x-shockwave-flash'
                                    };
                                if (i([123, 92, 114, 116, 102]))
                                    return {
                                        ext: 'rtf',
                                        mime: 'application/rtf'
                                    };
                                if (i([0, 97, 115, 109]))
                                    return {
                                        ext: 'wasm',
                                        mime: 'application/wasm'
                                    };
                                if (
                                    i([119, 79, 70, 70]) &&
                                    (i([0, 1, 0, 0], { offset: 4 }) ||
                                        i([79, 84, 84, 79], { offset: 4 }))
                                )
                                    return { ext: 'woff', mime: 'font/woff' };
                                if (
                                    i([119, 79, 70, 50]) &&
                                    (i([0, 1, 0, 0], { offset: 4 }) ||
                                        i([79, 84, 84, 79], { offset: 4 }))
                                )
                                    return { ext: 'woff2', mime: 'font/woff2' };
                                if (
                                    i([76, 80], { offset: 34 }) &&
                                    (i([0, 0, 1], { offset: 8 }) ||
                                        i([1, 0, 2], { offset: 8 }) ||
                                        i([2, 0, 2], { offset: 8 }))
                                )
                                    return {
                                        ext: 'eot',
                                        mime: 'application/octet-stream'
                                    };
                                if (i([0, 1, 0, 0, 0]))
                                    return { ext: 'ttf', mime: 'font/ttf' };
                                if (i([79, 84, 84, 79, 0]))
                                    return { ext: 'otf', mime: 'font/otf' };
                                if (i([0, 0, 1, 0]))
                                    return { ext: 'ico', mime: 'image/x-icon' };
                                if (i([0, 0, 2, 0]))
                                    return { ext: 'cur', mime: 'image/x-icon' };
                                if (i([70, 76, 86, 1]))
                                    return { ext: 'flv', mime: 'video/x-flv' };
                                if (i([37, 33]))
                                    return {
                                        ext: 'ps',
                                        mime: 'application/postscript'
                                    };
                                if (i([253, 55, 122, 88, 90, 0]))
                                    return {
                                        ext: 'xz',
                                        mime: 'application/x-xz'
                                    };
                                if (i([83, 81, 76, 105]))
                                    return {
                                        ext: 'sqlite',
                                        mime: 'application/x-sqlite3'
                                    };
                                if (i([78, 69, 83, 26]))
                                    return {
                                        ext: 'nes',
                                        mime: 'application/x-nintendo-nes-rom'
                                    };
                                if (i([67, 114, 50, 52]))
                                    return {
                                        ext: 'crx',
                                        mime:
                                            'application/x-google-chrome-extension'
                                    };
                                if (i([77, 83, 67, 70]) || i([73, 83, 99, 40]))
                                    return {
                                        ext: 'cab',
                                        mime:
                                            'application/vnd.ms-cab-compressed'
                                    };
                                if (
                                    i([
                                        33,
                                        60,
                                        97,
                                        114,
                                        99,
                                        104,
                                        62,
                                        10,
                                        100,
                                        101,
                                        98,
                                        105,
                                        97,
                                        110,
                                        45,
                                        98,
                                        105,
                                        110,
                                        97,
                                        114,
                                        121
                                    ])
                                )
                                    return {
                                        ext: 'deb',
                                        mime: 'application/x-deb'
                                    };
                                if (i([33, 60, 97, 114, 99, 104, 62]))
                                    return {
                                        ext: 'ar',
                                        mime: 'application/x-unix-archive'
                                    };
                                if (i([237, 171, 238, 219]))
                                    return {
                                        ext: 'rpm',
                                        mime: 'application/x-rpm'
                                    };
                                if (i([31, 160]) || i([31, 157]))
                                    return {
                                        ext: 'Z',
                                        mime: 'application/x-compress'
                                    };
                                if (i([76, 90, 73, 80]))
                                    return {
                                        ext: 'lz',
                                        mime: 'application/x-lzip'
                                    };
                                if (i([208, 207, 17, 224, 161, 177, 26, 225]))
                                    return {
                                        ext: 'msi',
                                        mime: 'application/x-msi'
                                    };
                                if (
                                    i([
                                        6,
                                        14,
                                        43,
                                        52,
                                        2,
                                        5,
                                        1,
                                        1,
                                        13,
                                        1,
                                        2,
                                        1,
                                        1,
                                        2
                                    ])
                                )
                                    return {
                                        ext: 'mxf',
                                        mime: 'application/mxf'
                                    };
                                if (
                                    i([71], { offset: 4 }) &&
                                    (i([71], { offset: 192 }) ||
                                        i([71], { offset: 196 }))
                                )
                                    return { ext: 'mts', mime: 'video/mp2t' };
                                if (i([66, 76, 69, 78, 68, 69, 82]))
                                    return {
                                        ext: 'blend',
                                        mime: 'application/x-blender'
                                    };
                                if (i([66, 80, 71, 251]))
                                    return { ext: 'bpg', mime: 'image/bpg' };
                                if (
                                    i([
                                        0,
                                        0,
                                        0,
                                        12,
                                        106,
                                        80,
                                        32,
                                        32,
                                        13,
                                        10,
                                        135,
                                        10
                                    ])
                                ) {
                                    if (i([106, 112, 50, 32], { offset: 20 }))
                                        return {
                                            ext: 'jp2',
                                            mime: 'image/jp2'
                                        };
                                    if (i([106, 112, 120, 32], { offset: 20 }))
                                        return {
                                            ext: 'jpx',
                                            mime: 'image/jpx'
                                        };
                                    if (i([106, 112, 109, 32], { offset: 20 }))
                                        return {
                                            ext: 'jpm',
                                            mime: 'image/jpm'
                                        };
                                    if (i([109, 106, 112, 50], { offset: 20 }))
                                        return {
                                            ext: 'mj2',
                                            mime: 'image/mj2'
                                        };
                                }
                                if (i([70, 79, 82, 77, 0]))
                                    return { ext: 'aif', mime: 'audio/aiff' };
                                if (l('<?xml '))
                                    return {
                                        ext: 'xml',
                                        mime: 'application/xml'
                                    };
                                if (
                                    i([66, 79, 79, 75, 77, 79, 66, 73], {
                                        offset: 60
                                    })
                                )
                                    return {
                                        ext: 'mobi',
                                        mime: 'application/x-mobipocket-ebook'
                                    };
                                if (i([102, 116, 121, 112], { offset: 4 })) {
                                    if (i([109, 105, 102, 49], { offset: 8 }))
                                        return {
                                            ext: 'heic',
                                            mime: 'image/heif'
                                        };
                                    if (i([109, 115, 102, 49], { offset: 8 }))
                                        return {
                                            ext: 'heic',
                                            mime: 'image/heif-sequence'
                                        };
                                    if (
                                        i([104, 101, 105, 99], { offset: 8 }) ||
                                        i([104, 101, 105, 120], { offset: 8 })
                                    )
                                        return {
                                            ext: 'heic',
                                            mime: 'image/heic'
                                        };
                                    if (
                                        i([104, 101, 118, 99], { offset: 8 }) ||
                                        i([104, 101, 118, 120], { offset: 8 })
                                    )
                                        return {
                                            ext: 'heic',
                                            mime: 'image/heic-sequence'
                                        };
                                }
                                return i([
                                    171,
                                    75,
                                    84,
                                    88,
                                    32,
                                    49,
                                    49,
                                    187,
                                    13,
                                    10,
                                    26,
                                    10
                                ])
                                    ? { ext: 'ktx', mime: 'image/ktx' }
                                    : null;
                            };
                        },
                        {}
                    ],
                    32: [
                        function(t, e, i) {
                            var r = t('is-callable'),
                                n = Object.prototype.toString,
                                a = Object.prototype.hasOwnProperty;
                            e.exports = function(t, e, i) {
                                if (!r(e))
                                    throw new TypeError(
                                        'iterator must be a function'
                                    );
                                var o;
                                arguments.length >= 3 && (o = i),
                                    '[object Array]' === n.call(t)
                                        ? (function(t, e, i) {
                                              for (
                                                  var r = 0, n = t.length;
                                                  r < n;
                                                  r++
                                              )
                                                  a.call(t, r) &&
                                                      (null == i
                                                          ? e(t[r], r, t)
                                                          : e.call(
                                                                i,
                                                                t[r],
                                                                r,
                                                                t
                                                            ));
                                          })(t, e, o)
                                        : 'string' == typeof t
                                            ? (function(t, e, i) {
                                                  for (
                                                      var r = 0, n = t.length;
                                                      r < n;
                                                      r++
                                                  )
                                                      null == i
                                                          ? e(t.charAt(r), r, t)
                                                          : e.call(
                                                                i,
                                                                t.charAt(r),
                                                                r,
                                                                t
                                                            );
                                              })(t, e, o)
                                            : (function(t, e, i) {
                                                  for (var r in t)
                                                      a.call(t, r) &&
                                                          (null == i
                                                              ? e(t[r], r, t)
                                                              : e.call(
                                                                    i,
                                                                    t[r],
                                                                    r,
                                                                    t
                                                                ));
                                              })(t, e, o);
                            };
                        },
                        { 'is-callable': 38 }
                    ],
                    33: [
                        function(e, i, r) {
                            (function(t) {
                                var e;
                                (e =
                                    void 0 !== f
                                        ? f
                                        : void 0 !== t
                                            ? t
                                            : 'undefined' != typeof self
                                                ? self
                                                : {}),
                                    (i.exports = e);
                            }.call(
                                this,
                                void 0 !== t
                                    ? t
                                    : 'undefined' != typeof self
                                        ? self
                                        : void 0 !== f
                                            ? f
                                            : {}
                            ));
                        },
                        {}
                    ],
                    34: [
                        function(t, e, i) {
                            var r = t('http'),
                                n = t('url'),
                                a = e.exports;
                            for (var o in r)
                                r.hasOwnProperty(o) && (a[o] = r[o]);
                            function s(t) {
                                if (
                                    ('string' == typeof t && (t = n.parse(t)),
                                    t.protocol || (t.protocol = 'https:'),
                                    'https:' !== t.protocol)
                                )
                                    throw new Error(
                                        'Protocol "' +
                                            t.protocol +
                                            '" not supported. Expected "https:"'
                                    );
                                return t;
                            }
                            (a.request = function(t, e) {
                                return (t = s(t)), r.request.call(this, t, e);
                            }),
                                (a.get = function(t, e) {
                                    return (t = s(t)), r.get.call(this, t, e);
                                });
                        },
                        { http: 119, url: 129 }
                    ],
                    35: [
                        function(t, e, i) {
                            (i.read = function(t, e, i, r, n) {
                                var a,
                                    o,
                                    s = 8 * n - r - 1,
                                    l = (1 << s) - 1,
                                    f = l >> 1,
                                    h = -7,
                                    c = i ? n - 1 : 0,
                                    u = i ? -1 : 1,
                                    p = t[e + c];
                                for (
                                    c += u,
                                        a = p & ((1 << -h) - 1),
                                        p >>= -h,
                                        h += s;
                                    h > 0;
                                    a = 256 * a + t[e + c], c += u, h -= 8
                                );
                                for (
                                    o = a & ((1 << -h) - 1), a >>= -h, h += r;
                                    h > 0;
                                    o = 256 * o + t[e + c], c += u, h -= 8
                                );
                                if (0 === a) a = 1 - f;
                                else {
                                    if (a === l)
                                        return o ? NaN : (1 / 0) * (p ? -1 : 1);
                                    (o += Math.pow(2, r)), (a -= f);
                                }
                                return (p ? -1 : 1) * o * Math.pow(2, a - r);
                            }),
                                (i.write = function(t, e, i, r, n, a) {
                                    var o,
                                        s,
                                        l,
                                        f = 8 * a - n - 1,
                                        h = (1 << f) - 1,
                                        c = h >> 1,
                                        u =
                                            23 === n
                                                ? Math.pow(2, -24) -
                                                  Math.pow(2, -77)
                                                : 0,
                                        p = r ? 0 : a - 1,
                                        d = r ? 1 : -1,
                                        m =
                                            e < 0 || (0 === e && 1 / e < 0)
                                                ? 1
                                                : 0;
                                    for (
                                        e = Math.abs(e),
                                            isNaN(e) || e === 1 / 0
                                                ? ((s = isNaN(e) ? 1 : 0),
                                                  (o = h))
                                                : ((o = Math.floor(
                                                      Math.log(e) / Math.LN2
                                                  )),
                                                  e * (l = Math.pow(2, -o)) <
                                                      1 && (o--, (l *= 2)),
                                                  (e +=
                                                      o + c >= 1
                                                          ? u / l
                                                          : u *
                                                            Math.pow(
                                                                2,
                                                                1 - c
                                                            )) *
                                                      l >=
                                                      2 && (o++, (l /= 2)),
                                                  o + c >= h
                                                      ? ((s = 0), (o = h))
                                                      : o + c >= 1
                                                          ? ((s =
                                                                (e * l - 1) *
                                                                Math.pow(2, n)),
                                                            (o += c))
                                                          : ((s =
                                                                e *
                                                                Math.pow(
                                                                    2,
                                                                    c - 1
                                                                ) *
                                                                Math.pow(2, n)),
                                                            (o = 0)));
                                        n >= 8;
                                        t[i + p] = 255 & s,
                                            p += d,
                                            s /= 256,
                                            n -= 8
                                    );
                                    for (
                                        o = (o << n) | s, f += n;
                                        f > 0;
                                        t[i + p] = 255 & o,
                                            p += d,
                                            o /= 256,
                                            f -= 8
                                    );
                                    t[i + p - d] |= 128 * m;
                                });
                        },
                        {}
                    ],
                    36: [
                        function(t, e, i) {
                            arguments[4][3][0].apply(i, arguments);
                        },
                        { dup: 3 }
                    ],
                    37: [
                        function(t, e, i) {
                            function r(t) {
                                return (
                                    !!t.constructor &&
                                    'function' ==
                                        typeof t.constructor.isBuffer &&
                                    t.constructor.isBuffer(t)
                                );
                            }
                            e.exports = function(t) {
                                return (
                                    null != t &&
                                    (r(t) ||
                                        (function(t) {
                                            return (
                                                'function' ==
                                                    typeof t.readFloatLE &&
                                                'function' == typeof t.slice &&
                                                r(t.slice(0, 0))
                                            );
                                        })(t) ||
                                        !!t._isBuffer)
                                );
                            };
                        },
                        {}
                    ],
                    38: [
                        function(t, e, i) {
                            var r = Function.prototype.toString,
                                n = /^\s*class\b/,
                                o = function(t) {
                                    try {
                                        var e = r.call(t);
                                        return n.test(e);
                                    } catch (t) {
                                        return !1;
                                    }
                                },
                                s = Object.prototype.toString,
                                l =
                                    'function' == typeof Symbol &&
                                    'symbol' === a(Symbol.toStringTag);
                            e.exports = function(t) {
                                if (!t) return !1;
                                if (
                                    'function' != typeof t &&
                                    'object' !==
                                        (void 0 === t ? 'undefined' : a(t))
                                )
                                    return !1;
                                if ('function' == typeof t && !t.prototype)
                                    return !0;
                                if (l)
                                    return (function(t) {
                                        try {
                                            return !o(t) && (r.call(t), !0);
                                        } catch (t) {
                                            return !1;
                                        }
                                    })(t);
                                if (o(t)) return !1;
                                var e = s.call(t);
                                return (
                                    '[object Function]' === e ||
                                    '[object GeneratorFunction]' === e
                                );
                            };
                        },
                        {}
                    ],
                    39: [
                        function(t, e, i) {
                            e.exports = function(t) {
                                var e = r.call(t);
                                return (
                                    '[object Function]' === e ||
                                    ('function' == typeof t &&
                                        '[object RegExp]' !== e) ||
                                    (void 0 !== f &&
                                        (t === f.setTimeout ||
                                            t === f.alert ||
                                            t === f.confirm ||
                                            t === f.prompt))
                                );
                            };
                            var r = Object.prototype.toString;
                        },
                        {}
                    ],
                    40: [
                        function(t, e, i) {
                            var r = {}.toString;
                            e.exports =
                                Array.isArray ||
                                function(t) {
                                    return '[object Array]' == r.call(t);
                                };
                        },
                        {}
                    ],
                    41: [
                        function(t, e, i) {
                            var r = t('./lib/encoder'),
                                n = t('./lib/decoder');
                            e.exports = { encode: r, decode: n };
                        },
                        { './lib/decoder': 42, './lib/encoder': 43 }
                    ],
                    42: [
                        function(t, e, i) {
                            (function(t) {
                                var i = (function() {
                                    var t = new Int32Array([
                                            0,
                                            1,
                                            8,
                                            16,
                                            9,
                                            2,
                                            3,
                                            10,
                                            17,
                                            24,
                                            32,
                                            25,
                                            18,
                                            11,
                                            4,
                                            5,
                                            12,
                                            19,
                                            26,
                                            33,
                                            40,
                                            48,
                                            41,
                                            34,
                                            27,
                                            20,
                                            13,
                                            6,
                                            7,
                                            14,
                                            21,
                                            28,
                                            35,
                                            42,
                                            49,
                                            56,
                                            57,
                                            50,
                                            43,
                                            36,
                                            29,
                                            22,
                                            15,
                                            23,
                                            30,
                                            37,
                                            44,
                                            51,
                                            58,
                                            59,
                                            52,
                                            45,
                                            38,
                                            31,
                                            39,
                                            46,
                                            53,
                                            60,
                                            61,
                                            54,
                                            47,
                                            55,
                                            62,
                                            63
                                        ]),
                                        e = 4017,
                                        i = 799,
                                        r = 3406,
                                        n = 2276,
                                        o = 1567,
                                        s = 3784,
                                        l = 5793,
                                        f = 2896;
                                    function h() {}
                                    function c(t, e) {
                                        for (
                                            var i, r, n = 0, a = [], o = 16;
                                            o > 0 && !t[o - 1];

                                        )
                                            o--;
                                        a.push({ children: [], index: 0 });
                                        var s,
                                            l = a[0];
                                        for (i = 0; i < o; i++) {
                                            for (r = 0; r < t[i]; r++) {
                                                for (
                                                    (l = a.pop()).children[
                                                        l.index
                                                    ] =
                                                        e[n];
                                                    l.index > 0;

                                                )
                                                    l = a.pop();
                                                for (
                                                    l.index++, a.push(l);
                                                    a.length <= i;

                                                )
                                                    a.push(
                                                        (s = {
                                                            children: [],
                                                            index: 0
                                                        })
                                                    ),
                                                        (l.children[l.index] =
                                                            s.children),
                                                        (l = s);
                                                n++;
                                            }
                                            i + 1 < o &&
                                                (a.push(
                                                    (s = {
                                                        children: [],
                                                        index: 0
                                                    })
                                                ),
                                                (l.children[l.index] =
                                                    s.children),
                                                (l = s));
                                        }
                                        return a[0].children;
                                    }
                                    function u(e, i, r, n, o, s, l, f, h) {
                                        r.precision,
                                            r.samplesPerLine,
                                            r.scanLines;
                                        var c = r.mcusPerLine,
                                            u = r.progressive,
                                            p = (r.maxH, r.maxV, i),
                                            d = 0,
                                            m = 0;
                                        function g() {
                                            if (m > 0) return (d >> --m) & 1;
                                            if (255 == (d = e[i++])) {
                                                var t = e[i++];
                                                if (t)
                                                    throw new Error(
                                                        'unexpected marker: ' +
                                                            (
                                                                (d << 8) |
                                                                t
                                                            ).toString(16)
                                                    );
                                            }
                                            return (m = 7), d >>> 7;
                                        }
                                        function b(t) {
                                            for (
                                                var e, i = t;
                                                null !== (e = g());

                                            ) {
                                                if (
                                                    'number' ==
                                                    typeof (i = i[e])
                                                )
                                                    return i;
                                                if (
                                                    'object' !==
                                                    (void 0 === i
                                                        ? 'undefined'
                                                        : a(i))
                                                )
                                                    throw new Error(
                                                        'invalid huffman sequence'
                                                    );
                                            }
                                            return null;
                                        }
                                        function v(t) {
                                            for (var e = 0; t > 0; ) {
                                                var i = g();
                                                if (null === i) return;
                                                (e = (e << 1) | i), t--;
                                            }
                                            return e;
                                        }
                                        function y(t) {
                                            var e = v(t);
                                            return e >= 1 << (t - 1)
                                                ? e
                                                : e + (-1 << t) + 1;
                                        }
                                        var w = 0;
                                        var _,
                                            x = 0;
                                        function k(t, e, i, r, n) {
                                            var a = i % c,
                                                o = ((i / c) | 0) * t.v + r,
                                                s = a * t.h + n;
                                            e(t, t.blocks[o][s]);
                                        }
                                        function E(t, e, i) {
                                            var r = (i / t.blocksPerLine) | 0,
                                                n = i % t.blocksPerLine;
                                            e(t, t.blocks[r][n]);
                                        }
                                        var I,
                                            S,
                                            A,
                                            T,
                                            C,
                                            M,
                                            P = n.length;
                                        M = u
                                            ? 0 === s
                                                ? 0 === f
                                                    ? function(t, e) {
                                                          var i = b(
                                                                  t.huffmanTableDC
                                                              ),
                                                              r =
                                                                  0 === i
                                                                      ? 0
                                                                      : y(i) <<
                                                                        h;
                                                          e[0] = t.pred += r;
                                                      }
                                                    : function(t, e) {
                                                          e[0] |= g() << h;
                                                      }
                                                : 0 === f
                                                    ? function(e, i) {
                                                          if (w > 0) w--;
                                                          else
                                                              for (
                                                                  var r = s,
                                                                      n = l;
                                                                  r <= n;

                                                              ) {
                                                                  var a = b(
                                                                          e.huffmanTableAC
                                                                      ),
                                                                      o =
                                                                          15 &
                                                                          a,
                                                                      f =
                                                                          a >>
                                                                          4;
                                                                  if (0 !== o)
                                                                      (i[
                                                                          t[
                                                                              (r += f)
                                                                          ]
                                                                      ] =
                                                                          y(o) *
                                                                          (1 <<
                                                                              h)),
                                                                          r++;
                                                                  else {
                                                                      if (
                                                                          f < 15
                                                                      ) {
                                                                          w =
                                                                              v(
                                                                                  f
                                                                              ) +
                                                                              (1 <<
                                                                                  f) -
                                                                              1;
                                                                          break;
                                                                      }
                                                                      r += 16;
                                                                  }
                                                              }
                                                      }
                                                    : function(e, i) {
                                                          for (
                                                              var r = s,
                                                                  n = l,
                                                                  a = 0;
                                                              r <= n;

                                                          ) {
                                                              var o = t[r],
                                                                  f =
                                                                      i[o] < 0
                                                                          ? -1
                                                                          : 1;
                                                              switch (x) {
                                                                  case 0:
                                                                      var c = b(
                                                                              e.huffmanTableAC
                                                                          ),
                                                                          u =
                                                                              15 &
                                                                              c;
                                                                      if (
                                                                          ((a =
                                                                              c >>
                                                                              4),
                                                                          0 ===
                                                                              u)
                                                                      )
                                                                          a < 15
                                                                              ? ((w =
                                                                                    v(
                                                                                        a
                                                                                    ) +
                                                                                    (1 <<
                                                                                        a)),
                                                                                (x = 4))
                                                                              : ((a = 16),
                                                                                (x = 1));
                                                                      else {
                                                                          if (
                                                                              1 !==
                                                                              u
                                                                          )
                                                                              throw new Error(
                                                                                  'invalid ACn encoding'
                                                                              );
                                                                          (_ = y(
                                                                              u
                                                                          )),
                                                                              (x = a
                                                                                  ? 2
                                                                                  : 3);
                                                                      }
                                                                      continue;
                                                                  case 1:
                                                                  case 2:
                                                                      i[o]
                                                                          ? (i[
                                                                                o
                                                                            ] +=
                                                                                (g() <<
                                                                                    h) *
                                                                                f)
                                                                          : 0 ==
                                                                                --a &&
                                                                            (x =
                                                                                2 ==
                                                                                x
                                                                                    ? 3
                                                                                    : 0);
                                                                      break;
                                                                  case 3:
                                                                      i[o]
                                                                          ? (i[
                                                                                o
                                                                            ] +=
                                                                                (g() <<
                                                                                    h) *
                                                                                f)
                                                                          : ((i[
                                                                                o
                                                                            ] =
                                                                                _ <<
                                                                                h),
                                                                            (x = 0));
                                                                      break;
                                                                  case 4:
                                                                      i[o] &&
                                                                          (i[
                                                                              o
                                                                          ] +=
                                                                              (g() <<
                                                                                  h) *
                                                                              f);
                                                              }
                                                              r++;
                                                          }
                                                          4 === x &&
                                                              0 == --w &&
                                                              (x = 0);
                                                      }
                                            : function(e, i) {
                                                  var r = b(e.huffmanTableDC),
                                                      n = 0 === r ? 0 : y(r);
                                                  i[0] = e.pred += n;
                                                  for (var a = 1; a < 64; ) {
                                                      var o = b(
                                                              e.huffmanTableAC
                                                          ),
                                                          s = 15 & o,
                                                          l = o >> 4;
                                                      if (0 !== s)
                                                          (i[t[(a += l)]] = y(
                                                              s
                                                          )),
                                                              a++;
                                                      else {
                                                          if (l < 15) break;
                                                          a += 16;
                                                      }
                                                  }
                                              };
                                        var L,
                                            O,
                                            R,
                                            B,
                                            D = 0;
                                        for (
                                            O =
                                                1 == P
                                                    ? n[0].blocksPerLine *
                                                      n[0].blocksPerColumn
                                                    : c * r.mcusPerColumn,
                                                o || (o = O);
                                            D < O;

                                        ) {
                                            for (S = 0; S < P; S++)
                                                n[S].pred = 0;
                                            if (((w = 0), 1 == P))
                                                for (
                                                    I = n[0], C = 0;
                                                    C < o;
                                                    C++
                                                )
                                                    E(I, M, D), D++;
                                            else
                                                for (C = 0; C < o; C++) {
                                                    for (S = 0; S < P; S++)
                                                        for (
                                                            R = (I = n[S]).h,
                                                                B = I.v,
                                                                A = 0;
                                                            A < B;
                                                            A++
                                                        )
                                                            for (
                                                                T = 0;
                                                                T < R;
                                                                T++
                                                            )
                                                                k(
                                                                    I,
                                                                    M,
                                                                    D,
                                                                    A,
                                                                    T
                                                                );
                                                    if (++D === O) break;
                                                }
                                            if (
                                                ((m = 0),
                                                (L = (e[i] << 8) | e[i + 1]) <
                                                    65280)
                                            )
                                                throw new Error(
                                                    'marker was not found'
                                                );
                                            if (!(L >= 65488 && L <= 65495))
                                                break;
                                            i += 2;
                                        }
                                        return i - p;
                                    }
                                    function p(t, a) {
                                        var h,
                                            c,
                                            u = [],
                                            p = a.blocksPerLine,
                                            d = a.blocksPerColumn,
                                            m = p << 3,
                                            g = new Int32Array(64),
                                            b = new Uint8Array(64);
                                        function v(t, h, c) {
                                            var u,
                                                p,
                                                d,
                                                m,
                                                g,
                                                b,
                                                v,
                                                y,
                                                w,
                                                _,
                                                x = a.quantizationTable,
                                                k = c;
                                            for (_ = 0; _ < 64; _++)
                                                k[_] = t[_] * x[_];
                                            for (_ = 0; _ < 8; ++_) {
                                                var E = 8 * _;
                                                0 != k[1 + E] ||
                                                0 != k[2 + E] ||
                                                0 != k[3 + E] ||
                                                0 != k[4 + E] ||
                                                0 != k[5 + E] ||
                                                0 != k[6 + E] ||
                                                0 != k[7 + E]
                                                    ? ((u =
                                                          (l * k[0 + E] +
                                                              128) >>
                                                          8),
                                                      (p =
                                                          (l * k[4 + E] +
                                                              128) >>
                                                          8),
                                                      (d = k[2 + E]),
                                                      (m = k[6 + E]),
                                                      (g =
                                                          (f *
                                                              (k[1 + E] -
                                                                  k[7 + E]) +
                                                              128) >>
                                                          8),
                                                      (y =
                                                          (f *
                                                              (k[1 + E] +
                                                                  k[7 + E]) +
                                                              128) >>
                                                          8),
                                                      (b = k[3 + E] << 4),
                                                      (v = k[5 + E] << 4),
                                                      (w = (u - p + 1) >> 1),
                                                      (u = (u + p + 1) >> 1),
                                                      (p = w),
                                                      (w =
                                                          (d * s +
                                                              m * o +
                                                              128) >>
                                                          8),
                                                      (d =
                                                          (d * o -
                                                              m * s +
                                                              128) >>
                                                          8),
                                                      (m = w),
                                                      (w = (g - v + 1) >> 1),
                                                      (g = (g + v + 1) >> 1),
                                                      (v = w),
                                                      (w = (y + b + 1) >> 1),
                                                      (b = (y - b + 1) >> 1),
                                                      (y = w),
                                                      (w = (u - m + 1) >> 1),
                                                      (u = (u + m + 1) >> 1),
                                                      (m = w),
                                                      (w = (p - d + 1) >> 1),
                                                      (p = (p + d + 1) >> 1),
                                                      (d = w),
                                                      (w =
                                                          (g * n +
                                                              y * r +
                                                              2048) >>
                                                          12),
                                                      (g =
                                                          (g * r -
                                                              y * n +
                                                              2048) >>
                                                          12),
                                                      (y = w),
                                                      (w =
                                                          (b * i +
                                                              v * e +
                                                              2048) >>
                                                          12),
                                                      (b =
                                                          (b * e -
                                                              v * i +
                                                              2048) >>
                                                          12),
                                                      (v = w),
                                                      (k[0 + E] = u + y),
                                                      (k[7 + E] = u - y),
                                                      (k[1 + E] = p + v),
                                                      (k[6 + E] = p - v),
                                                      (k[2 + E] = d + b),
                                                      (k[5 + E] = d - b),
                                                      (k[3 + E] = m + g),
                                                      (k[4 + E] = m - g))
                                                    : ((w =
                                                          (l * k[0 + E] +
                                                              512) >>
                                                          10),
                                                      (k[0 + E] = w),
                                                      (k[1 + E] = w),
                                                      (k[2 + E] = w),
                                                      (k[3 + E] = w),
                                                      (k[4 + E] = w),
                                                      (k[5 + E] = w),
                                                      (k[6 + E] = w),
                                                      (k[7 + E] = w));
                                            }
                                            for (_ = 0; _ < 8; ++_) {
                                                var I = _;
                                                0 != k[8 + I] ||
                                                0 != k[16 + I] ||
                                                0 != k[24 + I] ||
                                                0 != k[32 + I] ||
                                                0 != k[40 + I] ||
                                                0 != k[48 + I] ||
                                                0 != k[56 + I]
                                                    ? ((u =
                                                          (l * k[0 + I] +
                                                              2048) >>
                                                          12),
                                                      (p =
                                                          (l * k[32 + I] +
                                                              2048) >>
                                                          12),
                                                      (d = k[16 + I]),
                                                      (m = k[48 + I]),
                                                      (g =
                                                          (f *
                                                              (k[8 + I] -
                                                                  k[56 + I]) +
                                                              2048) >>
                                                          12),
                                                      (y =
                                                          (f *
                                                              (k[8 + I] +
                                                                  k[56 + I]) +
                                                              2048) >>
                                                          12),
                                                      (b = k[24 + I]),
                                                      (v = k[40 + I]),
                                                      (w = (u - p + 1) >> 1),
                                                      (u = (u + p + 1) >> 1),
                                                      (p = w),
                                                      (w =
                                                          (d * s +
                                                              m * o +
                                                              2048) >>
                                                          12),
                                                      (d =
                                                          (d * o -
                                                              m * s +
                                                              2048) >>
                                                          12),
                                                      (m = w),
                                                      (w = (g - v + 1) >> 1),
                                                      (g = (g + v + 1) >> 1),
                                                      (v = w),
                                                      (w = (y + b + 1) >> 1),
                                                      (b = (y - b + 1) >> 1),
                                                      (y = w),
                                                      (w = (u - m + 1) >> 1),
                                                      (u = (u + m + 1) >> 1),
                                                      (m = w),
                                                      (w = (p - d + 1) >> 1),
                                                      (p = (p + d + 1) >> 1),
                                                      (d = w),
                                                      (w =
                                                          (g * n +
                                                              y * r +
                                                              2048) >>
                                                          12),
                                                      (g =
                                                          (g * r -
                                                              y * n +
                                                              2048) >>
                                                          12),
                                                      (y = w),
                                                      (w =
                                                          (b * i +
                                                              v * e +
                                                              2048) >>
                                                          12),
                                                      (b =
                                                          (b * e -
                                                              v * i +
                                                              2048) >>
                                                          12),
                                                      (v = w),
                                                      (k[0 + I] = u + y),
                                                      (k[56 + I] = u - y),
                                                      (k[8 + I] = p + v),
                                                      (k[48 + I] = p - v),
                                                      (k[16 + I] = d + b),
                                                      (k[40 + I] = d - b),
                                                      (k[24 + I] = m + g),
                                                      (k[32 + I] = m - g))
                                                    : ((w =
                                                          (l * c[_ + 0] +
                                                              8192) >>
                                                          14),
                                                      (k[0 + I] = w),
                                                      (k[8 + I] = w),
                                                      (k[16 + I] = w),
                                                      (k[24 + I] = w),
                                                      (k[32 + I] = w),
                                                      (k[40 + I] = w),
                                                      (k[48 + I] = w),
                                                      (k[56 + I] = w));
                                            }
                                            for (_ = 0; _ < 64; ++_) {
                                                var S = 128 + ((k[_] + 8) >> 4);
                                                h[_] =
                                                    S < 0
                                                        ? 0
                                                        : S > 255
                                                            ? 255
                                                            : S;
                                            }
                                        }
                                        for (var y = 0; y < d; y++) {
                                            var w = y << 3;
                                            for (h = 0; h < 8; h++)
                                                u.push(new Uint8Array(m));
                                            for (var _ = 0; _ < p; _++) {
                                                v(a.blocks[y][_], b, g);
                                                var x = 0,
                                                    k = _ << 3;
                                                for (c = 0; c < 8; c++) {
                                                    var E = u[w + c];
                                                    for (h = 0; h < 8; h++)
                                                        E[k + h] = b[x++];
                                                }
                                            }
                                        }
                                        return u;
                                    }
                                    function d(t) {
                                        return t < 0 ? 0 : t > 255 ? 255 : t;
                                    }
                                    return (
                                        (h.prototype = {
                                            load: function(t) {
                                                var e = new XMLHttpRequest();
                                                e.open('GET', t, !0),
                                                    (e.responseType =
                                                        'arraybuffer'),
                                                    (e.onload = function() {
                                                        var t = new Uint8Array(
                                                            e.response ||
                                                                e.mozResponseArrayBuffer
                                                        );
                                                        this.parse(t),
                                                            this.onload &&
                                                                this.onload();
                                                    }.bind(this)),
                                                    e.send(null);
                                            },
                                            parse: function(e) {
                                                var i = 0;
                                                e.length;
                                                function r() {
                                                    var t =
                                                        (e[i] << 8) | e[i + 1];
                                                    return (i += 2), t;
                                                }
                                                function n() {
                                                    var t = r(),
                                                        n = e.subarray(
                                                            i,
                                                            i + t - 2
                                                        );
                                                    return (i += n.length), n;
                                                }
                                                function a(t) {
                                                    var e,
                                                        i,
                                                        r = 0,
                                                        n = 0;
                                                    for (i in t.components)
                                                        t.components.hasOwnProperty(
                                                            i
                                                        ) &&
                                                            (r <
                                                                (e =
                                                                    t
                                                                        .components[
                                                                        i
                                                                    ]).h &&
                                                                (r = e.h),
                                                            n < e.v &&
                                                                (n = e.v));
                                                    var a = Math.ceil(
                                                            t.samplesPerLine /
                                                                8 /
                                                                r
                                                        ),
                                                        o = Math.ceil(
                                                            t.scanLines / 8 / n
                                                        );
                                                    for (i in t.components)
                                                        if (
                                                            t.components.hasOwnProperty(
                                                                i
                                                            )
                                                        ) {
                                                            e = t.components[i];
                                                            for (
                                                                var s = Math.ceil(
                                                                        (Math.ceil(
                                                                            t.samplesPerLine /
                                                                                8
                                                                        ) *
                                                                            e.h) /
                                                                            r
                                                                    ),
                                                                    l = Math.ceil(
                                                                        (Math.ceil(
                                                                            t.scanLines /
                                                                                8
                                                                        ) *
                                                                            e.v) /
                                                                            n
                                                                    ),
                                                                    f = a * e.h,
                                                                    h = o * e.v,
                                                                    c = [],
                                                                    u = 0;
                                                                u < h;
                                                                u++
                                                            ) {
                                                                for (
                                                                    var p = [],
                                                                        d = 0;
                                                                    d < f;
                                                                    d++
                                                                )
                                                                    p.push(
                                                                        new Int32Array(
                                                                            64
                                                                        )
                                                                    );
                                                                c.push(p);
                                                            }
                                                            (e.blocksPerLine = s),
                                                                (e.blocksPerColumn = l),
                                                                (e.blocks = c);
                                                        }
                                                    (t.maxH = r),
                                                        (t.maxV = n),
                                                        (t.mcusPerLine = a),
                                                        (t.mcusPerColumn = o);
                                                }
                                                var o,
                                                    s,
                                                    l = null,
                                                    f = null,
                                                    h = [],
                                                    d = [],
                                                    m = [],
                                                    g = [],
                                                    b = r();
                                                if (65496 != b)
                                                    throw new Error(
                                                        'SOI not found'
                                                    );
                                                for (b = r(); 65497 != b; ) {
                                                    switch (b) {
                                                        case 65280:
                                                            break;
                                                        case 65504:
                                                        case 65505:
                                                        case 65506:
                                                        case 65507:
                                                        case 65508:
                                                        case 65509:
                                                        case 65510:
                                                        case 65511:
                                                        case 65512:
                                                        case 65513:
                                                        case 65514:
                                                        case 65515:
                                                        case 65516:
                                                        case 65517:
                                                        case 65518:
                                                        case 65519:
                                                        case 65534:
                                                            var v = n();
                                                            65504 === b &&
                                                                74 === v[0] &&
                                                                70 === v[1] &&
                                                                73 === v[2] &&
                                                                70 === v[3] &&
                                                                0 === v[4] &&
                                                                (l = {
                                                                    version: {
                                                                        major:
                                                                            v[5],
                                                                        minor:
                                                                            v[6]
                                                                    },
                                                                    densityUnits:
                                                                        v[7],
                                                                    xDensity:
                                                                        (v[8] <<
                                                                            8) |
                                                                        v[9],
                                                                    yDensity:
                                                                        (v[10] <<
                                                                            8) |
                                                                        v[11],
                                                                    thumbWidth:
                                                                        v[12],
                                                                    thumbHeight:
                                                                        v[13],
                                                                    thumbData: v.subarray(
                                                                        14,
                                                                        14 +
                                                                            3 *
                                                                                v[12] *
                                                                                v[13]
                                                                    )
                                                                }),
                                                                65518 === b &&
                                                                    65 ===
                                                                        v[0] &&
                                                                    100 ===
                                                                        v[1] &&
                                                                    111 ===
                                                                        v[2] &&
                                                                    98 ===
                                                                        v[3] &&
                                                                    101 ===
                                                                        v[4] &&
                                                                    0 ===
                                                                        v[5] &&
                                                                    (f = {
                                                                        version:
                                                                            v[6],
                                                                        flags0:
                                                                            (v[7] <<
                                                                                8) |
                                                                            v[8],
                                                                        flags1:
                                                                            (v[9] <<
                                                                                8) |
                                                                            v[10],
                                                                        transformCode:
                                                                            v[11]
                                                                    });
                                                            break;
                                                        case 65499:
                                                            for (
                                                                var y =
                                                                    r() + i - 2;
                                                                i < y;

                                                            ) {
                                                                var w = e[i++],
                                                                    _ = new Int32Array(
                                                                        64
                                                                    );
                                                                if (w >> 4 == 0)
                                                                    for (
                                                                        j = 0;
                                                                        j < 64;
                                                                        j++
                                                                    ) {
                                                                        _[
                                                                            t[j]
                                                                        ] =
                                                                            e[
                                                                                i++
                                                                            ];
                                                                    }
                                                                else {
                                                                    if (
                                                                        w >>
                                                                            4 !=
                                                                        1
                                                                    )
                                                                        throw new Error(
                                                                            'DQT: invalid table spec'
                                                                        );
                                                                    for (
                                                                        j = 0;
                                                                        j < 64;
                                                                        j++
                                                                    ) {
                                                                        _[
                                                                            t[j]
                                                                        ] = r();
                                                                    }
                                                                }
                                                                h[15 & w] = _;
                                                            }
                                                            break;
                                                        case 65472:
                                                        case 65473:
                                                        case 65474:
                                                            r(),
                                                                ((o = {}).extended =
                                                                    65473 ===
                                                                    b),
                                                                (o.progressive =
                                                                    65474 ===
                                                                    b),
                                                                (o.precision =
                                                                    e[i++]),
                                                                (o.scanLines = r()),
                                                                (o.samplesPerLine = r()),
                                                                (o.components = {}),
                                                                (o.componentsOrder = []);
                                                            var x,
                                                                k = e[i++];
                                                            for (
                                                                N = 0;
                                                                N < k;
                                                                N++
                                                            ) {
                                                                x = e[i];
                                                                var E =
                                                                        e[
                                                                            i +
                                                                                1
                                                                        ] >> 4,
                                                                    I =
                                                                        15 &
                                                                        e[
                                                                            i +
                                                                                1
                                                                        ],
                                                                    S =
                                                                        e[
                                                                            i +
                                                                                2
                                                                        ];
                                                                o.componentsOrder.push(
                                                                    x
                                                                ),
                                                                    (o.components[
                                                                        x
                                                                    ] = {
                                                                        h: E,
                                                                        v: I,
                                                                        quantizationIdx: S
                                                                    }),
                                                                    (i += 3);
                                                            }
                                                            a(o), d.push(o);
                                                            break;
                                                        case 65476:
                                                            var A = r();
                                                            for (
                                                                N = 2;
                                                                N < A;

                                                            ) {
                                                                var T = e[i++],
                                                                    C = new Uint8Array(
                                                                        16
                                                                    ),
                                                                    M = 0;
                                                                for (
                                                                    j = 0;
                                                                    j < 16;
                                                                    j++, i++
                                                                )
                                                                    M += C[j] =
                                                                        e[i];
                                                                var P = new Uint8Array(
                                                                    M
                                                                );
                                                                for (
                                                                    j = 0;
                                                                    j < M;
                                                                    j++, i++
                                                                )
                                                                    P[j] = e[i];
                                                                (N += 17 + M),
                                                                    ((T >> 4 ==
                                                                    0
                                                                        ? g
                                                                        : m)[
                                                                        15 & T
                                                                    ] = c(
                                                                        C,
                                                                        P
                                                                    ));
                                                            }
                                                            break;
                                                        case 65501:
                                                            r(), (s = r());
                                                            break;
                                                        case 65498:
                                                            r();
                                                            var L = e[i++],
                                                                O = [];
                                                            for (
                                                                N = 0;
                                                                N < L;
                                                                N++
                                                            ) {
                                                                H =
                                                                    o
                                                                        .components[
                                                                        e[i++]
                                                                    ];
                                                                var R = e[i++];
                                                                (H.huffmanTableDC =
                                                                    g[R >> 4]),
                                                                    (H.huffmanTableAC =
                                                                        m[
                                                                            15 &
                                                                                R
                                                                        ]),
                                                                    O.push(H);
                                                            }
                                                            var B = e[i++],
                                                                D = e[i++],
                                                                z = e[i++],
                                                                U = u(
                                                                    e,
                                                                    i,
                                                                    o,
                                                                    O,
                                                                    s,
                                                                    B,
                                                                    D,
                                                                    z >> 4,
                                                                    15 & z
                                                                );
                                                            i += U;
                                                            break;
                                                        case 65535:
                                                            255 !== e[i] && i--;
                                                            break;
                                                        default:
                                                            if (
                                                                255 ==
                                                                    e[i - 3] &&
                                                                e[i - 2] >=
                                                                    192 &&
                                                                e[i - 2] <= 254
                                                            ) {
                                                                i -= 3;
                                                                break;
                                                            }
                                                            throw new Error(
                                                                'unknown JPEG marker ' +
                                                                    b.toString(
                                                                        16
                                                                    )
                                                            );
                                                    }
                                                    b = r();
                                                }
                                                if (1 != d.length)
                                                    throw new Error(
                                                        'only single frame JPEGs supported'
                                                    );
                                                for (
                                                    var N = 0;
                                                    N < d.length;
                                                    N++
                                                ) {
                                                    var F = d[N].components;
                                                    for (var j in F)
                                                        (F[
                                                            j
                                                        ].quantizationTable =
                                                            h[
                                                                F[
                                                                    j
                                                                ].quantizationIdx
                                                            ]),
                                                            delete F[j]
                                                                .quantizationIdx;
                                                }
                                                (this.width = o.samplesPerLine),
                                                    (this.height = o.scanLines),
                                                    (this.jfif = l),
                                                    (this.adobe = f),
                                                    (this.components = []);
                                                for (
                                                    N = 0;
                                                    N <
                                                    o.componentsOrder.length;
                                                    N++
                                                ) {
                                                    var H =
                                                        o.components[
                                                            o.componentsOrder[N]
                                                        ];
                                                    this.components.push({
                                                        lines: p(0, H),
                                                        scaleX: H.h / o.maxH,
                                                        scaleY: H.v / o.maxV
                                                    });
                                                }
                                            },
                                            getData: function(t, e) {
                                                var i,
                                                    r,
                                                    n,
                                                    a,
                                                    o,
                                                    s,
                                                    l,
                                                    f,
                                                    h,
                                                    c,
                                                    u,
                                                    p,
                                                    m,
                                                    g,
                                                    b,
                                                    v,
                                                    y,
                                                    w,
                                                    _,
                                                    x,
                                                    k,
                                                    E = this.width / t,
                                                    I = this.height / e,
                                                    S = 0,
                                                    A =
                                                        t *
                                                        e *
                                                        this.components.length,
                                                    T = new Uint8Array(A);
                                                switch (
                                                    this.components.length
                                                ) {
                                                    case 1:
                                                        for (
                                                            i = this
                                                                .components[0],
                                                                c = 0;
                                                            c < e;
                                                            c++
                                                        )
                                                            for (
                                                                o =
                                                                    i.lines[
                                                                        0 |
                                                                            (c *
                                                                                i.scaleY *
                                                                                I)
                                                                    ],
                                                                    h = 0;
                                                                h < t;
                                                                h++
                                                            )
                                                                (u =
                                                                    o[
                                                                        0 |
                                                                            (h *
                                                                                i.scaleX *
                                                                                E)
                                                                    ]),
                                                                    (T[
                                                                        S++
                                                                    ] = u);
                                                        break;
                                                    case 2:
                                                        for (
                                                            i = this
                                                                .components[0],
                                                                r = this
                                                                    .components[1],
                                                                c = 0;
                                                            c < e;
                                                            c++
                                                        )
                                                            for (
                                                                o =
                                                                    i.lines[
                                                                        0 |
                                                                            (c *
                                                                                i.scaleY *
                                                                                I)
                                                                    ],
                                                                    s =
                                                                        r.lines[
                                                                            0 |
                                                                                (c *
                                                                                    r.scaleY *
                                                                                    I)
                                                                        ],
                                                                    h = 0;
                                                                h < t;
                                                                h++
                                                            )
                                                                (u =
                                                                    o[
                                                                        0 |
                                                                            (h *
                                                                                i.scaleX *
                                                                                E)
                                                                    ]),
                                                                    (T[
                                                                        S++
                                                                    ] = u),
                                                                    (u =
                                                                        s[
                                                                            0 |
                                                                                (h *
                                                                                    r.scaleX *
                                                                                    E)
                                                                        ]),
                                                                    (T[
                                                                        S++
                                                                    ] = u);
                                                        break;
                                                    case 3:
                                                        for (
                                                            k = !0,
                                                                this.adobe &&
                                                                this.adobe
                                                                    .transformCode
                                                                    ? (k = !0)
                                                                    : void 0 !==
                                                                          this
                                                                              .colorTransform &&
                                                                      (k = !!this
                                                                          .colorTransform),
                                                                i = this
                                                                    .components[0],
                                                                r = this
                                                                    .components[1],
                                                                n = this
                                                                    .components[2],
                                                                c = 0;
                                                            c < e;
                                                            c++
                                                        )
                                                            for (
                                                                o =
                                                                    i.lines[
                                                                        0 |
                                                                            (c *
                                                                                i.scaleY *
                                                                                I)
                                                                    ],
                                                                    s =
                                                                        r.lines[
                                                                            0 |
                                                                                (c *
                                                                                    r.scaleY *
                                                                                    I)
                                                                        ],
                                                                    l =
                                                                        n.lines[
                                                                            0 |
                                                                                (c *
                                                                                    n.scaleY *
                                                                                    I)
                                                                        ],
                                                                    h = 0;
                                                                h < t;
                                                                h++
                                                            )
                                                                k
                                                                    ? ((u =
                                                                          o[
                                                                              0 |
                                                                                  (h *
                                                                                      i.scaleX *
                                                                                      E)
                                                                          ]),
                                                                      (p =
                                                                          s[
                                                                              0 |
                                                                                  (h *
                                                                                      r.scaleX *
                                                                                      E)
                                                                          ]),
                                                                      (w = d(
                                                                          u +
                                                                              1.402 *
                                                                                  ((m =
                                                                                      l[
                                                                                          0 |
                                                                                              (h *
                                                                                                  n.scaleX *
                                                                                                  E)
                                                                                      ]) -
                                                                                      128)
                                                                      )),
                                                                      (_ = d(
                                                                          u -
                                                                              0.3441363 *
                                                                                  (p -
                                                                                      128) -
                                                                              0.71413636 *
                                                                                  (m -
                                                                                      128)
                                                                      )),
                                                                      (x = d(
                                                                          u +
                                                                              1.772 *
                                                                                  (p -
                                                                                      128)
                                                                      )))
                                                                    : ((w =
                                                                          o[
                                                                              0 |
                                                                                  (h *
                                                                                      i.scaleX *
                                                                                      E)
                                                                          ]),
                                                                      (_ =
                                                                          s[
                                                                              0 |
                                                                                  (h *
                                                                                      r.scaleX *
                                                                                      E)
                                                                          ]),
                                                                      (x =
                                                                          l[
                                                                              0 |
                                                                                  (h *
                                                                                      n.scaleX *
                                                                                      E)
                                                                          ])),
                                                                    (T[
                                                                        S++
                                                                    ] = w),
                                                                    (T[
                                                                        S++
                                                                    ] = _),
                                                                    (T[
                                                                        S++
                                                                    ] = x);
                                                        break;
                                                    case 4:
                                                        if (!this.adobe)
                                                            throw 'Unsupported color mode (4 components)';
                                                        for (
                                                            k = !1,
                                                                this.adobe &&
                                                                this.adobe
                                                                    .transformCode
                                                                    ? (k = !0)
                                                                    : void 0 !==
                                                                          this
                                                                              .colorTransform &&
                                                                      (k = !!this
                                                                          .colorTransform),
                                                                i = this
                                                                    .components[0],
                                                                r = this
                                                                    .components[1],
                                                                n = this
                                                                    .components[2],
                                                                a = this
                                                                    .components[3],
                                                                c = 0;
                                                            c < e;
                                                            c++
                                                        )
                                                            for (
                                                                o =
                                                                    i.lines[
                                                                        0 |
                                                                            (c *
                                                                                i.scaleY *
                                                                                I)
                                                                    ],
                                                                    s =
                                                                        r.lines[
                                                                            0 |
                                                                                (c *
                                                                                    r.scaleY *
                                                                                    I)
                                                                        ],
                                                                    l =
                                                                        n.lines[
                                                                            0 |
                                                                                (c *
                                                                                    n.scaleY *
                                                                                    I)
                                                                        ],
                                                                    f =
                                                                        a.lines[
                                                                            0 |
                                                                                (c *
                                                                                    a.scaleY *
                                                                                    I)
                                                                        ],
                                                                    h = 0;
                                                                h < t;
                                                                h++
                                                            )
                                                                k
                                                                    ? ((u =
                                                                          o[
                                                                              0 |
                                                                                  (h *
                                                                                      i.scaleX *
                                                                                      E)
                                                                          ]),
                                                                      (p =
                                                                          s[
                                                                              0 |
                                                                                  (h *
                                                                                      r.scaleX *
                                                                                      E)
                                                                          ]),
                                                                      (m =
                                                                          l[
                                                                              0 |
                                                                                  (h *
                                                                                      n.scaleX *
                                                                                      E)
                                                                          ]),
                                                                      (g =
                                                                          f[
                                                                              0 |
                                                                                  (h *
                                                                                      a.scaleX *
                                                                                      E)
                                                                          ]),
                                                                      (b =
                                                                          255 -
                                                                          d(
                                                                              u +
                                                                                  1.402 *
                                                                                      (m -
                                                                                          128)
                                                                          )),
                                                                      (v =
                                                                          255 -
                                                                          d(
                                                                              u -
                                                                                  0.3441363 *
                                                                                      (p -
                                                                                          128) -
                                                                                  0.71413636 *
                                                                                      (m -
                                                                                          128)
                                                                          )),
                                                                      (y =
                                                                          255 -
                                                                          d(
                                                                              u +
                                                                                  1.772 *
                                                                                      (p -
                                                                                          128)
                                                                          )))
                                                                    : ((b =
                                                                          o[
                                                                              0 |
                                                                                  (h *
                                                                                      i.scaleX *
                                                                                      E)
                                                                          ]),
                                                                      (v =
                                                                          s[
                                                                              0 |
                                                                                  (h *
                                                                                      r.scaleX *
                                                                                      E)
                                                                          ]),
                                                                      (y =
                                                                          l[
                                                                              0 |
                                                                                  (h *
                                                                                      n.scaleX *
                                                                                      E)
                                                                          ]),
                                                                      (g =
                                                                          f[
                                                                              0 |
                                                                                  (h *
                                                                                      a.scaleX *
                                                                                      E)
                                                                          ])),
                                                                    (T[S++] =
                                                                        255 -
                                                                        b),
                                                                    (T[S++] =
                                                                        255 -
                                                                        v),
                                                                    (T[S++] =
                                                                        255 -
                                                                        y),
                                                                    (T[S++] =
                                                                        255 -
                                                                        g);
                                                        break;
                                                    default:
                                                        throw 'Unsupported color mode';
                                                }
                                                return T;
                                            },
                                            copyToImageData: function(t) {
                                                var e,
                                                    i,
                                                    r,
                                                    n,
                                                    a,
                                                    o,
                                                    s,
                                                    l,
                                                    f,
                                                    h = t.width,
                                                    c = t.height,
                                                    u = t.data,
                                                    p = this.getData(h, c),
                                                    m = 0,
                                                    g = 0;
                                                switch (
                                                    this.components.length
                                                ) {
                                                    case 1:
                                                        for (i = 0; i < c; i++)
                                                            for (
                                                                e = 0;
                                                                e < h;
                                                                e++
                                                            )
                                                                (r = p[m++]),
                                                                    (u[
                                                                        g++
                                                                    ] = r),
                                                                    (u[
                                                                        g++
                                                                    ] = r),
                                                                    (u[
                                                                        g++
                                                                    ] = r),
                                                                    (u[
                                                                        g++
                                                                    ] = 255);
                                                        break;
                                                    case 3:
                                                        for (i = 0; i < c; i++)
                                                            for (
                                                                e = 0;
                                                                e < h;
                                                                e++
                                                            )
                                                                (s = p[m++]),
                                                                    (l =
                                                                        p[m++]),
                                                                    (f =
                                                                        p[m++]),
                                                                    (u[
                                                                        g++
                                                                    ] = s),
                                                                    (u[
                                                                        g++
                                                                    ] = l),
                                                                    (u[
                                                                        g++
                                                                    ] = f),
                                                                    (u[
                                                                        g++
                                                                    ] = 255);
                                                        break;
                                                    case 4:
                                                        for (i = 0; i < c; i++)
                                                            for (
                                                                e = 0;
                                                                e < h;
                                                                e++
                                                            )
                                                                (a = p[m++]),
                                                                    (o =
                                                                        p[m++]),
                                                                    (r =
                                                                        p[m++]),
                                                                    (s =
                                                                        255 -
                                                                        d(
                                                                            a *
                                                                                (1 -
                                                                                    (n =
                                                                                        p[
                                                                                            m++
                                                                                        ]) /
                                                                                        255) +
                                                                                n
                                                                        )),
                                                                    (l =
                                                                        255 -
                                                                        d(
                                                                            o *
                                                                                (1 -
                                                                                    n /
                                                                                        255) +
                                                                                n
                                                                        )),
                                                                    (f =
                                                                        255 -
                                                                        d(
                                                                            r *
                                                                                (1 -
                                                                                    n /
                                                                                        255) +
                                                                                n
                                                                        )),
                                                                    (u[
                                                                        g++
                                                                    ] = s),
                                                                    (u[
                                                                        g++
                                                                    ] = l),
                                                                    (u[
                                                                        g++
                                                                    ] = f),
                                                                    (u[
                                                                        g++
                                                                    ] = 255);
                                                        break;
                                                    default:
                                                        throw 'Unsupported color mode';
                                                }
                                            }
                                        }),
                                        h
                                    );
                                })();
                                e.exports = function(e, r) {
                                    var n = new Uint8Array(e),
                                        a = new i();
                                    a.parse(n);
                                    var o = {
                                        width: a.width,
                                        height: a.height,
                                        data: r
                                            ? new Uint8Array(
                                                  a.width * a.height * 4
                                              )
                                            : new t(a.width * a.height * 4)
                                    };
                                    return a.copyToImageData(o), o;
                                };
                            }.call(this, t('buffer').Buffer));
                        },
                        { buffer: 17 }
                    ],
                    43: [
                        function(t, e, i) {
                            (function(t) {
                                function i(e) {
                                    Math.round;
                                    var i,
                                        r,
                                        n,
                                        a,
                                        o,
                                        s = Math.floor,
                                        l = new Array(64),
                                        f = new Array(64),
                                        h = new Array(64),
                                        c = new Array(64),
                                        u = new Array(65535),
                                        p = new Array(65535),
                                        d = new Array(64),
                                        m = new Array(64),
                                        g = [],
                                        b = 0,
                                        v = 7,
                                        y = new Array(64),
                                        w = new Array(64),
                                        _ = new Array(64),
                                        x = new Array(256),
                                        k = new Array(2048),
                                        E = [
                                            0,
                                            1,
                                            5,
                                            6,
                                            14,
                                            15,
                                            27,
                                            28,
                                            2,
                                            4,
                                            7,
                                            13,
                                            16,
                                            26,
                                            29,
                                            42,
                                            3,
                                            8,
                                            12,
                                            17,
                                            25,
                                            30,
                                            41,
                                            43,
                                            9,
                                            11,
                                            18,
                                            24,
                                            31,
                                            40,
                                            44,
                                            53,
                                            10,
                                            19,
                                            23,
                                            32,
                                            39,
                                            45,
                                            52,
                                            54,
                                            20,
                                            22,
                                            33,
                                            38,
                                            46,
                                            51,
                                            55,
                                            60,
                                            21,
                                            34,
                                            37,
                                            47,
                                            50,
                                            56,
                                            59,
                                            61,
                                            35,
                                            36,
                                            48,
                                            49,
                                            57,
                                            58,
                                            62,
                                            63
                                        ],
                                        I = [
                                            0,
                                            0,
                                            1,
                                            5,
                                            1,
                                            1,
                                            1,
                                            1,
                                            1,
                                            1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0
                                        ],
                                        S = [
                                            0,
                                            1,
                                            2,
                                            3,
                                            4,
                                            5,
                                            6,
                                            7,
                                            8,
                                            9,
                                            10,
                                            11
                                        ],
                                        A = [
                                            0,
                                            0,
                                            2,
                                            1,
                                            3,
                                            3,
                                            2,
                                            4,
                                            3,
                                            5,
                                            5,
                                            4,
                                            4,
                                            0,
                                            0,
                                            1,
                                            125
                                        ],
                                        T = [
                                            1,
                                            2,
                                            3,
                                            0,
                                            4,
                                            17,
                                            5,
                                            18,
                                            33,
                                            49,
                                            65,
                                            6,
                                            19,
                                            81,
                                            97,
                                            7,
                                            34,
                                            113,
                                            20,
                                            50,
                                            129,
                                            145,
                                            161,
                                            8,
                                            35,
                                            66,
                                            177,
                                            193,
                                            21,
                                            82,
                                            209,
                                            240,
                                            36,
                                            51,
                                            98,
                                            114,
                                            130,
                                            9,
                                            10,
                                            22,
                                            23,
                                            24,
                                            25,
                                            26,
                                            37,
                                            38,
                                            39,
                                            40,
                                            41,
                                            42,
                                            52,
                                            53,
                                            54,
                                            55,
                                            56,
                                            57,
                                            58,
                                            67,
                                            68,
                                            69,
                                            70,
                                            71,
                                            72,
                                            73,
                                            74,
                                            83,
                                            84,
                                            85,
                                            86,
                                            87,
                                            88,
                                            89,
                                            90,
                                            99,
                                            100,
                                            101,
                                            102,
                                            103,
                                            104,
                                            105,
                                            106,
                                            115,
                                            116,
                                            117,
                                            118,
                                            119,
                                            120,
                                            121,
                                            122,
                                            131,
                                            132,
                                            133,
                                            134,
                                            135,
                                            136,
                                            137,
                                            138,
                                            146,
                                            147,
                                            148,
                                            149,
                                            150,
                                            151,
                                            152,
                                            153,
                                            154,
                                            162,
                                            163,
                                            164,
                                            165,
                                            166,
                                            167,
                                            168,
                                            169,
                                            170,
                                            178,
                                            179,
                                            180,
                                            181,
                                            182,
                                            183,
                                            184,
                                            185,
                                            186,
                                            194,
                                            195,
                                            196,
                                            197,
                                            198,
                                            199,
                                            200,
                                            201,
                                            202,
                                            210,
                                            211,
                                            212,
                                            213,
                                            214,
                                            215,
                                            216,
                                            217,
                                            218,
                                            225,
                                            226,
                                            227,
                                            228,
                                            229,
                                            230,
                                            231,
                                            232,
                                            233,
                                            234,
                                            241,
                                            242,
                                            243,
                                            244,
                                            245,
                                            246,
                                            247,
                                            248,
                                            249,
                                            250
                                        ],
                                        C = [
                                            0,
                                            0,
                                            3,
                                            1,
                                            1,
                                            1,
                                            1,
                                            1,
                                            1,
                                            1,
                                            1,
                                            1,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0
                                        ],
                                        M = [
                                            0,
                                            1,
                                            2,
                                            3,
                                            4,
                                            5,
                                            6,
                                            7,
                                            8,
                                            9,
                                            10,
                                            11
                                        ],
                                        P = [
                                            0,
                                            0,
                                            2,
                                            1,
                                            2,
                                            4,
                                            4,
                                            3,
                                            4,
                                            7,
                                            5,
                                            4,
                                            4,
                                            0,
                                            1,
                                            2,
                                            119
                                        ],
                                        L = [
                                            0,
                                            1,
                                            2,
                                            3,
                                            17,
                                            4,
                                            5,
                                            33,
                                            49,
                                            6,
                                            18,
                                            65,
                                            81,
                                            7,
                                            97,
                                            113,
                                            19,
                                            34,
                                            50,
                                            129,
                                            8,
                                            20,
                                            66,
                                            145,
                                            161,
                                            177,
                                            193,
                                            9,
                                            35,
                                            51,
                                            82,
                                            240,
                                            21,
                                            98,
                                            114,
                                            209,
                                            10,
                                            22,
                                            36,
                                            52,
                                            225,
                                            37,
                                            241,
                                            23,
                                            24,
                                            25,
                                            26,
                                            38,
                                            39,
                                            40,
                                            41,
                                            42,
                                            53,
                                            54,
                                            55,
                                            56,
                                            57,
                                            58,
                                            67,
                                            68,
                                            69,
                                            70,
                                            71,
                                            72,
                                            73,
                                            74,
                                            83,
                                            84,
                                            85,
                                            86,
                                            87,
                                            88,
                                            89,
                                            90,
                                            99,
                                            100,
                                            101,
                                            102,
                                            103,
                                            104,
                                            105,
                                            106,
                                            115,
                                            116,
                                            117,
                                            118,
                                            119,
                                            120,
                                            121,
                                            122,
                                            130,
                                            131,
                                            132,
                                            133,
                                            134,
                                            135,
                                            136,
                                            137,
                                            138,
                                            146,
                                            147,
                                            148,
                                            149,
                                            150,
                                            151,
                                            152,
                                            153,
                                            154,
                                            162,
                                            163,
                                            164,
                                            165,
                                            166,
                                            167,
                                            168,
                                            169,
                                            170,
                                            178,
                                            179,
                                            180,
                                            181,
                                            182,
                                            183,
                                            184,
                                            185,
                                            186,
                                            194,
                                            195,
                                            196,
                                            197,
                                            198,
                                            199,
                                            200,
                                            201,
                                            202,
                                            210,
                                            211,
                                            212,
                                            213,
                                            214,
                                            215,
                                            216,
                                            217,
                                            218,
                                            226,
                                            227,
                                            228,
                                            229,
                                            230,
                                            231,
                                            232,
                                            233,
                                            234,
                                            242,
                                            243,
                                            244,
                                            245,
                                            246,
                                            247,
                                            248,
                                            249,
                                            250
                                        ];
                                    function O(t, e) {
                                        for (
                                            var i = 0,
                                                r = 0,
                                                n = new Array(),
                                                a = 1;
                                            a <= 16;
                                            a++
                                        ) {
                                            for (var o = 1; o <= t[a]; o++)
                                                (n[e[r]] = []),
                                                    (n[e[r]][0] = i),
                                                    (n[e[r]][1] = a),
                                                    r++,
                                                    i++;
                                            i *= 2;
                                        }
                                        return n;
                                    }
                                    function R(t) {
                                        for (
                                            var e = t[0], i = t[1] - 1;
                                            i >= 0;

                                        )
                                            e & (1 << i) && (b |= 1 << v),
                                                i--,
                                                --v < 0 &&
                                                    (255 == b
                                                        ? (B(255), B(0))
                                                        : B(b),
                                                    (v = 7),
                                                    (b = 0));
                                    }
                                    function B(t) {
                                        g.push(t);
                                    }
                                    function D(t) {
                                        B((t >> 8) & 255), B(255 & t);
                                    }
                                    function z(t, e, i, r, n) {
                                        for (
                                            var a,
                                                o = n[0],
                                                s = n[240],
                                                l = (function(t, e) {
                                                    var i,
                                                        r,
                                                        n,
                                                        a,
                                                        o,
                                                        s,
                                                        l,
                                                        f,
                                                        h,
                                                        c,
                                                        u = 0;
                                                    for (h = 0; h < 8; ++h) {
                                                        (i = t[u]),
                                                            (r = t[u + 1]),
                                                            (n = t[u + 2]),
                                                            (a = t[u + 3]),
                                                            (o = t[u + 4]),
                                                            (s = t[u + 5]),
                                                            (l = t[u + 6]);
                                                        var p =
                                                                i +
                                                                (f = t[u + 7]),
                                                            m = i - f,
                                                            g = r + l,
                                                            b = r - l,
                                                            v = n + s,
                                                            y = n - s,
                                                            w = a + o,
                                                            _ = a - o,
                                                            x = p + w,
                                                            k = p - w,
                                                            E = g + v,
                                                            I = g - v;
                                                        (t[u] = x + E),
                                                            (t[u + 4] = x - E);
                                                        var S =
                                                            0.707106781 *
                                                            (I + k);
                                                        (t[u + 2] = k + S),
                                                            (t[u + 6] = k - S);
                                                        var A =
                                                                0.382683433 *
                                                                ((x = _ + y) -
                                                                    (I =
                                                                        b + m)),
                                                            T =
                                                                0.5411961 * x +
                                                                A,
                                                            C =
                                                                1.306562965 *
                                                                    I +
                                                                A,
                                                            M =
                                                                0.707106781 *
                                                                (E = y + b),
                                                            P = m + M,
                                                            L = m - M;
                                                        (t[u + 5] = L + T),
                                                            (t[u + 3] = L - T),
                                                            (t[u + 1] = P + C),
                                                            (t[u + 7] = P - C),
                                                            (u += 8);
                                                    }
                                                    for (
                                                        u = 0, h = 0;
                                                        h < 8;
                                                        ++h
                                                    ) {
                                                        (i = t[u]),
                                                            (r = t[u + 8]),
                                                            (n = t[u + 16]),
                                                            (a = t[u + 24]),
                                                            (o = t[u + 32]),
                                                            (s = t[u + 40]),
                                                            (l = t[u + 48]);
                                                        var O =
                                                                i +
                                                                (f = t[u + 56]),
                                                            R = i - f,
                                                            B = r + l,
                                                            D = r - l,
                                                            z = n + s,
                                                            U = n - s,
                                                            N = a + o,
                                                            F = a - o,
                                                            j = O + N,
                                                            H = O - N,
                                                            G = B + z,
                                                            q = B - z;
                                                        (t[u] = j + G),
                                                            (t[u + 32] = j - G);
                                                        var W =
                                                            0.707106781 *
                                                            (q + H);
                                                        (t[u + 16] = H + W),
                                                            (t[u + 48] = H - W);
                                                        var Z =
                                                                0.382683433 *
                                                                ((j = F + U) -
                                                                    (q =
                                                                        D + R)),
                                                            X =
                                                                0.5411961 * j +
                                                                Z,
                                                            Y =
                                                                1.306562965 *
                                                                    q +
                                                                Z,
                                                            J =
                                                                0.707106781 *
                                                                (G = U + D),
                                                            V = R + J,
                                                            Q = R - J;
                                                        (t[u + 40] = Q + X),
                                                            (t[u + 24] = Q - X),
                                                            (t[u + 8] = V + Y),
                                                            (t[u + 56] = V - Y),
                                                            u++;
                                                    }
                                                    for (h = 0; h < 64; ++h)
                                                        (c = t[h] * e[h]),
                                                            (d[h] =
                                                                c > 0
                                                                    ? (c +
                                                                          0.5) |
                                                                      0
                                                                    : (c -
                                                                          0.5) |
                                                                      0);
                                                    return d;
                                                })(t, e),
                                                f = 0;
                                            f < 64;
                                            ++f
                                        )
                                            m[E[f]] = l[f];
                                        var h = m[0] - i;
                                        (i = m[0]),
                                            0 == h
                                                ? R(r[0])
                                                : (R(r[p[(a = 32767 + h)]]),
                                                  R(u[a]));
                                        for (
                                            var c = 63;
                                            c > 0 && 0 == m[c];
                                            c--
                                        );
                                        if (0 == c) return R(o), i;
                                        for (var g, b = 1; b <= c; ) {
                                            for (
                                                var v = b;
                                                0 == m[b] && b <= c;
                                                ++b
                                            );
                                            var y = b - v;
                                            if (y >= 16) {
                                                g = y >> 4;
                                                for (var w = 1; w <= g; ++w)
                                                    R(s);
                                                y &= 15;
                                            }
                                            (a = 32767 + m[b]),
                                                R(n[(y << 4) + p[a]]),
                                                R(u[a]),
                                                b++;
                                        }
                                        return 63 != c && R(o), i;
                                    }
                                    function U(t) {
                                        if (
                                            (t <= 0 && (t = 1),
                                            t > 100 && (t = 100),
                                            o != t)
                                        ) {
                                            (function(t) {
                                                for (
                                                    var e = [
                                                            16,
                                                            11,
                                                            10,
                                                            16,
                                                            24,
                                                            40,
                                                            51,
                                                            61,
                                                            12,
                                                            12,
                                                            14,
                                                            19,
                                                            26,
                                                            58,
                                                            60,
                                                            55,
                                                            14,
                                                            13,
                                                            16,
                                                            24,
                                                            40,
                                                            57,
                                                            69,
                                                            56,
                                                            14,
                                                            17,
                                                            22,
                                                            29,
                                                            51,
                                                            87,
                                                            80,
                                                            62,
                                                            18,
                                                            22,
                                                            37,
                                                            56,
                                                            68,
                                                            109,
                                                            103,
                                                            77,
                                                            24,
                                                            35,
                                                            55,
                                                            64,
                                                            81,
                                                            104,
                                                            113,
                                                            92,
                                                            49,
                                                            64,
                                                            78,
                                                            87,
                                                            103,
                                                            121,
                                                            120,
                                                            101,
                                                            72,
                                                            92,
                                                            95,
                                                            98,
                                                            112,
                                                            100,
                                                            103,
                                                            99
                                                        ],
                                                        i = 0;
                                                    i < 64;
                                                    i++
                                                ) {
                                                    var r = s(
                                                        (e[i] * t + 50) / 100
                                                    );
                                                    r < 1
                                                        ? (r = 1)
                                                        : r > 255 && (r = 255),
                                                        (l[E[i]] = r);
                                                }
                                                for (
                                                    var n = [
                                                            17,
                                                            18,
                                                            24,
                                                            47,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            18,
                                                            21,
                                                            26,
                                                            66,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            24,
                                                            26,
                                                            56,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            47,
                                                            66,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99,
                                                            99
                                                        ],
                                                        a = 0;
                                                    a < 64;
                                                    a++
                                                ) {
                                                    var o = s(
                                                        (n[a] * t + 50) / 100
                                                    );
                                                    o < 1
                                                        ? (o = 1)
                                                        : o > 255 && (o = 255),
                                                        (f[E[a]] = o);
                                                }
                                                for (
                                                    var u = [
                                                            1,
                                                            1.387039845,
                                                            1.306562965,
                                                            1.175875602,
                                                            1,
                                                            0.785694958,
                                                            0.5411961,
                                                            0.275899379
                                                        ],
                                                        p = 0,
                                                        d = 0;
                                                    d < 8;
                                                    d++
                                                )
                                                    for (var m = 0; m < 8; m++)
                                                        (h[p] =
                                                            1 /
                                                            (l[E[p]] *
                                                                u[d] *
                                                                u[m] *
                                                                8)),
                                                            (c[p] =
                                                                1 /
                                                                (f[E[p]] *
                                                                    u[d] *
                                                                    u[m] *
                                                                    8)),
                                                            p++;
                                            })(
                                                t < 50
                                                    ? Math.floor(5e3 / t)
                                                    : Math.floor(200 - 2 * t)
                                            ),
                                                (o = t);
                                        }
                                    }
                                    (this.encode = function(e, o) {
                                        new Date().getTime();
                                        o && U(o),
                                            (g = new Array()),
                                            (b = 0),
                                            (v = 7),
                                            D(65496),
                                            D(65504),
                                            D(16),
                                            B(74),
                                            B(70),
                                            B(73),
                                            B(70),
                                            B(0),
                                            B(1),
                                            B(1),
                                            B(0),
                                            D(1),
                                            D(1),
                                            B(0),
                                            B(0),
                                            (function() {
                                                D(65499), D(132), B(0);
                                                for (var t = 0; t < 64; t++)
                                                    B(l[t]);
                                                B(1);
                                                for (var e = 0; e < 64; e++)
                                                    B(f[e]);
                                            })(),
                                            (function(t, e) {
                                                D(65472),
                                                    D(17),
                                                    B(8),
                                                    D(e),
                                                    D(t),
                                                    B(3),
                                                    B(1),
                                                    B(17),
                                                    B(0),
                                                    B(2),
                                                    B(17),
                                                    B(1),
                                                    B(3),
                                                    B(17),
                                                    B(1);
                                            })(e.width, e.height),
                                            (function() {
                                                D(65476), D(418), B(0);
                                                for (var t = 0; t < 16; t++)
                                                    B(I[t + 1]);
                                                for (var e = 0; e <= 11; e++)
                                                    B(S[e]);
                                                B(16);
                                                for (var i = 0; i < 16; i++)
                                                    B(A[i + 1]);
                                                for (var r = 0; r <= 161; r++)
                                                    B(T[r]);
                                                B(1);
                                                for (var n = 0; n < 16; n++)
                                                    B(C[n + 1]);
                                                for (var a = 0; a <= 11; a++)
                                                    B(M[a]);
                                                B(17);
                                                for (var o = 0; o < 16; o++)
                                                    B(P[o + 1]);
                                                for (var s = 0; s <= 161; s++)
                                                    B(L[s]);
                                            })(),
                                            D(65498),
                                            D(12),
                                            B(3),
                                            B(1),
                                            B(0),
                                            B(2),
                                            B(17),
                                            B(3),
                                            B(17),
                                            B(0),
                                            B(63),
                                            B(0);
                                        var s = 0,
                                            u = 0,
                                            p = 0;
                                        (b = 0),
                                            (v = 7),
                                            (this.encode.displayName =
                                                '_encode_');
                                        for (
                                            var d,
                                                m,
                                                x,
                                                E,
                                                O,
                                                N,
                                                F,
                                                j,
                                                H,
                                                G = e.data,
                                                q = e.width,
                                                W = e.height,
                                                Z = 4 * q,
                                                X = 0;
                                            X < W;

                                        ) {
                                            for (d = 0; d < Z; ) {
                                                for (
                                                    N = O = Z * X + d,
                                                        F = -1,
                                                        j = 0,
                                                        H = 0;
                                                    H < 64;
                                                    H++
                                                )
                                                    (N =
                                                        O +
                                                        (j = H >> 3) * Z +
                                                        (F = 4 * (7 & H))),
                                                        X + j >= W &&
                                                            (N -=
                                                                Z *
                                                                (X +
                                                                    1 +
                                                                    j -
                                                                    W)),
                                                        d + F >= Z &&
                                                            (N -=
                                                                d + F - Z + 4),
                                                        (m = G[N++]),
                                                        (x = G[N++]),
                                                        (E = G[N++]),
                                                        (y[H] =
                                                            ((k[m] +
                                                                k[
                                                                    (x + 256) >>
                                                                        0
                                                                ] +
                                                                k[
                                                                    (E + 512) >>
                                                                        0
                                                                ]) >>
                                                                16) -
                                                            128),
                                                        (w[H] =
                                                            ((k[
                                                                (m + 768) >> 0
                                                            ] +
                                                                k[
                                                                    (x +
                                                                        1024) >>
                                                                        0
                                                                ] +
                                                                k[
                                                                    (E +
                                                                        1280) >>
                                                                        0
                                                                ]) >>
                                                                16) -
                                                            128),
                                                        (_[H] =
                                                            ((k[
                                                                (m + 1280) >> 0
                                                            ] +
                                                                k[
                                                                    (x +
                                                                        1536) >>
                                                                        0
                                                                ] +
                                                                k[
                                                                    (E +
                                                                        1792) >>
                                                                        0
                                                                ]) >>
                                                                16) -
                                                            128);
                                                (s = z(y, h, s, i, n)),
                                                    (u = z(w, c, u, r, a)),
                                                    (p = z(_, c, p, r, a)),
                                                    (d += 32);
                                            }
                                            X += 8;
                                        }
                                        if (v >= 0) {
                                            var Y = [];
                                            (Y[1] = v + 1),
                                                (Y[0] = (1 << (v + 1)) - 1),
                                                R(Y);
                                        }
                                        return D(65497), new t(g);
                                    }),
                                        (function() {
                                            new Date().getTime();
                                            e || (e = 50),
                                                (function() {
                                                    for (
                                                        var t =
                                                                String.fromCharCode,
                                                            e = 0;
                                                        e < 256;
                                                        e++
                                                    )
                                                        x[e] = t(e);
                                                })(),
                                                (i = O(I, S)),
                                                (r = O(C, M)),
                                                (n = O(A, T)),
                                                (a = O(P, L)),
                                                (function() {
                                                    for (
                                                        var t = 1, e = 2, i = 1;
                                                        i <= 15;
                                                        i++
                                                    ) {
                                                        for (
                                                            var r = t;
                                                            r < e;
                                                            r++
                                                        )
                                                            (p[32767 + r] = i),
                                                                (u[
                                                                    32767 + r
                                                                ] = []),
                                                                (u[
                                                                    32767 + r
                                                                ][1] = i),
                                                                (u[
                                                                    32767 + r
                                                                ][0] = r);
                                                        for (
                                                            var n = -(e - 1);
                                                            n <= -t;
                                                            n++
                                                        )
                                                            (p[32767 + n] = i),
                                                                (u[
                                                                    32767 + n
                                                                ] = []),
                                                                (u[
                                                                    32767 + n
                                                                ][1] = i),
                                                                (u[
                                                                    32767 + n
                                                                ][0] =
                                                                    e - 1 + n);
                                                        (t <<= 1), (e <<= 1);
                                                    }
                                                })(),
                                                (function() {
                                                    for (
                                                        var t = 0;
                                                        t < 256;
                                                        t++
                                                    )
                                                        (k[t] = 19595 * t),
                                                            (k[(t + 256) >> 0] =
                                                                38470 * t),
                                                            (k[(t + 512) >> 0] =
                                                                7471 * t +
                                                                32768),
                                                            (k[(t + 768) >> 0] =
                                                                -11059 * t),
                                                            (k[
                                                                (t + 1024) >> 0
                                                            ] =
                                                                -21709 * t),
                                                            (k[
                                                                (t + 1280) >> 0
                                                            ] =
                                                                32768 * t +
                                                                8421375),
                                                            (k[
                                                                (t + 1536) >> 0
                                                            ] =
                                                                -27439 * t),
                                                            (k[
                                                                (t + 1792) >> 0
                                                            ] =
                                                                -5329 * t);
                                                })(),
                                                U(e),
                                                new Date().getTime();
                                        })();
                                }
                                e.exports = function(t, e) {
                                    void 0 === e && (e = 50);
                                    return {
                                        data: new i(e).encode(t, e),
                                        width: t.width,
                                        height: t.height
                                    };
                                };
                            }.call(this, t('buffer').Buffer));
                        },
                        { buffer: 17 }
                    ],
                    44: [
                        function(t, e, i) {
                            var r,
                                n = (function() {
                                    function t() {
                                        (this._src = null),
                                            (this._parser = new r.JpegImage()),
                                            (this.onload = null);
                                    }
                                    return (
                                        (t.prototype = {
                                            get src() {
                                                return this._src;
                                            },
                                            set src(t) {
                                                this.load(t);
                                            },
                                            get width() {
                                                return this._parser.width;
                                            },
                                            get height() {
                                                return this._parser.height;
                                            },
                                            load: function(t) {
                                                (this._src = t),
                                                    (function(t, e) {
                                                        if (
                                                            0 !==
                                                            t.indexOf('data:')
                                                        ) {
                                                            var i = new XMLHttpRequest();
                                                            i.open(
                                                                'GET',
                                                                t,
                                                                !0
                                                            ),
                                                                (i.responseType =
                                                                    'arraybuffer'),
                                                                (i.onload = function() {
                                                                    e(
                                                                        i.response
                                                                    );
                                                                }),
                                                                i.send(null);
                                                        } else {
                                                            for (
                                                                var r =
                                                                        t.indexOf(
                                                                            'base64,'
                                                                        ) + 7,
                                                                    n = atob(
                                                                        t.substring(
                                                                            r
                                                                        )
                                                                    ),
                                                                    a = new Uint8Array(
                                                                        n.length
                                                                    ),
                                                                    o =
                                                                        n.length -
                                                                        1;
                                                                o >= 0;
                                                                o--
                                                            )
                                                                a[
                                                                    o
                                                                ] = n.charCodeAt(
                                                                    o
                                                                );
                                                            e(a.buffer);
                                                        }
                                                    })(
                                                        t,
                                                        function(t) {
                                                            this.parse(
                                                                new Uint8Array(
                                                                    t
                                                                )
                                                            ),
                                                                this.onload &&
                                                                    this.onload();
                                                        }.bind(this)
                                                    );
                                            },
                                            parse: function(t) {
                                                this._parser.parse(t);
                                            },
                                            getData: function(t, e) {
                                                return this._parser.getData(
                                                    t,
                                                    e,
                                                    !1
                                                );
                                            },
                                            copyToImageData: function(t) {
                                                if (
                                                    2 ===
                                                        this._parser
                                                            .numComponents ||
                                                    this._parser.numComponents >
                                                        4
                                                )
                                                    throw new Error(
                                                        'Unsupported amount of components'
                                                    );
                                                var e,
                                                    i,
                                                    r = t.width,
                                                    n = t.height,
                                                    a = r * n * 4,
                                                    o = t.data;
                                                if (
                                                    1 !==
                                                    this._parser.numComponents
                                                ) {
                                                    var s = this._parser.getData(
                                                        r,
                                                        n,
                                                        !0
                                                    );
                                                    for (e = 0, i = 0; e < a; )
                                                        (o[e++] = s[i++]),
                                                            (o[e++] = s[i++]),
                                                            (o[e++] = s[i++]),
                                                            (o[e++] = 255);
                                                } else {
                                                    var l = this._parser.getData(
                                                        r,
                                                        n,
                                                        !1
                                                    );
                                                    for (
                                                        e = 0, i = 0;
                                                        e < a;

                                                    ) {
                                                        var f = l[i++];
                                                        (o[e++] = f),
                                                            (o[e++] = f),
                                                            (o[e++] = f),
                                                            (o[e++] = 255);
                                                    }
                                                }
                                            }
                                        }),
                                        t
                                    );
                                })();
                            !(function(t) {
                                var e = (function() {
                                        var t = new Uint8Array([
                                                0,
                                                1,
                                                8,
                                                16,
                                                9,
                                                2,
                                                3,
                                                10,
                                                17,
                                                24,
                                                32,
                                                25,
                                                18,
                                                11,
                                                4,
                                                5,
                                                12,
                                                19,
                                                26,
                                                33,
                                                40,
                                                48,
                                                41,
                                                34,
                                                27,
                                                20,
                                                13,
                                                6,
                                                7,
                                                14,
                                                21,
                                                28,
                                                35,
                                                42,
                                                49,
                                                56,
                                                57,
                                                50,
                                                43,
                                                36,
                                                29,
                                                22,
                                                15,
                                                23,
                                                30,
                                                37,
                                                44,
                                                51,
                                                58,
                                                59,
                                                52,
                                                45,
                                                38,
                                                31,
                                                39,
                                                46,
                                                53,
                                                60,
                                                61,
                                                54,
                                                47,
                                                55,
                                                62,
                                                63
                                            ]),
                                            e = 4017,
                                            i = 799,
                                            r = 3406,
                                            n = 2276,
                                            o = 1567,
                                            s = 3784,
                                            l = 5793,
                                            f = 2896;
                                        function h() {}
                                        function c(t, e) {
                                            for (
                                                var i, r, n = 0, a = [], o = 16;
                                                o > 0 && !t[o - 1];

                                            )
                                                o--;
                                            a.push({ children: [], index: 0 });
                                            var s,
                                                l = a[0];
                                            for (i = 0; i < o; i++) {
                                                for (r = 0; r < t[i]; r++) {
                                                    for (
                                                        (l = a.pop()).children[
                                                            l.index
                                                        ] =
                                                            e[n];
                                                        l.index > 0;

                                                    )
                                                        l = a.pop();
                                                    for (
                                                        l.index++, a.push(l);
                                                        a.length <= i;

                                                    )
                                                        a.push(
                                                            (s = {
                                                                children: [],
                                                                index: 0
                                                            })
                                                        ),
                                                            (l.children[
                                                                l.index
                                                            ] =
                                                                s.children),
                                                            (l = s);
                                                    n++;
                                                }
                                                i + 1 < o &&
                                                    (a.push(
                                                        (s = {
                                                            children: [],
                                                            index: 0
                                                        })
                                                    ),
                                                    (l.children[l.index] =
                                                        s.children),
                                                    (l = s));
                                            }
                                            return a[0].children;
                                        }
                                        function u(t, e, i) {
                                            return (
                                                64 *
                                                ((t.blocksPerLine + 1) * e + i)
                                            );
                                        }
                                        function p(e, i, r, n, o, s, l, f, h) {
                                            r.precision,
                                                r.samplesPerLine,
                                                r.scanLines;
                                            var c = r.mcusPerLine,
                                                p = r.progressive,
                                                d = (r.maxH, r.maxV, i),
                                                m = 0,
                                                g = 0;
                                            function b() {
                                                if (g > 0)
                                                    return (m >> --g) & 1;
                                                if (255 === (m = e[i++])) {
                                                    var t = e[i++];
                                                    if (t)
                                                        throw 'unexpected marker: ' +
                                                            (
                                                                (m << 8) |
                                                                t
                                                            ).toString(16);
                                                }
                                                return (g = 7), m >>> 7;
                                            }
                                            function v(t) {
                                                for (var e = t; ; ) {
                                                    if (
                                                        'number' ==
                                                        typeof (e = e[b()])
                                                    )
                                                        return e;
                                                    if (
                                                        'object' !==
                                                        (void 0 === e
                                                            ? 'undefined'
                                                            : a(e))
                                                    )
                                                        throw 'invalid huffman sequence';
                                                }
                                            }
                                            function y(t) {
                                                for (var e = 0; t > 0; )
                                                    (e = (e << 1) | b()), t--;
                                                return e;
                                            }
                                            function w(t) {
                                                if (1 === t)
                                                    return 1 === b() ? 1 : -1;
                                                var e = y(t);
                                                return e >= 1 << (t - 1)
                                                    ? e
                                                    : e + (-1 << t) + 1;
                                            }
                                            var _ = 0;
                                            var x,
                                                k = 0;
                                            function E(t, e, i, r, n) {
                                                var a = i % c;
                                                e(
                                                    t,
                                                    u(
                                                        t,
                                                        ((i / c) | 0) * t.v + r,
                                                        a * t.h + n
                                                    )
                                                );
                                            }
                                            function I(t, e, i) {
                                                e(
                                                    t,
                                                    u(
                                                        t,
                                                        (i / t.blocksPerLine) |
                                                            0,
                                                        i % t.blocksPerLine
                                                    )
                                                );
                                            }
                                            var S,
                                                A,
                                                T,
                                                C,
                                                M,
                                                P,
                                                L = n.length;
                                            P = p
                                                ? 0 === s
                                                    ? 0 === f
                                                        ? function(t, e) {
                                                              var i = v(
                                                                      t.huffmanTableDC
                                                                  ),
                                                                  r =
                                                                      0 === i
                                                                          ? 0
                                                                          : w(
                                                                                i
                                                                            ) <<
                                                                            h;
                                                              t.blockData[
                                                                  e
                                                              ] = t.pred += r;
                                                          }
                                                        : function(t, e) {
                                                              t.blockData[e] |=
                                                                  b() << h;
                                                          }
                                                    : 0 === f
                                                        ? function(e, i) {
                                                              if (_ > 0) _--;
                                                              else
                                                                  for (
                                                                      var r = s,
                                                                          n = l;
                                                                      r <= n;

                                                                  ) {
                                                                      var a = v(
                                                                              e.huffmanTableAC
                                                                          ),
                                                                          o =
                                                                              15 &
                                                                              a,
                                                                          f =
                                                                              a >>
                                                                              4;
                                                                      if (
                                                                          0 !==
                                                                          o
                                                                      ) {
                                                                          var c =
                                                                              t[
                                                                                  (r += f)
                                                                              ];
                                                                          (e.blockData[
                                                                              i +
                                                                                  c
                                                                          ] =
                                                                              w(
                                                                                  o
                                                                              ) *
                                                                              (1 <<
                                                                                  h)),
                                                                              r++;
                                                                      } else {
                                                                          if (
                                                                              f <
                                                                              15
                                                                          ) {
                                                                              _ =
                                                                                  y(
                                                                                      f
                                                                                  ) +
                                                                                  (1 <<
                                                                                      f) -
                                                                                  1;
                                                                              break;
                                                                          }
                                                                          r += 16;
                                                                      }
                                                                  }
                                                          }
                                                        : function(e, i) {
                                                              for (
                                                                  var r,
                                                                      n,
                                                                      a = s,
                                                                      o = l,
                                                                      f = 0;
                                                                  a <= o;

                                                              ) {
                                                                  var c = t[a];
                                                                  switch (k) {
                                                                      case 0:
                                                                          if (
                                                                              ((f =
                                                                                  (n = v(
                                                                                      e.huffmanTableAC
                                                                                  )) >>
                                                                                  4),
                                                                              0 ==
                                                                                  (r =
                                                                                      15 &
                                                                                      n))
                                                                          )
                                                                              f <
                                                                              15
                                                                                  ? ((_ =
                                                                                        y(
                                                                                            f
                                                                                        ) +
                                                                                        (1 <<
                                                                                            f)),
                                                                                    (k = 4))
                                                                                  : ((f = 16),
                                                                                    (k = 1));
                                                                          else {
                                                                              if (
                                                                                  1 !==
                                                                                  r
                                                                              )
                                                                                  throw 'invalid ACn encoding';
                                                                              (x = w(
                                                                                  r
                                                                              )),
                                                                                  (k = f
                                                                                      ? 2
                                                                                      : 3);
                                                                          }
                                                                          continue;
                                                                      case 1:
                                                                      case 2:
                                                                          e
                                                                              .blockData[
                                                                              i +
                                                                                  c
                                                                          ]
                                                                              ? (e.blockData[
                                                                                    i +
                                                                                        c
                                                                                ] +=
                                                                                    b() <<
                                                                                    h)
                                                                              : 0 ==
                                                                                    --f &&
                                                                                (k =
                                                                                    2 ===
                                                                                    k
                                                                                        ? 3
                                                                                        : 0);
                                                                          break;
                                                                      case 3:
                                                                          e
                                                                              .blockData[
                                                                              i +
                                                                                  c
                                                                          ]
                                                                              ? (e.blockData[
                                                                                    i +
                                                                                        c
                                                                                ] +=
                                                                                    b() <<
                                                                                    h)
                                                                              : ((e.blockData[
                                                                                    i +
                                                                                        c
                                                                                ] =
                                                                                    x <<
                                                                                    h),
                                                                                (k = 0));
                                                                          break;
                                                                      case 4:
                                                                          e
                                                                              .blockData[
                                                                              i +
                                                                                  c
                                                                          ] &&
                                                                              (e.blockData[
                                                                                  i +
                                                                                      c
                                                                              ] +=
                                                                                  b() <<
                                                                                  h);
                                                                  }
                                                                  a++;
                                                              }
                                                              4 === k &&
                                                                  0 == --_ &&
                                                                  (k = 0);
                                                          }
                                                : function(e, i) {
                                                      var r = v(
                                                              e.huffmanTableDC
                                                          ),
                                                          n =
                                                              0 === r
                                                                  ? 0
                                                                  : w(r);
                                                      e.blockData[
                                                          i
                                                      ] = e.pred += n;
                                                      for (
                                                          var a = 1;
                                                          a < 64;

                                                      ) {
                                                          var o = v(
                                                                  e.huffmanTableAC
                                                              ),
                                                              s = 15 & o,
                                                              l = o >> 4;
                                                          if (0 !== s) {
                                                              var f =
                                                                  t[(a += l)];
                                                              (e.blockData[
                                                                  i + f
                                                              ] = w(s)),
                                                                  a++;
                                                          } else {
                                                              if (l < 15) break;
                                                              a += 16;
                                                          }
                                                      }
                                                  };
                                            var O,
                                                R,
                                                B,
                                                D,
                                                z = 0;
                                            for (
                                                R =
                                                    1 === L
                                                        ? n[0].blocksPerLine *
                                                          n[0].blocksPerColumn
                                                        : c * r.mcusPerColumn,
                                                    o || (o = R);
                                                z < R;

                                            ) {
                                                for (A = 0; A < L; A++)
                                                    n[A].pred = 0;
                                                if (((_ = 0), 1 === L))
                                                    for (
                                                        S = n[0], M = 0;
                                                        M < o;
                                                        M++
                                                    )
                                                        I(S, P, z), z++;
                                                else
                                                    for (M = 0; M < o; M++) {
                                                        for (A = 0; A < L; A++)
                                                            for (
                                                                B = (S = n[A])
                                                                    .h,
                                                                    D = S.v,
                                                                    T = 0;
                                                                T < D;
                                                                T++
                                                            )
                                                                for (
                                                                    C = 0;
                                                                    C < B;
                                                                    C++
                                                                )
                                                                    E(
                                                                        S,
                                                                        P,
                                                                        z,
                                                                        T,
                                                                        C
                                                                    );
                                                        z++;
                                                    }
                                                if (
                                                    ((g = 0),
                                                    (O =
                                                        (e[i] << 8) |
                                                        e[i + 1]) <= 65280)
                                                )
                                                    throw 'marker was not found';
                                                if (!(O >= 65488 && O <= 65495))
                                                    break;
                                                i += 2;
                                            }
                                            return i - d;
                                        }
                                        function d(t, a, h) {
                                            for (
                                                var c,
                                                    u,
                                                    p,
                                                    d,
                                                    m,
                                                    g,
                                                    b,
                                                    v,
                                                    y,
                                                    w,
                                                    _,
                                                    x,
                                                    k,
                                                    E,
                                                    I,
                                                    S,
                                                    A,
                                                    T = t.quantizationTable,
                                                    C = t.blockData,
                                                    M = 0;
                                                M < 64;
                                                M += 8
                                            )
                                                (y = C[a + M]),
                                                    (w = C[a + M + 1]),
                                                    (_ = C[a + M + 2]),
                                                    (x = C[a + M + 3]),
                                                    (k = C[a + M + 4]),
                                                    (E = C[a + M + 5]),
                                                    (I = C[a + M + 6]),
                                                    (S = C[a + M + 7]),
                                                    (y *= T[M]),
                                                    0 !=
                                                    (w | _ | x | k | E | I | S)
                                                        ? ((w *= T[M + 1]),
                                                          (_ *= T[M + 2]),
                                                          (x *= T[M + 3]),
                                                          (k *= T[M + 4]),
                                                          (E *= T[M + 5]),
                                                          (I *= T[M + 6]),
                                                          (S *= T[M + 7]),
                                                          (u =
                                                              (c =
                                                                  ((c =
                                                                      (l * y +
                                                                          128) >>
                                                                      8) +
                                                                      (u =
                                                                          (l *
                                                                              k +
                                                                              128) >>
                                                                          8) +
                                                                      1) >>
                                                                  1) - u),
                                                          (A =
                                                              ((p = _) * s +
                                                                  (d = I) * o +
                                                                  128) >>
                                                              8),
                                                          (p =
                                                              (p * o -
                                                                  d * s +
                                                                  128) >>
                                                              8),
                                                          (b =
                                                              (m =
                                                                  ((m =
                                                                      (f *
                                                                          (w -
                                                                              S) +
                                                                          128) >>
                                                                      8) +
                                                                      (b =
                                                                          E <<
                                                                          4) +
                                                                      1) >>
                                                                  1) - b),
                                                          (g =
                                                              (v =
                                                                  ((v =
                                                                      (f *
                                                                          (w +
                                                                              S) +
                                                                          128) >>
                                                                      8) +
                                                                      (g =
                                                                          x <<
                                                                          4) +
                                                                      1) >>
                                                                  1) - g),
                                                          (d =
                                                              (c =
                                                                  (c +
                                                                      (d = A) +
                                                                      1) >>
                                                                  1) - d),
                                                          (p =
                                                              (u =
                                                                  (u + p + 1) >>
                                                                  1) - p),
                                                          (A =
                                                              (m * n +
                                                                  v * r +
                                                                  2048) >>
                                                              12),
                                                          (m =
                                                              (m * r -
                                                                  v * n +
                                                                  2048) >>
                                                              12),
                                                          (v = A),
                                                          (A =
                                                              (g * i +
                                                                  b * e +
                                                                  2048) >>
                                                              12),
                                                          (g =
                                                              (g * e -
                                                                  b * i +
                                                                  2048) >>
                                                              12),
                                                          (b = A),
                                                          (h[M] = c + v),
                                                          (h[M + 7] = c - v),
                                                          (h[M + 1] = u + b),
                                                          (h[M + 6] = u - b),
                                                          (h[M + 2] = p + g),
                                                          (h[M + 5] = p - g),
                                                          (h[M + 3] = d + m),
                                                          (h[M + 4] = d - m))
                                                        : ((A =
                                                              (l * y + 512) >>
                                                              10),
                                                          (h[M] = A),
                                                          (h[M + 1] = A),
                                                          (h[M + 2] = A),
                                                          (h[M + 3] = A),
                                                          (h[M + 4] = A),
                                                          (h[M + 5] = A),
                                                          (h[M + 6] = A),
                                                          (h[M + 7] = A));
                                            for (var P = 0; P < 8; ++P)
                                                (y = h[P]),
                                                    0 !=
                                                    ((w = h[P + 8]) |
                                                        (_ = h[P + 16]) |
                                                        (x = h[P + 24]) |
                                                        (k = h[P + 32]) |
                                                        (E = h[P + 40]) |
                                                        (I = h[P + 48]) |
                                                        (S = h[P + 56]))
                                                        ? ((u =
                                                              (c =
                                                                  4112 +
                                                                  (((c =
                                                                      (l * y +
                                                                          2048) >>
                                                                      12) +
                                                                      (u =
                                                                          (l *
                                                                              k +
                                                                              2048) >>
                                                                          12) +
                                                                      1) >>
                                                                      1)) - u),
                                                          (A =
                                                              ((p = _) * s +
                                                                  (d = I) * o +
                                                                  2048) >>
                                                              12),
                                                          (p =
                                                              (p * o -
                                                                  d * s +
                                                                  2048) >>
                                                              12),
                                                          (d = A),
                                                          (b =
                                                              (m =
                                                                  ((m =
                                                                      (f *
                                                                          (w -
                                                                              S) +
                                                                          2048) >>
                                                                      12) +
                                                                      (b = E) +
                                                                      1) >>
                                                                  1) - b),
                                                          (g =
                                                              (v =
                                                                  ((v =
                                                                      (f *
                                                                          (w +
                                                                              S) +
                                                                          2048) >>
                                                                      12) +
                                                                      (g = x) +
                                                                      1) >>
                                                                  1) - g),
                                                          (A =
                                                              (m * n +
                                                                  v * r +
                                                                  2048) >>
                                                              12),
                                                          (m =
                                                              (m * r -
                                                                  v * n +
                                                                  2048) >>
                                                              12),
                                                          (v = A),
                                                          (A =
                                                              (g * i +
                                                                  b * e +
                                                                  2048) >>
                                                              12),
                                                          (g =
                                                              (g * e -
                                                                  b * i +
                                                                  2048) >>
                                                              12),
                                                          (S =
                                                              (c =
                                                                  (c + d + 1) >>
                                                                  1) - v),
                                                          (w =
                                                              (u =
                                                                  (u + p + 1) >>
                                                                  1) + (b = A)),
                                                          (I = u - b),
                                                          (_ = (p = u - p) + g),
                                                          (E = p - g),
                                                          (x = (d = c - d) + m),
                                                          (k = d - m),
                                                          (y =
                                                              (y = c + v) < 16
                                                                  ? 0
                                                                  : y >= 4080
                                                                      ? 255
                                                                      : y >> 4),
                                                          (w =
                                                              w < 16
                                                                  ? 0
                                                                  : w >= 4080
                                                                      ? 255
                                                                      : w >> 4),
                                                          (_ =
                                                              _ < 16
                                                                  ? 0
                                                                  : _ >= 4080
                                                                      ? 255
                                                                      : _ >> 4),
                                                          (x =
                                                              x < 16
                                                                  ? 0
                                                                  : x >= 4080
                                                                      ? 255
                                                                      : x >> 4),
                                                          (k =
                                                              k < 16
                                                                  ? 0
                                                                  : k >= 4080
                                                                      ? 255
                                                                      : k >> 4),
                                                          (E =
                                                              E < 16
                                                                  ? 0
                                                                  : E >= 4080
                                                                      ? 255
                                                                      : E >> 4),
                                                          (I =
                                                              I < 16
                                                                  ? 0
                                                                  : I >= 4080
                                                                      ? 255
                                                                      : I >> 4),
                                                          (S =
                                                              S < 16
                                                                  ? 0
                                                                  : S >= 4080
                                                                      ? 255
                                                                      : S >> 4),
                                                          (C[a + P] = y),
                                                          (C[a + P + 8] = w),
                                                          (C[a + P + 16] = _),
                                                          (C[a + P + 24] = x),
                                                          (C[a + P + 32] = k),
                                                          (C[a + P + 40] = E),
                                                          (C[a + P + 48] = I),
                                                          (C[a + P + 56] = S))
                                                        : ((A =
                                                              (A =
                                                                  (l * y +
                                                                      8192) >>
                                                                  14) < -2040
                                                                  ? 0
                                                                  : A >= 2024
                                                                      ? 255
                                                                      : (A +
                                                                            2056) >>
                                                                        4),
                                                          (C[a + P] = A),
                                                          (C[a + P + 8] = A),
                                                          (C[a + P + 16] = A),
                                                          (C[a + P + 24] = A),
                                                          (C[a + P + 32] = A),
                                                          (C[a + P + 40] = A),
                                                          (C[a + P + 48] = A),
                                                          (C[a + P + 56] = A));
                                        }
                                        function m(t, e) {
                                            for (
                                                var i = e.blocksPerLine,
                                                    r = e.blocksPerColumn,
                                                    n = new Int16Array(64),
                                                    a = 0;
                                                a < r;
                                                a++
                                            )
                                                for (var o = 0; o < i; o++) {
                                                    d(e, u(e, a, o), n);
                                                }
                                            return e.blockData;
                                        }
                                        function g(t) {
                                            return t <= 0
                                                ? 0
                                                : t >= 255
                                                    ? 255
                                                    : t;
                                        }
                                        return (
                                            (h.prototype = {
                                                parse: function(e) {
                                                    function i() {
                                                        var t =
                                                            (e[s] << 8) |
                                                            e[s + 1];
                                                        return (s += 2), t;
                                                    }
                                                    function r() {
                                                        var t = i(),
                                                            r = e.subarray(
                                                                s,
                                                                s + t - 2
                                                            );
                                                        return (
                                                            (s += r.length), r
                                                        );
                                                    }
                                                    function n(t) {
                                                        for (
                                                            var e = Math.ceil(
                                                                    t.samplesPerLine /
                                                                        8 /
                                                                        t.maxH
                                                                ),
                                                                i = Math.ceil(
                                                                    t.scanLines /
                                                                        8 /
                                                                        t.maxV
                                                                ),
                                                                r = 0;
                                                            r <
                                                            t.components.length;
                                                            r++
                                                        ) {
                                                            D = t.components[r];
                                                            var n = Math.ceil(
                                                                    (Math.ceil(
                                                                        t.samplesPerLine /
                                                                            8
                                                                    ) *
                                                                        D.h) /
                                                                        t.maxH
                                                                ),
                                                                a = Math.ceil(
                                                                    (Math.ceil(
                                                                        t.scanLines /
                                                                            8
                                                                    ) *
                                                                        D.v) /
                                                                        t.maxV
                                                                ),
                                                                o = e * D.h,
                                                                s =
                                                                    64 *
                                                                    (i * D.v) *
                                                                    (o + 1);
                                                            (D.blockData = new Int16Array(
                                                                s
                                                            )),
                                                                (D.blocksPerLine = n),
                                                                (D.blocksPerColumn = a);
                                                        }
                                                        (t.mcusPerLine = e),
                                                            (t.mcusPerColumn = i);
                                                    }
                                                    var a,
                                                        o,
                                                        s = 0,
                                                        l = (e.length, null),
                                                        f = null,
                                                        h = [],
                                                        u = [],
                                                        d = [],
                                                        g = i();
                                                    if (65496 !== g)
                                                        throw 'SOI not found';
                                                    for (
                                                        g = i();
                                                        65497 !== g;

                                                    ) {
                                                        var b, v, y;
                                                        switch (g) {
                                                            case 65504:
                                                            case 65505:
                                                            case 65506:
                                                            case 65507:
                                                            case 65508:
                                                            case 65509:
                                                            case 65510:
                                                            case 65511:
                                                            case 65512:
                                                            case 65513:
                                                            case 65514:
                                                            case 65515:
                                                            case 65516:
                                                            case 65517:
                                                            case 65518:
                                                            case 65519:
                                                            case 65534:
                                                                var w = r();
                                                                65504 === g &&
                                                                    74 ===
                                                                        w[0] &&
                                                                    70 ===
                                                                        w[1] &&
                                                                    73 ===
                                                                        w[2] &&
                                                                    70 ===
                                                                        w[3] &&
                                                                    0 ===
                                                                        w[4] &&
                                                                    (l = {
                                                                        version: {
                                                                            major:
                                                                                w[5],
                                                                            minor:
                                                                                w[6]
                                                                        },
                                                                        densityUnits:
                                                                            w[7],
                                                                        xDensity:
                                                                            (w[8] <<
                                                                                8) |
                                                                            w[9],
                                                                        yDensity:
                                                                            (w[10] <<
                                                                                8) |
                                                                            w[11],
                                                                        thumbWidth:
                                                                            w[12],
                                                                        thumbHeight:
                                                                            w[13],
                                                                        thumbData: w.subarray(
                                                                            14,
                                                                            14 +
                                                                                3 *
                                                                                    w[12] *
                                                                                    w[13]
                                                                        )
                                                                    }),
                                                                    65518 ===
                                                                        g &&
                                                                        65 ===
                                                                            w[0] &&
                                                                        100 ===
                                                                            w[1] &&
                                                                        111 ===
                                                                            w[2] &&
                                                                        98 ===
                                                                            w[3] &&
                                                                        101 ===
                                                                            w[4] &&
                                                                        0 ===
                                                                            w[5] &&
                                                                        (f = {
                                                                            version:
                                                                                w[6],
                                                                            flags0:
                                                                                (w[7] <<
                                                                                    8) |
                                                                                w[8],
                                                                            flags1:
                                                                                (w[9] <<
                                                                                    8) |
                                                                                w[10],
                                                                            transformCode:
                                                                                w[11]
                                                                        });
                                                                break;
                                                            case 65499:
                                                                for (
                                                                    var _ =
                                                                        i() +
                                                                        s -
                                                                        2;
                                                                    s < _;

                                                                ) {
                                                                    var x =
                                                                            e[
                                                                                s++
                                                                            ],
                                                                        k = new Uint16Array(
                                                                            64
                                                                        );
                                                                    if (
                                                                        x >>
                                                                            4 ==
                                                                        0
                                                                    )
                                                                        for (
                                                                            v = 0;
                                                                            v <
                                                                            64;
                                                                            v++
                                                                        )
                                                                            k[
                                                                                t[
                                                                                    v
                                                                                ]
                                                                            ] =
                                                                                e[
                                                                                    s++
                                                                                ];
                                                                    else {
                                                                        if (
                                                                            x >>
                                                                                4 !=
                                                                            1
                                                                        )
                                                                            throw 'DQT: invalid table spec';
                                                                        for (
                                                                            v = 0;
                                                                            v <
                                                                            64;
                                                                            v++
                                                                        )
                                                                            k[
                                                                                t[
                                                                                    v
                                                                                ]
                                                                            ] = i();
                                                                    }
                                                                    h[
                                                                        15 & x
                                                                    ] = k;
                                                                }
                                                                break;
                                                            case 65472:
                                                            case 65473:
                                                            case 65474:
                                                                if (a)
                                                                    throw 'Only single frame JPEGs supported';
                                                                i(),
                                                                    ((a = {}).extended =
                                                                        65473 ===
                                                                        g),
                                                                    (a.progressive =
                                                                        65474 ===
                                                                        g),
                                                                    (a.precision =
                                                                        e[s++]),
                                                                    (a.scanLines = i()),
                                                                    (a.samplesPerLine = i()),
                                                                    (a.components = []),
                                                                    (a.componentIds = {});
                                                                var E,
                                                                    I = e[s++],
                                                                    S = 0,
                                                                    A = 0;
                                                                for (
                                                                    b = 0;
                                                                    b < I;
                                                                    b++
                                                                ) {
                                                                    E = e[s];
                                                                    var T =
                                                                            e[
                                                                                s +
                                                                                    1
                                                                            ] >>
                                                                            4,
                                                                        C =
                                                                            15 &
                                                                            e[
                                                                                s +
                                                                                    1
                                                                            ];
                                                                    S < T &&
                                                                        (S = T),
                                                                        A < C &&
                                                                            (A = C);
                                                                    var M =
                                                                        e[
                                                                            s +
                                                                                2
                                                                        ];
                                                                    (y = a.components.push(
                                                                        {
                                                                            h: T,
                                                                            v: C,
                                                                            quantizationTable:
                                                                                h[
                                                                                    M
                                                                                ]
                                                                        }
                                                                    )),
                                                                        (a.componentIds[
                                                                            E
                                                                        ] =
                                                                            y -
                                                                            1),
                                                                        (s += 3);
                                                                }
                                                                (a.maxH = S),
                                                                    (a.maxV = A),
                                                                    n(a);
                                                                break;
                                                            case 65476:
                                                                var P = i();
                                                                for (
                                                                    b = 2;
                                                                    b < P;

                                                                ) {
                                                                    var L =
                                                                            e[
                                                                                s++
                                                                            ],
                                                                        O = new Uint8Array(
                                                                            16
                                                                        ),
                                                                        R = 0;
                                                                    for (
                                                                        v = 0;
                                                                        v < 16;
                                                                        v++, s++
                                                                    )
                                                                        R += O[
                                                                            v
                                                                        ] =
                                                                            e[
                                                                                s
                                                                            ];
                                                                    var B = new Uint8Array(
                                                                        R
                                                                    );
                                                                    for (
                                                                        v = 0;
                                                                        v < R;
                                                                        v++, s++
                                                                    )
                                                                        B[v] =
                                                                            e[
                                                                                s
                                                                            ];
                                                                    (b +=
                                                                        17 + R),
                                                                        ((L >>
                                                                            4 ==
                                                                        0
                                                                            ? d
                                                                            : u)[
                                                                            15 &
                                                                                L
                                                                        ] = c(
                                                                            O,
                                                                            B
                                                                        ));
                                                                }
                                                                break;
                                                            case 65501:
                                                                i(), (o = i());
                                                                break;
                                                            case 65498:
                                                                i();
                                                                var D,
                                                                    z = e[s++],
                                                                    U = [];
                                                                for (
                                                                    b = 0;
                                                                    b < z;
                                                                    b++
                                                                ) {
                                                                    var N =
                                                                        a
                                                                            .componentIds[
                                                                            e[
                                                                                s++
                                                                            ]
                                                                        ];
                                                                    D =
                                                                        a
                                                                            .components[
                                                                            N
                                                                        ];
                                                                    var F =
                                                                        e[s++];
                                                                    (D.huffmanTableDC =
                                                                        d[
                                                                            F >>
                                                                                4
                                                                        ]),
                                                                        (D.huffmanTableAC =
                                                                            u[
                                                                                15 &
                                                                                    F
                                                                            ]),
                                                                        U.push(
                                                                            D
                                                                        );
                                                                }
                                                                var j = e[s++],
                                                                    H = e[s++],
                                                                    G = e[s++],
                                                                    q = p(
                                                                        e,
                                                                        s,
                                                                        a,
                                                                        U,
                                                                        o,
                                                                        j,
                                                                        H,
                                                                        G >> 4,
                                                                        15 & G
                                                                    );
                                                                s += q;
                                                                break;
                                                            case 65535:
                                                                255 !== e[s] &&
                                                                    s--;
                                                                break;
                                                            default:
                                                                if (
                                                                    255 ===
                                                                        e[
                                                                            s -
                                                                                3
                                                                        ] &&
                                                                    e[s - 2] >=
                                                                        192 &&
                                                                    e[s - 2] <=
                                                                        254
                                                                ) {
                                                                    s -= 3;
                                                                    break;
                                                                }
                                                                throw 'unknown JPEG marker ' +
                                                                    g.toString(
                                                                        16
                                                                    );
                                                        }
                                                        g = i();
                                                    }
                                                    for (
                                                        this.width =
                                                            a.samplesPerLine,
                                                            this.height =
                                                                a.scanLines,
                                                            this.jfif = l,
                                                            this.adobe = f,
                                                            this.components = [],
                                                            b = 0;
                                                        b < a.components.length;
                                                        b++
                                                    )
                                                        (D = a.components[b]),
                                                            this.components.push(
                                                                {
                                                                    output: m(
                                                                        0,
                                                                        D
                                                                    ),
                                                                    scaleX:
                                                                        D.h /
                                                                        a.maxH,
                                                                    scaleY:
                                                                        D.v /
                                                                        a.maxV,
                                                                    blocksPerLine:
                                                                        D.blocksPerLine,
                                                                    blocksPerColumn:
                                                                        D.blocksPerColumn
                                                                }
                                                            );
                                                    this.numComponents = this.components.length;
                                                },
                                                _getLinearizedBlockData: function(
                                                    t,
                                                    e
                                                ) {
                                                    var i,
                                                        r,
                                                        n,
                                                        a,
                                                        o,
                                                        s,
                                                        l,
                                                        f,
                                                        h,
                                                        c,
                                                        u,
                                                        p = this.width / t,
                                                        d = this.height / e,
                                                        m = 0,
                                                        g = this.components
                                                            .length,
                                                        b = t * e * g,
                                                        v = new Uint8Array(b),
                                                        y = new Uint32Array(t);
                                                    for (l = 0; l < g; l++) {
                                                        for (
                                                            r =
                                                                (i = this
                                                                    .components[
                                                                    l
                                                                ]).scaleX * p,
                                                                n =
                                                                    i.scaleY *
                                                                    d,
                                                                m = l,
                                                                u = i.output,
                                                                a =
                                                                    (i.blocksPerLine +
                                                                        1) <<
                                                                    3,
                                                                o = 0;
                                                            o < t;
                                                            o++
                                                        )
                                                            (f = 0 | (o * r)),
                                                                (y[o] =
                                                                    ((4294967288 &
                                                                        f) <<
                                                                        3) |
                                                                    (7 & f));
                                                        for (s = 0; s < e; s++)
                                                            for (
                                                                c =
                                                                    (a *
                                                                        (4294967288 &
                                                                            (f =
                                                                                0 |
                                                                                (s *
                                                                                    n)))) |
                                                                    ((7 & f) <<
                                                                        3),
                                                                    o = 0;
                                                                o < t;
                                                                o++
                                                            )
                                                                (v[m] =
                                                                    u[
                                                                        c + y[o]
                                                                    ]),
                                                                    (m += g);
                                                    }
                                                    var w = this
                                                        .decodeTransform;
                                                    if (w)
                                                        for (l = 0; l < b; )
                                                            for (
                                                                f = 0, h = 0;
                                                                f < g;
                                                                f++, l++, h += 2
                                                            )
                                                                v[l] =
                                                                    ((v[l] *
                                                                        w[h]) >>
                                                                        8) +
                                                                    w[h + 1];
                                                    return v;
                                                },
                                                _isColorConversionNeeded: function() {
                                                    return (
                                                        !(
                                                            !this.adobe ||
                                                            !this.adobe
                                                                .transformCode
                                                        ) ||
                                                        3 === this.numComponents
                                                    );
                                                },
                                                _convertYccToRgb: function(t) {
                                                    for (
                                                        var e,
                                                            i,
                                                            r,
                                                            n = 0,
                                                            a = t.length;
                                                        n < a;
                                                        n += 3
                                                    )
                                                        (e = t[n]),
                                                            (i = t[n + 1]),
                                                            (r = t[n + 2]),
                                                            (t[n] = g(
                                                                e -
                                                                    179.456 +
                                                                    1.402 * r
                                                            )),
                                                            (t[n + 1] = g(
                                                                e +
                                                                    135.459 -
                                                                    0.344 * i -
                                                                    0.714 * r
                                                            )),
                                                            (t[n + 2] = g(
                                                                e -
                                                                    226.816 +
                                                                    1.772 * i
                                                            ));
                                                    return t;
                                                },
                                                _convertYcckToRgb: function(t) {
                                                    for (
                                                        var e,
                                                            i,
                                                            r,
                                                            n,
                                                            a = 0,
                                                            o = 0,
                                                            s = t.length;
                                                        o < s;
                                                        o += 4
                                                    ) {
                                                        e = t[o];
                                                        var l =
                                                                (i = t[o + 1]) *
                                                                    (-660635669420364e-19 *
                                                                        i +
                                                                        0.000437130475926232 *
                                                                            (r =
                                                                                t[
                                                                                    o +
                                                                                        2
                                                                                ]) -
                                                                        54080610064599e-18 *
                                                                            e +
                                                                        0.00048449797120281 *
                                                                            (n =
                                                                                t[
                                                                                    o +
                                                                                        3
                                                                                ]) -
                                                                        0.154362151871126) -
                                                                122.67195406894 +
                                                                r *
                                                                    (-0.000957964378445773 *
                                                                        r +
                                                                        0.000817076911346625 *
                                                                            e -
                                                                        0.00477271405408747 *
                                                                            n +
                                                                        1.53380253221734) +
                                                                e *
                                                                    (0.000961250184130688 *
                                                                        e -
                                                                        0.00266257332283933 *
                                                                            n +
                                                                        0.48357088451265) +
                                                                n *
                                                                    (-0.000336197177618394 *
                                                                        n +
                                                                        0.484791561490776),
                                                            f =
                                                                107.268039397724 +
                                                                i *
                                                                    (219927104525741e-19 *
                                                                        i -
                                                                        0.000640992018297945 *
                                                                            r +
                                                                        0.000659397001245577 *
                                                                            e +
                                                                        0.000426105652938837 *
                                                                            n -
                                                                        0.176491792462875) +
                                                                r *
                                                                    (-0.000778269941513683 *
                                                                        r +
                                                                        0.00130872261408275 *
                                                                            e +
                                                                        0.000770482631801132 *
                                                                            n -
                                                                        0.151051492775562) +
                                                                e *
                                                                    (0.00126935368114843 *
                                                                        e -
                                                                        0.00265090189010898 *
                                                                            n +
                                                                        0.25802910206845) +
                                                                n *
                                                                    (-0.000318913117588328 *
                                                                        n -
                                                                        0.213742400323665),
                                                            h =
                                                                i *
                                                                    (-0.000570115196973677 *
                                                                        i -
                                                                        263409051004589e-19 *
                                                                            r +
                                                                        0.0020741088115012 *
                                                                            e -
                                                                        0.00288260236853442 *
                                                                            n +
                                                                        0.814272968359295) -
                                                                20.810012546947 +
                                                                r *
                                                                    (-153496057440975e-19 *
                                                                        r -
                                                                        0.000132689043961446 *
                                                                            e +
                                                                        0.000560833691242812 *
                                                                            n -
                                                                        0.195152027534049) +
                                                                e *
                                                                    (0.00174418132927582 *
                                                                        e -
                                                                        0.00255243321439347 *
                                                                            n +
                                                                        0.116935020465145) +
                                                                n *
                                                                    (-0.000343531996510555 *
                                                                        n +
                                                                        0.24165260232407);
                                                        (t[a++] = g(l)),
                                                            (t[a++] = g(f)),
                                                            (t[a++] = g(h));
                                                    }
                                                    return t;
                                                },
                                                _convertYcckToCmyk: function(
                                                    t
                                                ) {
                                                    for (
                                                        var e,
                                                            i,
                                                            r,
                                                            n = 0,
                                                            a = t.length;
                                                        n < a;
                                                        n += 4
                                                    )
                                                        (e = t[n]),
                                                            (i = t[n + 1]),
                                                            (r = t[n + 2]),
                                                            (t[n] = g(
                                                                434.456 -
                                                                    e -
                                                                    1.402 * r
                                                            )),
                                                            (t[n + 1] = g(
                                                                119.541 -
                                                                    e +
                                                                    0.344 * i +
                                                                    0.714 * r
                                                            )),
                                                            (t[n + 2] = g(
                                                                481.816 -
                                                                    e -
                                                                    1.772 * i
                                                            ));
                                                    return t;
                                                },
                                                _convertCmykToRgb: function(t) {
                                                    for (
                                                        var e,
                                                            i,
                                                            r,
                                                            n,
                                                            a = 0,
                                                            o = -16581375,
                                                            s = 0,
                                                            l = t.length;
                                                        s < l;
                                                        s += 4
                                                    ) {
                                                        var f =
                                                                (e = t[s]) *
                                                                    (-4.387332384609988 *
                                                                        e +
                                                                        54.48615194189176 *
                                                                            (i =
                                                                                t[
                                                                                    s +
                                                                                        1
                                                                                ]) +
                                                                        18.82290502165302 *
                                                                            (r =
                                                                                t[
                                                                                    s +
                                                                                        2
                                                                                ]) +
                                                                        212.25662451639585 *
                                                                            (n =
                                                                                t[
                                                                                    s +
                                                                                        3
                                                                                ]) -
                                                                        72734.4411664936) +
                                                                i *
                                                                    (1.7149763477362134 *
                                                                        i -
                                                                        5.6096736904047315 *
                                                                            r -
                                                                        17.873870861415444 *
                                                                            n -
                                                                        1401.7366389350734) +
                                                                r *
                                                                    (-2.5217340131683033 *
                                                                        r -
                                                                        21.248923337353073 *
                                                                            n +
                                                                        4465.541406466231) -
                                                                n *
                                                                    (21.86122147463605 *
                                                                        n +
                                                                        48317.86113160301),
                                                            h =
                                                                e *
                                                                    (8.841041422036149 *
                                                                        e +
                                                                        60.118027045597366 *
                                                                            i +
                                                                        6.871425592049007 *
                                                                            r +
                                                                        31.159100130055922 *
                                                                            n -
                                                                        20220.756542821975) +
                                                                i *
                                                                    (-15.310361306967817 *
                                                                        i +
                                                                        17.575251261109482 *
                                                                            r +
                                                                        131.35250912493976 *
                                                                            n -
                                                                        48691.05921601825) +
                                                                r *
                                                                    (4.444339102852739 *
                                                                        r +
                                                                        9.8632861493405 *
                                                                            n -
                                                                        6341.191035517494) -
                                                                n *
                                                                    (20.737325471181034 *
                                                                        n +
                                                                        47890.15695978492),
                                                            c =
                                                                e *
                                                                    (0.8842522430003296 *
                                                                        e +
                                                                        8.078677503112928 *
                                                                            i +
                                                                        30.89978309703729 *
                                                                            r -
                                                                        0.23883238689178934 *
                                                                            n -
                                                                        3616.812083916688) +
                                                                i *
                                                                    (10.49593273432072 *
                                                                        i +
                                                                        63.02378494754052 *
                                                                            r +
                                                                        50.606957656360734 *
                                                                            n -
                                                                        28620.90484698408) +
                                                                r *
                                                                    (0.03296041114873217 *
                                                                        r +
                                                                        115.60384449646641 *
                                                                            n -
                                                                        49363.43385999684) -
                                                                n *
                                                                    (22.33816807309886 *
                                                                        n +
                                                                        45932.16563550634);
                                                        (t[a++] =
                                                            f >= 0
                                                                ? 255
                                                                : f <= o
                                                                    ? 0
                                                                    : (255 +
                                                                          f *
                                                                              (1 /
                                                                                  255 /
                                                                                  255)) |
                                                                      0),
                                                            (t[a++] =
                                                                h >= 0
                                                                    ? 255
                                                                    : h <= o
                                                                        ? 0
                                                                        : (255 +
                                                                              h *
                                                                                  (1 /
                                                                                      255 /
                                                                                      255)) |
                                                                          0),
                                                            (t[a++] =
                                                                c >= 0
                                                                    ? 255
                                                                    : c <= o
                                                                        ? 0
                                                                        : (255 +
                                                                              c *
                                                                                  (1 /
                                                                                      255 /
                                                                                      255)) |
                                                                          0);
                                                    }
                                                    return t;
                                                },
                                                getData: function(t, e, i) {
                                                    if (this.numComponents > 4)
                                                        throw 'Unsupported color mode';
                                                    var r = this._getLinearizedBlockData(
                                                        t,
                                                        e
                                                    );
                                                    if (
                                                        3 === this.numComponents
                                                    )
                                                        return this._convertYccToRgb(
                                                            r
                                                        );
                                                    if (
                                                        4 === this.numComponents
                                                    ) {
                                                        if (
                                                            this._isColorConversionNeeded()
                                                        )
                                                            return i
                                                                ? this._convertYcckToRgb(
                                                                      r
                                                                  )
                                                                : this._convertYcckToCmyk(
                                                                      r
                                                                  );
                                                        if (i)
                                                            return this._convertCmykToRgb(
                                                                r
                                                            );
                                                    }
                                                    return r;
                                                }
                                            }),
                                            h
                                        );
                                    })(),
                                    i = (function() {
                                        var t = [
                                            {
                                                qe: 22017,
                                                nmps: 1,
                                                nlps: 1,
                                                switchFlag: 1
                                            },
                                            {
                                                qe: 13313,
                                                nmps: 2,
                                                nlps: 6,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 6145,
                                                nmps: 3,
                                                nlps: 9,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 2753,
                                                nmps: 4,
                                                nlps: 12,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 1313,
                                                nmps: 5,
                                                nlps: 29,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 545,
                                                nmps: 38,
                                                nlps: 33,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 22017,
                                                nmps: 7,
                                                nlps: 6,
                                                switchFlag: 1
                                            },
                                            {
                                                qe: 21505,
                                                nmps: 8,
                                                nlps: 14,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 18433,
                                                nmps: 9,
                                                nlps: 14,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 14337,
                                                nmps: 10,
                                                nlps: 14,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 12289,
                                                nmps: 11,
                                                nlps: 17,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 9217,
                                                nmps: 12,
                                                nlps: 18,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 7169,
                                                nmps: 13,
                                                nlps: 20,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 5633,
                                                nmps: 29,
                                                nlps: 21,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 22017,
                                                nmps: 15,
                                                nlps: 14,
                                                switchFlag: 1
                                            },
                                            {
                                                qe: 21505,
                                                nmps: 16,
                                                nlps: 14,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 20737,
                                                nmps: 17,
                                                nlps: 15,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 18433,
                                                nmps: 18,
                                                nlps: 16,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 14337,
                                                nmps: 19,
                                                nlps: 17,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 13313,
                                                nmps: 20,
                                                nlps: 18,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 12289,
                                                nmps: 21,
                                                nlps: 19,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 10241,
                                                nmps: 22,
                                                nlps: 19,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 9217,
                                                nmps: 23,
                                                nlps: 20,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 8705,
                                                nmps: 24,
                                                nlps: 21,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 7169,
                                                nmps: 25,
                                                nlps: 22,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 6145,
                                                nmps: 26,
                                                nlps: 23,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 5633,
                                                nmps: 27,
                                                nlps: 24,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 5121,
                                                nmps: 28,
                                                nlps: 25,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 4609,
                                                nmps: 29,
                                                nlps: 26,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 4353,
                                                nmps: 30,
                                                nlps: 27,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 2753,
                                                nmps: 31,
                                                nlps: 28,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 2497,
                                                nmps: 32,
                                                nlps: 29,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 2209,
                                                nmps: 33,
                                                nlps: 30,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 1313,
                                                nmps: 34,
                                                nlps: 31,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 1089,
                                                nmps: 35,
                                                nlps: 32,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 673,
                                                nmps: 36,
                                                nlps: 33,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 545,
                                                nmps: 37,
                                                nlps: 34,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 321,
                                                nmps: 38,
                                                nlps: 35,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 273,
                                                nmps: 39,
                                                nlps: 36,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 133,
                                                nmps: 40,
                                                nlps: 37,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 73,
                                                nmps: 41,
                                                nlps: 38,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 37,
                                                nmps: 42,
                                                nlps: 39,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 21,
                                                nmps: 43,
                                                nlps: 40,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 9,
                                                nmps: 44,
                                                nlps: 41,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 5,
                                                nmps: 45,
                                                nlps: 42,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 1,
                                                nmps: 45,
                                                nlps: 43,
                                                switchFlag: 0
                                            },
                                            {
                                                qe: 22017,
                                                nmps: 46,
                                                nlps: 46,
                                                switchFlag: 0
                                            }
                                        ];
                                        function e(t, e, i) {
                                            (this.data = t),
                                                (this.bp = e),
                                                (this.dataEnd = i),
                                                (this.chigh = t[e]),
                                                (this.clow = 0),
                                                this.byteIn(),
                                                (this.chigh =
                                                    ((this.chigh << 7) &
                                                        65535) |
                                                    ((this.clow >> 9) & 127)),
                                                (this.clow =
                                                    (this.clow << 7) & 65535),
                                                (this.ct -= 7),
                                                (this.a = 32768);
                                        }
                                        return (
                                            (e.prototype = {
                                                byteIn: function() {
                                                    var t = this.data,
                                                        e = this.bp;
                                                    255 === t[e]
                                                        ? t[e + 1] > 143
                                                            ? ((this.clow += 65280),
                                                              (this.ct = 8))
                                                            : (e++,
                                                              (this.clow +=
                                                                  t[e] << 9),
                                                              (this.ct = 7),
                                                              (this.bp = e))
                                                        : (e++,
                                                          (this.clow +=
                                                              e < this.dataEnd
                                                                  ? t[e] << 8
                                                                  : 65280),
                                                          (this.ct = 8),
                                                          (this.bp = e));
                                                    this.clow > 65535 &&
                                                        ((this.chigh +=
                                                            this.clow >> 16),
                                                        (this.clow &= 65535));
                                                },
                                                readBit: function(e, i) {
                                                    var r,
                                                        n = e[i] >> 1,
                                                        a = 1 & e[i],
                                                        o = t[n],
                                                        s = o.qe,
                                                        l = this.a - s;
                                                    if (this.chigh < s)
                                                        l < s
                                                            ? ((l = s),
                                                              (r = a),
                                                              (n = o.nmps))
                                                            : ((l = s),
                                                              (r = 1 ^ a),
                                                              1 ===
                                                                  o.switchFlag &&
                                                                  (a = r),
                                                              (n = o.nlps));
                                                    else {
                                                        if (
                                                            ((this.chigh -= s),
                                                            0 != (32768 & l))
                                                        )
                                                            return (
                                                                (this.a = l), a
                                                            );
                                                        l < s
                                                            ? ((r = 1 ^ a),
                                                              1 ===
                                                                  o.switchFlag &&
                                                                  (a = r),
                                                              (n = o.nlps))
                                                            : ((r = a),
                                                              (n = o.nmps));
                                                    }
                                                    do {
                                                        0 === this.ct &&
                                                            this.byteIn(),
                                                            (l <<= 1),
                                                            (this.chigh =
                                                                ((this.chigh <<
                                                                    1) &
                                                                    65535) |
                                                                ((this.clow >>
                                                                    15) &
                                                                    1)),
                                                            (this.clow =
                                                                (this.clow <<
                                                                    1) &
                                                                65535),
                                                            this.ct--;
                                                    } while (0 == (32768 & l));
                                                    return (
                                                        (this.a = l),
                                                        (e[i] = (n << 1) | a),
                                                        r
                                                    );
                                                }
                                            }),
                                            e
                                        );
                                    })(),
                                    r = (function() {
                                        var t = { LL: 0, LH: 1, HL: 1, HH: 2 };
                                        function e() {
                                            this.failOnCorruptedImage = !1;
                                        }
                                        function r(t, e) {
                                            (t.x0 = Math.ceil(
                                                e.XOsiz / t.XRsiz
                                            )),
                                                (t.x1 = Math.ceil(
                                                    e.Xsiz / t.XRsiz
                                                )),
                                                (t.y0 = Math.ceil(
                                                    e.YOsiz / t.YRsiz
                                                )),
                                                (t.y1 = Math.ceil(
                                                    e.Ysiz / t.YRsiz
                                                )),
                                                (t.width = t.x1 - t.x0),
                                                (t.height = t.y1 - t.y0);
                                        }
                                        function n(t, e) {
                                            for (
                                                var i,
                                                    r = t.SIZ,
                                                    n = [],
                                                    a = Math.ceil(
                                                        (r.Xsiz - r.XTOsiz) /
                                                            r.XTsiz
                                                    ),
                                                    o = Math.ceil(
                                                        (r.Ysiz - r.YTOsiz) /
                                                            r.YTsiz
                                                    ),
                                                    s = 0;
                                                s < o;
                                                s++
                                            )
                                                for (var l = 0; l < a; l++)
                                                    ((i = {}).tx0 = Math.max(
                                                        r.XTOsiz + l * r.XTsiz,
                                                        r.XOsiz
                                                    )),
                                                        (i.ty0 = Math.max(
                                                            r.YTOsiz +
                                                                s * r.YTsiz,
                                                            r.YOsiz
                                                        )),
                                                        (i.tx1 = Math.min(
                                                            r.XTOsiz +
                                                                (l + 1) *
                                                                    r.XTsiz,
                                                            r.Xsiz
                                                        )),
                                                        (i.ty1 = Math.min(
                                                            r.YTOsiz +
                                                                (s + 1) *
                                                                    r.YTsiz,
                                                            r.Ysiz
                                                        )),
                                                        (i.width =
                                                            i.tx1 - i.tx0),
                                                        (i.height =
                                                            i.ty1 - i.ty0),
                                                        (i.components = []),
                                                        n.push(i);
                                            t.tiles = n;
                                            for (
                                                var f = 0, h = r.Csiz;
                                                f < h;
                                                f++
                                            )
                                                for (
                                                    var c = e[f],
                                                        u = 0,
                                                        p = n.length;
                                                    u < p;
                                                    u++
                                                ) {
                                                    var d = {};
                                                    (i = n[u]),
                                                        (d.tcx0 = Math.ceil(
                                                            i.tx0 / c.XRsiz
                                                        )),
                                                        (d.tcy0 = Math.ceil(
                                                            i.ty0 / c.YRsiz
                                                        )),
                                                        (d.tcx1 = Math.ceil(
                                                            i.tx1 / c.XRsiz
                                                        )),
                                                        (d.tcy1 = Math.ceil(
                                                            i.ty1 / c.YRsiz
                                                        )),
                                                        (d.width =
                                                            d.tcx1 - d.tcx0),
                                                        (d.height =
                                                            d.tcy1 - d.tcy0),
                                                        (i.components[f] = d);
                                                }
                                        }
                                        function a(t, e, i) {
                                            var r = e.codingStyleParameters,
                                                n = {};
                                            return (
                                                r.entropyCoderWithCustomPrecincts
                                                    ? ((n.PPx =
                                                          r.precinctsSizes[
                                                              i
                                                          ].PPx),
                                                      (n.PPy =
                                                          r.precinctsSizes[
                                                              i
                                                          ].PPy))
                                                    : ((n.PPx = 15),
                                                      (n.PPy = 15)),
                                                (n.xcb_ =
                                                    i > 0
                                                        ? Math.min(
                                                              r.xcb,
                                                              n.PPx - 1
                                                          )
                                                        : Math.min(
                                                              r.xcb,
                                                              n.PPx
                                                          )),
                                                (n.ycb_ =
                                                    i > 0
                                                        ? Math.min(
                                                              r.ycb,
                                                              n.PPy - 1
                                                          )
                                                        : Math.min(
                                                              r.ycb,
                                                              n.PPy
                                                          )),
                                                n
                                            );
                                        }
                                        function s(t, e, i) {
                                            var r = 1 << i.PPx,
                                                n = 1 << i.PPy,
                                                a = 0 === e.resLevel,
                                                o = 1 << (i.PPx + (a ? 0 : -1)),
                                                s = 1 << (i.PPy + (a ? 0 : -1)),
                                                l =
                                                    e.trx1 > e.trx0
                                                        ? Math.ceil(
                                                              e.trx1 / r
                                                          ) -
                                                          Math.floor(e.trx0 / r)
                                                        : 0,
                                                f =
                                                    e.try1 > e.try0
                                                        ? Math.ceil(
                                                              e.try1 / n
                                                          ) -
                                                          Math.floor(e.try0 / n)
                                                        : 0,
                                                h = l * f;
                                            e.precinctParameters = {
                                                precinctWidth: r,
                                                precinctHeight: n,
                                                numprecinctswide: l,
                                                numprecinctshigh: f,
                                                numprecincts: h,
                                                precinctWidthInSubband: o,
                                                precinctHeightInSubband: s
                                            };
                                        }
                                        function h(t, e, i) {
                                            var r,
                                                n,
                                                a,
                                                o,
                                                s = i.xcb_,
                                                l = i.ycb_,
                                                f = 1 << s,
                                                h = 1 << l,
                                                c = e.tbx0 >> s,
                                                u = e.tby0 >> l,
                                                p = (e.tbx1 + f - 1) >> s,
                                                d = (e.tby1 + h - 1) >> l,
                                                m =
                                                    e.resolution
                                                        .precinctParameters,
                                                g = [],
                                                b = [];
                                            for (n = u; n < d; n++)
                                                for (r = c; r < p; r++) {
                                                    if (
                                                        (((a = {
                                                            cbx: r,
                                                            cby: n,
                                                            tbx0: f * r,
                                                            tby0: h * n,
                                                            tbx1: f * (r + 1),
                                                            tby1: h * (n + 1)
                                                        }).tbx0_ = Math.max(
                                                            e.tbx0,
                                                            a.tbx0
                                                        )),
                                                        (a.tby0_ = Math.max(
                                                            e.tby0,
                                                            a.tby0
                                                        )),
                                                        (a.tbx1_ = Math.min(
                                                            e.tbx1,
                                                            a.tbx1
                                                        )),
                                                        (a.tby1_ = Math.min(
                                                            e.tby1,
                                                            a.tby1
                                                        )),
                                                        (o =
                                                            Math.floor(
                                                                (a.tbx0_ -
                                                                    e.tbx0) /
                                                                    m.precinctWidthInSubband
                                                            ) +
                                                            Math.floor(
                                                                (a.tby0_ -
                                                                    e.tby0) /
                                                                    m.precinctHeightInSubband
                                                            ) *
                                                                m.numprecinctswide),
                                                        (a.precinctNumber = o),
                                                        (a.subbandType =
                                                            e.type),
                                                        (a.Lblock = 3),
                                                        !(
                                                            a.tbx1_ <=
                                                                a.tbx0_ ||
                                                            a.tby1_ <= a.tby0_
                                                        ))
                                                    ) {
                                                        g.push(a);
                                                        var v = b[o];
                                                        void 0 !== v
                                                            ? (r < v.cbxMin
                                                                  ? (v.cbxMin = r)
                                                                  : r >
                                                                        v.cbxMax &&
                                                                    (v.cbxMax = r),
                                                              n < v.cbyMin
                                                                  ? (v.cbxMin = n)
                                                                  : n >
                                                                        v.cbyMax &&
                                                                    (v.cbyMax = n))
                                                            : (b[o] = v = {
                                                                  cbxMin: r,
                                                                  cbyMin: n,
                                                                  cbxMax: r,
                                                                  cbyMax: n
                                                              }),
                                                            (a.precinct = v);
                                                    }
                                                }
                                            (e.codeblockParameters = {
                                                codeblockWidth: s,
                                                codeblockHeight: l,
                                                numcodeblockwide: p - c + 1,
                                                numcodeblockhigh: d - u + 1
                                            }),
                                                (e.codeblocks = g),
                                                (e.precincts = b);
                                        }
                                        function c(t, e, i) {
                                            for (
                                                var r = [],
                                                    n = t.subbands,
                                                    a = 0,
                                                    o = n.length;
                                                a < o;
                                                a++
                                            )
                                                for (
                                                    var s = n[a].codeblocks,
                                                        l = 0,
                                                        f = s.length;
                                                    l < f;
                                                    l++
                                                ) {
                                                    var h = s[l];
                                                    h.precinctNumber === e &&
                                                        r.push(h);
                                                }
                                            return {
                                                layerNumber: i,
                                                codeblocks: r
                                            };
                                        }
                                        function d(t, e, i, r, n) {
                                            var a = t * r.minWidth,
                                                o = e * r.minHeight;
                                            if (
                                                a % i.width != 0 ||
                                                o % i.height != 0
                                            )
                                                return null;
                                            var s =
                                                (o / i.width) *
                                                n.precinctParameters
                                                    .numprecinctswide;
                                            return a / i.height + s;
                                        }
                                        function m(t) {
                                            for (
                                                var e = t.components.length,
                                                    i = Number.MAX_VALUE,
                                                    r = Number.MAX_VALUE,
                                                    n = 0,
                                                    a = 0,
                                                    o = new Array(e),
                                                    s = 0;
                                                s < e;
                                                s++
                                            ) {
                                                for (
                                                    var l = t.components[s],
                                                        f =
                                                            l
                                                                .codingStyleParameters
                                                                .decompositionLevelsCount,
                                                        h = new Array(f + 1),
                                                        c = Number.MAX_VALUE,
                                                        u = Number.MAX_VALUE,
                                                        p = 0,
                                                        d = 0,
                                                        m = 1,
                                                        g = f;
                                                    g >= 0;
                                                    --g
                                                ) {
                                                    var b = l.resolutions[g],
                                                        v =
                                                            m *
                                                            b.precinctParameters
                                                                .precinctWidth,
                                                        y =
                                                            m *
                                                            b.precinctParameters
                                                                .precinctHeight;
                                                    (c = Math.min(c, v)),
                                                        (u = Math.min(u, y)),
                                                        (p = Math.max(
                                                            p,
                                                            b.precinctParameters
                                                                .numprecinctswide
                                                        )),
                                                        (d = Math.max(
                                                            d,
                                                            b.precinctParameters
                                                                .numprecinctshigh
                                                        )),
                                                        (h[g] = {
                                                            width: v,
                                                            height: y
                                                        }),
                                                        (m <<= 1);
                                                }
                                                (i = Math.min(i, c)),
                                                    (r = Math.min(r, u)),
                                                    (n = Math.max(n, p)),
                                                    (a = Math.max(a, d)),
                                                    (o[s] = {
                                                        resolutions: h,
                                                        minWidth: c,
                                                        minHeight: u,
                                                        maxNumWide: p,
                                                        maxNumHigh: d
                                                    });
                                            }
                                            return {
                                                components: o,
                                                minWidth: i,
                                                minHeight: r,
                                                maxNumWide: n,
                                                maxNumHigh: a
                                            };
                                        }
                                        function g(t) {
                                            for (
                                                var e = t.SIZ,
                                                    i = t.currentTile.index,
                                                    r = t.tiles[i],
                                                    n = e.Csiz,
                                                    o = 0;
                                                o < n;
                                                o++
                                            ) {
                                                for (
                                                    var l = r.components[o],
                                                        f =
                                                            l
                                                                .codingStyleParameters
                                                                .decompositionLevelsCount,
                                                        u = [],
                                                        p = [],
                                                        g = 0;
                                                    g <= f;
                                                    g++
                                                ) {
                                                    var b,
                                                        v = a(0, l, g),
                                                        y = {},
                                                        w = 1 << (f - g);
                                                    if (
                                                        ((y.trx0 = Math.ceil(
                                                            l.tcx0 / w
                                                        )),
                                                        (y.try0 = Math.ceil(
                                                            l.tcy0 / w
                                                        )),
                                                        (y.trx1 = Math.ceil(
                                                            l.tcx1 / w
                                                        )),
                                                        (y.try1 = Math.ceil(
                                                            l.tcy1 / w
                                                        )),
                                                        (y.resLevel = g),
                                                        s(0, y, v),
                                                        u.push(y),
                                                        0 === g)
                                                    )
                                                        ((b = {}).type = 'LL'),
                                                            (b.tbx0 = Math.ceil(
                                                                l.tcx0 / w
                                                            )),
                                                            (b.tby0 = Math.ceil(
                                                                l.tcy0 / w
                                                            )),
                                                            (b.tbx1 = Math.ceil(
                                                                l.tcx1 / w
                                                            )),
                                                            (b.tby1 = Math.ceil(
                                                                l.tcy1 / w
                                                            )),
                                                            (b.resolution = y),
                                                            h(0, b, v),
                                                            p.push(b),
                                                            (y.subbands = [b]);
                                                    else {
                                                        var _ =
                                                                1 <<
                                                                (f - g + 1),
                                                            x = [];
                                                        ((b = {}).type = 'HL'),
                                                            (b.tbx0 = Math.ceil(
                                                                l.tcx0 / _ - 0.5
                                                            )),
                                                            (b.tby0 = Math.ceil(
                                                                l.tcy0 / _
                                                            )),
                                                            (b.tbx1 = Math.ceil(
                                                                l.tcx1 / _ - 0.5
                                                            )),
                                                            (b.tby1 = Math.ceil(
                                                                l.tcy1 / _
                                                            )),
                                                            (b.resolution = y),
                                                            h(0, b, v),
                                                            p.push(b),
                                                            x.push(b),
                                                            ((b = {}).type =
                                                                'LH'),
                                                            (b.tbx0 = Math.ceil(
                                                                l.tcx0 / _
                                                            )),
                                                            (b.tby0 = Math.ceil(
                                                                l.tcy0 / _ - 0.5
                                                            )),
                                                            (b.tbx1 = Math.ceil(
                                                                l.tcx1 / _
                                                            )),
                                                            (b.tby1 = Math.ceil(
                                                                l.tcy1 / _ - 0.5
                                                            )),
                                                            (b.resolution = y),
                                                            h(0, b, v),
                                                            p.push(b),
                                                            x.push(b),
                                                            ((b = {}).type =
                                                                'HH'),
                                                            (b.tbx0 = Math.ceil(
                                                                l.tcx0 / _ - 0.5
                                                            )),
                                                            (b.tby0 = Math.ceil(
                                                                l.tcy0 / _ - 0.5
                                                            )),
                                                            (b.tbx1 = Math.ceil(
                                                                l.tcx1 / _ - 0.5
                                                            )),
                                                            (b.tby1 = Math.ceil(
                                                                l.tcy1 / _ - 0.5
                                                            )),
                                                            (b.resolution = y),
                                                            h(0, b, v),
                                                            p.push(b),
                                                            x.push(b),
                                                            (y.subbands = x);
                                                    }
                                                }
                                                (l.resolutions = u),
                                                    (l.subbands = p);
                                            }
                                            var k =
                                                r.codingStyleDefaultParameters
                                                    .progressionOrder;
                                            switch (k) {
                                                case 0:
                                                    r.packetsIterator = new function(
                                                        t
                                                    ) {
                                                        for (
                                                            var e = t.SIZ,
                                                                i =
                                                                    t
                                                                        .currentTile
                                                                        .index,
                                                                r = t.tiles[i],
                                                                n =
                                                                    r
                                                                        .codingStyleDefaultParameters
                                                                        .layersCount,
                                                                a = e.Csiz,
                                                                o = 0,
                                                                s = 0;
                                                            s < a;
                                                            s++
                                                        )
                                                            o = Math.max(
                                                                o,
                                                                r.components[s]
                                                                    .codingStyleParameters
                                                                    .decompositionLevelsCount
                                                            );
                                                        var l = 0,
                                                            f = 0,
                                                            h = 0,
                                                            u = 0;
                                                        this.nextPacket = function() {
                                                            for (; l < n; l++) {
                                                                for (
                                                                    ;
                                                                    f <= o;
                                                                    f++
                                                                ) {
                                                                    for (
                                                                        ;
                                                                        h < a;
                                                                        h++
                                                                    ) {
                                                                        var t =
                                                                            r
                                                                                .components[
                                                                                h
                                                                            ];
                                                                        if (
                                                                            !(
                                                                                f >
                                                                                t
                                                                                    .codingStyleParameters
                                                                                    .decompositionLevelsCount
                                                                            )
                                                                        ) {
                                                                            for (
                                                                                var e =
                                                                                        t
                                                                                            .resolutions[
                                                                                            f
                                                                                        ],
                                                                                    i =
                                                                                        e
                                                                                            .precinctParameters
                                                                                            .numprecincts;
                                                                                u <
                                                                                i;

                                                                            ) {
                                                                                var s = c(
                                                                                    e,
                                                                                    u,
                                                                                    l
                                                                                );
                                                                                return (
                                                                                    u++,
                                                                                    s
                                                                                );
                                                                            }
                                                                            u = 0;
                                                                        }
                                                                    }
                                                                    h = 0;
                                                                }
                                                                f = 0;
                                                            }
                                                            throw new Error(
                                                                'JPX Error: Out of packets'
                                                            );
                                                        };
                                                    }(t);
                                                    break;
                                                case 1:
                                                    r.packetsIterator = new function(
                                                        t
                                                    ) {
                                                        for (
                                                            var e = t.SIZ,
                                                                i =
                                                                    t
                                                                        .currentTile
                                                                        .index,
                                                                r = t.tiles[i],
                                                                n =
                                                                    r
                                                                        .codingStyleDefaultParameters
                                                                        .layersCount,
                                                                a = e.Csiz,
                                                                o = 0,
                                                                s = 0;
                                                            s < a;
                                                            s++
                                                        )
                                                            o = Math.max(
                                                                o,
                                                                r.components[s]
                                                                    .codingStyleParameters
                                                                    .decompositionLevelsCount
                                                            );
                                                        var l = 0,
                                                            f = 0,
                                                            h = 0,
                                                            u = 0;
                                                        this.nextPacket = function() {
                                                            for (
                                                                ;
                                                                l <= o;
                                                                l++
                                                            ) {
                                                                for (
                                                                    ;
                                                                    f < n;
                                                                    f++
                                                                ) {
                                                                    for (
                                                                        ;
                                                                        h < a;
                                                                        h++
                                                                    ) {
                                                                        var t =
                                                                            r
                                                                                .components[
                                                                                h
                                                                            ];
                                                                        if (
                                                                            !(
                                                                                l >
                                                                                t
                                                                                    .codingStyleParameters
                                                                                    .decompositionLevelsCount
                                                                            )
                                                                        ) {
                                                                            for (
                                                                                var e =
                                                                                        t
                                                                                            .resolutions[
                                                                                            l
                                                                                        ],
                                                                                    i =
                                                                                        e
                                                                                            .precinctParameters
                                                                                            .numprecincts;
                                                                                u <
                                                                                i;

                                                                            ) {
                                                                                var s = c(
                                                                                    e,
                                                                                    u,
                                                                                    f
                                                                                );
                                                                                return (
                                                                                    u++,
                                                                                    s
                                                                                );
                                                                            }
                                                                            u = 0;
                                                                        }
                                                                    }
                                                                    h = 0;
                                                                }
                                                                f = 0;
                                                            }
                                                            throw new Error(
                                                                'JPX Error: Out of packets'
                                                            );
                                                        };
                                                    }(t);
                                                    break;
                                                case 2:
                                                    r.packetsIterator = new function(
                                                        t
                                                    ) {
                                                        var e,
                                                            i,
                                                            r,
                                                            n,
                                                            a = t.SIZ,
                                                            o =
                                                                t.currentTile
                                                                    .index,
                                                            s = t.tiles[o],
                                                            l =
                                                                s
                                                                    .codingStyleDefaultParameters
                                                                    .layersCount,
                                                            f = a.Csiz,
                                                            h = 0;
                                                        for (
                                                            r = 0;
                                                            r < f;
                                                            r++
                                                        ) {
                                                            var u =
                                                                s.components[r];
                                                            h = Math.max(
                                                                h,
                                                                u
                                                                    .codingStyleParameters
                                                                    .decompositionLevelsCount
                                                            );
                                                        }
                                                        var p = new Int32Array(
                                                            h + 1
                                                        );
                                                        for (
                                                            i = 0;
                                                            i <= h;
                                                            ++i
                                                        ) {
                                                            var d = 0;
                                                            for (
                                                                r = 0;
                                                                r < f;
                                                                ++r
                                                            ) {
                                                                var m =
                                                                    s
                                                                        .components[
                                                                        r
                                                                    ]
                                                                        .resolutions;
                                                                i < m.length &&
                                                                    (d = Math.max(
                                                                        d,
                                                                        m[i]
                                                                            .precinctParameters
                                                                            .numprecincts
                                                                    ));
                                                            }
                                                            p[i] = d;
                                                        }
                                                        (e = 0),
                                                            (i = 0),
                                                            (r = 0),
                                                            (n = 0),
                                                            (this.nextPacket = function() {
                                                                for (
                                                                    ;
                                                                    i <= h;
                                                                    i++
                                                                ) {
                                                                    for (
                                                                        ;
                                                                        n <
                                                                        p[i];
                                                                        n++
                                                                    ) {
                                                                        for (
                                                                            ;
                                                                            r <
                                                                            f;
                                                                            r++
                                                                        ) {
                                                                            var t =
                                                                                s
                                                                                    .components[
                                                                                    r
                                                                                ];
                                                                            if (
                                                                                !(
                                                                                    i >
                                                                                    t
                                                                                        .codingStyleParameters
                                                                                        .decompositionLevelsCount
                                                                                )
                                                                            ) {
                                                                                var a =
                                                                                        t
                                                                                            .resolutions[
                                                                                            i
                                                                                        ],
                                                                                    o =
                                                                                        a
                                                                                            .precinctParameters
                                                                                            .numprecincts;
                                                                                if (
                                                                                    !(
                                                                                        n >=
                                                                                        o
                                                                                    )
                                                                                ) {
                                                                                    for (
                                                                                        ;
                                                                                        e <
                                                                                        l;

                                                                                    ) {
                                                                                        var u = c(
                                                                                            a,
                                                                                            n,
                                                                                            e
                                                                                        );
                                                                                        return (
                                                                                            e++,
                                                                                            u
                                                                                        );
                                                                                    }
                                                                                    e = 0;
                                                                                }
                                                                            }
                                                                        }
                                                                        r = 0;
                                                                    }
                                                                    n = 0;
                                                                }
                                                                throw new Error(
                                                                    'JPX Error: Out of packets'
                                                                );
                                                            });
                                                    }(t);
                                                    break;
                                                case 3:
                                                    r.packetsIterator = new function(
                                                        t
                                                    ) {
                                                        var e = t.SIZ,
                                                            i =
                                                                t.currentTile
                                                                    .index,
                                                            r = t.tiles[i],
                                                            n =
                                                                r
                                                                    .codingStyleDefaultParameters
                                                                    .layersCount,
                                                            a = e.Csiz,
                                                            o = m(r),
                                                            s = o,
                                                            l = 0,
                                                            f = 0,
                                                            h = 0,
                                                            u = 0,
                                                            p = 0;
                                                        this.nextPacket = function() {
                                                            for (
                                                                ;
                                                                p <
                                                                s.maxNumHigh;
                                                                p++
                                                            ) {
                                                                for (
                                                                    ;
                                                                    u <
                                                                    s.maxNumWide;
                                                                    u++
                                                                ) {
                                                                    for (
                                                                        ;
                                                                        h < a;
                                                                        h++
                                                                    ) {
                                                                        for (
                                                                            var t =
                                                                                    r
                                                                                        .components[
                                                                                        h
                                                                                    ],
                                                                                e =
                                                                                    t
                                                                                        .codingStyleParameters
                                                                                        .decompositionLevelsCount;
                                                                            f <=
                                                                            e;
                                                                            f++
                                                                        ) {
                                                                            var i =
                                                                                    t
                                                                                        .resolutions[
                                                                                        f
                                                                                    ],
                                                                                m =
                                                                                    o
                                                                                        .components[
                                                                                        h
                                                                                    ]
                                                                                        .resolutions[
                                                                                        f
                                                                                    ],
                                                                                g = d(
                                                                                    u,
                                                                                    p,
                                                                                    m,
                                                                                    s,
                                                                                    i
                                                                                );
                                                                            if (
                                                                                null !==
                                                                                g
                                                                            ) {
                                                                                for (
                                                                                    ;
                                                                                    l <
                                                                                    n;

                                                                                ) {
                                                                                    var b = c(
                                                                                        i,
                                                                                        g,
                                                                                        l
                                                                                    );
                                                                                    return (
                                                                                        l++,
                                                                                        b
                                                                                    );
                                                                                }
                                                                                l = 0;
                                                                            }
                                                                        }
                                                                        f = 0;
                                                                    }
                                                                    h = 0;
                                                                }
                                                                u = 0;
                                                            }
                                                            throw new Error(
                                                                'JPX Error: Out of packets'
                                                            );
                                                        };
                                                    }(t);
                                                    break;
                                                case 4:
                                                    r.packetsIterator = new function(
                                                        t
                                                    ) {
                                                        var e = t.SIZ,
                                                            i =
                                                                t.currentTile
                                                                    .index,
                                                            r = t.tiles[i],
                                                            n =
                                                                r
                                                                    .codingStyleDefaultParameters
                                                                    .layersCount,
                                                            a = e.Csiz,
                                                            o = m(r),
                                                            s = 0,
                                                            l = 0,
                                                            f = 0,
                                                            h = 0,
                                                            u = 0;
                                                        this.nextPacket = function() {
                                                            for (; f < a; ++f) {
                                                                for (
                                                                    var t =
                                                                            r
                                                                                .components[
                                                                                f
                                                                            ],
                                                                        e =
                                                                            o
                                                                                .components[
                                                                                f
                                                                            ],
                                                                        i =
                                                                            t
                                                                                .codingStyleParameters
                                                                                .decompositionLevelsCount;
                                                                    u <
                                                                    e.maxNumHigh;
                                                                    u++
                                                                ) {
                                                                    for (
                                                                        ;
                                                                        h <
                                                                        e.maxNumWide;
                                                                        h++
                                                                    ) {
                                                                        for (
                                                                            ;
                                                                            l <=
                                                                            i;
                                                                            l++
                                                                        ) {
                                                                            var p =
                                                                                    t
                                                                                        .resolutions[
                                                                                        l
                                                                                    ],
                                                                                m =
                                                                                    e
                                                                                        .resolutions[
                                                                                        l
                                                                                    ],
                                                                                g = d(
                                                                                    h,
                                                                                    u,
                                                                                    m,
                                                                                    e,
                                                                                    p
                                                                                );
                                                                            if (
                                                                                null !==
                                                                                g
                                                                            ) {
                                                                                for (
                                                                                    ;
                                                                                    s <
                                                                                    n;

                                                                                ) {
                                                                                    var b = c(
                                                                                        p,
                                                                                        g,
                                                                                        s
                                                                                    );
                                                                                    return (
                                                                                        s++,
                                                                                        b
                                                                                    );
                                                                                }
                                                                                s = 0;
                                                                            }
                                                                        }
                                                                        l = 0;
                                                                    }
                                                                    h = 0;
                                                                }
                                                                u = 0;
                                                            }
                                                            throw new Error(
                                                                'JPX Error: Out of packets'
                                                            );
                                                        };
                                                    }(t);
                                                    break;
                                                default:
                                                    throw new Error(
                                                        'JPX Error: Unsupported progression order ' +
                                                            k
                                                    );
                                            }
                                        }
                                        function b(t, e, i, r) {
                                            var n,
                                                a = 0,
                                                s = 0,
                                                l = !1;
                                            function f(t) {
                                                for (; s < t; ) {
                                                    var r = e[i + a];
                                                    a++,
                                                        l
                                                            ? ((n =
                                                                  (n << 7) | r),
                                                              (s += 7),
                                                              (l = !1))
                                                            : ((n =
                                                                  (n << 8) | r),
                                                              (s += 8)),
                                                        255 === r && (l = !0);
                                                }
                                                return (
                                                    (n >>> (s -= t)) &
                                                    ((1 << t) - 1)
                                                );
                                            }
                                            function h(t) {
                                                return 255 === e[i + a - 1] &&
                                                    e[i + a] === t
                                                    ? (c(1), !0)
                                                    : 255 === e[i + a] &&
                                                          e[i + a + 1] === t &&
                                                          (c(2), !0);
                                            }
                                            function c(t) {
                                                a += t;
                                            }
                                            function u() {
                                                (s = 0), l && (a++, (l = !1));
                                            }
                                            function p() {
                                                if (0 === f(1)) return 1;
                                                if (0 === f(1)) return 2;
                                                var t = f(2);
                                                return t < 3
                                                    ? t + 3
                                                    : (t = f(5)) < 31
                                                        ? t + 6
                                                        : (t = f(7)) + 37;
                                            }
                                            for (
                                                var d = t.currentTile.index,
                                                    m = t.tiles[d],
                                                    g = t.COD.sopMarkerUsed,
                                                    b = t.COD.ephMarkerUsed,
                                                    v = m.packetsIterator;
                                                a < r;

                                            ) {
                                                u(), g && h(145) && c(4);
                                                var y = v.nextPacket();
                                                if (f(1)) {
                                                    for (
                                                        var w,
                                                            k = y.layerNumber,
                                                            E = [],
                                                            I = 0,
                                                            S =
                                                                y.codeblocks
                                                                    .length;
                                                        I < S;
                                                        I++
                                                    ) {
                                                        var A = (w =
                                                                y.codeblocks[I])
                                                                .precinct,
                                                            T =
                                                                w.cbx -
                                                                A.cbxMin,
                                                            C =
                                                                w.cby -
                                                                A.cbyMin,
                                                            M = !1,
                                                            P = !1;
                                                        if (
                                                            void 0 !==
                                                            w.included
                                                        )
                                                            M = !!f(1);
                                                        else {
                                                            var L, O;
                                                            if (
                                                                void 0 !==
                                                                (A = w.precinct)
                                                                    .inclusionTree
                                                            )
                                                                L =
                                                                    A.inclusionTree;
                                                            else {
                                                                var R =
                                                                        A.cbxMax -
                                                                        A.cbxMin +
                                                                        1,
                                                                    B =
                                                                        A.cbyMax -
                                                                        A.cbyMin +
                                                                        1;
                                                                (L = new x(
                                                                    R,
                                                                    B,
                                                                    k
                                                                )),
                                                                    (O = new _(
                                                                        R,
                                                                        B
                                                                    )),
                                                                    (A.inclusionTree = L),
                                                                    (A.zeroBitPlanesTree = O);
                                                            }
                                                            if (
                                                                L.reset(T, C, k)
                                                            )
                                                                for (;;) {
                                                                    if (!f(1)) {
                                                                        L.incrementValue(
                                                                            k
                                                                        );
                                                                        break;
                                                                    }
                                                                    if (
                                                                        !L.nextLevel()
                                                                    ) {
                                                                        (w.included = !0),
                                                                            (M = P = !0);
                                                                        break;
                                                                    }
                                                                }
                                                        }
                                                        if (M) {
                                                            if (P) {
                                                                for (
                                                                    (O =
                                                                        A.zeroBitPlanesTree).reset(
                                                                        T,
                                                                        C
                                                                    );
                                                                    ;

                                                                )
                                                                    if (f(1)) {
                                                                        if (
                                                                            !O.nextLevel()
                                                                        )
                                                                            break;
                                                                    } else
                                                                        O.incrementValue();
                                                                w.zeroBitPlanes =
                                                                    O.value;
                                                            }
                                                            for (
                                                                var D = p();
                                                                f(1);

                                                            )
                                                                w.Lblock++;
                                                            var z = o(D),
                                                                U = f(
                                                                    (D < 1 << z
                                                                        ? z - 1
                                                                        : z) +
                                                                        w.Lblock
                                                                );
                                                            E.push({
                                                                codeblock: w,
                                                                codingpasses: D,
                                                                dataLength: U
                                                            });
                                                        }
                                                    }
                                                    for (
                                                        u(), b && h(146);
                                                        E.length > 0;

                                                    ) {
                                                        var N = E.shift();
                                                        void 0 ===
                                                            (w = N.codeblock)
                                                                .data &&
                                                            (w.data = []),
                                                            w.data.push({
                                                                data: e,
                                                                start: i + a,
                                                                end:
                                                                    i +
                                                                    a +
                                                                    N.dataLength,
                                                                codingpasses:
                                                                    N.codingpasses
                                                            }),
                                                            (a += N.dataLength);
                                                    }
                                                }
                                            }
                                            return a;
                                        }
                                        function v(t, e, r, n, a, o, s, l) {
                                            for (
                                                var f = n.tbx0,
                                                    h = n.tby0,
                                                    c = n.tbx1 - n.tbx0,
                                                    u = n.codeblocks,
                                                    p =
                                                        'H' === n.type.charAt(0)
                                                            ? 1
                                                            : 0,
                                                    d =
                                                        'H' === n.type.charAt(1)
                                                            ? e
                                                            : 0,
                                                    m = 0,
                                                    g = u.length;
                                                m < g;
                                                ++m
                                            ) {
                                                var b = u[m],
                                                    v = b.tbx1_ - b.tbx0_,
                                                    y = b.tby1_ - b.tby0_;
                                                if (
                                                    0 !== v &&
                                                    0 !== y &&
                                                    void 0 !== b.data
                                                ) {
                                                    var w, _;
                                                    (w = new k(
                                                        v,
                                                        y,
                                                        b.subbandType,
                                                        b.zeroBitPlanes,
                                                        o
                                                    )),
                                                        (_ = 2);
                                                    var x,
                                                        E,
                                                        I,
                                                        S = b.data,
                                                        A = 0,
                                                        T = 0;
                                                    for (
                                                        x = 0, E = S.length;
                                                        x < E;
                                                        x++
                                                    )
                                                        (A +=
                                                            (I = S[x]).end -
                                                            I.start),
                                                            (T +=
                                                                I.codingpasses);
                                                    var C = new Uint8Array(A),
                                                        M = 0;
                                                    for (
                                                        x = 0, E = S.length;
                                                        x < E;
                                                        x++
                                                    ) {
                                                        var P = (I =
                                                            S[x]).data.subarray(
                                                            I.start,
                                                            I.end
                                                        );
                                                        C.set(P, M),
                                                            (M += P.length);
                                                    }
                                                    var L = new i(C, 0, A);
                                                    for (
                                                        w.setDecoder(L), x = 0;
                                                        x < T;
                                                        x++
                                                    ) {
                                                        switch (_) {
                                                            case 0:
                                                                w.runSignificancePropogationPass();
                                                                break;
                                                            case 1:
                                                                w.runMagnitudeRefinementPass();
                                                                break;
                                                            case 2:
                                                                w.runCleanupPass(),
                                                                    l &&
                                                                        w.checkSegmentationSymbol();
                                                        }
                                                        _ = (_ + 1) % 3;
                                                    }
                                                    var O,
                                                        R,
                                                        B,
                                                        D =
                                                            b.tbx0_ -
                                                            f +
                                                            (b.tby0_ - h) * c,
                                                        z = w.coefficentsSign,
                                                        U =
                                                            w.coefficentsMagnitude,
                                                        N = w.bitsDecoded,
                                                        F = s ? 0 : 0.5;
                                                    M = 0;
                                                    var j = 'LL' !== n.type;
                                                    for (x = 0; x < y; x++) {
                                                        var H =
                                                            2 *
                                                                ((D / c) | 0) *
                                                                (e - c) +
                                                            p +
                                                            d;
                                                        for (
                                                            O = 0;
                                                            O < v;
                                                            O++
                                                        ) {
                                                            if (
                                                                0 !== (R = U[M])
                                                            ) {
                                                                (R =
                                                                    (R + F) *
                                                                    a),
                                                                    0 !==
                                                                        z[M] &&
                                                                        (R = -R),
                                                                    (B = N[M]);
                                                                var G = j
                                                                    ? H +
                                                                      (D << 1)
                                                                    : D;
                                                                t[G] =
                                                                    s && B >= o
                                                                        ? R
                                                                        : R *
                                                                          (1 <<
                                                                              (o -
                                                                                  B));
                                                            }
                                                            D++, M++;
                                                        }
                                                        D += c - v;
                                                    }
                                                }
                                            }
                                        }
                                        function y(e, i, r) {
                                            for (
                                                var n = i.components[r],
                                                    a = n.codingStyleParameters,
                                                    o =
                                                        n.quantizationParameters,
                                                    s =
                                                        a.decompositionLevelsCount,
                                                    l = o.SPqcds,
                                                    f = o.scalarExpounded,
                                                    h = o.guardBits,
                                                    c =
                                                        a.segmentationSymbolUsed,
                                                    u =
                                                        e.components[r]
                                                            .precision,
                                                    p =
                                                        a.reversibleTransformation,
                                                    d = p ? new S() : new I(),
                                                    m = [],
                                                    g = 0,
                                                    b = 0;
                                                b <= s;
                                                b++
                                            ) {
                                                for (
                                                    var y = n.resolutions[b],
                                                        w = y.trx1 - y.trx0,
                                                        _ = y.try1 - y.try0,
                                                        x = new Float32Array(
                                                            w * _
                                                        ),
                                                        k = 0,
                                                        E = y.subbands.length;
                                                    k < E;
                                                    k++
                                                ) {
                                                    var A, T;
                                                    f
                                                        ? ((A = l[g].mu),
                                                          (T = l[g].epsilon),
                                                          g++)
                                                        : ((A = l[0].mu),
                                                          (T =
                                                              l[0].epsilon +
                                                              (b > 0
                                                                  ? 1 - b
                                                                  : 0)));
                                                    var C = y.subbands[k],
                                                        M = t[C.type];
                                                    v(
                                                        x,
                                                        w,
                                                        0,
                                                        C,
                                                        p
                                                            ? 1
                                                            : Math.pow(
                                                                  2,
                                                                  u + M - T
                                                              ) *
                                                              (1 + A / 2048),
                                                        h + T - 1,
                                                        p,
                                                        c
                                                    );
                                                }
                                                m.push({
                                                    width: w,
                                                    height: _,
                                                    items: x
                                                });
                                            }
                                            var P = d.calculate(
                                                m,
                                                n.tcx0,
                                                n.tcy0
                                            );
                                            return {
                                                left: n.tcx0,
                                                top: n.tcy0,
                                                width: P.width,
                                                height: P.height,
                                                items: P.items
                                            };
                                        }
                                        function w(t, e) {
                                            for (
                                                var i = t.SIZ.Csiz,
                                                    r = t.tiles[e],
                                                    n = 0;
                                                n < i;
                                                n++
                                            ) {
                                                var a = r.components[n],
                                                    o =
                                                        void 0 !==
                                                        t.currentTile.QCC[n]
                                                            ? t.currentTile.QCC[
                                                                  n
                                                              ]
                                                            : t.currentTile.QCD;
                                                a.quantizationParameters = o;
                                                var s =
                                                    void 0 !==
                                                    t.currentTile.COC[n]
                                                        ? t.currentTile.COC[n]
                                                        : t.currentTile.COD;
                                                a.codingStyleParameters = s;
                                            }
                                            r.codingStyleDefaultParameters =
                                                t.currentTile.COD;
                                        }
                                        e.prototype = {
                                            parse: function(t) {
                                                if (65359 !== l(t, 0))
                                                    for (
                                                        var e = 0, i = t.length;
                                                        e < i;

                                                    ) {
                                                        var r = 8,
                                                            n = f(t, e),
                                                            a = f(t, e + 4);
                                                        if (
                                                            ((e += r),
                                                            1 === n &&
                                                                ((n =
                                                                    4294967296 *
                                                                        f(
                                                                            t,
                                                                            e
                                                                        ) +
                                                                    f(
                                                                        t,
                                                                        e + 4
                                                                    )),
                                                                (e += 8),
                                                                (r += 8)),
                                                            0 === n &&
                                                                (n = i - e + r),
                                                            n < r)
                                                        )
                                                            throw new Error(
                                                                'JPX Error: Invalid box field size'
                                                            );
                                                        var o = n - r,
                                                            s = !0;
                                                        switch (a) {
                                                            case 1785737832:
                                                                s = !1;
                                                                break;
                                                            case 1668246642:
                                                                var h = t[e];
                                                                t[e + 1],
                                                                    t[e + 2];
                                                                if (1 === h) {
                                                                    var c = f(
                                                                        t,
                                                                        e + 3
                                                                    );
                                                                    switch (c) {
                                                                        case 16:
                                                                        case 17:
                                                                        case 18:
                                                                            break;
                                                                        default:
                                                                            u(
                                                                                'Unknown colorspace ' +
                                                                                    c
                                                                            );
                                                                    }
                                                                } else
                                                                    2 === h &&
                                                                        p(
                                                                            'ICC profile not supported'
                                                                        );
                                                                break;
                                                            case 1785737827:
                                                                this.parseCodestream(
                                                                    t,
                                                                    e,
                                                                    e + o
                                                                );
                                                                break;
                                                            case 1783636e3:
                                                                218793738 !==
                                                                    f(t, e) &&
                                                                    u(
                                                                        'Invalid JP2 signature'
                                                                    );
                                                                break;
                                                            case 1783634458:
                                                            case 1718909296:
                                                            case 1920099697:
                                                            case 1919251232:
                                                            case 1768449138:
                                                                break;
                                                            default:
                                                                var d = String.fromCharCode(
                                                                    (a >> 24) &
                                                                        255,
                                                                    (a >> 16) &
                                                                        255,
                                                                    (a >> 8) &
                                                                        255,
                                                                    255 & a
                                                                );
                                                                u(
                                                                    'Unsupported header type ' +
                                                                        a +
                                                                        ' (' +
                                                                        d +
                                                                        ')'
                                                                );
                                                        }
                                                        s && (e += o);
                                                    }
                                                else
                                                    this.parseCodestream(
                                                        t,
                                                        0,
                                                        t.length
                                                    );
                                            },
                                            parseImageProperties: function(t) {
                                                for (
                                                    var e = t.getByte();
                                                    e >= 0;

                                                ) {
                                                    if (
                                                        65361 ===
                                                        ((e << 8) |
                                                            (e = t.getByte()))
                                                    ) {
                                                        t.skip(4);
                                                        var i =
                                                                t.getInt32() >>>
                                                                0,
                                                            r =
                                                                t.getInt32() >>>
                                                                0,
                                                            n =
                                                                t.getInt32() >>>
                                                                0,
                                                            a =
                                                                t.getInt32() >>>
                                                                0;
                                                        t.skip(16);
                                                        var o = t.getUint16();
                                                        return (
                                                            (this.width =
                                                                i - n),
                                                            (this.height =
                                                                r - a),
                                                            (this.componentsCount = o),
                                                            void (this.bitsPerComponent = 8)
                                                        );
                                                    }
                                                }
                                                throw new Error(
                                                    'JPX Error: No size marker found in JPX stream'
                                                );
                                            },
                                            parseCodestream: function(t, e, i) {
                                                var a = {};
                                                try {
                                                    for (
                                                        var o = !1, s = e;
                                                        s + 1 < i;

                                                    ) {
                                                        var h = l(t, s);
                                                        s += 2;
                                                        var c,
                                                            p,
                                                            d,
                                                            m,
                                                            v,
                                                            _,
                                                            x = 0;
                                                        switch (h) {
                                                            case 65359:
                                                                a.mainHeader = !0;
                                                                break;
                                                            case 65497:
                                                                break;
                                                            case 65361:
                                                                x = l(t, s);
                                                                var k = {};
                                                                (k.Xsiz = f(
                                                                    t,
                                                                    s + 4
                                                                )),
                                                                    (k.Ysiz = f(
                                                                        t,
                                                                        s + 8
                                                                    )),
                                                                    (k.XOsiz = f(
                                                                        t,
                                                                        s + 12
                                                                    )),
                                                                    (k.YOsiz = f(
                                                                        t,
                                                                        s + 16
                                                                    )),
                                                                    (k.XTsiz = f(
                                                                        t,
                                                                        s + 20
                                                                    )),
                                                                    (k.YTsiz = f(
                                                                        t,
                                                                        s + 24
                                                                    )),
                                                                    (k.XTOsiz = f(
                                                                        t,
                                                                        s + 28
                                                                    )),
                                                                    (k.YTOsiz = f(
                                                                        t,
                                                                        s + 32
                                                                    ));
                                                                var E = l(
                                                                    t,
                                                                    s + 36
                                                                );
                                                                k.Csiz = E;
                                                                var I = [];
                                                                c = s + 38;
                                                                for (
                                                                    var S = 0;
                                                                    S < E;
                                                                    S++
                                                                ) {
                                                                    var A = {
                                                                        precision:
                                                                            1 +
                                                                            (127 &
                                                                                t[
                                                                                    c
                                                                                ]),
                                                                        isSigned: !!(
                                                                            128 &
                                                                            t[c]
                                                                        ),
                                                                        XRsiz:
                                                                            t[
                                                                                c +
                                                                                    1
                                                                            ],
                                                                        YRsiz:
                                                                            t[
                                                                                c +
                                                                                    1
                                                                            ]
                                                                    };
                                                                    r(A, k),
                                                                        I.push(
                                                                            A
                                                                        );
                                                                }
                                                                (a.SIZ = k),
                                                                    (a.components = I),
                                                                    n(a, I),
                                                                    (a.QCC = []),
                                                                    (a.COC = []);
                                                                break;
                                                            case 65372:
                                                                x = l(t, s);
                                                                var T = {};
                                                                switch (
                                                                    ((c =
                                                                        s + 2),
                                                                    31 &
                                                                        (p =
                                                                            t[
                                                                                c++
                                                                            ]))
                                                                ) {
                                                                    case 0:
                                                                        (m = 8),
                                                                            (v = !0);
                                                                        break;
                                                                    case 1:
                                                                        (m = 16),
                                                                            (v = !1);
                                                                        break;
                                                                    case 2:
                                                                        (m = 16),
                                                                            (v = !0);
                                                                        break;
                                                                    default:
                                                                        throw new Error(
                                                                            'JPX Error: Invalid SQcd value ' +
                                                                                p
                                                                        );
                                                                }
                                                                for (
                                                                    T.noQuantization =
                                                                        8 === m,
                                                                        T.scalarExpounded = v,
                                                                        T.guardBits =
                                                                            p >>
                                                                            5,
                                                                        d = [];
                                                                    c < x + s;

                                                                ) {
                                                                    var C = {};
                                                                    8 === m
                                                                        ? ((C.epsilon =
                                                                              t[
                                                                                  c++
                                                                              ] >>
                                                                              3),
                                                                          (C.mu = 0))
                                                                        : ((C.epsilon =
                                                                              t[
                                                                                  c
                                                                              ] >>
                                                                              3),
                                                                          (C.mu =
                                                                              ((7 &
                                                                                  t[
                                                                                      c
                                                                                  ]) <<
                                                                                  8) |
                                                                              t[
                                                                                  c +
                                                                                      1
                                                                              ]),
                                                                          (c += 2)),
                                                                        d.push(
                                                                            C
                                                                        );
                                                                }
                                                                (T.SPqcds = d),
                                                                    a.mainHeader
                                                                        ? (a.QCD = T)
                                                                        : ((a.currentTile.QCD = T),
                                                                          (a.currentTile.QCC = []));
                                                                break;
                                                            case 65373:
                                                                x = l(t, s);
                                                                var M,
                                                                    P = {};
                                                                switch (
                                                                    ((c =
                                                                        s + 2),
                                                                    a.SIZ.Csiz <
                                                                    257
                                                                        ? (M =
                                                                              t[
                                                                                  c++
                                                                              ])
                                                                        : ((M = l(
                                                                              t,
                                                                              c
                                                                          )),
                                                                          (c += 2)),
                                                                    31 &
                                                                        (p =
                                                                            t[
                                                                                c++
                                                                            ]))
                                                                ) {
                                                                    case 0:
                                                                        (m = 8),
                                                                            (v = !0);
                                                                        break;
                                                                    case 1:
                                                                        (m = 16),
                                                                            (v = !1);
                                                                        break;
                                                                    case 2:
                                                                        (m = 16),
                                                                            (v = !0);
                                                                        break;
                                                                    default:
                                                                        throw new Error(
                                                                            'JPX Error: Invalid SQcd value ' +
                                                                                p
                                                                        );
                                                                }
                                                                for (
                                                                    P.noQuantization =
                                                                        8 === m,
                                                                        P.scalarExpounded = v,
                                                                        P.guardBits =
                                                                            p >>
                                                                            5,
                                                                        d = [];
                                                                    c < x + s;

                                                                )
                                                                    (C = {}),
                                                                        8 === m
                                                                            ? ((C.epsilon =
                                                                                  t[
                                                                                      c++
                                                                                  ] >>
                                                                                  3),
                                                                              (C.mu = 0))
                                                                            : ((C.epsilon =
                                                                                  t[
                                                                                      c
                                                                                  ] >>
                                                                                  3),
                                                                              (C.mu =
                                                                                  ((7 &
                                                                                      t[
                                                                                          c
                                                                                      ]) <<
                                                                                      8) |
                                                                                  t[
                                                                                      c +
                                                                                          1
                                                                                  ]),
                                                                              (c += 2)),
                                                                        d.push(
                                                                            C
                                                                        );
                                                                (P.SPqcds = d),
                                                                    a.mainHeader
                                                                        ? (a.QCC[
                                                                              M
                                                                          ] = P)
                                                                        : (a.currentTile.QCC[
                                                                              M
                                                                          ] = P);
                                                                break;
                                                            case 65362:
                                                                x = l(t, s);
                                                                var L = {};
                                                                c = s + 2;
                                                                var O = t[c++];
                                                                (L.entropyCoderWithCustomPrecincts = !!(
                                                                    1 & O
                                                                )),
                                                                    (L.sopMarkerUsed = !!(
                                                                        2 & O
                                                                    )),
                                                                    (L.ephMarkerUsed = !!(
                                                                        4 & O
                                                                    )),
                                                                    (L.progressionOrder =
                                                                        t[c++]),
                                                                    (L.layersCount = l(
                                                                        t,
                                                                        c
                                                                    )),
                                                                    (c += 2),
                                                                    (L.multipleComponentTransform =
                                                                        t[c++]),
                                                                    (L.decompositionLevelsCount =
                                                                        t[c++]),
                                                                    (L.xcb =
                                                                        2 +
                                                                        (15 &
                                                                            t[
                                                                                c++
                                                                            ])),
                                                                    (L.ycb =
                                                                        2 +
                                                                        (15 &
                                                                            t[
                                                                                c++
                                                                            ]));
                                                                var R = t[c++];
                                                                if (
                                                                    ((L.selectiveArithmeticCodingBypass = !!(
                                                                        1 & R
                                                                    )),
                                                                    (L.resetContextProbabilities = !!(
                                                                        2 & R
                                                                    )),
                                                                    (L.terminationOnEachCodingPass = !!(
                                                                        4 & R
                                                                    )),
                                                                    (L.verticalyStripe = !!(
                                                                        8 & R
                                                                    )),
                                                                    (L.predictableTermination = !!(
                                                                        16 & R
                                                                    )),
                                                                    (L.segmentationSymbolUsed = !!(
                                                                        32 & R
                                                                    )),
                                                                    (L.reversibleTransformation =
                                                                        t[c++]),
                                                                    L.entropyCoderWithCustomPrecincts)
                                                                ) {
                                                                    for (
                                                                        var B = [];
                                                                        c <
                                                                        x + s;

                                                                    ) {
                                                                        var D =
                                                                            t[
                                                                                c++
                                                                            ];
                                                                        B.push({
                                                                            PPx:
                                                                                15 &
                                                                                D,
                                                                            PPy:
                                                                                D >>
                                                                                4
                                                                        });
                                                                    }
                                                                    L.precinctsSizes = B;
                                                                }
                                                                var z = [];
                                                                if (
                                                                    (L.selectiveArithmeticCodingBypass &&
                                                                        z.push(
                                                                            'selectiveArithmeticCodingBypass'
                                                                        ),
                                                                    L.resetContextProbabilities &&
                                                                        z.push(
                                                                            'resetContextProbabilities'
                                                                        ),
                                                                    L.terminationOnEachCodingPass &&
                                                                        z.push(
                                                                            'terminationOnEachCodingPass'
                                                                        ),
                                                                    L.verticalyStripe &&
                                                                        z.push(
                                                                            'verticalyStripe'
                                                                        ),
                                                                    L.predictableTermination &&
                                                                        z.push(
                                                                            'predictableTermination'
                                                                        ),
                                                                    z.length >
                                                                        0)
                                                                )
                                                                    throw ((o = !0),
                                                                    new Error(
                                                                        'JPX Error: Unsupported COD options (' +
                                                                            z.join(
                                                                                ', '
                                                                            ) +
                                                                            ')'
                                                                    ));
                                                                a.mainHeader
                                                                    ? (a.COD = L)
                                                                    : ((a.currentTile.COD = L),
                                                                      (a.currentTile.COC = []));
                                                                break;
                                                            case 65424:
                                                                (x = l(t, s)),
                                                                    ((_ = {}).index = l(
                                                                        t,
                                                                        s + 2
                                                                    )),
                                                                    (_.length = f(
                                                                        t,
                                                                        s + 4
                                                                    )),
                                                                    (_.dataEnd =
                                                                        _.length +
                                                                        s -
                                                                        2),
                                                                    (_.partIndex =
                                                                        t[
                                                                            s +
                                                                                8
                                                                        ]),
                                                                    (_.partsCount =
                                                                        t[
                                                                            s +
                                                                                9
                                                                        ]),
                                                                    (a.mainHeader = !1),
                                                                    0 ===
                                                                        _.partIndex &&
                                                                        ((_.COD =
                                                                            a.COD),
                                                                        (_.COC = a.COC.slice(
                                                                            0
                                                                        )),
                                                                        (_.QCD =
                                                                            a.QCD),
                                                                        (_.QCC = a.QCC.slice(
                                                                            0
                                                                        ))),
                                                                    (a.currentTile = _);
                                                                break;
                                                            case 65427:
                                                                0 ===
                                                                    (_ =
                                                                        a.currentTile)
                                                                        .partIndex &&
                                                                    (w(
                                                                        a,
                                                                        _.index
                                                                    ),
                                                                    g(a)),
                                                                    b(
                                                                        a,
                                                                        t,
                                                                        s,
                                                                        (x =
                                                                            _.dataEnd -
                                                                            s)
                                                                    );
                                                                break;
                                                            case 65365:
                                                            case 65367:
                                                            case 65368:
                                                            case 65380:
                                                                x = l(t, s);
                                                                break;
                                                            case 65363:
                                                                throw new Error(
                                                                    'JPX Error: Codestream code 0xFF53 (COC) is not implemented'
                                                                );
                                                            default:
                                                                throw new Error(
                                                                    'JPX Error: Unknown codestream code: ' +
                                                                        h.toString(
                                                                            16
                                                                        )
                                                                );
                                                        }
                                                        s += x;
                                                    }
                                                } catch (t) {
                                                    if (
                                                        o ||
                                                        this
                                                            .failOnCorruptedImage
                                                    )
                                                        throw t;
                                                    u(
                                                        'Trying to recover from ' +
                                                            t.message
                                                    );
                                                }
                                                (this.tiles = (function(t) {
                                                    for (
                                                        var e = t.SIZ,
                                                            i = t.components,
                                                            r = e.Csiz,
                                                            n = [],
                                                            a = 0,
                                                            o = t.tiles.length;
                                                        a < o;
                                                        a++
                                                    ) {
                                                        var s,
                                                            l = t.tiles[a],
                                                            f = [];
                                                        for (s = 0; s < r; s++)
                                                            f[s] = y(t, l, s);
                                                        var h,
                                                            c,
                                                            u,
                                                            p,
                                                            d,
                                                            m,
                                                            g,
                                                            b,
                                                            v,
                                                            w,
                                                            _,
                                                            x,
                                                            k,
                                                            E,
                                                            I,
                                                            S = f[0],
                                                            A = new Uint8Array(
                                                                S.items.length *
                                                                    r
                                                            ),
                                                            T = {
                                                                left: S.left,
                                                                top: S.top,
                                                                width: S.width,
                                                                height:
                                                                    S.height,
                                                                items: A
                                                            },
                                                            C = 0;
                                                        if (
                                                            l
                                                                .codingStyleDefaultParameters
                                                                .multipleComponentTransform
                                                        ) {
                                                            var M = 4 === r,
                                                                P = f[0].items,
                                                                L = f[1].items,
                                                                O = f[2].items,
                                                                R = M
                                                                    ? f[3].items
                                                                    : null;
                                                            (h =
                                                                i[0].precision -
                                                                8),
                                                                (c =
                                                                    0.5 +
                                                                    (128 << h)),
                                                                (p = -(d =
                                                                    0.5 *
                                                                    (u =
                                                                        255 *
                                                                        (1 <<
                                                                            h))));
                                                            var B =
                                                                    l
                                                                        .components[0],
                                                                D = r - 3;
                                                            if (
                                                                ((g = P.length),
                                                                B
                                                                    .codingStyleParameters
                                                                    .reversibleTransformation)
                                                            )
                                                                for (
                                                                    m = 0;
                                                                    m < g;
                                                                    m++, C += D
                                                                )
                                                                    (b =
                                                                        P[m] +
                                                                        c),
                                                                        (v =
                                                                            L[
                                                                                m
                                                                            ]),
                                                                        (w =
                                                                            O[
                                                                                m
                                                                            ]),
                                                                        (_ =
                                                                            (x =
                                                                                b -
                                                                                ((w +
                                                                                    v) >>
                                                                                    2)) +
                                                                            w),
                                                                        (k =
                                                                            x +
                                                                            v),
                                                                        (A[
                                                                            C++
                                                                        ] =
                                                                            _ <=
                                                                            0
                                                                                ? 0
                                                                                : _ >=
                                                                                  u
                                                                                    ? 255
                                                                                    : _ >>
                                                                                      h),
                                                                        (A[
                                                                            C++
                                                                        ] =
                                                                            x <=
                                                                            0
                                                                                ? 0
                                                                                : x >=
                                                                                  u
                                                                                    ? 255
                                                                                    : x >>
                                                                                      h),
                                                                        (A[
                                                                            C++
                                                                        ] =
                                                                            k <=
                                                                            0
                                                                                ? 0
                                                                                : k >=
                                                                                  u
                                                                                    ? 255
                                                                                    : k >>
                                                                                      h);
                                                            else
                                                                for (
                                                                    m = 0;
                                                                    m < g;
                                                                    m++, C += D
                                                                )
                                                                    (b =
                                                                        P[m] +
                                                                        c),
                                                                        (v =
                                                                            L[
                                                                                m
                                                                            ]),
                                                                        (w =
                                                                            O[
                                                                                m
                                                                            ]),
                                                                        (_ =
                                                                            b +
                                                                            1.402 *
                                                                                w),
                                                                        (x =
                                                                            b -
                                                                            0.34413 *
                                                                                v -
                                                                            0.71414 *
                                                                                w),
                                                                        (k =
                                                                            b +
                                                                            1.772 *
                                                                                v),
                                                                        (A[
                                                                            C++
                                                                        ] =
                                                                            _ <=
                                                                            0
                                                                                ? 0
                                                                                : _ >=
                                                                                  u
                                                                                    ? 255
                                                                                    : _ >>
                                                                                      h),
                                                                        (A[
                                                                            C++
                                                                        ] =
                                                                            x <=
                                                                            0
                                                                                ? 0
                                                                                : x >=
                                                                                  u
                                                                                    ? 255
                                                                                    : x >>
                                                                                      h),
                                                                        (A[
                                                                            C++
                                                                        ] =
                                                                            k <=
                                                                            0
                                                                                ? 0
                                                                                : k >=
                                                                                  u
                                                                                    ? 255
                                                                                    : k >>
                                                                                      h);
                                                            if (M)
                                                                for (
                                                                    m = 0,
                                                                        C = 3;
                                                                    m < g;
                                                                    m++, C += 4
                                                                )
                                                                    (E = R[m]),
                                                                        (A[C] =
                                                                            E <=
                                                                            p
                                                                                ? 0
                                                                                : E >=
                                                                                  d
                                                                                    ? 255
                                                                                    : (E +
                                                                                          c) >>
                                                                                      h);
                                                        } else
                                                            for (
                                                                s = 0;
                                                                s < r;
                                                                s++
                                                            ) {
                                                                var z =
                                                                    f[s].items;
                                                                for (
                                                                    h =
                                                                        i[s]
                                                                            .precision -
                                                                        8,
                                                                        c =
                                                                            0.5 +
                                                                            (128 <<
                                                                                h),
                                                                        p = -(u =
                                                                            127.5 *
                                                                            (1 <<
                                                                                h)),
                                                                        C = s,
                                                                        m = 0,
                                                                        g =
                                                                            z.length;
                                                                    m < g;
                                                                    m++
                                                                )
                                                                    (I = z[m]),
                                                                        (A[C] =
                                                                            I <=
                                                                            p
                                                                                ? 0
                                                                                : I >=
                                                                                  u
                                                                                    ? 255
                                                                                    : (I +
                                                                                          c) >>
                                                                                      h),
                                                                        (C += r);
                                                            }
                                                        n.push(T);
                                                    }
                                                    return n;
                                                })(a)),
                                                    (this.width =
                                                        a.SIZ.Xsiz -
                                                        a.SIZ.XOsiz),
                                                    (this.height =
                                                        a.SIZ.Ysiz -
                                                        a.SIZ.YOsiz),
                                                    (this.componentsCount =
                                                        a.SIZ.Csiz);
                                            }
                                        };
                                        var _ = (function() {
                                                function t(t, e) {
                                                    var i =
                                                        o(Math.max(t, e)) + 1;
                                                    this.levels = [];
                                                    for (
                                                        var r = 0;
                                                        r < i;
                                                        r++
                                                    ) {
                                                        var n = {
                                                            width: t,
                                                            height: e,
                                                            items: []
                                                        };
                                                        this.levels.push(n),
                                                            (t = Math.ceil(
                                                                t / 2
                                                            )),
                                                            (e = Math.ceil(
                                                                e / 2
                                                            ));
                                                    }
                                                }
                                                return (
                                                    (t.prototype = {
                                                        reset: function(t, e) {
                                                            for (
                                                                var i,
                                                                    r = 0,
                                                                    n = 0;
                                                                r <
                                                                this.levels
                                                                    .length;

                                                            ) {
                                                                var a =
                                                                    t +
                                                                    e *
                                                                        (i = this
                                                                            .levels[
                                                                            r
                                                                        ])
                                                                            .width;
                                                                if (
                                                                    void 0 !==
                                                                    i.items[a]
                                                                ) {
                                                                    n =
                                                                        i.items[
                                                                            a
                                                                        ];
                                                                    break;
                                                                }
                                                                (i.index = a),
                                                                    (t >>= 1),
                                                                    (e >>= 1),
                                                                    r++;
                                                            }
                                                            r--,
                                                                ((i = this
                                                                    .levels[
                                                                    r
                                                                ]).items[
                                                                    i.index
                                                                ] = n),
                                                                (this.currentLevel = r),
                                                                delete this
                                                                    .value;
                                                        },
                                                        incrementValue: function() {
                                                            var t = this.levels[
                                                                this
                                                                    .currentLevel
                                                            ];
                                                            t.items[t.index]++;
                                                        },
                                                        nextLevel: function() {
                                                            var t = this
                                                                    .currentLevel,
                                                                e = this.levels[
                                                                    t
                                                                ],
                                                                i =
                                                                    e.items[
                                                                        e.index
                                                                    ];
                                                            return --t < 0
                                                                ? ((this.value = i),
                                                                  !1)
                                                                : ((this.currentLevel = t),
                                                                  ((e = this
                                                                      .levels[
                                                                      t
                                                                  ]).items[
                                                                      e.index
                                                                  ] = i),
                                                                  !0);
                                                        }
                                                    }),
                                                    t
                                                );
                                            })(),
                                            x = (function() {
                                                function t(t, e, i) {
                                                    var r =
                                                        o(Math.max(t, e)) + 1;
                                                    this.levels = [];
                                                    for (
                                                        var n = 0;
                                                        n < r;
                                                        n++
                                                    ) {
                                                        for (
                                                            var a = new Uint8Array(
                                                                    t * e
                                                                ),
                                                                s = 0,
                                                                l = a.length;
                                                            s < l;
                                                            s++
                                                        )
                                                            a[s] = i;
                                                        var f = {
                                                            width: t,
                                                            height: e,
                                                            items: a
                                                        };
                                                        this.levels.push(f),
                                                            (t = Math.ceil(
                                                                t / 2
                                                            )),
                                                            (e = Math.ceil(
                                                                e / 2
                                                            ));
                                                    }
                                                }
                                                return (
                                                    (t.prototype = {
                                                        reset: function(
                                                            t,
                                                            e,
                                                            i
                                                        ) {
                                                            for (
                                                                var r = 0;
                                                                r <
                                                                this.levels
                                                                    .length;

                                                            ) {
                                                                var n = this
                                                                        .levels[
                                                                        r
                                                                    ],
                                                                    a =
                                                                        t +
                                                                        e *
                                                                            n.width;
                                                                n.index = a;
                                                                var o =
                                                                    n.items[a];
                                                                if (255 === o)
                                                                    break;
                                                                if (o > i)
                                                                    return (
                                                                        (this.currentLevel = r),
                                                                        this.propagateValues(),
                                                                        !1
                                                                    );
                                                                (t >>= 1),
                                                                    (e >>= 1),
                                                                    r++;
                                                            }
                                                            return (
                                                                (this.currentLevel =
                                                                    r - 1),
                                                                !0
                                                            );
                                                        },
                                                        incrementValue: function(
                                                            t
                                                        ) {
                                                            var e = this.levels[
                                                                this
                                                                    .currentLevel
                                                            ];
                                                            (e.items[e.index] =
                                                                t + 1),
                                                                this.propagateValues();
                                                        },
                                                        propagateValues: function() {
                                                            for (
                                                                var t = this
                                                                        .currentLevel,
                                                                    e = this
                                                                        .levels[
                                                                        t
                                                                    ],
                                                                    i =
                                                                        e.items[
                                                                            e
                                                                                .index
                                                                        ];
                                                                --t >= 0;

                                                            )
                                                                (e = this
                                                                    .levels[
                                                                    t
                                                                ]).items[
                                                                    e.index
                                                                ] = i;
                                                        },
                                                        nextLevel: function() {
                                                            var t = this
                                                                    .currentLevel,
                                                                e = this.levels[
                                                                    t
                                                                ],
                                                                i =
                                                                    e.items[
                                                                        e.index
                                                                    ];
                                                            return (
                                                                (e.items[
                                                                    e.index
                                                                ] = 255),
                                                                !(--t < 0) &&
                                                                    ((this.currentLevel = t),
                                                                    ((e = this
                                                                        .levels[
                                                                        t
                                                                    ]).items[
                                                                        e.index
                                                                    ] = i),
                                                                    !0)
                                                            );
                                                        }
                                                    }),
                                                    t
                                                );
                                            })(),
                                            k = (function() {
                                                var t = new Uint8Array([
                                                        0,
                                                        5,
                                                        8,
                                                        0,
                                                        3,
                                                        7,
                                                        8,
                                                        0,
                                                        4,
                                                        7,
                                                        8,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        1,
                                                        6,
                                                        8,
                                                        0,
                                                        3,
                                                        7,
                                                        8,
                                                        0,
                                                        4,
                                                        7,
                                                        8,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        2,
                                                        6,
                                                        8,
                                                        0,
                                                        3,
                                                        7,
                                                        8,
                                                        0,
                                                        4,
                                                        7,
                                                        8,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        2,
                                                        6,
                                                        8,
                                                        0,
                                                        3,
                                                        7,
                                                        8,
                                                        0,
                                                        4,
                                                        7,
                                                        8,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        2,
                                                        6,
                                                        8,
                                                        0,
                                                        3,
                                                        7,
                                                        8,
                                                        0,
                                                        4,
                                                        7,
                                                        8
                                                    ]),
                                                    e = new Uint8Array([
                                                        0,
                                                        3,
                                                        4,
                                                        0,
                                                        5,
                                                        7,
                                                        7,
                                                        0,
                                                        8,
                                                        8,
                                                        8,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        1,
                                                        3,
                                                        4,
                                                        0,
                                                        6,
                                                        7,
                                                        7,
                                                        0,
                                                        8,
                                                        8,
                                                        8,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        2,
                                                        3,
                                                        4,
                                                        0,
                                                        6,
                                                        7,
                                                        7,
                                                        0,
                                                        8,
                                                        8,
                                                        8,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        2,
                                                        3,
                                                        4,
                                                        0,
                                                        6,
                                                        7,
                                                        7,
                                                        0,
                                                        8,
                                                        8,
                                                        8,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        2,
                                                        3,
                                                        4,
                                                        0,
                                                        6,
                                                        7,
                                                        7,
                                                        0,
                                                        8,
                                                        8,
                                                        8
                                                    ]),
                                                    i = new Uint8Array([
                                                        0,
                                                        1,
                                                        2,
                                                        0,
                                                        1,
                                                        2,
                                                        2,
                                                        0,
                                                        2,
                                                        2,
                                                        2,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        3,
                                                        4,
                                                        5,
                                                        0,
                                                        4,
                                                        5,
                                                        5,
                                                        0,
                                                        5,
                                                        5,
                                                        5,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        6,
                                                        7,
                                                        7,
                                                        0,
                                                        7,
                                                        7,
                                                        7,
                                                        0,
                                                        7,
                                                        7,
                                                        7,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        8,
                                                        8,
                                                        8,
                                                        0,
                                                        8,
                                                        8,
                                                        8,
                                                        0,
                                                        8,
                                                        8,
                                                        8,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        0,
                                                        8,
                                                        8,
                                                        8,
                                                        0,
                                                        8,
                                                        8,
                                                        8,
                                                        0,
                                                        8,
                                                        8,
                                                        8
                                                    ]);
                                                function r(r, n, a, o, s) {
                                                    (this.width = r),
                                                        (this.height = n),
                                                        (this.contextLabelTable =
                                                            'HH' === a
                                                                ? i
                                                                : 'HL' === a
                                                                    ? e
                                                                    : t);
                                                    var l = r * n;
                                                    (this.neighborsSignificance = new Uint8Array(
                                                        l
                                                    )),
                                                        (this.coefficentsSign = new Uint8Array(
                                                            l
                                                        )),
                                                        (this.coefficentsMagnitude =
                                                            s > 14
                                                                ? new Uint32Array(
                                                                      l
                                                                  )
                                                                : s > 6
                                                                    ? new Uint16Array(
                                                                          l
                                                                      )
                                                                    : new Uint8Array(
                                                                          l
                                                                      )),
                                                        (this.processingFlags = new Uint8Array(
                                                            l
                                                        ));
                                                    var f = new Uint8Array(l);
                                                    if (0 !== o)
                                                        for (
                                                            var h = 0;
                                                            h < l;
                                                            h++
                                                        )
                                                            f[h] = o;
                                                    (this.bitsDecoded = f),
                                                        this.reset();
                                                }
                                                return (
                                                    (r.prototype = {
                                                        setDecoder: function(
                                                            t
                                                        ) {
                                                            this.decoder = t;
                                                        },
                                                        reset: function() {
                                                            (this.contexts = new Int8Array(
                                                                19
                                                            )),
                                                                (this.contexts[0] = 8),
                                                                (this.contexts[17] = 92),
                                                                (this.contexts[18] = 6);
                                                        },
                                                        setNeighborsSignificance: function(
                                                            t,
                                                            e,
                                                            i
                                                        ) {
                                                            var r,
                                                                n = this
                                                                    .neighborsSignificance,
                                                                a = this.width,
                                                                o = this.height,
                                                                s = e > 0,
                                                                l = e + 1 < a;
                                                            t > 0 &&
                                                                ((r = i - a),
                                                                s &&
                                                                    (n[
                                                                        r - 1
                                                                    ] += 16),
                                                                l &&
                                                                    (n[
                                                                        r + 1
                                                                    ] += 16),
                                                                (n[r] += 4)),
                                                                t + 1 < o &&
                                                                    ((r =
                                                                        i + a),
                                                                    s &&
                                                                        (n[
                                                                            r -
                                                                                1
                                                                        ] += 16),
                                                                    l &&
                                                                        (n[
                                                                            r +
                                                                                1
                                                                        ] += 16),
                                                                    (n[
                                                                        r
                                                                    ] += 4)),
                                                                s &&
                                                                    (n[
                                                                        i - 1
                                                                    ] += 1),
                                                                l &&
                                                                    (n[
                                                                        i + 1
                                                                    ] += 1),
                                                                (n[i] |= 128);
                                                        },
                                                        runSignificancePropogationPass: function() {
                                                            for (
                                                                var t = this
                                                                        .decoder,
                                                                    e = this
                                                                        .width,
                                                                    i = this
                                                                        .height,
                                                                    r = this
                                                                        .coefficentsMagnitude,
                                                                    n = this
                                                                        .coefficentsSign,
                                                                    a = this
                                                                        .neighborsSignificance,
                                                                    o = this
                                                                        .processingFlags,
                                                                    s = this
                                                                        .contexts,
                                                                    l = this
                                                                        .contextLabelTable,
                                                                    f = this
                                                                        .bitsDecoded,
                                                                    h = 0;
                                                                h < i;
                                                                h += 4
                                                            )
                                                                for (
                                                                    var c = 0;
                                                                    c < e;
                                                                    c++
                                                                )
                                                                    for (
                                                                        var u =
                                                                                h *
                                                                                    e +
                                                                                c,
                                                                            p = 0;
                                                                        p < 4;
                                                                        p++,
                                                                            u += e
                                                                    ) {
                                                                        var d =
                                                                            h +
                                                                            p;
                                                                        if (
                                                                            d >=
                                                                            i
                                                                        )
                                                                            break;
                                                                        if (
                                                                            ((o[
                                                                                u
                                                                            ] &= -2),
                                                                            !r[
                                                                                u
                                                                            ] &&
                                                                                a[
                                                                                    u
                                                                                ])
                                                                        ) {
                                                                            var m =
                                                                                l[
                                                                                    a[
                                                                                        u
                                                                                    ]
                                                                                ];
                                                                            if (
                                                                                t.readBit(
                                                                                    s,
                                                                                    m
                                                                                )
                                                                            ) {
                                                                                var g = this.decodeSignBit(
                                                                                    d,
                                                                                    c,
                                                                                    u
                                                                                );
                                                                                (n[
                                                                                    u
                                                                                ] = g),
                                                                                    (r[
                                                                                        u
                                                                                    ] = 1),
                                                                                    this.setNeighborsSignificance(
                                                                                        d,
                                                                                        c,
                                                                                        u
                                                                                    ),
                                                                                    (o[
                                                                                        u
                                                                                    ] |= 2);
                                                                            }
                                                                            f[
                                                                                u
                                                                            ]++,
                                                                                (o[
                                                                                    u
                                                                                ] |= 1);
                                                                        }
                                                                    }
                                                        },
                                                        decodeSignBit: function(
                                                            t,
                                                            e,
                                                            i
                                                        ) {
                                                            var r,
                                                                n,
                                                                a,
                                                                o,
                                                                s,
                                                                l,
                                                                f = this.width,
                                                                h = this.height,
                                                                c = this
                                                                    .coefficentsMagnitude,
                                                                u = this
                                                                    .coefficentsSign;
                                                            (o =
                                                                e > 0 &&
                                                                0 !== c[i - 1]),
                                                                e + 1 < f &&
                                                                0 !== c[i + 1]
                                                                    ? ((a =
                                                                          u[
                                                                              i +
                                                                                  1
                                                                          ]),
                                                                      (r = o
                                                                          ? 1 -
                                                                            a -
                                                                            (n =
                                                                                u[
                                                                                    i -
                                                                                        1
                                                                                ])
                                                                          : 1 -
                                                                            a -
                                                                            a))
                                                                    : (r = o
                                                                          ? 1 -
                                                                            (n =
                                                                                u[
                                                                                    i -
                                                                                        1
                                                                                ]) -
                                                                            n
                                                                          : 0);
                                                            var p = 3 * r;
                                                            return (
                                                                (o =
                                                                    t > 0 &&
                                                                    0 !==
                                                                        c[
                                                                            i -
                                                                                f
                                                                        ]),
                                                                t + 1 < h &&
                                                                0 !== c[i + f]
                                                                    ? ((a =
                                                                          u[
                                                                              i +
                                                                                  f
                                                                          ]),
                                                                      (r = o
                                                                          ? 1 -
                                                                            a -
                                                                            (n =
                                                                                u[
                                                                                    i -
                                                                                        f
                                                                                ]) +
                                                                            p
                                                                          : 1 -
                                                                            a -
                                                                            a +
                                                                            p))
                                                                    : (r = o
                                                                          ? 1 -
                                                                            (n =
                                                                                u[
                                                                                    i -
                                                                                        f
                                                                                ]) -
                                                                            n +
                                                                            p
                                                                          : p),
                                                                r >= 0
                                                                    ? ((s =
                                                                          9 +
                                                                          r),
                                                                      (l = this.decoder.readBit(
                                                                          this
                                                                              .contexts,
                                                                          s
                                                                      )))
                                                                    : ((s =
                                                                          9 -
                                                                          r),
                                                                      (l =
                                                                          1 ^
                                                                          this.decoder.readBit(
                                                                              this
                                                                                  .contexts,
                                                                              s
                                                                          ))),
                                                                l
                                                            );
                                                        },
                                                        runMagnitudeRefinementPass: function() {
                                                            for (
                                                                var t,
                                                                    e = this
                                                                        .decoder,
                                                                    i = this
                                                                        .width,
                                                                    r = this
                                                                        .height,
                                                                    n = this
                                                                        .coefficentsMagnitude,
                                                                    a = this
                                                                        .neighborsSignificance,
                                                                    o = this
                                                                        .contexts,
                                                                    s = this
                                                                        .bitsDecoded,
                                                                    l = this
                                                                        .processingFlags,
                                                                    f = i * r,
                                                                    h = 4 * i,
                                                                    c = 0;
                                                                c < f;
                                                                c = t
                                                            ) {
                                                                t = Math.min(
                                                                    f,
                                                                    c + h
                                                                );
                                                                for (
                                                                    var u = 0;
                                                                    u < i;
                                                                    u++
                                                                )
                                                                    for (
                                                                        var p =
                                                                            c +
                                                                            u;
                                                                        p < t;
                                                                        p += i
                                                                    )
                                                                        if (
                                                                            n[
                                                                                p
                                                                            ] &&
                                                                            0 ==
                                                                                (1 &
                                                                                    l[
                                                                                        p
                                                                                    ])
                                                                        ) {
                                                                            var d = 16;
                                                                            if (
                                                                                0 !=
                                                                                (2 &
                                                                                    l[
                                                                                        p
                                                                                    ])
                                                                            )
                                                                                (l[
                                                                                    p
                                                                                ] ^= 2),
                                                                                    (d =
                                                                                        0 ===
                                                                                        (127 &
                                                                                            a[
                                                                                                p
                                                                                            ])
                                                                                            ? 15
                                                                                            : 14);
                                                                            var m = e.readBit(
                                                                                o,
                                                                                d
                                                                            );
                                                                            (n[
                                                                                p
                                                                            ] =
                                                                                (n[
                                                                                    p
                                                                                ] <<
                                                                                    1) |
                                                                                m),
                                                                                s[
                                                                                    p
                                                                                ]++,
                                                                                (l[
                                                                                    p
                                                                                ] |= 1);
                                                                        }
                                                            }
                                                        },
                                                        runCleanupPass: function() {
                                                            for (
                                                                var t,
                                                                    e = this
                                                                        .decoder,
                                                                    i = this
                                                                        .width,
                                                                    r = this
                                                                        .height,
                                                                    n = this
                                                                        .neighborsSignificance,
                                                                    a = this
                                                                        .coefficentsMagnitude,
                                                                    o = this
                                                                        .coefficentsSign,
                                                                    s = this
                                                                        .contexts,
                                                                    l = this
                                                                        .contextLabelTable,
                                                                    f = this
                                                                        .bitsDecoded,
                                                                    h = this
                                                                        .processingFlags,
                                                                    c = i,
                                                                    u = 2 * i,
                                                                    p = 3 * i,
                                                                    d = 0;
                                                                d < r;
                                                                d = t
                                                            ) {
                                                                t = Math.min(
                                                                    d + 4,
                                                                    r
                                                                );
                                                                for (
                                                                    var m =
                                                                            d *
                                                                            i,
                                                                        g =
                                                                            d +
                                                                                3 <
                                                                            r,
                                                                        b = 0;
                                                                    b < i;
                                                                    b++
                                                                ) {
                                                                    var v,
                                                                        y =
                                                                            m +
                                                                            b,
                                                                        w = 0,
                                                                        _ = y,
                                                                        x = d;
                                                                    if (
                                                                        g &&
                                                                        0 ===
                                                                            h[
                                                                                y
                                                                            ] &&
                                                                        0 ===
                                                                            h[
                                                                                y +
                                                                                    c
                                                                            ] &&
                                                                        0 ===
                                                                            h[
                                                                                y +
                                                                                    u
                                                                            ] &&
                                                                        0 ===
                                                                            h[
                                                                                y +
                                                                                    p
                                                                            ] &&
                                                                        0 ===
                                                                            n[
                                                                                y
                                                                            ] &&
                                                                        0 ===
                                                                            n[
                                                                                y +
                                                                                    c
                                                                            ] &&
                                                                        0 ===
                                                                            n[
                                                                                y +
                                                                                    u
                                                                            ] &&
                                                                        0 ===
                                                                            n[
                                                                                y +
                                                                                    p
                                                                            ]
                                                                    ) {
                                                                        if (
                                                                            !e.readBit(
                                                                                s,
                                                                                18
                                                                            )
                                                                        ) {
                                                                            f[
                                                                                y
                                                                            ]++,
                                                                                f[
                                                                                    y +
                                                                                        c
                                                                                ]++,
                                                                                f[
                                                                                    y +
                                                                                        u
                                                                                ]++,
                                                                                f[
                                                                                    y +
                                                                                        p
                                                                                ]++;
                                                                            continue;
                                                                        }
                                                                        0 !==
                                                                            (w =
                                                                                (e.readBit(
                                                                                    s,
                                                                                    17
                                                                                ) <<
                                                                                    1) |
                                                                                e.readBit(
                                                                                    s,
                                                                                    17
                                                                                )) &&
                                                                            ((x =
                                                                                d +
                                                                                w),
                                                                            (_ +=
                                                                                w *
                                                                                i)),
                                                                            (v = this.decodeSignBit(
                                                                                x,
                                                                                b,
                                                                                _
                                                                            )),
                                                                            (o[
                                                                                _
                                                                            ] = v),
                                                                            (a[
                                                                                _
                                                                            ] = 1),
                                                                            this.setNeighborsSignificance(
                                                                                x,
                                                                                b,
                                                                                _
                                                                            ),
                                                                            (h[
                                                                                _
                                                                            ] |= 2),
                                                                            (_ = y);
                                                                        for (
                                                                            var k = d;
                                                                            k <=
                                                                            x;
                                                                            k++,
                                                                                _ += i
                                                                        )
                                                                            f[
                                                                                _
                                                                            ]++;
                                                                        w++;
                                                                    }
                                                                    for (
                                                                        x =
                                                                            d +
                                                                            w;
                                                                        x < t;
                                                                        x++,
                                                                            _ += i
                                                                    )
                                                                        if (
                                                                            !a[
                                                                                _
                                                                            ] &&
                                                                            0 ==
                                                                                (1 &
                                                                                    h[
                                                                                        _
                                                                                    ])
                                                                        ) {
                                                                            var E =
                                                                                l[
                                                                                    n[
                                                                                        _
                                                                                    ]
                                                                                ];
                                                                            1 ===
                                                                                e.readBit(
                                                                                    s,
                                                                                    E
                                                                                ) &&
                                                                                ((v = this.decodeSignBit(
                                                                                    x,
                                                                                    b,
                                                                                    _
                                                                                )),
                                                                                (o[
                                                                                    _
                                                                                ] = v),
                                                                                (a[
                                                                                    _
                                                                                ] = 1),
                                                                                this.setNeighborsSignificance(
                                                                                    x,
                                                                                    b,
                                                                                    _
                                                                                ),
                                                                                (h[
                                                                                    _
                                                                                ] |= 2)),
                                                                                f[
                                                                                    _
                                                                                ]++;
                                                                        }
                                                                }
                                                            }
                                                        },
                                                        checkSegmentationSymbol: function() {
                                                            var t = this
                                                                    .decoder,
                                                                e = this
                                                                    .contexts;
                                                            if (
                                                                10 !==
                                                                ((t.readBit(
                                                                    e,
                                                                    17
                                                                ) <<
                                                                    3) |
                                                                    (t.readBit(
                                                                        e,
                                                                        17
                                                                    ) <<
                                                                        2) |
                                                                    (t.readBit(
                                                                        e,
                                                                        17
                                                                    ) <<
                                                                        1) |
                                                                    t.readBit(
                                                                        e,
                                                                        17
                                                                    ))
                                                            )
                                                                throw new Error(
                                                                    'JPX Error: Invalid segmentation symbol'
                                                                );
                                                        }
                                                    }),
                                                    r
                                                );
                                            })(),
                                            E = (function() {
                                                function t() {}
                                                return (
                                                    (t.prototype.calculate = function(
                                                        t,
                                                        e,
                                                        i
                                                    ) {
                                                        for (
                                                            var r = t[0],
                                                                n = 1,
                                                                a = t.length;
                                                            n < a;
                                                            n++
                                                        )
                                                            r = this.iterate(
                                                                r,
                                                                t[n],
                                                                e,
                                                                i
                                                            );
                                                        return r;
                                                    }),
                                                    (t.prototype.extend = function(
                                                        t,
                                                        e,
                                                        i
                                                    ) {
                                                        var r = e - 1,
                                                            n = e + 1,
                                                            a = e + i - 2,
                                                            o = e + i;
                                                        (t[r--] = t[n++]),
                                                            (t[o++] = t[a--]),
                                                            (t[r--] = t[n++]),
                                                            (t[o++] = t[a--]),
                                                            (t[r--] = t[n++]),
                                                            (t[o++] = t[a--]),
                                                            (t[r] = t[n]),
                                                            (t[o] = t[a]);
                                                    }),
                                                    (t.prototype.iterate = function(
                                                        t,
                                                        e,
                                                        i,
                                                        r
                                                    ) {
                                                        var n,
                                                            a,
                                                            o,
                                                            s,
                                                            l,
                                                            f,
                                                            h = t.width,
                                                            c = t.height,
                                                            u = t.items,
                                                            p = e.width,
                                                            d = e.height,
                                                            m = e.items;
                                                        for (
                                                            o = 0, n = 0;
                                                            n < c;
                                                            n++
                                                        )
                                                            for (
                                                                s = 2 * n * p,
                                                                    a = 0;
                                                                a < h;
                                                                a++, o++, s += 2
                                                            )
                                                                m[s] = u[o];
                                                        u = t.items = null;
                                                        var g = new Float32Array(
                                                            p + 8
                                                        );
                                                        if (1 === p) {
                                                            if (0 != (1 & i))
                                                                for (
                                                                    f = 0,
                                                                        o = 0;
                                                                    f < d;
                                                                    f++, o += p
                                                                )
                                                                    m[o] *= 0.5;
                                                        } else
                                                            for (
                                                                f = 0, o = 0;
                                                                f < d;
                                                                f++, o += p
                                                            )
                                                                g.set(
                                                                    m.subarray(
                                                                        o,
                                                                        o + p
                                                                    ),
                                                                    4
                                                                ),
                                                                    this.extend(
                                                                        g,
                                                                        4,
                                                                        p
                                                                    ),
                                                                    this.filter(
                                                                        g,
                                                                        4,
                                                                        p
                                                                    ),
                                                                    m.set(
                                                                        g.subarray(
                                                                            4,
                                                                            4 +
                                                                                p
                                                                        ),
                                                                        o
                                                                    );
                                                        var b = 16,
                                                            v = [];
                                                        for (n = 0; n < b; n++)
                                                            v.push(
                                                                new Float32Array(
                                                                    d + 8
                                                                )
                                                            );
                                                        var y,
                                                            w = 0;
                                                        if (
                                                            ((t = 4 + d),
                                                            1 === d)
                                                        ) {
                                                            if (0 != (1 & r))
                                                                for (
                                                                    l = 0;
                                                                    l < p;
                                                                    l++
                                                                )
                                                                    m[l] *= 0.5;
                                                        } else
                                                            for (
                                                                l = 0;
                                                                l < p;
                                                                l++
                                                            ) {
                                                                if (0 === w) {
                                                                    for (
                                                                        b = Math.min(
                                                                            p -
                                                                                l,
                                                                            b
                                                                        ),
                                                                            o = l,
                                                                            s = 4;
                                                                        s < t;
                                                                        o += p,
                                                                            s++
                                                                    )
                                                                        for (
                                                                            y = 0;
                                                                            y <
                                                                            b;
                                                                            y++
                                                                        )
                                                                            v[
                                                                                y
                                                                            ][
                                                                                s
                                                                            ] =
                                                                                m[
                                                                                    o +
                                                                                        y
                                                                                ];
                                                                    w = b;
                                                                }
                                                                var _ = v[--w];
                                                                if (
                                                                    (this.extend(
                                                                        _,
                                                                        4,
                                                                        d
                                                                    ),
                                                                    this.filter(
                                                                        _,
                                                                        4,
                                                                        d
                                                                    ),
                                                                    0 === w)
                                                                )
                                                                    for (
                                                                        o =
                                                                            l -
                                                                            b +
                                                                            1,
                                                                            s = 4;
                                                                        s < t;
                                                                        o += p,
                                                                            s++
                                                                    )
                                                                        for (
                                                                            y = 0;
                                                                            y <
                                                                            b;
                                                                            y++
                                                                        )
                                                                            m[
                                                                                o +
                                                                                    y
                                                                            ] =
                                                                                v[
                                                                                    y
                                                                                ][
                                                                                    s
                                                                                ];
                                                            }
                                                        return {
                                                            width: p,
                                                            height: d,
                                                            items: m
                                                        };
                                                    }),
                                                    t
                                                );
                                            })(),
                                            I = (function() {
                                                function t() {
                                                    E.call(this);
                                                }
                                                return (
                                                    (t.prototype = Object.create(
                                                        E.prototype
                                                    )),
                                                    (t.prototype.filter = function(
                                                        t,
                                                        e,
                                                        i
                                                    ) {
                                                        var r,
                                                            n,
                                                            a,
                                                            o,
                                                            s = i >> 1,
                                                            l = -1.586134342059924,
                                                            f = -0.052980118572961,
                                                            h = 0.882911075530934,
                                                            c = 0.443506852043971,
                                                            u = 1.230174104914001;
                                                        for (
                                                            r = (e |= 0) - 3,
                                                                n = s + 4;
                                                            n--;
                                                            r += 2
                                                        )
                                                            t[
                                                                r
                                                            ] *= 0.8128930661159609;
                                                        for (
                                                            a =
                                                                c *
                                                                t[
                                                                    (r =
                                                                        e - 2) -
                                                                        1
                                                                ],
                                                                n = s + 3;
                                                            n-- &&
                                                            ((o = c * t[r + 1]),
                                                            (t[r] =
                                                                u * t[r] -
                                                                a -
                                                                o),
                                                            n--);
                                                            r += 2
                                                        )
                                                            (a =
                                                                c *
                                                                t[
                                                                    (r += 2) + 1
                                                                ]),
                                                                (t[r] =
                                                                    u * t[r] -
                                                                    a -
                                                                    o);
                                                        for (
                                                            a =
                                                                h *
                                                                t[
                                                                    (r =
                                                                        e - 1) -
                                                                        1
                                                                ],
                                                                n = s + 2;
                                                            n-- &&
                                                            ((o = h * t[r + 1]),
                                                            (t[r] -= a + o),
                                                            n--);
                                                            r += 2
                                                        )
                                                            (a =
                                                                h *
                                                                t[
                                                                    (r += 2) + 1
                                                                ]),
                                                                (t[r] -= a + o);
                                                        for (
                                                            a =
                                                                f *
                                                                t[(r = e) - 1],
                                                                n = s + 1;
                                                            n-- &&
                                                            ((o = f * t[r + 1]),
                                                            (t[r] -= a + o),
                                                            n--);
                                                            r += 2
                                                        )
                                                            (a =
                                                                f *
                                                                t[
                                                                    (r += 2) + 1
                                                                ]),
                                                                (t[r] -= a + o);
                                                        if (0 !== s)
                                                            for (
                                                                a =
                                                                    l *
                                                                    t[
                                                                        (r =
                                                                            e +
                                                                            1) -
                                                                            1
                                                                    ],
                                                                    n = s;
                                                                n-- &&
                                                                ((o =
                                                                    l *
                                                                    t[r + 1]),
                                                                (t[r] -= a + o),
                                                                n--);
                                                                r += 2
                                                            )
                                                                (a =
                                                                    l *
                                                                    t[
                                                                        (r += 2) +
                                                                            1
                                                                    ]),
                                                                    (t[r] -=
                                                                        a + o);
                                                    }),
                                                    t
                                                );
                                            })(),
                                            S = (function() {
                                                function t() {
                                                    E.call(this);
                                                }
                                                return (
                                                    (t.prototype = Object.create(
                                                        E.prototype
                                                    )),
                                                    (t.prototype.filter = function(
                                                        t,
                                                        e,
                                                        i
                                                    ) {
                                                        var r,
                                                            n,
                                                            a = i >> 1;
                                                        for (
                                                            r = e |= 0,
                                                                n = a + 1;
                                                            n--;
                                                            r += 2
                                                        )
                                                            t[r] -=
                                                                (t[r - 1] +
                                                                    t[r + 1] +
                                                                    2) >>
                                                                2;
                                                        for (
                                                            r = e + 1, n = a;
                                                            n--;
                                                            r += 2
                                                        )
                                                            t[r] +=
                                                                (t[r - 1] +
                                                                    t[r + 1]) >>
                                                                1;
                                                    }),
                                                    t
                                                );
                                            })();
                                        return e;
                                    })(),
                                    n = (function() {
                                        function t() {}
                                        function e(t, e, i) {
                                            (this.data = t),
                                                (this.start = e),
                                                (this.end = i);
                                        }
                                        function r(t, e, i) {
                                            var r = t.getContexts(e),
                                                n = 1;
                                            function a(t) {
                                                for (
                                                    var e = 0, a = 0;
                                                    a < t;
                                                    a++
                                                ) {
                                                    var o = i.readBit(r, n);
                                                    (n =
                                                        n < 256
                                                            ? (n << 1) | o
                                                            : (511 &
                                                                  ((n << 1) |
                                                                      o)) |
                                                              256),
                                                        (e = (e << 1) | o);
                                                }
                                                return e >>> 0;
                                            }
                                            var o = a(1),
                                                s = a(1)
                                                    ? a(1)
                                                        ? a(1)
                                                            ? a(1)
                                                                ? a(1)
                                                                    ? a(32) +
                                                                      4436
                                                                    : a(12) +
                                                                      340
                                                                : a(8) + 84
                                                            : a(6) + 20
                                                        : a(4) + 4
                                                    : a(2);
                                            return 0 === o
                                                ? s
                                                : s > 0
                                                    ? -s
                                                    : null;
                                        }
                                        function n(t, e, i) {
                                            for (
                                                var r = t.getContexts('IAID'),
                                                    n = 1,
                                                    a = 0;
                                                a < i;
                                                a++
                                            ) {
                                                n = (n << 1) | e.readBit(r, n);
                                            }
                                            return i < 31
                                                ? n & ((1 << i) - 1)
                                                : 2147483647 & n;
                                        }
                                        (t.prototype = {
                                            getContexts: function(t) {
                                                return t in this
                                                    ? this[t]
                                                    : (this[t] = new Int8Array(
                                                          65536
                                                      ));
                                            }
                                        }),
                                            (e.prototype = {
                                                get decoder() {
                                                    return h(
                                                        this,
                                                        'decoder',
                                                        new i(
                                                            this.data,
                                                            this.start,
                                                            this.end
                                                        )
                                                    );
                                                },
                                                get contextCache() {
                                                    return h(
                                                        this,
                                                        'contextCache',
                                                        new t()
                                                    );
                                                }
                                            });
                                        var a = [
                                                'SymbolDictionary',
                                                null,
                                                null,
                                                null,
                                                'IntermediateTextRegion',
                                                null,
                                                'ImmediateTextRegion',
                                                'ImmediateLosslessTextRegion',
                                                null,
                                                null,
                                                null,
                                                null,
                                                null,
                                                null,
                                                null,
                                                null,
                                                'patternDictionary',
                                                null,
                                                null,
                                                null,
                                                'IntermediateHalftoneRegion',
                                                null,
                                                'ImmediateHalftoneRegion',
                                                'ImmediateLosslessHalftoneRegion',
                                                null,
                                                null,
                                                null,
                                                null,
                                                null,
                                                null,
                                                null,
                                                null,
                                                null,
                                                null,
                                                null,
                                                null,
                                                'IntermediateGenericRegion',
                                                null,
                                                'ImmediateGenericRegion',
                                                'ImmediateLosslessGenericRegion',
                                                'IntermediateGenericRefinementRegion',
                                                null,
                                                'ImmediateGenericRefinementRegion',
                                                'ImmediateLosslessGenericRefinementRegion',
                                                null,
                                                null,
                                                null,
                                                null,
                                                'PageInformation',
                                                'EndOfPage',
                                                'EndOfStripe',
                                                'EndOfFile',
                                                'Profiles',
                                                'Tables',
                                                null,
                                                null,
                                                null,
                                                null,
                                                null,
                                                null,
                                                null,
                                                null,
                                                'Extension'
                                            ],
                                            u = [
                                                [
                                                    { x: -1, y: -2 },
                                                    { x: 0, y: -2 },
                                                    { x: 1, y: -2 },
                                                    { x: -2, y: -1 },
                                                    { x: -1, y: -1 },
                                                    { x: 0, y: -1 },
                                                    { x: 1, y: -1 },
                                                    { x: 2, y: -1 },
                                                    { x: -4, y: 0 },
                                                    { x: -3, y: 0 },
                                                    { x: -2, y: 0 },
                                                    { x: -1, y: 0 }
                                                ],
                                                [
                                                    { x: -1, y: -2 },
                                                    { x: 0, y: -2 },
                                                    { x: 1, y: -2 },
                                                    { x: 2, y: -2 },
                                                    { x: -2, y: -1 },
                                                    { x: -1, y: -1 },
                                                    { x: 0, y: -1 },
                                                    { x: 1, y: -1 },
                                                    { x: 2, y: -1 },
                                                    { x: -3, y: 0 },
                                                    { x: -2, y: 0 },
                                                    { x: -1, y: 0 }
                                                ],
                                                [
                                                    { x: -1, y: -2 },
                                                    { x: 0, y: -2 },
                                                    { x: 1, y: -2 },
                                                    { x: -2, y: -1 },
                                                    { x: -1, y: -1 },
                                                    { x: 0, y: -1 },
                                                    { x: 1, y: -1 },
                                                    { x: -2, y: 0 },
                                                    { x: -1, y: 0 }
                                                ],
                                                [
                                                    { x: -3, y: -1 },
                                                    { x: -2, y: -1 },
                                                    { x: -1, y: -1 },
                                                    { x: 0, y: -1 },
                                                    { x: 1, y: -1 },
                                                    { x: -4, y: 0 },
                                                    { x: -3, y: 0 },
                                                    { x: -2, y: 0 },
                                                    { x: -1, y: 0 }
                                                ]
                                            ],
                                            p = [
                                                {
                                                    coding: [
                                                        { x: 0, y: -1 },
                                                        { x: 1, y: -1 },
                                                        { x: -1, y: 0 }
                                                    ],
                                                    reference: [
                                                        { x: 0, y: -1 },
                                                        { x: 1, y: -1 },
                                                        { x: -1, y: 0 },
                                                        { x: 0, y: 0 },
                                                        { x: 1, y: 0 },
                                                        { x: -1, y: 1 },
                                                        { x: 0, y: 1 },
                                                        { x: 1, y: 1 }
                                                    ]
                                                },
                                                {
                                                    coding: [
                                                        { x: -1, y: -1 },
                                                        { x: 0, y: -1 },
                                                        { x: 1, y: -1 },
                                                        { x: -1, y: 0 }
                                                    ],
                                                    reference: [
                                                        { x: 0, y: -1 },
                                                        { x: -1, y: 0 },
                                                        { x: 0, y: 0 },
                                                        { x: 1, y: 0 },
                                                        { x: 0, y: 1 },
                                                        { x: 1, y: 1 }
                                                    ]
                                                }
                                            ],
                                            d = [39717, 1941, 229, 405],
                                            m = [32, 8];
                                        function g(t, e, i, r, n, a, o, s) {
                                            if (
                                                (t &&
                                                    c(
                                                        'JBIG2 error: MMR encoding is not supported'
                                                    ),
                                                0 === r &&
                                                    !a &&
                                                    !n &&
                                                    4 === o.length &&
                                                    3 === o[0].x &&
                                                    -1 === o[0].y &&
                                                    -3 === o[1].x &&
                                                    -1 === o[1].y &&
                                                    2 === o[2].x &&
                                                    -2 === o[2].y &&
                                                    -2 === o[3].x &&
                                                    -2 === o[3].y)
                                            )
                                                return (function(t, e, i) {
                                                    var r,
                                                        n,
                                                        a,
                                                        o,
                                                        s,
                                                        l,
                                                        f,
                                                        h = i.decoder,
                                                        c = i.contextCache.getContexts(
                                                            'GB'
                                                        ),
                                                        u = [];
                                                    for (n = 0; n < e; n++)
                                                        for (
                                                            s = u[
                                                                n
                                                            ] = new Uint8Array(
                                                                t
                                                            ),
                                                                l =
                                                                    n < 1
                                                                        ? s
                                                                        : u[
                                                                              n -
                                                                                  1
                                                                          ],
                                                                r =
                                                                    ((f =
                                                                        n < 2
                                                                            ? s
                                                                            : u[
                                                                                  n -
                                                                                      2
                                                                              ])[0] <<
                                                                        13) |
                                                                    (f[1] <<
                                                                        12) |
                                                                    (f[2] <<
                                                                        11) |
                                                                    (l[0] <<
                                                                        7) |
                                                                    (l[1] <<
                                                                        6) |
                                                                    (l[2] <<
                                                                        5) |
                                                                    (l[3] << 4),
                                                                a = 0;
                                                            a < t;
                                                            a++
                                                        )
                                                            (s[
                                                                a
                                                            ] = o = h.readBit(
                                                                c,
                                                                r
                                                            )),
                                                                (r =
                                                                    ((31735 &
                                                                        r) <<
                                                                        1) |
                                                                    (a + 3 < t
                                                                        ? f[
                                                                              a +
                                                                                  3
                                                                          ] <<
                                                                          11
                                                                        : 0) |
                                                                    (a + 4 < t
                                                                        ? l[
                                                                              a +
                                                                                  4
                                                                          ] << 4
                                                                        : 0) |
                                                                    o);
                                                    return u;
                                                })(e, i, s);
                                            var l = !!a,
                                                f = u[r].concat(o);
                                            f.sort(function(t, e) {
                                                return t.y - e.y || t.x - e.x;
                                            });
                                            var h,
                                                p,
                                                m = f.length,
                                                g = new Int8Array(m),
                                                b = new Int8Array(m),
                                                v = [],
                                                y = 0,
                                                w = 0,
                                                _ = 0,
                                                x = 0;
                                            for (p = 0; p < m; p++)
                                                (g[p] = f[p].x),
                                                    (b[p] = f[p].y),
                                                    (w = Math.min(w, f[p].x)),
                                                    (_ = Math.max(_, f[p].x)),
                                                    (x = Math.min(x, f[p].y)),
                                                    p < m - 1 &&
                                                    f[p].y === f[p + 1].y &&
                                                    f[p].x === f[p + 1].x - 1
                                                        ? (y |=
                                                              1 << (m - 1 - p))
                                                        : v.push(p);
                                            var k = v.length,
                                                E = new Int8Array(k),
                                                I = new Int8Array(k),
                                                S = new Uint16Array(k);
                                            for (h = 0; h < k; h++)
                                                (p = v[h]),
                                                    (E[h] = f[p].x),
                                                    (I[h] = f[p].y),
                                                    (S[h] = 1 << (m - 1 - p));
                                            for (
                                                var A,
                                                    T,
                                                    C,
                                                    M,
                                                    P,
                                                    L = -w,
                                                    O = -x,
                                                    R = e - _,
                                                    B = d[r],
                                                    D = new Uint8Array(e),
                                                    z = [],
                                                    U = s.decoder,
                                                    N = s.contextCache.getContexts(
                                                        'GB'
                                                    ),
                                                    F = 0,
                                                    j = 0,
                                                    H = 0;
                                                H < i;
                                                H++
                                            ) {
                                                if (n)
                                                    if (
                                                        (F ^= U.readBit(N, B))
                                                    ) {
                                                        z.push(D);
                                                        continue;
                                                    }
                                                for (
                                                    D = new Uint8Array(D),
                                                        z.push(D),
                                                        A = 0;
                                                    A < e;
                                                    A++
                                                )
                                                    if (l && a[H][A]) D[A] = 0;
                                                    else {
                                                        if (
                                                            A >= L &&
                                                            A < R &&
                                                            H >= O
                                                        )
                                                            for (
                                                                j =
                                                                    (j << 1) &
                                                                    y,
                                                                    p = 0;
                                                                p < k;
                                                                p++
                                                            )
                                                                (T = H + I[p]),
                                                                    (C =
                                                                        A +
                                                                        E[p]),
                                                                    (M =
                                                                        z[T][
                                                                            C
                                                                        ]) &&
                                                                        (j |= M =
                                                                            S[
                                                                                p
                                                                            ]);
                                                        else
                                                            for (
                                                                j = 0,
                                                                    P = m - 1,
                                                                    p = 0;
                                                                p < m;
                                                                p++, P--
                                                            )
                                                                (C =
                                                                    A + g[p]) >=
                                                                    0 &&
                                                                    C < e &&
                                                                    (T =
                                                                        H +
                                                                        b[p]) >=
                                                                        0 &&
                                                                    (M =
                                                                        z[T][
                                                                            C
                                                                        ]) &&
                                                                    (j |=
                                                                        M << P);
                                                        var G = U.readBit(N, j);
                                                        D[A] = G;
                                                    }
                                            }
                                            return z;
                                        }
                                        function b(t, e, i, r, n, a, o, s, l) {
                                            var f = p[i].coding;
                                            0 === i && (f = f.concat([s[0]]));
                                            var h,
                                                u = f.length,
                                                d = new Int32Array(u),
                                                g = new Int32Array(u);
                                            for (h = 0; h < u; h++)
                                                (d[h] = f[h].x),
                                                    (g[h] = f[h].y);
                                            var b = p[i].reference;
                                            0 === i && (b = b.concat([s[1]]));
                                            var v = b.length,
                                                y = new Int32Array(v),
                                                w = new Int32Array(v);
                                            for (h = 0; h < v; h++)
                                                (y[h] = b[h].x),
                                                    (w[h] = b[h].y);
                                            for (
                                                var _ = r[0].length,
                                                    x = r.length,
                                                    k = m[i],
                                                    E = [],
                                                    I = l.decoder,
                                                    S = l.contextCache.getContexts(
                                                        'GR'
                                                    ),
                                                    A = 0,
                                                    T = 0;
                                                T < e;
                                                T++
                                            ) {
                                                if (o)
                                                    (A ^= I.readBit(S, k)) &&
                                                        c(
                                                            'JBIG2 error: prediction is not supported'
                                                        );
                                                var C = new Uint8Array(t);
                                                E.push(C);
                                                for (var M = 0; M < t; M++) {
                                                    var P,
                                                        L,
                                                        O = 0;
                                                    for (h = 0; h < u; h++)
                                                        (P = T + g[h]),
                                                            (L = M + d[h]),
                                                            P < 0 ||
                                                            L < 0 ||
                                                            L >= t
                                                                ? (O <<= 1)
                                                                : (O =
                                                                      (O << 1) |
                                                                      E[P][L]);
                                                    for (h = 0; h < v; h++)
                                                        (P = T + w[h] + a),
                                                            (L = M + y[h] + n),
                                                            P < 0 ||
                                                            P >= x ||
                                                            L < 0 ||
                                                            L >= _
                                                                ? (O <<= 1)
                                                                : (O =
                                                                      (O << 1) |
                                                                      r[P][L]);
                                                    var R = I.readBit(S, O);
                                                    C[M] = R;
                                                }
                                            }
                                            return E;
                                        }
                                        function v(
                                            t,
                                            e,
                                            i,
                                            a,
                                            o,
                                            s,
                                            l,
                                            f,
                                            h,
                                            u,
                                            p,
                                            d,
                                            m,
                                            g,
                                            v,
                                            y,
                                            w
                                        ) {
                                            t &&
                                                c(
                                                    'JBIG2 error: huffman is not supported'
                                                );
                                            var _,
                                                x,
                                                k = [];
                                            for (_ = 0; _ < a; _++) {
                                                if (
                                                    ((x = new Uint8Array(i)), o)
                                                )
                                                    for (var E = 0; E < i; E++)
                                                        x[E] = o;
                                                k.push(x);
                                            }
                                            var I = w.decoder,
                                                S = w.contextCache,
                                                A = -r(S, 'IADT', I),
                                                T = 0;
                                            for (_ = 0; _ < s; ) {
                                                A += r(S, 'IADT', I);
                                                for (
                                                    var C = (T += r(
                                                        S,
                                                        'IAFS',
                                                        I
                                                    ));
                                                    ;

                                                ) {
                                                    var M =
                                                            l * A +
                                                            (1 === l
                                                                ? 0
                                                                : r(
                                                                      S,
                                                                      'IAIT',
                                                                      I
                                                                  )),
                                                        P = n(S, I, h),
                                                        L =
                                                            e &&
                                                            r(S, 'IARI', I),
                                                        O = f[P],
                                                        R = O[0].length,
                                                        B = O.length;
                                                    if (L) {
                                                        var D = r(
                                                                S,
                                                                'IARDW',
                                                                I
                                                            ),
                                                            z = r(
                                                                S,
                                                                'IARDH',
                                                                I
                                                            );
                                                        O = b(
                                                            (R += D),
                                                            (B += z),
                                                            v,
                                                            O,
                                                            (D >> 1) +
                                                                r(
                                                                    S,
                                                                    'IARDX',
                                                                    I
                                                                ),
                                                            (z >> 1) +
                                                                r(
                                                                    S,
                                                                    'IARDY',
                                                                    I
                                                                ),
                                                            !1,
                                                            y,
                                                            w
                                                        );
                                                    }
                                                    var U,
                                                        N,
                                                        F,
                                                        j = M - (1 & d ? 0 : B),
                                                        H = C - (2 & d ? R : 0);
                                                    if (u) {
                                                        for (U = 0; U < B; U++)
                                                            if (
                                                                (x = k[H + U])
                                                            ) {
                                                                F = O[U];
                                                                var G = Math.min(
                                                                    i - j,
                                                                    R
                                                                );
                                                                switch (m) {
                                                                    case 0:
                                                                        for (
                                                                            N = 0;
                                                                            N <
                                                                            G;
                                                                            N++
                                                                        )
                                                                            x[
                                                                                j +
                                                                                    N
                                                                            ] |=
                                                                                F[
                                                                                    N
                                                                                ];
                                                                        break;
                                                                    case 2:
                                                                        for (
                                                                            N = 0;
                                                                            N <
                                                                            G;
                                                                            N++
                                                                        )
                                                                            x[
                                                                                j +
                                                                                    N
                                                                            ] ^=
                                                                                F[
                                                                                    N
                                                                                ];
                                                                        break;
                                                                    default:
                                                                        c(
                                                                            'JBIG2 error: operator ' +
                                                                                m +
                                                                                ' is not supported'
                                                                        );
                                                                }
                                                            }
                                                        C += B - 1;
                                                    } else {
                                                        for (N = 0; N < B; N++)
                                                            if ((x = k[j + N]))
                                                                switch (
                                                                    ((F = O[N]),
                                                                    m)
                                                                ) {
                                                                    case 0:
                                                                        for (
                                                                            U = 0;
                                                                            U <
                                                                            R;
                                                                            U++
                                                                        )
                                                                            x[
                                                                                H +
                                                                                    U
                                                                            ] |=
                                                                                F[
                                                                                    U
                                                                                ];
                                                                        break;
                                                                    case 2:
                                                                        for (
                                                                            U = 0;
                                                                            U <
                                                                            R;
                                                                            U++
                                                                        )
                                                                            x[
                                                                                H +
                                                                                    U
                                                                            ] ^=
                                                                                F[
                                                                                    U
                                                                                ];
                                                                        break;
                                                                    default:
                                                                        c(
                                                                            'JBIG2 error: operator ' +
                                                                                m +
                                                                                ' is not supported'
                                                                        );
                                                                }
                                                        C += R - 1;
                                                    }
                                                    _++;
                                                    var q = r(S, 'IADS', I);
                                                    if (null === q) break;
                                                    C += q + p;
                                                }
                                            }
                                            return k;
                                        }
                                        function y(t, e) {
                                            var i = {};
                                            i.number = f(t, e);
                                            var r = t[e + 4],
                                                n = 63 & r;
                                            a[n] ||
                                                c(
                                                    'JBIG2 error: invalid segment type: ' +
                                                        n
                                                ),
                                                (i.type = n),
                                                (i.typeName = a[n]),
                                                (i.deferredNonRetain = !!(
                                                    128 & r
                                                ));
                                            var o = !!(64 & r),
                                                s = t[e + 5],
                                                h = (s >> 5) & 7,
                                                u = [31 & s],
                                                p = e + 6;
                                            if (7 === s) {
                                                (h = 536870911 & f(t, p - 1)),
                                                    (p += 3);
                                                var d = (h + 7) >> 3;
                                                for (u[0] = t[p++]; --d > 0; )
                                                    u.push(t[p++]);
                                            } else
                                                (5 !== s && 6 !== s) ||
                                                    c(
                                                        'JBIG2 error: invalid referred-to flags'
                                                    );
                                            i.retainBits = u;
                                            var m,
                                                g,
                                                b =
                                                    i.number <= 256
                                                        ? 1
                                                        : i.number <= 65536
                                                            ? 2
                                                            : 4,
                                                v = [];
                                            for (m = 0; m < h; m++) {
                                                var y =
                                                    1 === b
                                                        ? t[p]
                                                        : 2 === b
                                                            ? l(t, p)
                                                            : f(t, p);
                                                v.push(y), (p += b);
                                            }
                                            if (
                                                ((i.referredTo = v),
                                                o
                                                    ? ((i.pageAssociation = f(
                                                          t,
                                                          p
                                                      )),
                                                      (p += 4))
                                                    : (i.pageAssociation =
                                                          t[p++]),
                                                (i.length = f(t, p)),
                                                (p += 4),
                                                4294967295 === i.length)
                                            )
                                                if (38 === n) {
                                                    var w = _(t, p),
                                                        k = !!(1 & t[p + x]),
                                                        E = new Uint8Array(6);
                                                    for (
                                                        k ||
                                                            ((E[0] = 255),
                                                            (E[1] = 172)),
                                                            E[2] =
                                                                (w.height >>>
                                                                    24) &
                                                                255,
                                                            E[3] =
                                                                (w.height >>
                                                                    16) &
                                                                255,
                                                            E[4] =
                                                                (w.height >>
                                                                    8) &
                                                                255,
                                                            E[5] =
                                                                255 & w.height,
                                                            m = p,
                                                            g = t.length;
                                                        m < g;
                                                        m++
                                                    ) {
                                                        for (
                                                            var I = 0;
                                                            I < 6 &&
                                                            E[I] === t[m + I];

                                                        )
                                                            I++;
                                                        if (6 === I) {
                                                            i.length = m + 6;
                                                            break;
                                                        }
                                                    }
                                                    4294967295 === i.length &&
                                                        c(
                                                            'JBIG2 error: segment end was not found'
                                                        );
                                                } else
                                                    c(
                                                        'JBIG2 error: invalid unknown segment length'
                                                    );
                                            return (i.headerEnd = p), i;
                                        }
                                        function w(t, e, i, r) {
                                            for (var n = [], a = i; a < r; ) {
                                                var o = y(e, a);
                                                a = o.headerEnd;
                                                var s = { header: o, data: e };
                                                if (
                                                    (t.randomAccess ||
                                                        ((s.start = a),
                                                        (a += o.length),
                                                        (s.end = a)),
                                                    n.push(s),
                                                    51 === o.type)
                                                )
                                                    break;
                                            }
                                            if (t.randomAccess)
                                                for (
                                                    var l = 0, f = n.length;
                                                    l < f;
                                                    l++
                                                )
                                                    (n[l].start = a),
                                                        (a +=
                                                            n[l].header.length),
                                                        (n[l].end = a);
                                            return n;
                                        }
                                        function _(t, e) {
                                            return {
                                                width: f(t, e),
                                                height: f(t, e + 4),
                                                x: f(t, e + 8),
                                                y: f(t, e + 12),
                                                combinationOperator:
                                                    7 & t[e + 16]
                                            };
                                        }
                                        var x = 17;
                                        function k(t, e) {
                                            var i,
                                                r,
                                                n,
                                                a,
                                                o = t.header,
                                                h = t.data,
                                                u = t.start,
                                                p = t.end;
                                            switch (o.type) {
                                                case 0:
                                                    var d = {},
                                                        m = l(h, u);
                                                    if (
                                                        ((d.huffman = !!(
                                                            1 & m
                                                        )),
                                                        (d.refinement = !!(
                                                            2 & m
                                                        )),
                                                        (d.huffmanDHSelector =
                                                            (m >> 2) & 3),
                                                        (d.huffmanDWSelector =
                                                            (m >> 4) & 3),
                                                        (d.bitmapSizeSelector =
                                                            (m >> 6) & 1),
                                                        (d.aggregationInstancesSelector =
                                                            (m >> 7) & 1),
                                                        (d.bitmapCodingContextUsed = !!(
                                                            256 & m
                                                        )),
                                                        (d.bitmapCodingContextRetained = !!(
                                                            512 & m
                                                        )),
                                                        (d.template =
                                                            (m >> 10) & 3),
                                                        (d.refinementTemplate =
                                                            (m >> 12) & 1),
                                                        (u += 2),
                                                        !d.huffman)
                                                    ) {
                                                        for (
                                                            a =
                                                                0 === d.template
                                                                    ? 4
                                                                    : 1,
                                                                r = [],
                                                                n = 0;
                                                            n < a;
                                                            n++
                                                        )
                                                            r.push({
                                                                x: s(h, u),
                                                                y: s(h, u + 1)
                                                            }),
                                                                (u += 2);
                                                        d.at = r;
                                                    }
                                                    if (
                                                        d.refinement &&
                                                        !d.refinementTemplate
                                                    ) {
                                                        for (
                                                            r = [], n = 0;
                                                            n < 2;
                                                            n++
                                                        )
                                                            r.push({
                                                                x: s(h, u),
                                                                y: s(h, u + 1)
                                                            }),
                                                                (u += 2);
                                                        d.refinementAt = r;
                                                    }
                                                    (d.numberOfExportedSymbols = f(
                                                        h,
                                                        u
                                                    )),
                                                        (u += 4),
                                                        (d.numberOfNewSymbols = f(
                                                            h,
                                                            u
                                                        )),
                                                        (u += 4),
                                                        (i = [
                                                            d,
                                                            o.number,
                                                            o.referredTo,
                                                            h,
                                                            u,
                                                            p
                                                        ]);
                                                    break;
                                                case 6:
                                                case 7:
                                                    var g = {};
                                                    g.info = _(h, u);
                                                    var b = l(h, (u += x));
                                                    if (
                                                        ((u += 2),
                                                        (g.huffman = !!(1 & b)),
                                                        (g.refinement = !!(
                                                            2 & b
                                                        )),
                                                        (g.stripSize =
                                                            1 <<
                                                            ((b >> 2) & 3)),
                                                        (g.referenceCorner =
                                                            (b >> 4) & 3),
                                                        (g.transposed = !!(
                                                            64 & b
                                                        )),
                                                        (g.combinationOperator =
                                                            (b >> 7) & 3),
                                                        (g.defaultPixelValue =
                                                            (b >> 9) & 1),
                                                        (g.dsOffset =
                                                            (b << 17) >> 27),
                                                        (g.refinementTemplate =
                                                            (b >> 15) & 1),
                                                        g.huffman)
                                                    ) {
                                                        var v = l(h, u);
                                                        (u += 2),
                                                            (g.huffmanFS =
                                                                3 & v),
                                                            (g.huffmanDS =
                                                                (v >> 2) & 3),
                                                            (g.huffmanDT =
                                                                (v >> 4) & 3),
                                                            (g.huffmanRefinementDW =
                                                                (v >> 6) & 3),
                                                            (g.huffmanRefinementDH =
                                                                (v >> 8) & 3),
                                                            (g.huffmanRefinementDX =
                                                                (v >> 10) & 3),
                                                            (g.huffmanRefinementDY =
                                                                (v >> 12) & 3),
                                                            (g.huffmanRefinementSizeSelector = !!(
                                                                14 & v
                                                            ));
                                                    }
                                                    if (
                                                        g.refinement &&
                                                        !g.refinementTemplate
                                                    ) {
                                                        for (
                                                            r = [], n = 0;
                                                            n < 2;
                                                            n++
                                                        )
                                                            r.push({
                                                                x: s(h, u),
                                                                y: s(h, u + 1)
                                                            }),
                                                                (u += 2);
                                                        g.refinementAt = r;
                                                    }
                                                    (g.numberOfSymbolInstances = f(
                                                        h,
                                                        u
                                                    )),
                                                        (u += 4),
                                                        g.huffman &&
                                                            c(
                                                                'JBIG2 error: huffman is not supported'
                                                            ),
                                                        (i = [
                                                            g,
                                                            o.referredTo,
                                                            h,
                                                            u,
                                                            p
                                                        ]);
                                                    break;
                                                case 38:
                                                case 39:
                                                    var y = {};
                                                    (y.info = _(h, u)),
                                                        (u += x);
                                                    var w = h[u++];
                                                    if (
                                                        ((y.mmr = !!(1 & w)),
                                                        (y.template =
                                                            (w >> 1) & 3),
                                                        (y.prediction = !!(
                                                            8 & w
                                                        )),
                                                        !y.mmr)
                                                    ) {
                                                        for (
                                                            a =
                                                                0 === y.template
                                                                    ? 4
                                                                    : 1,
                                                                r = [],
                                                                n = 0;
                                                            n < a;
                                                            n++
                                                        )
                                                            r.push({
                                                                x: s(h, u),
                                                                y: s(h, u + 1)
                                                            }),
                                                                (u += 2);
                                                        y.at = r;
                                                    }
                                                    i = [y, h, u, p];
                                                    break;
                                                case 48:
                                                    var k = {
                                                        width: f(h, u),
                                                        height: f(h, u + 4),
                                                        resolutionX: f(
                                                            h,
                                                            u + 8
                                                        ),
                                                        resolutionY: f(
                                                            h,
                                                            u + 12
                                                        )
                                                    };
                                                    4294967295 === k.height &&
                                                        delete k.height;
                                                    var E = h[u + 16];
                                                    l(h, u + 17);
                                                    (k.lossless = !!(1 & E)),
                                                        (k.refinement = !!(
                                                            2 & E
                                                        )),
                                                        (k.defaultPixelValue =
                                                            (E >> 2) & 1),
                                                        (k.combinationOperator =
                                                            (E >> 3) & 3),
                                                        (k.requiresBuffer = !!(
                                                            32 & E
                                                        )),
                                                        (k.combinationOperatorOverride = !!(
                                                            64 & E
                                                        )),
                                                        (i = [k]);
                                                    break;
                                                case 49:
                                                case 50:
                                                case 51:
                                                case 62:
                                                    break;
                                                default:
                                                    c(
                                                        'JBIG2 error: segment type ' +
                                                            o.typeName +
                                                            '(' +
                                                            o.type +
                                                            ') is not implemented'
                                                    );
                                            }
                                            var I = 'on' + o.typeName;
                                            I in e && e[I].apply(e, i);
                                        }
                                        function E(t, e) {
                                            for (
                                                var i = 0, r = t.length;
                                                i < r;
                                                i++
                                            )
                                                k(t[i], e);
                                        }
                                        function I() {}
                                        function S() {}
                                        return (
                                            (I.prototype = {
                                                onPageInformation: function(t) {
                                                    this.currentPageInfo = t;
                                                    var e = (t.width + 7) >> 3,
                                                        i = new Uint8Array(
                                                            e * t.height
                                                        );
                                                    if (t.defaultPixelValue)
                                                        for (
                                                            var r = 0,
                                                                n = i.length;
                                                            r < n;
                                                            r++
                                                        )
                                                            i[r] = 255;
                                                    this.buffer = i;
                                                },
                                                drawBitmap: function(t, e) {
                                                    var i,
                                                        r,
                                                        n,
                                                        a,
                                                        o = this
                                                            .currentPageInfo,
                                                        s = t.width,
                                                        l = t.height,
                                                        f = (o.width + 7) >> 3,
                                                        h = o.combinationOperatorOverride
                                                            ? t.combinationOperator
                                                            : o.combinationOperator,
                                                        u = this.buffer,
                                                        p = 128 >> (7 & t.x),
                                                        d =
                                                            t.y * f +
                                                            (t.x >> 3);
                                                    switch (h) {
                                                        case 0:
                                                            for (
                                                                i = 0;
                                                                i < l;
                                                                i++
                                                            ) {
                                                                for (
                                                                    n = p,
                                                                        a = d,
                                                                        r = 0;
                                                                    r < s;
                                                                    r++
                                                                )
                                                                    e[i][r] &&
                                                                        (u[
                                                                            a
                                                                        ] |= n),
                                                                        (n >>= 1) ||
                                                                            ((n = 128),
                                                                            a++);
                                                                d += f;
                                                            }
                                                            break;
                                                        case 2:
                                                            for (
                                                                i = 0;
                                                                i < l;
                                                                i++
                                                            ) {
                                                                for (
                                                                    n = p,
                                                                        a = d,
                                                                        r = 0;
                                                                    r < s;
                                                                    r++
                                                                )
                                                                    e[i][r] &&
                                                                        (u[
                                                                            a
                                                                        ] ^= n),
                                                                        (n >>= 1) ||
                                                                            ((n = 128),
                                                                            a++);
                                                                d += f;
                                                            }
                                                            break;
                                                        default:
                                                            c(
                                                                'JBIG2 error: operator ' +
                                                                    h +
                                                                    ' is not supported'
                                                            );
                                                    }
                                                },
                                                onImmediateGenericRegion: function(
                                                    t,
                                                    i,
                                                    r,
                                                    n
                                                ) {
                                                    var a = t.info,
                                                        o = new e(i, r, n),
                                                        s = g(
                                                            t.mmr,
                                                            a.width,
                                                            a.height,
                                                            t.template,
                                                            t.prediction,
                                                            null,
                                                            t.at,
                                                            o
                                                        );
                                                    this.drawBitmap(a, s);
                                                },
                                                onImmediateLosslessGenericRegion: function() {
                                                    this.onImmediateGenericRegion.apply(
                                                        this,
                                                        arguments
                                                    );
                                                },
                                                onSymbolDictionary: function(
                                                    t,
                                                    i,
                                                    a,
                                                    s,
                                                    l,
                                                    f
                                                ) {
                                                    t.huffman &&
                                                        c(
                                                            'JBIG2 error: huffman is not supported'
                                                        );
                                                    var h = this.symbols;
                                                    h ||
                                                        (this.symbols = h = {});
                                                    for (
                                                        var u = [],
                                                            p = 0,
                                                            d = a.length;
                                                        p < d;
                                                        p++
                                                    )
                                                        u = u.concat(h[a[p]]);
                                                    var m = new e(s, l, f);
                                                    h[i] = (function(
                                                        t,
                                                        e,
                                                        i,
                                                        a,
                                                        s,
                                                        l,
                                                        f,
                                                        h,
                                                        u,
                                                        p,
                                                        d
                                                    ) {
                                                        t &&
                                                            c(
                                                                'JBIG2 error: huffman is not supported'
                                                            );
                                                        for (
                                                            var m = [],
                                                                y = 0,
                                                                w = o(
                                                                    i.length + a
                                                                ),
                                                                _ = d.decoder,
                                                                x =
                                                                    d.contextCache;
                                                            m.length < a;

                                                        ) {
                                                            y += r(
                                                                x,
                                                                'IADH',
                                                                _
                                                            );
                                                            for (
                                                                var k = 0;
                                                                ;

                                                            ) {
                                                                var E,
                                                                    I = r(
                                                                        x,
                                                                        'IADW',
                                                                        _
                                                                    );
                                                                if (null === I)
                                                                    break;
                                                                if (
                                                                    ((k += I),
                                                                    e)
                                                                ) {
                                                                    var S = r(
                                                                        x,
                                                                        'IAAI',
                                                                        _
                                                                    );
                                                                    if (S > 1)
                                                                        E = v(
                                                                            t,
                                                                            e,
                                                                            k,
                                                                            y,
                                                                            0,
                                                                            S,
                                                                            1,
                                                                            i.concat(
                                                                                m
                                                                            ),
                                                                            w,
                                                                            0,
                                                                            0,
                                                                            1,
                                                                            0,
                                                                            0,
                                                                            u,
                                                                            p,
                                                                            d
                                                                        );
                                                                    else {
                                                                        var A = n(
                                                                                x,
                                                                                _,
                                                                                w
                                                                            ),
                                                                            T = r(
                                                                                x,
                                                                                'IARDX',
                                                                                _
                                                                            ),
                                                                            C = r(
                                                                                x,
                                                                                'IARDY',
                                                                                _
                                                                            );
                                                                        E = b(
                                                                            k,
                                                                            y,
                                                                            u,
                                                                            A <
                                                                            i.length
                                                                                ? i[
                                                                                      A
                                                                                  ]
                                                                                : m[
                                                                                      A -
                                                                                          i.length
                                                                                  ],
                                                                            T,
                                                                            C,
                                                                            !1,
                                                                            p,
                                                                            d
                                                                        );
                                                                    }
                                                                } else
                                                                    E = g(
                                                                        !1,
                                                                        k,
                                                                        y,
                                                                        f,
                                                                        !1,
                                                                        null,
                                                                        h,
                                                                        d
                                                                    );
                                                                m.push(E);
                                                            }
                                                        }
                                                        for (
                                                            var M = [],
                                                                P = [],
                                                                L = !1,
                                                                O =
                                                                    i.length +
                                                                    a;
                                                            P.length < O;

                                                        ) {
                                                            for (
                                                                var R = r(
                                                                    x,
                                                                    'IAEX',
                                                                    _
                                                                );
                                                                R--;

                                                            )
                                                                P.push(L);
                                                            L = !L;
                                                        }
                                                        for (
                                                            var B = 0,
                                                                D = i.length;
                                                            B < D;
                                                            B++
                                                        )
                                                            P[B] &&
                                                                M.push(i[B]);
                                                        for (
                                                            var z = 0;
                                                            z < a;
                                                            B++, z++
                                                        )
                                                            P[B] &&
                                                                M.push(m[z]);
                                                        return M;
                                                    })(
                                                        t.huffman,
                                                        t.refinement,
                                                        u,
                                                        t.numberOfNewSymbols,
                                                        t.numberOfExportedSymbols,
                                                        0,
                                                        t.template,
                                                        t.at,
                                                        t.refinementTemplate,
                                                        t.refinementAt,
                                                        m
                                                    );
                                                },
                                                onImmediateTextRegion: function(
                                                    t,
                                                    i,
                                                    r,
                                                    n,
                                                    a
                                                ) {
                                                    for (
                                                        var s = t.info,
                                                            l = this.symbols,
                                                            f = [],
                                                            h = 0,
                                                            c = i.length;
                                                        h < c;
                                                        h++
                                                    )
                                                        f = f.concat(l[i[h]]);
                                                    var u = o(f.length),
                                                        p = new e(r, n, a),
                                                        d = v(
                                                            t.huffman,
                                                            t.refinement,
                                                            s.width,
                                                            s.height,
                                                            t.defaultPixelValue,
                                                            t.numberOfSymbolInstances,
                                                            t.stripSize,
                                                            f,
                                                            u,
                                                            t.transposed,
                                                            t.dsOffset,
                                                            t.referenceCorner,
                                                            t.combinationOperator,
                                                            0,
                                                            t.refinementTemplate,
                                                            t.refinementAt,
                                                            p
                                                        );
                                                    this.drawBitmap(s, d);
                                                },
                                                onImmediateLosslessTextRegion: function() {
                                                    this.onImmediateTextRegion.apply(
                                                        this,
                                                        arguments
                                                    );
                                                }
                                            }),
                                            (S.prototype = {
                                                parseChunks: function(t) {
                                                    return (function(t) {
                                                        for (
                                                            var e = new I(),
                                                                i = 0,
                                                                r = t.length;
                                                            i < r;
                                                            i++
                                                        ) {
                                                            var n = t[i];
                                                            E(
                                                                w(
                                                                    {},
                                                                    n.data,
                                                                    n.start,
                                                                    n.end
                                                                ),
                                                                e
                                                            );
                                                        }
                                                        return e;
                                                    })(t);
                                                }
                                            }),
                                            S
                                        );
                                    })();
                                function o(t) {
                                    for (var e = 1, i = 0; t > e; )
                                        (e <<= 1), i++;
                                    return i;
                                }
                                function s(t, e) {
                                    return (t[e] << 24) >> 24;
                                }
                                function l(t, e) {
                                    return (t[e] << 8) | t[e + 1];
                                }
                                function f(t, e) {
                                    return (
                                        ((t[e] << 24) |
                                            (t[e + 1] << 16) |
                                            (t[e + 2] << 8) |
                                            t[e + 3]) >>>
                                        0
                                    );
                                }
                                function h(t, e, i) {
                                    return (
                                        Object.defineProperty(t, e, {
                                            value: i,
                                            enumerable: !0,
                                            configurable: !0,
                                            writable: !1
                                        }),
                                        i
                                    );
                                }
                                var c = function() {
                                        throw (console.error.apply(
                                            console,
                                            arguments
                                        ),
                                        new Error(
                                            'PDFJS error: ' + arguments[0]
                                        ));
                                    },
                                    u = function() {
                                        console.warn.apply(console, arguments);
                                    },
                                    p = function() {
                                        console.info.apply(console, arguments);
                                    };
                                (n.prototype.parse = function(t) {
                                    var e = 0,
                                        i = t.length;
                                    (151 === t[e] &&
                                        74 === t[e + 1] &&
                                        66 === t[e + 2] &&
                                        50 === t[e + 3] &&
                                        13 === t[e + 4] &&
                                        10 === t[e + 5] &&
                                        26 === t[e + 6] &&
                                        10 === t[e + 7]) ||
                                        c('JBIG2 error: invalid header');
                                    var r = {};
                                    e += 8;
                                    var n = t[e++];
                                    (r.randomAccess = !(1 & n)),
                                        2 & n ||
                                            ((r.numberOfPages = f(t, e)),
                                            (e += 4));
                                    for (
                                        var a = this.parseChunks([
                                                { data: t, start: e, end: i }
                                            ]),
                                            o = a.currentPageInfo.width,
                                            s = a.currentPageInfo.height,
                                            l = a.buffer,
                                            h = ((t = new Uint8Array(o * s)),
                                            0),
                                            u = 0,
                                            p = 0;
                                        p < s;
                                        p++
                                    )
                                        for (var d, m = 0, g = 0; g < o; g++)
                                            m || ((m = 128), (d = l[u++])),
                                                (t[h++] = d & m ? 0 : 255),
                                                (m >>= 1);
                                    (this.width = o),
                                        (this.height = s),
                                        (this.data = t);
                                }),
                                    (t.JpegImage = e),
                                    (t.JpxImage = r),
                                    (t.Jbig2Image = n);
                            })(r || (r = {}));
                            var o = r.JpegImage,
                                s = r.JpxImage,
                                l = r.Jbig2Image;
                            'object' === (void 0 === i ? 'undefined' : a(i)) &&
                                (e.exports = {
                                    JpegImage: n,
                                    JpegDecoder: o,
                                    JpxDecoder: s,
                                    Jbig2Decoder: l
                                });
                        },
                        {}
                    ],
                    45: [
                        function(t, e, i) {
                            (function(i) {
                                var r = t('xhr'),
                                    n = function() {},
                                    a = t('parse-bmfont-ascii'),
                                    o = t('parse-bmfont-xml'),
                                    s = t('parse-bmfont-binary'),
                                    l = t('./lib/is-binary'),
                                    f = t('xtend'),
                                    h =
                                        self.XMLHttpRequest &&
                                        'withCredentials' in
                                            new XMLHttpRequest();
                                e.exports = function(t, e) {
                                    (e = 'function' == typeof e ? e : n),
                                        'string' == typeof t
                                            ? (t = { uri: t })
                                            : t || (t = {}),
                                        t.binary &&
                                            (t = (function(t) {
                                                if (h)
                                                    return f(t, {
                                                        responseType:
                                                            'arraybuffer'
                                                    });
                                                if (
                                                    void 0 ===
                                                    self.XMLHttpRequest
                                                )
                                                    throw new Error(
                                                        'your browser does not support XHR loading'
                                                    );
                                                var e = new self.XMLHttpRequest();
                                                return (
                                                    e.overrideMimeType(
                                                        'text/plain; charset=x-user-defined'
                                                    ),
                                                    f({ xhr: e }, t)
                                                );
                                            })(t)),
                                        r(t, function(r, f, h) {
                                            if (r) return e(r);
                                            if (!/^2/.test(f.statusCode))
                                                return e(
                                                    new Error(
                                                        'http status code: ' +
                                                            f.statusCode
                                                    )
                                                );
                                            if (!h)
                                                return e(
                                                    new Error('no body result')
                                                );
                                            var c,
                                                u = !1;
                                            if (
                                                (function(t) {
                                                    return (
                                                        '[object ArrayBuffer]' ===
                                                        Object.prototype.toString.call(
                                                            t
                                                        )
                                                    );
                                                })(h)
                                            ) {
                                                var p = new Uint8Array(h);
                                                h = new i(p, 'binary');
                                            }
                                            l(h) &&
                                                ((u = !0),
                                                'string' == typeof h &&
                                                    (h = new i(h, 'binary'))),
                                                u ||
                                                    (i.isBuffer(h) &&
                                                        (h = h.toString(
                                                            t.encoding
                                                        )),
                                                    (h = h.trim()));
                                            try {
                                                var d =
                                                    f.headers['content-type'];
                                                c = u
                                                    ? s(h)
                                                    : /json/.test(d) ||
                                                      '{' === h.charAt(0)
                                                        ? JSON.parse(h)
                                                        : /xml/.test(d) ||
                                                          '<' === h.charAt(0)
                                                            ? o(h)
                                                            : a(h);
                                            } catch (t) {
                                                e(
                                                    new Error(
                                                        'error parsing font ' +
                                                            t.message
                                                    )
                                                ),
                                                    (e = n);
                                            }
                                            e(null, c);
                                        });
                                };
                            }.call(this, t('buffer').Buffer));
                        },
                        {
                            './lib/is-binary': 46,
                            buffer: 17,
                            'parse-bmfont-ascii': 69,
                            'parse-bmfont-binary': 70,
                            'parse-bmfont-xml': 71,
                            xhr: 135,
                            xtend: 137
                        }
                    ],
                    46: [
                        function(t, e, i) {
                            (function(i) {
                                var r = t('buffer-equal'),
                                    n = new i([66, 77, 70, 3]);
                                e.exports = function(t) {
                                    return 'string' == typeof t
                                        ? 'BMF' === t.substring(0, 3)
                                        : t.length > 4 && r(t.slice(0, 4), n);
                                };
                            }.call(this, t('buffer').Buffer));
                        },
                        { buffer: 17, 'buffer-equal': 16 }
                    ],
                    47: [
                        function(t, e, i) {
                            function r() {
                                (this._types = Object.create(null)),
                                    (this._extensions = Object.create(null));
                                for (var t = 0; t < arguments.length; t++)
                                    this.define(arguments[t]);
                            }
                            (r.prototype.define = function(t, e) {
                                for (var i in t) {
                                    for (
                                        var r = t[i], n = 0;
                                        n < r.length;
                                        n++
                                    ) {
                                        if ('*' != (a = r[n])[0]) {
                                            if (!e && a in this._types)
                                                throw new Error(
                                                    'Attempt to change mapping for "' +
                                                        a +
                                                        '" extension from "' +
                                                        this._types[a] +
                                                        '" to "' +
                                                        i +
                                                        '". Pass `force=true` to allow this, otherwise remove "' +
                                                        a +
                                                        '" from the list of extensions for "' +
                                                        i +
                                                        '".'
                                                );
                                            this._types[a] = i;
                                        }
                                    }
                                    if (e || !this._extensions[i]) {
                                        var a = r[0];
                                        this._extensions[i] =
                                            '*' != a[0] ? a : a.substr(1);
                                    }
                                }
                            }),
                                (r.prototype.getType = function(t) {
                                    var e = (t = String(t))
                                            .replace(/^.*[/\\]/, '')
                                            .toLowerCase(),
                                        i = e
                                            .replace(/^.*\./, '')
                                            .toLowerCase(),
                                        r = e.length < t.length;
                                    return (
                                        ((i.length < e.length - 1 || !r) &&
                                            this._types[i]) ||
                                        null
                                    );
                                }),
                                (r.prototype.getExtension = function(t) {
                                    return (
                                        ((t =
                                            /^\s*([^;\s]*)/.test(t) &&
                                            RegExp.$1) &&
                                            this._extensions[
                                                t.toLowerCase()
                                            ]) ||
                                        null
                                    );
                                }),
                                (e.exports = r);
                        },
                        {}
                    ],
                    48: [
                        function(t, e, i) {
                            var r = t('./Mime');
                            e.exports = new r(
                                t('./types/standard'),
                                t('./types/other')
                            );
                        },
                        {
                            './Mime': 47,
                            './types/other': 49,
                            './types/standard': 50
                        }
                    ],
                    49: [
                        function(t, e, i) {
                            e.exports = {
                                'application/prs.cww': ['cww'],
                                'application/vnd.3gpp.pic-bw-large': ['plb'],
                                'application/vnd.3gpp.pic-bw-small': ['psb'],
                                'application/vnd.3gpp.pic-bw-var': ['pvb'],
                                'application/vnd.3gpp2.tcap': ['tcap'],
                                'application/vnd.3m.post-it-notes': ['pwn'],
                                'application/vnd.accpac.simply.aso': ['aso'],
                                'application/vnd.accpac.simply.imp': ['imp'],
                                'application/vnd.acucobol': ['acu'],
                                'application/vnd.acucorp': ['atc', 'acutc'],
                                'application/vnd.adobe.air-application-installer-package+zip': [
                                    'air'
                                ],
                                'application/vnd.adobe.formscentral.fcdt': [
                                    'fcdt'
                                ],
                                'application/vnd.adobe.fxp': ['fxp', 'fxpl'],
                                'application/vnd.adobe.xdp+xml': ['xdp'],
                                'application/vnd.adobe.xfdf': ['xfdf'],
                                'application/vnd.ahead.space': ['ahead'],
                                'application/vnd.airzip.filesecure.azf': [
                                    'azf'
                                ],
                                'application/vnd.airzip.filesecure.azs': [
                                    'azs'
                                ],
                                'application/vnd.amazon.ebook': ['azw'],
                                'application/vnd.americandynamics.acc': ['acc'],
                                'application/vnd.amiga.ami': ['ami'],
                                'application/vnd.android.package-archive': [
                                    'apk'
                                ],
                                'application/vnd.anser-web-certificate-issue-initiation': [
                                    'cii'
                                ],
                                'application/vnd.anser-web-funds-transfer-initiation': [
                                    'fti'
                                ],
                                'application/vnd.antix.game-component': ['atx'],
                                'application/vnd.apple.installer+xml': ['mpkg'],
                                'application/vnd.apple.mpegurl': ['m3u8'],
                                'application/vnd.apple.pkpass': ['pkpass'],
                                'application/vnd.aristanetworks.swi': ['swi'],
                                'application/vnd.astraea-software.iota': [
                                    'iota'
                                ],
                                'application/vnd.audiograph': ['aep'],
                                'application/vnd.blueice.multipass': ['mpm'],
                                'application/vnd.bmi': ['bmi'],
                                'application/vnd.businessobjects': ['rep'],
                                'application/vnd.chemdraw+xml': ['cdxml'],
                                'application/vnd.chipnuts.karaoke-mmd': ['mmd'],
                                'application/vnd.cinderella': ['cdy'],
                                'application/vnd.claymore': ['cla'],
                                'application/vnd.cloanto.rp9': ['rp9'],
                                'application/vnd.clonk.c4group': [
                                    'c4g',
                                    'c4d',
                                    'c4f',
                                    'c4p',
                                    'c4u'
                                ],
                                'application/vnd.cluetrust.cartomobile-config': [
                                    'c11amc'
                                ],
                                'application/vnd.cluetrust.cartomobile-config-pkg': [
                                    'c11amz'
                                ],
                                'application/vnd.commonspace': ['csp'],
                                'application/vnd.contact.cmsg': ['cdbcmsg'],
                                'application/vnd.cosmocaller': ['cmc'],
                                'application/vnd.crick.clicker': ['clkx'],
                                'application/vnd.crick.clicker.keyboard': [
                                    'clkk'
                                ],
                                'application/vnd.crick.clicker.palette': [
                                    'clkp'
                                ],
                                'application/vnd.crick.clicker.template': [
                                    'clkt'
                                ],
                                'application/vnd.crick.clicker.wordbank': [
                                    'clkw'
                                ],
                                'application/vnd.criticaltools.wbs+xml': [
                                    'wbs'
                                ],
                                'application/vnd.ctc-posml': ['pml'],
                                'application/vnd.cups-ppd': ['ppd'],
                                'application/vnd.curl.car': ['car'],
                                'application/vnd.curl.pcurl': ['pcurl'],
                                'application/vnd.dart': ['dart'],
                                'application/vnd.data-vision.rdz': ['rdz'],
                                'application/vnd.dece.data': [
                                    'uvf',
                                    'uvvf',
                                    'uvd',
                                    'uvvd'
                                ],
                                'application/vnd.dece.ttml+xml': [
                                    'uvt',
                                    'uvvt'
                                ],
                                'application/vnd.dece.unspecified': [
                                    'uvx',
                                    'uvvx'
                                ],
                                'application/vnd.dece.zip': ['uvz', 'uvvz'],
                                'application/vnd.denovo.fcselayout-link': [
                                    'fe_launch'
                                ],
                                'application/vnd.dna': ['dna'],
                                'application/vnd.dolby.mlp': ['mlp'],
                                'application/vnd.dpgraph': ['dpg'],
                                'application/vnd.dreamfactory': ['dfac'],
                                'application/vnd.ds-keypoint': ['kpxx'],
                                'application/vnd.dvb.ait': ['ait'],
                                'application/vnd.dvb.service': ['svc'],
                                'application/vnd.dynageo': ['geo'],
                                'application/vnd.ecowin.chart': ['mag'],
                                'application/vnd.enliven': ['nml'],
                                'application/vnd.epson.esf': ['esf'],
                                'application/vnd.epson.msf': ['msf'],
                                'application/vnd.epson.quickanime': ['qam'],
                                'application/vnd.epson.salt': ['slt'],
                                'application/vnd.epson.ssf': ['ssf'],
                                'application/vnd.eszigno3+xml': ['es3', 'et3'],
                                'application/vnd.ezpix-album': ['ez2'],
                                'application/vnd.ezpix-package': ['ez3'],
                                'application/vnd.fdf': ['fdf'],
                                'application/vnd.fdsn.mseed': ['mseed'],
                                'application/vnd.fdsn.seed': [
                                    'seed',
                                    'dataless'
                                ],
                                'application/vnd.flographit': ['gph'],
                                'application/vnd.fluxtime.clip': ['ftc'],
                                'application/vnd.framemaker': [
                                    'fm',
                                    'frame',
                                    'maker',
                                    'book'
                                ],
                                'application/vnd.frogans.fnc': ['fnc'],
                                'application/vnd.frogans.ltf': ['ltf'],
                                'application/vnd.fsc.weblaunch': ['fsc'],
                                'application/vnd.fujitsu.oasys': ['oas'],
                                'application/vnd.fujitsu.oasys2': ['oa2'],
                                'application/vnd.fujitsu.oasys3': ['oa3'],
                                'application/vnd.fujitsu.oasysgp': ['fg5'],
                                'application/vnd.fujitsu.oasysprs': ['bh2'],
                                'application/vnd.fujixerox.ddd': ['ddd'],
                                'application/vnd.fujixerox.docuworks': ['xdw'],
                                'application/vnd.fujixerox.docuworks.binder': [
                                    'xbd'
                                ],
                                'application/vnd.fuzzysheet': ['fzs'],
                                'application/vnd.genomatix.tuxedo': ['txd'],
                                'application/vnd.geogebra.file': ['ggb'],
                                'application/vnd.geogebra.tool': ['ggt'],
                                'application/vnd.geometry-explorer': [
                                    'gex',
                                    'gre'
                                ],
                                'application/vnd.geonext': ['gxt'],
                                'application/vnd.geoplan': ['g2w'],
                                'application/vnd.geospace': ['g3w'],
                                'application/vnd.gmx': ['gmx'],
                                'application/vnd.google-apps.document': [
                                    'gdoc'
                                ],
                                'application/vnd.google-apps.presentation': [
                                    'gslides'
                                ],
                                'application/vnd.google-apps.spreadsheet': [
                                    'gsheet'
                                ],
                                'application/vnd.google-earth.kml+xml': ['kml'],
                                'application/vnd.google-earth.kmz': ['kmz'],
                                'application/vnd.grafeq': ['gqf', 'gqs'],
                                'application/vnd.groove-account': ['gac'],
                                'application/vnd.groove-help': ['ghf'],
                                'application/vnd.groove-identity-message': [
                                    'gim'
                                ],
                                'application/vnd.groove-injector': ['grv'],
                                'application/vnd.groove-tool-message': ['gtm'],
                                'application/vnd.groove-tool-template': ['tpl'],
                                'application/vnd.groove-vcard': ['vcg'],
                                'application/vnd.hal+xml': ['hal'],
                                'application/vnd.handheld-entertainment+xml': [
                                    'zmm'
                                ],
                                'application/vnd.hbci': ['hbci'],
                                'application/vnd.hhe.lesson-player': ['les'],
                                'application/vnd.hp-hpgl': ['hpgl'],
                                'application/vnd.hp-hpid': ['hpid'],
                                'application/vnd.hp-hps': ['hps'],
                                'application/vnd.hp-jlyt': ['jlt'],
                                'application/vnd.hp-pcl': ['pcl'],
                                'application/vnd.hp-pclxl': ['pclxl'],
                                'application/vnd.hydrostatix.sof-data': [
                                    'sfd-hdstx'
                                ],
                                'application/vnd.ibm.minipay': ['mpy'],
                                'application/vnd.ibm.modcap': [
                                    'afp',
                                    'listafp',
                                    'list3820'
                                ],
                                'application/vnd.ibm.rights-management': [
                                    'irm'
                                ],
                                'application/vnd.ibm.secure-container': ['sc'],
                                'application/vnd.iccprofile': ['icc', 'icm'],
                                'application/vnd.igloader': ['igl'],
                                'application/vnd.immervision-ivp': ['ivp'],
                                'application/vnd.immervision-ivu': ['ivu'],
                                'application/vnd.insors.igm': ['igm'],
                                'application/vnd.intercon.formnet': [
                                    'xpw',
                                    'xpx'
                                ],
                                'application/vnd.intergeo': ['i2g'],
                                'application/vnd.intu.qbo': ['qbo'],
                                'application/vnd.intu.qfx': ['qfx'],
                                'application/vnd.ipunplugged.rcprofile': [
                                    'rcprofile'
                                ],
                                'application/vnd.irepository.package+xml': [
                                    'irp'
                                ],
                                'application/vnd.is-xpr': ['xpr'],
                                'application/vnd.isac.fcs': ['fcs'],
                                'application/vnd.jam': ['jam'],
                                'application/vnd.jcp.javame.midlet-rms': [
                                    'rms'
                                ],
                                'application/vnd.jisp': ['jisp'],
                                'application/vnd.joost.joda-archive': ['joda'],
                                'application/vnd.kahootz': ['ktz', 'ktr'],
                                'application/vnd.kde.karbon': ['karbon'],
                                'application/vnd.kde.kchart': ['chrt'],
                                'application/vnd.kde.kformula': ['kfo'],
                                'application/vnd.kde.kivio': ['flw'],
                                'application/vnd.kde.kontour': ['kon'],
                                'application/vnd.kde.kpresenter': [
                                    'kpr',
                                    'kpt'
                                ],
                                'application/vnd.kde.kspread': ['ksp'],
                                'application/vnd.kde.kword': ['kwd', 'kwt'],
                                'application/vnd.kenameaapp': ['htke'],
                                'application/vnd.kidspiration': ['kia'],
                                'application/vnd.kinar': ['kne', 'knp'],
                                'application/vnd.koan': [
                                    'skp',
                                    'skd',
                                    'skt',
                                    'skm'
                                ],
                                'application/vnd.kodak-descriptor': ['sse'],
                                'application/vnd.las.las+xml': ['lasxml'],
                                'application/vnd.llamagraphics.life-balance.desktop': [
                                    'lbd'
                                ],
                                'application/vnd.llamagraphics.life-balance.exchange+xml': [
                                    'lbe'
                                ],
                                'application/vnd.lotus-1-2-3': ['123'],
                                'application/vnd.lotus-approach': ['apr'],
                                'application/vnd.lotus-freelance': ['pre'],
                                'application/vnd.lotus-notes': ['nsf'],
                                'application/vnd.lotus-organizer': ['org'],
                                'application/vnd.lotus-screencam': ['scm'],
                                'application/vnd.lotus-wordpro': ['lwp'],
                                'application/vnd.macports.portpkg': ['portpkg'],
                                'application/vnd.mcd': ['mcd'],
                                'application/vnd.medcalcdata': ['mc1'],
                                'application/vnd.mediastation.cdkey': ['cdkey'],
                                'application/vnd.mfer': ['mwf'],
                                'application/vnd.mfmp': ['mfm'],
                                'application/vnd.micrografx.flo': ['flo'],
                                'application/vnd.micrografx.igx': ['igx'],
                                'application/vnd.mif': ['mif'],
                                'application/vnd.mobius.daf': ['daf'],
                                'application/vnd.mobius.dis': ['dis'],
                                'application/vnd.mobius.mbk': ['mbk'],
                                'application/vnd.mobius.mqy': ['mqy'],
                                'application/vnd.mobius.msl': ['msl'],
                                'application/vnd.mobius.plc': ['plc'],
                                'application/vnd.mobius.txf': ['txf'],
                                'application/vnd.mophun.application': ['mpn'],
                                'application/vnd.mophun.certificate': ['mpc'],
                                'application/vnd.mozilla.xul+xml': ['xul'],
                                'application/vnd.ms-artgalry': ['cil'],
                                'application/vnd.ms-cab-compressed': ['cab'],
                                'application/vnd.ms-excel': [
                                    'xls',
                                    'xlm',
                                    'xla',
                                    'xlc',
                                    'xlt',
                                    'xlw'
                                ],
                                'application/vnd.ms-excel.addin.macroenabled.12': [
                                    'xlam'
                                ],
                                'application/vnd.ms-excel.sheet.binary.macroenabled.12': [
                                    'xlsb'
                                ],
                                'application/vnd.ms-excel.sheet.macroenabled.12': [
                                    'xlsm'
                                ],
                                'application/vnd.ms-excel.template.macroenabled.12': [
                                    'xltm'
                                ],
                                'application/vnd.ms-fontobject': ['eot'],
                                'application/vnd.ms-htmlhelp': ['chm'],
                                'application/vnd.ms-ims': ['ims'],
                                'application/vnd.ms-lrm': ['lrm'],
                                'application/vnd.ms-officetheme': ['thmx'],
                                'application/vnd.ms-outlook': ['msg'],
                                'application/vnd.ms-pki.seccat': ['cat'],
                                'application/vnd.ms-pki.stl': ['stl'],
                                'application/vnd.ms-powerpoint': [
                                    'ppt',
                                    'pps',
                                    'pot'
                                ],
                                'application/vnd.ms-powerpoint.addin.macroenabled.12': [
                                    'ppam'
                                ],
                                'application/vnd.ms-powerpoint.presentation.macroenabled.12': [
                                    'pptm'
                                ],
                                'application/vnd.ms-powerpoint.slide.macroenabled.12': [
                                    'sldm'
                                ],
                                'application/vnd.ms-powerpoint.slideshow.macroenabled.12': [
                                    'ppsm'
                                ],
                                'application/vnd.ms-powerpoint.template.macroenabled.12': [
                                    'potm'
                                ],
                                'application/vnd.ms-project': ['mpp', 'mpt'],
                                'application/vnd.ms-word.document.macroenabled.12': [
                                    'docm'
                                ],
                                'application/vnd.ms-word.template.macroenabled.12': [
                                    'dotm'
                                ],
                                'application/vnd.ms-works': [
                                    'wps',
                                    'wks',
                                    'wcm',
                                    'wdb'
                                ],
                                'application/vnd.ms-wpl': ['wpl'],
                                'application/vnd.ms-xpsdocument': ['xps'],
                                'application/vnd.mseq': ['mseq'],
                                'application/vnd.musician': ['mus'],
                                'application/vnd.muvee.style': ['msty'],
                                'application/vnd.mynfc': ['taglet'],
                                'application/vnd.neurolanguage.nlu': ['nlu'],
                                'application/vnd.nitf': ['ntf', 'nitf'],
                                'application/vnd.noblenet-directory': ['nnd'],
                                'application/vnd.noblenet-sealer': ['nns'],
                                'application/vnd.noblenet-web': ['nnw'],
                                'application/vnd.nokia.n-gage.data': ['ngdat'],
                                'application/vnd.nokia.n-gage.symbian.install': [
                                    'n-gage'
                                ],
                                'application/vnd.nokia.radio-preset': ['rpst'],
                                'application/vnd.nokia.radio-presets': ['rpss'],
                                'application/vnd.novadigm.edm': ['edm'],
                                'application/vnd.novadigm.edx': ['edx'],
                                'application/vnd.novadigm.ext': ['ext'],
                                'application/vnd.oasis.opendocument.chart': [
                                    'odc'
                                ],
                                'application/vnd.oasis.opendocument.chart-template': [
                                    'otc'
                                ],
                                'application/vnd.oasis.opendocument.database': [
                                    'odb'
                                ],
                                'application/vnd.oasis.opendocument.formula': [
                                    'odf'
                                ],
                                'application/vnd.oasis.opendocument.formula-template': [
                                    'odft'
                                ],
                                'application/vnd.oasis.opendocument.graphics': [
                                    'odg'
                                ],
                                'application/vnd.oasis.opendocument.graphics-template': [
                                    'otg'
                                ],
                                'application/vnd.oasis.opendocument.image': [
                                    'odi'
                                ],
                                'application/vnd.oasis.opendocument.image-template': [
                                    'oti'
                                ],
                                'application/vnd.oasis.opendocument.presentation': [
                                    'odp'
                                ],
                                'application/vnd.oasis.opendocument.presentation-template': [
                                    'otp'
                                ],
                                'application/vnd.oasis.opendocument.spreadsheet': [
                                    'ods'
                                ],
                                'application/vnd.oasis.opendocument.spreadsheet-template': [
                                    'ots'
                                ],
                                'application/vnd.oasis.opendocument.text': [
                                    'odt'
                                ],
                                'application/vnd.oasis.opendocument.text-master': [
                                    'odm'
                                ],
                                'application/vnd.oasis.opendocument.text-template': [
                                    'ott'
                                ],
                                'application/vnd.oasis.opendocument.text-web': [
                                    'oth'
                                ],
                                'application/vnd.olpc-sugar': ['xo'],
                                'application/vnd.oma.dd2+xml': ['dd2'],
                                'application/vnd.openofficeorg.extension': [
                                    'oxt'
                                ],
                                'application/vnd.openxmlformats-officedocument.presentationml.presentation': [
                                    'pptx'
                                ],
                                'application/vnd.openxmlformats-officedocument.presentationml.slide': [
                                    'sldx'
                                ],
                                'application/vnd.openxmlformats-officedocument.presentationml.slideshow': [
                                    'ppsx'
                                ],
                                'application/vnd.openxmlformats-officedocument.presentationml.template': [
                                    'potx'
                                ],
                                'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': [
                                    'xlsx'
                                ],
                                'application/vnd.openxmlformats-officedocument.spreadsheetml.template': [
                                    'xltx'
                                ],
                                'application/vnd.openxmlformats-officedocument.wordprocessingml.document': [
                                    'docx'
                                ],
                                'application/vnd.openxmlformats-officedocument.wordprocessingml.template': [
                                    'dotx'
                                ],
                                'application/vnd.osgeo.mapguide.package': [
                                    'mgp'
                                ],
                                'application/vnd.osgi.dp': ['dp'],
                                'application/vnd.osgi.subsystem': ['esa'],
                                'application/vnd.palm': ['pdb', 'pqa', 'oprc'],
                                'application/vnd.pawaafile': ['paw'],
                                'application/vnd.pg.format': ['str'],
                                'application/vnd.pg.osasli': ['ei6'],
                                'application/vnd.picsel': ['efif'],
                                'application/vnd.pmi.widget': ['wg'],
                                'application/vnd.pocketlearn': ['plf'],
                                'application/vnd.powerbuilder6': ['pbd'],
                                'application/vnd.previewsystems.box': ['box'],
                                'application/vnd.proteus.magazine': ['mgz'],
                                'application/vnd.publishare-delta-tree': [
                                    'qps'
                                ],
                                'application/vnd.pvi.ptid1': ['ptid'],
                                'application/vnd.quark.quarkxpress': [
                                    'qxd',
                                    'qxt',
                                    'qwd',
                                    'qwt',
                                    'qxl',
                                    'qxb'
                                ],
                                'application/vnd.realvnc.bed': ['bed'],
                                'application/vnd.recordare.musicxml': ['mxl'],
                                'application/vnd.recordare.musicxml+xml': [
                                    'musicxml'
                                ],
                                'application/vnd.rig.cryptonote': [
                                    'cryptonote'
                                ],
                                'application/vnd.rim.cod': ['cod'],
                                'application/vnd.rn-realmedia': ['rm'],
                                'application/vnd.rn-realmedia-vbr': ['rmvb'],
                                'application/vnd.route66.link66+xml': [
                                    'link66'
                                ],
                                'application/vnd.sailingtracker.track': ['st'],
                                'application/vnd.seemail': ['see'],
                                'application/vnd.sema': ['sema'],
                                'application/vnd.semd': ['semd'],
                                'application/vnd.semf': ['semf'],
                                'application/vnd.shana.informed.formdata': [
                                    'ifm'
                                ],
                                'application/vnd.shana.informed.formtemplate': [
                                    'itp'
                                ],
                                'application/vnd.shana.informed.interchange': [
                                    'iif'
                                ],
                                'application/vnd.shana.informed.package': [
                                    'ipk'
                                ],
                                'application/vnd.simtech-mindmapper': [
                                    'twd',
                                    'twds'
                                ],
                                'application/vnd.smaf': ['mmf'],
                                'application/vnd.smart.teacher': ['teacher'],
                                'application/vnd.solent.sdkm+xml': [
                                    'sdkm',
                                    'sdkd'
                                ],
                                'application/vnd.spotfire.dxp': ['dxp'],
                                'application/vnd.spotfire.sfs': ['sfs'],
                                'application/vnd.stardivision.calc': ['sdc'],
                                'application/vnd.stardivision.draw': ['sda'],
                                'application/vnd.stardivision.impress': ['sdd'],
                                'application/vnd.stardivision.math': ['smf'],
                                'application/vnd.stardivision.writer': [
                                    'sdw',
                                    'vor'
                                ],
                                'application/vnd.stardivision.writer-global': [
                                    'sgl'
                                ],
                                'application/vnd.stepmania.package': ['smzip'],
                                'application/vnd.stepmania.stepchart': ['sm'],
                                'application/vnd.sun.wadl+xml': ['wadl'],
                                'application/vnd.sun.xml.calc': ['sxc'],
                                'application/vnd.sun.xml.calc.template': [
                                    'stc'
                                ],
                                'application/vnd.sun.xml.draw': ['sxd'],
                                'application/vnd.sun.xml.draw.template': [
                                    'std'
                                ],
                                'application/vnd.sun.xml.impress': ['sxi'],
                                'application/vnd.sun.xml.impress.template': [
                                    'sti'
                                ],
                                'application/vnd.sun.xml.math': ['sxm'],
                                'application/vnd.sun.xml.writer': ['sxw'],
                                'application/vnd.sun.xml.writer.global': [
                                    'sxg'
                                ],
                                'application/vnd.sun.xml.writer.template': [
                                    'stw'
                                ],
                                'application/vnd.sus-calendar': ['sus', 'susp'],
                                'application/vnd.svd': ['svd'],
                                'application/vnd.symbian.install': [
                                    'sis',
                                    'sisx'
                                ],
                                'application/vnd.syncml+xml': ['xsm'],
                                'application/vnd.syncml.dm+wbxml': ['bdm'],
                                'application/vnd.syncml.dm+xml': ['xdm'],
                                'application/vnd.tao.intent-module-archive': [
                                    'tao'
                                ],
                                'application/vnd.tcpdump.pcap': [
                                    'pcap',
                                    'cap',
                                    'dmp'
                                ],
                                'application/vnd.tmobile-livetv': ['tmo'],
                                'application/vnd.trid.tpt': ['tpt'],
                                'application/vnd.triscape.mxs': ['mxs'],
                                'application/vnd.trueapp': ['tra'],
                                'application/vnd.ufdl': ['ufd', 'ufdl'],
                                'application/vnd.uiq.theme': ['utz'],
                                'application/vnd.umajin': ['umj'],
                                'application/vnd.unity': ['unityweb'],
                                'application/vnd.uoml+xml': ['uoml'],
                                'application/vnd.vcx': ['vcx'],
                                'application/vnd.visio': [
                                    'vsd',
                                    'vst',
                                    'vss',
                                    'vsw'
                                ],
                                'application/vnd.visionary': ['vis'],
                                'application/vnd.vsf': ['vsf'],
                                'application/vnd.wap.wbxml': ['wbxml'],
                                'application/vnd.wap.wmlc': ['wmlc'],
                                'application/vnd.wap.wmlscriptc': ['wmlsc'],
                                'application/vnd.webturbo': ['wtb'],
                                'application/vnd.wolfram.player': ['nbp'],
                                'application/vnd.wordperfect': ['wpd'],
                                'application/vnd.wqd': ['wqd'],
                                'application/vnd.wt.stf': ['stf'],
                                'application/vnd.xara': ['xar'],
                                'application/vnd.xfdl': ['xfdl'],
                                'application/vnd.yamaha.hv-dic': ['hvd'],
                                'application/vnd.yamaha.hv-script': ['hvs'],
                                'application/vnd.yamaha.hv-voice': ['hvp'],
                                'application/vnd.yamaha.openscoreformat': [
                                    'osf'
                                ],
                                'application/vnd.yamaha.openscoreformat.osfpvg+xml': [
                                    'osfpvg'
                                ],
                                'application/vnd.yamaha.smaf-audio': ['saf'],
                                'application/vnd.yamaha.smaf-phrase': ['spf'],
                                'application/vnd.yellowriver-custom-menu': [
                                    'cmp'
                                ],
                                'application/vnd.zul': ['zir', 'zirz'],
                                'application/vnd.zzazz.deck+xml': ['zaz'],
                                'application/x-7z-compressed': ['7z'],
                                'application/x-abiword': ['abw'],
                                'application/x-ace-compressed': ['ace'],
                                'application/x-apple-diskimage': ['*dmg'],
                                'application/x-arj': ['arj'],
                                'application/x-authorware-bin': [
                                    'aab',
                                    'x32',
                                    'u32',
                                    'vox'
                                ],
                                'application/x-authorware-map': ['aam'],
                                'application/x-authorware-seg': ['aas'],
                                'application/x-bcpio': ['bcpio'],
                                'application/x-bdoc': ['*bdoc'],
                                'application/x-bittorrent': ['torrent'],
                                'application/x-blorb': ['blb', 'blorb'],
                                'application/x-bzip': ['bz'],
                                'application/x-bzip2': ['bz2', 'boz'],
                                'application/x-cbr': [
                                    'cbr',
                                    'cba',
                                    'cbt',
                                    'cbz',
                                    'cb7'
                                ],
                                'application/x-cdlink': ['vcd'],
                                'application/x-cfs-compressed': ['cfs'],
                                'application/x-chat': ['chat'],
                                'application/x-chess-pgn': ['pgn'],
                                'application/x-chrome-extension': ['crx'],
                                'application/x-cocoa': ['cco'],
                                'application/x-conference': ['nsc'],
                                'application/x-cpio': ['cpio'],
                                'application/x-csh': ['csh'],
                                'application/x-debian-package': [
                                    '*deb',
                                    'udeb'
                                ],
                                'application/x-dgc-compressed': ['dgc'],
                                'application/x-director': [
                                    'dir',
                                    'dcr',
                                    'dxr',
                                    'cst',
                                    'cct',
                                    'cxt',
                                    'w3d',
                                    'fgd',
                                    'swa'
                                ],
                                'application/x-doom': ['wad'],
                                'application/x-dtbncx+xml': ['ncx'],
                                'application/x-dtbook+xml': ['dtb'],
                                'application/x-dtbresource+xml': ['res'],
                                'application/x-dvi': ['dvi'],
                                'application/x-envoy': ['evy'],
                                'application/x-eva': ['eva'],
                                'application/x-font-bdf': ['bdf'],
                                'application/x-font-ghostscript': ['gsf'],
                                'application/x-font-linux-psf': ['psf'],
                                'application/x-font-pcf': ['pcf'],
                                'application/x-font-snf': ['snf'],
                                'application/x-font-type1': [
                                    'pfa',
                                    'pfb',
                                    'pfm',
                                    'afm'
                                ],
                                'application/x-freearc': ['arc'],
                                'application/x-futuresplash': ['spl'],
                                'application/x-gca-compressed': ['gca'],
                                'application/x-glulx': ['ulx'],
                                'application/x-gnumeric': ['gnumeric'],
                                'application/x-gramps-xml': ['gramps'],
                                'application/x-gtar': ['gtar'],
                                'application/x-hdf': ['hdf'],
                                'application/x-httpd-php': ['php'],
                                'application/x-install-instructions': [
                                    'install'
                                ],
                                'application/x-iso9660-image': ['*iso'],
                                'application/x-java-archive-diff': ['jardiff'],
                                'application/x-java-jnlp-file': ['jnlp'],
                                'application/x-latex': ['latex'],
                                'application/x-lua-bytecode': ['luac'],
                                'application/x-lzh-compressed': ['lzh', 'lha'],
                                'application/x-makeself': ['run'],
                                'application/x-mie': ['mie'],
                                'application/x-mobipocket-ebook': [
                                    'prc',
                                    'mobi'
                                ],
                                'application/x-ms-application': ['application'],
                                'application/x-ms-shortcut': ['lnk'],
                                'application/x-ms-wmd': ['wmd'],
                                'application/x-ms-wmz': ['wmz'],
                                'application/x-ms-xbap': ['xbap'],
                                'application/x-msaccess': ['mdb'],
                                'application/x-msbinder': ['obd'],
                                'application/x-mscardfile': ['crd'],
                                'application/x-msclip': ['clp'],
                                'application/x-msdos-program': ['*exe'],
                                'application/x-msdownload': [
                                    '*exe',
                                    '*dll',
                                    'com',
                                    'bat',
                                    '*msi'
                                ],
                                'application/x-msmediaview': [
                                    'mvb',
                                    'm13',
                                    'm14'
                                ],
                                'application/x-msmetafile': [
                                    'wmf',
                                    '*wmz',
                                    'emf',
                                    'emz'
                                ],
                                'application/x-msmoney': ['mny'],
                                'application/x-mspublisher': ['pub'],
                                'application/x-msschedule': ['scd'],
                                'application/x-msterminal': ['trm'],
                                'application/x-mswrite': ['wri'],
                                'application/x-netcdf': ['nc', 'cdf'],
                                'application/x-ns-proxy-autoconfig': ['pac'],
                                'application/x-nzb': ['nzb'],
                                'application/x-perl': ['pl', 'pm'],
                                'application/x-pilot': ['*prc', '*pdb'],
                                'application/x-pkcs12': ['p12', 'pfx'],
                                'application/x-pkcs7-certificates': [
                                    'p7b',
                                    'spc'
                                ],
                                'application/x-pkcs7-certreqresp': ['p7r'],
                                'application/x-rar-compressed': ['rar'],
                                'application/x-redhat-package-manager': ['rpm'],
                                'application/x-research-info-systems': ['ris'],
                                'application/x-sea': ['sea'],
                                'application/x-sh': ['sh'],
                                'application/x-shar': ['shar'],
                                'application/x-shockwave-flash': ['swf'],
                                'application/x-silverlight-app': ['xap'],
                                'application/x-sql': ['sql'],
                                'application/x-stuffit': ['sit'],
                                'application/x-stuffitx': ['sitx'],
                                'application/x-subrip': ['srt'],
                                'application/x-sv4cpio': ['sv4cpio'],
                                'application/x-sv4crc': ['sv4crc'],
                                'application/x-t3vm-image': ['t3'],
                                'application/x-tads': ['gam'],
                                'application/x-tar': ['tar'],
                                'application/x-tcl': ['tcl', 'tk'],
                                'application/x-tex': ['tex'],
                                'application/x-tex-tfm': ['tfm'],
                                'application/x-texinfo': ['texinfo', 'texi'],
                                'application/x-tgif': ['obj'],
                                'application/x-ustar': ['ustar'],
                                'application/x-virtualbox-hdd': ['hdd'],
                                'application/x-virtualbox-ova': ['ova'],
                                'application/x-virtualbox-ovf': ['ovf'],
                                'application/x-virtualbox-vbox': ['vbox'],
                                'application/x-virtualbox-vbox-extpack': [
                                    'vbox-extpack'
                                ],
                                'application/x-virtualbox-vdi': ['vdi'],
                                'application/x-virtualbox-vhd': ['vhd'],
                                'application/x-virtualbox-vmdk': ['vmdk'],
                                'application/x-wais-source': ['src'],
                                'application/x-web-app-manifest+json': [
                                    'webapp'
                                ],
                                'application/x-x509-ca-cert': [
                                    'der',
                                    'crt',
                                    'pem'
                                ],
                                'application/x-xfig': ['fig'],
                                'application/x-xliff+xml': ['xlf'],
                                'application/x-xpinstall': ['xpi'],
                                'application/x-xz': ['xz'],
                                'application/x-zmachine': [
                                    'z1',
                                    'z2',
                                    'z3',
                                    'z4',
                                    'z5',
                                    'z6',
                                    'z7',
                                    'z8'
                                ],
                                'audio/vnd.dece.audio': ['uva', 'uvva'],
                                'audio/vnd.digital-winds': ['eol'],
                                'audio/vnd.dra': ['dra'],
                                'audio/vnd.dts': ['dts'],
                                'audio/vnd.dts.hd': ['dtshd'],
                                'audio/vnd.lucent.voice': ['lvp'],
                                'audio/vnd.ms-playready.media.pya': ['pya'],
                                'audio/vnd.nuera.ecelp4800': ['ecelp4800'],
                                'audio/vnd.nuera.ecelp7470': ['ecelp7470'],
                                'audio/vnd.nuera.ecelp9600': ['ecelp9600'],
                                'audio/vnd.rip': ['rip'],
                                'audio/x-aac': ['aac'],
                                'audio/x-aiff': ['aif', 'aiff', 'aifc'],
                                'audio/x-caf': ['caf'],
                                'audio/x-flac': ['flac'],
                                'audio/x-m4a': ['*m4a'],
                                'audio/x-matroska': ['mka'],
                                'audio/x-mpegurl': ['m3u'],
                                'audio/x-ms-wax': ['wax'],
                                'audio/x-ms-wma': ['wma'],
                                'audio/x-pn-realaudio': ['ram', 'ra'],
                                'audio/x-pn-realaudio-plugin': ['rmp'],
                                'audio/x-realaudio': ['*ra'],
                                'audio/x-wav': ['*wav'],
                                'chemical/x-cdx': ['cdx'],
                                'chemical/x-cif': ['cif'],
                                'chemical/x-cmdf': ['cmdf'],
                                'chemical/x-cml': ['cml'],
                                'chemical/x-csml': ['csml'],
                                'chemical/x-xyz': ['xyz'],
                                'image/prs.btif': ['btif'],
                                'image/vnd.adobe.photoshop': ['psd'],
                                'image/vnd.dece.graphic': [
                                    'uvi',
                                    'uvvi',
                                    'uvg',
                                    'uvvg'
                                ],
                                'image/vnd.djvu': ['djvu', 'djv'],
                                'image/vnd.dvb.subtitle': ['*sub'],
                                'image/vnd.dwg': ['dwg'],
                                'image/vnd.dxf': ['dxf'],
                                'image/vnd.fastbidsheet': ['fbs'],
                                'image/vnd.fpx': ['fpx'],
                                'image/vnd.fst': ['fst'],
                                'image/vnd.fujixerox.edmics-mmr': ['mmr'],
                                'image/vnd.fujixerox.edmics-rlc': ['rlc'],
                                'image/vnd.ms-modi': ['mdi'],
                                'image/vnd.ms-photo': ['wdp'],
                                'image/vnd.net-fpx': ['npx'],
                                'image/vnd.wap.wbmp': ['wbmp'],
                                'image/vnd.xiff': ['xif'],
                                'image/x-3ds': ['3ds'],
                                'image/x-cmu-raster': ['ras'],
                                'image/x-cmx': ['cmx'],
                                'image/x-freehand': [
                                    'fh',
                                    'fhc',
                                    'fh4',
                                    'fh5',
                                    'fh7'
                                ],
                                'image/x-icon': ['ico'],
                                'image/x-jng': ['jng'],
                                'image/x-mrsid-image': ['sid'],
                                'image/x-ms-bmp': ['*bmp'],
                                'image/x-pcx': ['pcx'],
                                'image/x-pict': ['pic', 'pct'],
                                'image/x-portable-anymap': ['pnm'],
                                'image/x-portable-bitmap': ['pbm'],
                                'image/x-portable-graymap': ['pgm'],
                                'image/x-portable-pixmap': ['ppm'],
                                'image/x-rgb': ['rgb'],
                                'image/x-tga': ['tga'],
                                'image/x-xbitmap': ['xbm'],
                                'image/x-xpixmap': ['xpm'],
                                'image/x-xwindowdump': ['xwd'],
                                'message/vnd.wfa.wsc': ['wsc'],
                                'model/vnd.collada+xml': ['dae'],
                                'model/vnd.dwf': ['dwf'],
                                'model/vnd.gdl': ['gdl'],
                                'model/vnd.gtw': ['gtw'],
                                'model/vnd.mts': ['mts'],
                                'model/vnd.vtu': ['vtu'],
                                'text/prs.lines.tag': ['dsc'],
                                'text/vnd.curl': ['curl'],
                                'text/vnd.curl.dcurl': ['dcurl'],
                                'text/vnd.curl.mcurl': ['mcurl'],
                                'text/vnd.curl.scurl': ['scurl'],
                                'text/vnd.dvb.subtitle': ['sub'],
                                'text/vnd.fly': ['fly'],
                                'text/vnd.fmi.flexstor': ['flx'],
                                'text/vnd.graphviz': ['gv'],
                                'text/vnd.in3d.3dml': ['3dml'],
                                'text/vnd.in3d.spot': ['spot'],
                                'text/vnd.sun.j2me.app-descriptor': ['jad'],
                                'text/vnd.wap.wml': ['wml'],
                                'text/vnd.wap.wmlscript': ['wmls'],
                                'text/x-asm': ['s', 'asm'],
                                'text/x-c': [
                                    'c',
                                    'cc',
                                    'cxx',
                                    'cpp',
                                    'h',
                                    'hh',
                                    'dic'
                                ],
                                'text/x-component': ['htc'],
                                'text/x-fortran': ['f', 'for', 'f77', 'f90'],
                                'text/x-handlebars-template': ['hbs'],
                                'text/x-java-source': ['java'],
                                'text/x-lua': ['lua'],
                                'text/x-markdown': ['mkd'],
                                'text/x-nfo': ['nfo'],
                                'text/x-opml': ['opml'],
                                'text/x-org': ['*org'],
                                'text/x-pascal': ['p', 'pas'],
                                'text/x-processing': ['pde'],
                                'text/x-sass': ['sass'],
                                'text/x-scss': ['scss'],
                                'text/x-setext': ['etx'],
                                'text/x-sfv': ['sfv'],
                                'text/x-suse-ymp': ['ymp'],
                                'text/x-uuencode': ['uu'],
                                'text/x-vcalendar': ['vcs'],
                                'text/x-vcard': ['vcf'],
                                'video/vnd.dece.hd': ['uvh', 'uvvh'],
                                'video/vnd.dece.mobile': ['uvm', 'uvvm'],
                                'video/vnd.dece.pd': ['uvp', 'uvvp'],
                                'video/vnd.dece.sd': ['uvs', 'uvvs'],
                                'video/vnd.dece.video': ['uvv', 'uvvv'],
                                'video/vnd.dvb.file': ['dvb'],
                                'video/vnd.fvt': ['fvt'],
                                'video/vnd.mpegurl': ['mxu', 'm4u'],
                                'video/vnd.ms-playready.media.pyv': ['pyv'],
                                'video/vnd.uvvu.mp4': ['uvu', 'uvvu'],
                                'video/vnd.vivo': ['viv'],
                                'video/x-f4v': ['f4v'],
                                'video/x-fli': ['fli'],
                                'video/x-flv': ['flv'],
                                'video/x-m4v': ['m4v'],
                                'video/x-matroska': ['mkv', 'mk3d', 'mks'],
                                'video/x-mng': ['mng'],
                                'video/x-ms-asf': ['asf', 'asx'],
                                'video/x-ms-vob': ['vob'],
                                'video/x-ms-wm': ['wm'],
                                'video/x-ms-wmv': ['wmv'],
                                'video/x-ms-wmx': ['wmx'],
                                'video/x-ms-wvx': ['wvx'],
                                'video/x-msvideo': ['avi'],
                                'video/x-sgi-movie': ['movie'],
                                'video/x-smv': ['smv'],
                                'x-conference/x-cooltalk': ['ice']
                            };
                        },
                        {}
                    ],
                    50: [
                        function(t, e, i) {
                            e.exports = {
                                'application/andrew-inset': ['ez'],
                                'application/applixware': ['aw'],
                                'application/atom+xml': ['atom'],
                                'application/atomcat+xml': ['atomcat'],
                                'application/atomsvc+xml': ['atomsvc'],
                                'application/bdoc': ['bdoc'],
                                'application/ccxml+xml': ['ccxml'],
                                'application/cdmi-capability': ['cdmia'],
                                'application/cdmi-container': ['cdmic'],
                                'application/cdmi-domain': ['cdmid'],
                                'application/cdmi-object': ['cdmio'],
                                'application/cdmi-queue': ['cdmiq'],
                                'application/cu-seeme': ['cu'],
                                'application/dash+xml': ['mpd'],
                                'application/davmount+xml': ['davmount'],
                                'application/docbook+xml': ['dbk'],
                                'application/dssc+der': ['dssc'],
                                'application/dssc+xml': ['xdssc'],
                                'application/ecmascript': ['ecma'],
                                'application/emma+xml': ['emma'],
                                'application/epub+zip': ['epub'],
                                'application/exi': ['exi'],
                                'application/font-tdpfr': ['pfr'],
                                'application/font-woff': ['woff'],
                                'application/geo+json': ['geojson'],
                                'application/gml+xml': ['gml'],
                                'application/gpx+xml': ['gpx'],
                                'application/gxf': ['gxf'],
                                'application/gzip': ['gz'],
                                'application/hjson': ['hjson'],
                                'application/hyperstudio': ['stk'],
                                'application/inkml+xml': ['ink', 'inkml'],
                                'application/ipfix': ['ipfix'],
                                'application/java-archive': [
                                    'jar',
                                    'war',
                                    'ear'
                                ],
                                'application/java-serialized-object': ['ser'],
                                'application/java-vm': ['class'],
                                'application/javascript': ['js', 'mjs'],
                                'application/json': ['json', 'map'],
                                'application/json5': ['json5'],
                                'application/jsonml+json': ['jsonml'],
                                'application/ld+json': ['jsonld'],
                                'application/lost+xml': ['lostxml'],
                                'application/mac-binhex40': ['hqx'],
                                'application/mac-compactpro': ['cpt'],
                                'application/mads+xml': ['mads'],
                                'application/manifest+json': ['webmanifest'],
                                'application/marc': ['mrc'],
                                'application/marcxml+xml': ['mrcx'],
                                'application/mathematica': ['ma', 'nb', 'mb'],
                                'application/mathml+xml': ['mathml'],
                                'application/mbox': ['mbox'],
                                'application/mediaservercontrol+xml': ['mscml'],
                                'application/metalink+xml': ['metalink'],
                                'application/metalink4+xml': ['meta4'],
                                'application/mets+xml': ['mets'],
                                'application/mods+xml': ['mods'],
                                'application/mp21': ['m21', 'mp21'],
                                'application/mp4': ['mp4s', 'm4p'],
                                'application/msword': ['doc', 'dot'],
                                'application/mxf': ['mxf'],
                                'application/octet-stream': [
                                    'bin',
                                    'dms',
                                    'lrf',
                                    'mar',
                                    'so',
                                    'dist',
                                    'distz',
                                    'pkg',
                                    'bpk',
                                    'dump',
                                    'elc',
                                    'deploy',
                                    'exe',
                                    'dll',
                                    'deb',
                                    'dmg',
                                    'iso',
                                    'img',
                                    'msi',
                                    'msp',
                                    'msm',
                                    'buffer'
                                ],
                                'application/oda': ['oda'],
                                'application/oebps-package+xml': ['opf'],
                                'application/ogg': ['ogx'],
                                'application/omdoc+xml': ['omdoc'],
                                'application/onenote': [
                                    'onetoc',
                                    'onetoc2',
                                    'onetmp',
                                    'onepkg'
                                ],
                                'application/oxps': ['oxps'],
                                'application/patch-ops-error+xml': ['xer'],
                                'application/pdf': ['pdf'],
                                'application/pgp-encrypted': ['pgp'],
                                'application/pgp-signature': ['asc', 'sig'],
                                'application/pics-rules': ['prf'],
                                'application/pkcs10': ['p10'],
                                'application/pkcs7-mime': ['p7m', 'p7c'],
                                'application/pkcs7-signature': ['p7s'],
                                'application/pkcs8': ['p8'],
                                'application/pkix-attr-cert': ['ac'],
                                'application/pkix-cert': ['cer'],
                                'application/pkix-crl': ['crl'],
                                'application/pkix-pkipath': ['pkipath'],
                                'application/pkixcmp': ['pki'],
                                'application/pls+xml': ['pls'],
                                'application/postscript': ['ai', 'eps', 'ps'],
                                'application/pskc+xml': ['pskcxml'],
                                'application/raml+yaml': ['raml'],
                                'application/rdf+xml': ['rdf'],
                                'application/reginfo+xml': ['rif'],
                                'application/relax-ng-compact-syntax': ['rnc'],
                                'application/resource-lists+xml': ['rl'],
                                'application/resource-lists-diff+xml': ['rld'],
                                'application/rls-services+xml': ['rs'],
                                'application/rpki-ghostbusters': ['gbr'],
                                'application/rpki-manifest': ['mft'],
                                'application/rpki-roa': ['roa'],
                                'application/rsd+xml': ['rsd'],
                                'application/rss+xml': ['rss'],
                                'application/rtf': ['rtf'],
                                'application/sbml+xml': ['sbml'],
                                'application/scvp-cv-request': ['scq'],
                                'application/scvp-cv-response': ['scs'],
                                'application/scvp-vp-request': ['spq'],
                                'application/scvp-vp-response': ['spp'],
                                'application/sdp': ['sdp'],
                                'application/set-payment-initiation': [
                                    'setpay'
                                ],
                                'application/set-registration-initiation': [
                                    'setreg'
                                ],
                                'application/shf+xml': ['shf'],
                                'application/smil+xml': ['smi', 'smil'],
                                'application/sparql-query': ['rq'],
                                'application/sparql-results+xml': ['srx'],
                                'application/srgs': ['gram'],
                                'application/srgs+xml': ['grxml'],
                                'application/sru+xml': ['sru'],
                                'application/ssdl+xml': ['ssdl'],
                                'application/ssml+xml': ['ssml'],
                                'application/tei+xml': ['tei', 'teicorpus'],
                                'application/thraud+xml': ['tfi'],
                                'application/timestamped-data': ['tsd'],
                                'application/voicexml+xml': ['vxml'],
                                'application/wasm': ['wasm'],
                                'application/widget': ['wgt'],
                                'application/winhlp': ['hlp'],
                                'application/wsdl+xml': ['wsdl'],
                                'application/wspolicy+xml': ['wspolicy'],
                                'application/xaml+xml': ['xaml'],
                                'application/xcap-diff+xml': ['xdf'],
                                'application/xenc+xml': ['xenc'],
                                'application/xhtml+xml': ['xhtml', 'xht'],
                                'application/xml': ['xml', 'xsl', 'xsd', 'rng'],
                                'application/xml-dtd': ['dtd'],
                                'application/xop+xml': ['xop'],
                                'application/xproc+xml': ['xpl'],
                                'application/xslt+xml': ['xslt'],
                                'application/xspf+xml': ['xspf'],
                                'application/xv+xml': [
                                    'mxml',
                                    'xhvml',
                                    'xvml',
                                    'xvm'
                                ],
                                'application/yang': ['yang'],
                                'application/yin+xml': ['yin'],
                                'application/zip': ['zip'],
                                'audio/3gpp': ['*3gpp'],
                                'audio/adpcm': ['adp'],
                                'audio/basic': ['au', 'snd'],
                                'audio/midi': ['mid', 'midi', 'kar', 'rmi'],
                                'audio/mp3': ['*mp3'],
                                'audio/mp4': ['m4a', 'mp4a'],
                                'audio/mpeg': [
                                    'mpga',
                                    'mp2',
                                    'mp2a',
                                    'mp3',
                                    'm2a',
                                    'm3a'
                                ],
                                'audio/ogg': ['oga', 'ogg', 'spx'],
                                'audio/s3m': ['s3m'],
                                'audio/silk': ['sil'],
                                'audio/wav': ['wav'],
                                'audio/wave': ['*wav'],
                                'audio/webm': ['weba'],
                                'audio/xm': ['xm'],
                                'font/collection': ['ttc'],
                                'font/otf': ['otf'],
                                'font/ttf': ['ttf'],
                                'font/woff': ['*woff'],
                                'font/woff2': ['woff2'],
                                'image/apng': ['apng'],
                                'image/bmp': ['bmp'],
                                'image/cgm': ['cgm'],
                                'image/g3fax': ['g3'],
                                'image/gif': ['gif'],
                                'image/ief': ['ief'],
                                'image/jp2': ['jp2', 'jpg2'],
                                'image/jpeg': ['jpeg', 'jpg', 'jpe'],
                                'image/jpm': ['jpm'],
                                'image/jpx': ['jpx', 'jpf'],
                                'image/ktx': ['ktx'],
                                'image/png': ['png'],
                                'image/sgi': ['sgi'],
                                'image/svg+xml': ['svg', 'svgz'],
                                'image/tiff': ['tiff', 'tif'],
                                'image/webp': ['webp'],
                                'message/disposition-notification': [
                                    'disposition-notification'
                                ],
                                'message/global': ['u8msg'],
                                'message/global-delivery-status': ['u8dsn'],
                                'message/global-disposition-notification': [
                                    'u8mdn'
                                ],
                                'message/global-headers': ['u8hdr'],
                                'message/rfc822': ['eml', 'mime'],
                                'model/gltf+json': ['gltf'],
                                'model/gltf-binary': ['glb'],
                                'model/iges': ['igs', 'iges'],
                                'model/mesh': ['msh', 'mesh', 'silo'],
                                'model/vrml': ['wrl', 'vrml'],
                                'model/x3d+binary': ['x3db', 'x3dbz'],
                                'model/x3d+vrml': ['x3dv', 'x3dvz'],
                                'model/x3d+xml': ['x3d', 'x3dz'],
                                'text/cache-manifest': ['appcache', 'manifest'],
                                'text/calendar': ['ics', 'ifb'],
                                'text/coffeescript': ['coffee', 'litcoffee'],
                                'text/css': ['css'],
                                'text/csv': ['csv'],
                                'text/html': ['html', 'htm', 'shtml'],
                                'text/jade': ['jade'],
                                'text/jsx': ['jsx'],
                                'text/less': ['less'],
                                'text/markdown': ['markdown', 'md'],
                                'text/mathml': ['mml'],
                                'text/n3': ['n3'],
                                'text/plain': [
                                    'txt',
                                    'text',
                                    'conf',
                                    'def',
                                    'list',
                                    'log',
                                    'in',
                                    'ini'
                                ],
                                'text/richtext': ['rtx'],
                                'text/rtf': ['*rtf'],
                                'text/sgml': ['sgml', 'sgm'],
                                'text/shex': ['shex'],
                                'text/slim': ['slim', 'slm'],
                                'text/stylus': ['stylus', 'styl'],
                                'text/tab-separated-values': ['tsv'],
                                'text/troff': [
                                    't',
                                    'tr',
                                    'roff',
                                    'man',
                                    'me',
                                    'ms'
                                ],
                                'text/turtle': ['ttl'],
                                'text/uri-list': ['uri', 'uris', 'urls'],
                                'text/vcard': ['vcard'],
                                'text/vtt': ['vtt'],
                                'text/xml': ['*xml'],
                                'text/yaml': ['yaml', 'yml'],
                                'video/3gpp': ['3gp', '3gpp'],
                                'video/3gpp2': ['3g2'],
                                'video/h261': ['h261'],
                                'video/h263': ['h263'],
                                'video/h264': ['h264'],
                                'video/jpeg': ['jpgv'],
                                'video/jpm': ['*jpm', 'jpgm'],
                                'video/mj2': ['mj2', 'mjp2'],
                                'video/mp2t': ['ts'],
                                'video/mp4': ['mp4', 'mp4v', 'mpg4'],
                                'video/mpeg': [
                                    'mpeg',
                                    'mpg',
                                    'mpe',
                                    'm1v',
                                    'm2v'
                                ],
                                'video/ogg': ['ogv'],
                                'video/quicktime': ['qt', 'mov'],
                                'video/webm': ['webm']
                            };
                        },
                        {}
                    ],
                    51: [
                        function(t, e, i) {
                            (function(i) {
                                var r = t('path'),
                                    n = t('fs'),
                                    o = parseInt('0777', 8);
                                function s(t, e, l, f) {
                                    'function' == typeof e
                                        ? ((l = e), (e = {}))
                                        : (e &&
                                              'object' ===
                                                  (void 0 === e
                                                      ? 'undefined'
                                                      : a(e))) ||
                                          (e = { mode: e });
                                    var h = e.mode,
                                        c = e.fs || n;
                                    void 0 === h && (h = o & ~i.umask()),
                                        f || (f = null);
                                    var u = l || function() {};
                                    (t = r.resolve(t)),
                                        c.mkdir(t, h, function(i) {
                                            if (!i)
                                                return u(null, (f = f || t));
                                            switch (i.code) {
                                                case 'ENOENT':
                                                    s(r.dirname(t), e, function(
                                                        i,
                                                        r
                                                    ) {
                                                        i
                                                            ? u(i, r)
                                                            : s(t, e, u, r);
                                                    });
                                                    break;
                                                default:
                                                    c.stat(t, function(t, e) {
                                                        t || !e.isDirectory()
                                                            ? u(i, f)
                                                            : u(null, f);
                                                    });
                                            }
                                        });
                                }
                                (e.exports = s.mkdirp = s.mkdirP = s),
                                    (s.sync = function t(e, s, l) {
                                        (s &&
                                            'object' ===
                                                (void 0 === s
                                                    ? 'undefined'
                                                    : a(s))) ||
                                            (s = { mode: s });
                                        var f = s.mode,
                                            h = s.fs || n;
                                        void 0 === f && (f = o & ~i.umask()),
                                            l || (l = null),
                                            (e = r.resolve(e));
                                        try {
                                            h.mkdirSync(e, f), (l = l || e);
                                        } catch (i) {
                                            switch (i.code) {
                                                case 'ENOENT':
                                                    t(
                                                        e,
                                                        s,
                                                        (l = t(
                                                            r.dirname(e),
                                                            s,
                                                            l
                                                        ))
                                                    );
                                                    break;
                                                default:
                                                    var c;
                                                    try {
                                                        c = h.statSync(e);
                                                    } catch (t) {
                                                        throw i;
                                                    }
                                                    if (!c.isDirectory())
                                                        throw i;
                                            }
                                        }
                                        return l;
                                    });
                            }.call(this, t('_process')));
                        },
                        { _process: 15, fs: 14, path: 74 }
                    ],
                    52: [
                        function(t, e, i) {
                            function r(t, e, i, r) {
                                for (
                                    var n = t[e++],
                                        a = 1 << n,
                                        o = a + 1,
                                        s = o + 1,
                                        l = n + 1,
                                        f = (1 << l) - 1,
                                        h = 0,
                                        c = 0,
                                        u = 0,
                                        p = t[e++],
                                        d = new Int32Array(4096),
                                        m = null;
                                    ;

                                ) {
                                    for (; h < 16 && 0 !== p; )
                                        (c |= t[e++] << h),
                                            (h += 8),
                                            1 === p ? (p = t[e++]) : --p;
                                    if (h < l) break;
                                    var g = c & f;
                                    if (((c >>= l), (h -= l), g !== a)) {
                                        if (g === o) break;
                                        for (
                                            var b = g < s ? g : m, v = 0, y = b;
                                            y > a;

                                        )
                                            (y = d[y] >> 8), ++v;
                                        var w = y;
                                        if (u + v + (b !== g ? 1 : 0) > r)
                                            return void console.log(
                                                'Warning, gif stream longer than expected.'
                                            );
                                        i[u++] = w;
                                        var _ = (u += v);
                                        for (
                                            b !== g && (i[u++] = w), y = b;
                                            v--;

                                        )
                                            (y = d[y]),
                                                (i[--_] = 255 & y),
                                                (y >>= 8);
                                        null !== m &&
                                            s < 4096 &&
                                            ((d[s++] = (m << 8) | w),
                                            s >= f + 1 &&
                                                l < 12 &&
                                                (++l, (f = (f << 1) | 1))),
                                            (m = g);
                                    } else
                                        (s = o + 1),
                                            (f = (1 << (l = n + 1)) - 1),
                                            (m = null);
                                }
                                return (
                                    u !== r &&
                                        console.log(
                                            'Warning, gif stream shorter than expected.'
                                        ),
                                    i
                                );
                            }
                            try {
                                (i.GifWriter = function(t, e, i, r) {
                                    var n = 0,
                                        a =
                                            void 0 ===
                                            (r = void 0 === r ? {} : r).loop
                                                ? null
                                                : r.loop,
                                        o =
                                            void 0 === r.palette
                                                ? null
                                                : r.palette;
                                    if (
                                        e <= 0 ||
                                        i <= 0 ||
                                        e > 65535 ||
                                        i > 65535
                                    )
                                        throw new Error(
                                            'Width/Height invalid.'
                                        );
                                    function s(t) {
                                        var e = t.length;
                                        if (e < 2 || e > 256 || e & (e - 1))
                                            throw new Error(
                                                'Invalid code/color length, must be power of 2 and 2 .. 256.'
                                            );
                                        return e;
                                    }
                                    (t[n++] = 71),
                                        (t[n++] = 73),
                                        (t[n++] = 70),
                                        (t[n++] = 56),
                                        (t[n++] = 57),
                                        (t[n++] = 97);
                                    var l = 0,
                                        f = 0;
                                    if (null !== o) {
                                        for (var h = s(o); (h >>= 1); ) ++l;
                                        if (
                                            ((h = 1 << l),
                                            --l,
                                            void 0 !== r.background)
                                        ) {
                                            if ((f = r.background) >= h)
                                                throw new Error(
                                                    'Background index out of range.'
                                                );
                                            if (0 === f)
                                                throw new Error(
                                                    'Background index explicitly passed as 0.'
                                                );
                                        }
                                    }
                                    if (
                                        ((t[n++] = 255 & e),
                                        (t[n++] = (e >> 8) & 255),
                                        (t[n++] = 255 & i),
                                        (t[n++] = (i >> 8) & 255),
                                        (t[n++] = (null !== o ? 128 : 0) | l),
                                        (t[n++] = f),
                                        (t[n++] = 0),
                                        null !== o)
                                    )
                                        for (
                                            var c = 0, u = o.length;
                                            c < u;
                                            ++c
                                        ) {
                                            var p = o[c];
                                            (t[n++] = (p >> 16) & 255),
                                                (t[n++] = (p >> 8) & 255),
                                                (t[n++] = 255 & p);
                                        }
                                    if (null !== a) {
                                        if (a < 0 || a > 65535)
                                            throw new Error(
                                                'Loop count invalid.'
                                            );
                                        (t[n++] = 33),
                                            (t[n++] = 255),
                                            (t[n++] = 11),
                                            (t[n++] = 78),
                                            (t[n++] = 69),
                                            (t[n++] = 84),
                                            (t[n++] = 83),
                                            (t[n++] = 67),
                                            (t[n++] = 65),
                                            (t[n++] = 80),
                                            (t[n++] = 69),
                                            (t[n++] = 50),
                                            (t[n++] = 46),
                                            (t[n++] = 48),
                                            (t[n++] = 3),
                                            (t[n++] = 1),
                                            (t[n++] = 255 & a),
                                            (t[n++] = (a >> 8) & 255),
                                            (t[n++] = 0);
                                    }
                                    var d = !1;
                                    (this.addFrame = function(
                                        e,
                                        i,
                                        r,
                                        a,
                                        l,
                                        f
                                    ) {
                                        if (
                                            (!0 === d && (--n, (d = !1)),
                                            (f = void 0 === f ? {} : f),
                                            e < 0 ||
                                                i < 0 ||
                                                e > 65535 ||
                                                i > 65535)
                                        )
                                            throw new Error('x/y invalid.');
                                        if (
                                            r <= 0 ||
                                            a <= 0 ||
                                            r > 65535 ||
                                            a > 65535
                                        )
                                            throw new Error(
                                                'Width/Height invalid.'
                                            );
                                        if (l.length < r * a)
                                            throw new Error(
                                                'Not enough pixels for the frame size.'
                                            );
                                        var h = !0,
                                            c = f.palette;
                                        if (
                                            ((void 0 !== c && null !== c) ||
                                                ((h = !1), (c = o)),
                                            void 0 === c || null === c)
                                        )
                                            throw new Error(
                                                'Must supply either a local or global palette.'
                                            );
                                        for (var u = s(c), p = 0; (u >>= 1); )
                                            ++p;
                                        u = 1 << p;
                                        var m =
                                                void 0 === f.delay
                                                    ? 0
                                                    : f.delay,
                                            g =
                                                void 0 === f.disposal
                                                    ? 0
                                                    : f.disposal;
                                        if (g < 0 || g > 3)
                                            throw new Error(
                                                'Disposal out of range.'
                                            );
                                        var b = !1,
                                            v = 0;
                                        if (
                                            void 0 !== f.transparent &&
                                            null !== f.transparent &&
                                            ((b = !0),
                                            (v = f.transparent) < 0 || v >= u)
                                        )
                                            throw new Error(
                                                'Transparent color index.'
                                            );
                                        if (
                                            ((0 !== g || b || 0 !== m) &&
                                                ((t[n++] = 33),
                                                (t[n++] = 249),
                                                (t[n++] = 4),
                                                (t[n++] =
                                                    (g << 2) |
                                                    (!0 === b ? 1 : 0)),
                                                (t[n++] = 255 & m),
                                                (t[n++] = (m >> 8) & 255),
                                                (t[n++] = v),
                                                (t[n++] = 0)),
                                            (t[n++] = 44),
                                            (t[n++] = 255 & e),
                                            (t[n++] = (e >> 8) & 255),
                                            (t[n++] = 255 & i),
                                            (t[n++] = (i >> 8) & 255),
                                            (t[n++] = 255 & r),
                                            (t[n++] = (r >> 8) & 255),
                                            (t[n++] = 255 & a),
                                            (t[n++] = (a >> 8) & 255),
                                            (t[n++] =
                                                !0 === h ? 128 | (p - 1) : 0),
                                            !0 === h)
                                        )
                                            for (
                                                var y = 0, w = c.length;
                                                y < w;
                                                ++y
                                            ) {
                                                var _ = c[y];
                                                (t[n++] = (_ >> 16) & 255),
                                                    (t[n++] = (_ >> 8) & 255),
                                                    (t[n++] = 255 & _);
                                            }
                                        return (n = (function(t, e, i, r) {
                                            t[e++] = i;
                                            var n = e++,
                                                a = 1 << i,
                                                o = a - 1,
                                                s = a + 1,
                                                l = s + 1,
                                                f = i + 1,
                                                h = 0,
                                                c = 0;
                                            function u(i) {
                                                for (; h >= i; )
                                                    (t[e++] = 255 & c),
                                                        (c >>= 8),
                                                        (h -= 8),
                                                        e === n + 256 &&
                                                            ((t[n] = 255),
                                                            (n = e++));
                                            }
                                            function p(t) {
                                                (c |= t << h), (h += f), u(8);
                                            }
                                            var d = r[0] & o,
                                                m = {};
                                            p(a);
                                            for (
                                                var g = 1, b = r.length;
                                                g < b;
                                                ++g
                                            ) {
                                                var v = r[g] & o,
                                                    y = (d << 8) | v,
                                                    w = m[y];
                                                if (void 0 === w) {
                                                    for (
                                                        c |= d << h, h += f;
                                                        h >= 8;

                                                    )
                                                        (t[e++] = 255 & c),
                                                            (c >>= 8),
                                                            (h -= 8),
                                                            e === n + 256 &&
                                                                ((t[n] = 255),
                                                                (n = e++));
                                                    4096 === l
                                                        ? (p(a),
                                                          (l = s + 1),
                                                          (f = i + 1),
                                                          (m = {}))
                                                        : (l >= 1 << f && ++f,
                                                          (m[y] = l++)),
                                                        (d = v);
                                                } else d = w;
                                            }
                                            return (
                                                p(d),
                                                p(s),
                                                u(1),
                                                n + 1 === e
                                                    ? (t[n] = 0)
                                                    : ((t[n] = e - n - 1),
                                                      (t[e++] = 0)),
                                                e
                                            );
                                        })(t, n, p < 2 ? 2 : p, l));
                                    }),
                                        (this.end = function() {
                                            return (
                                                !1 === d &&
                                                    ((t[n++] = 59), (d = !0)),
                                                n
                                            );
                                        }),
                                        (this.getOutputBuffer = function() {
                                            return t;
                                        }),
                                        (this.setOutputBuffer = function(e) {
                                            t = e;
                                        }),
                                        (this.getOutputBufferPosition = function() {
                                            return n;
                                        }),
                                        (this.setOutputBufferPosition = function(
                                            t
                                        ) {
                                            n = t;
                                        });
                                }),
                                    (i.GifReader = function(t) {
                                        var e = 0;
                                        if (
                                            71 !== t[e++] ||
                                            73 !== t[e++] ||
                                            70 !== t[e++] ||
                                            56 !== t[e++] ||
                                            56 != ((t[e++] + 1) & 253) ||
                                            97 !== t[e++]
                                        )
                                            throw new Error(
                                                'Invalid GIF 87a/89a header.'
                                            );
                                        var i = t[e++] | (t[e++] << 8),
                                            n = t[e++] | (t[e++] << 8),
                                            a = t[e++],
                                            o = a >> 7,
                                            s = 1 << (1 + (7 & a));
                                        t[e++], t[e++];
                                        var l = null,
                                            f = null;
                                        o && ((l = e), (f = s), (e += 3 * s));
                                        var h = !0,
                                            c = [],
                                            u = 0,
                                            p = null,
                                            d = 0,
                                            m = null;
                                        for (
                                            this.width = i, this.height = n;
                                            h && e < t.length;

                                        )
                                            switch (t[e++]) {
                                                case 33:
                                                    switch (t[e++]) {
                                                        case 255:
                                                            if (
                                                                11 !== t[e] ||
                                                                (78 ==
                                                                    t[e + 1] &&
                                                                    69 ==
                                                                        t[
                                                                            e +
                                                                                2
                                                                        ] &&
                                                                    84 ==
                                                                        t[
                                                                            e +
                                                                                3
                                                                        ] &&
                                                                    83 ==
                                                                        t[
                                                                            e +
                                                                                4
                                                                        ] &&
                                                                    67 ==
                                                                        t[
                                                                            e +
                                                                                5
                                                                        ] &&
                                                                    65 ==
                                                                        t[
                                                                            e +
                                                                                6
                                                                        ] &&
                                                                    80 ==
                                                                        t[
                                                                            e +
                                                                                7
                                                                        ] &&
                                                                    69 ==
                                                                        t[
                                                                            e +
                                                                                8
                                                                        ] &&
                                                                    50 ==
                                                                        t[
                                                                            e +
                                                                                9
                                                                        ] &&
                                                                    46 ==
                                                                        t[
                                                                            e +
                                                                                10
                                                                        ] &&
                                                                    48 ==
                                                                        t[
                                                                            e +
                                                                                11
                                                                        ] &&
                                                                    3 ==
                                                                        t[
                                                                            e +
                                                                                12
                                                                        ] &&
                                                                    1 ==
                                                                        t[
                                                                            e +
                                                                                13
                                                                        ] &&
                                                                    0 ==
                                                                        t[
                                                                            e +
                                                                                16
                                                                        ])
                                                            )
                                                                (e += 14),
                                                                    (m =
                                                                        t[e++] |
                                                                        (t[
                                                                            e++
                                                                        ] <<
                                                                            8)),
                                                                    e++;
                                                            else
                                                                for (
                                                                    e += 12;
                                                                    ;

                                                                ) {
                                                                    if (
                                                                        !(
                                                                            (T =
                                                                                t[
                                                                                    e++
                                                                                ]) >=
                                                                            0
                                                                        )
                                                                    )
                                                                        throw Error(
                                                                            'Invalid block size'
                                                                        );
                                                                    if (0 === T)
                                                                        break;
                                                                    e += T;
                                                                }
                                                            break;
                                                        case 249:
                                                            if (
                                                                4 !== t[e++] ||
                                                                0 !== t[e + 4]
                                                            )
                                                                throw new Error(
                                                                    'Invalid graphics extension block.'
                                                                );
                                                            var g = t[e++];
                                                            (u =
                                                                t[e++] |
                                                                (t[e++] << 8)),
                                                                (p = t[e++]),
                                                                0 == (1 & g) &&
                                                                    (p = null),
                                                                (d =
                                                                    (g >> 2) &
                                                                    7),
                                                                e++;
                                                            break;
                                                        case 254:
                                                            for (;;) {
                                                                if (
                                                                    !(
                                                                        (T =
                                                                            t[
                                                                                e++
                                                                            ]) >=
                                                                        0
                                                                    )
                                                                )
                                                                    throw Error(
                                                                        'Invalid block size'
                                                                    );
                                                                if (0 === T)
                                                                    break;
                                                                e += T;
                                                            }
                                                            break;
                                                        default:
                                                            throw new Error(
                                                                'Unknown graphic control label: 0x' +
                                                                    t[
                                                                        e - 1
                                                                    ].toString(
                                                                        16
                                                                    )
                                                            );
                                                    }
                                                    break;
                                                case 44:
                                                    var b =
                                                            t[e++] |
                                                            (t[e++] << 8),
                                                        v =
                                                            t[e++] |
                                                            (t[e++] << 8),
                                                        y =
                                                            t[e++] |
                                                            (t[e++] << 8),
                                                        w =
                                                            t[e++] |
                                                            (t[e++] << 8),
                                                        _ = t[e++],
                                                        x = (_ >> 6) & 1,
                                                        k = 1 << (1 + (7 & _)),
                                                        E = l,
                                                        I = f,
                                                        S = !1;
                                                    _ >> 7 &&
                                                        ((S = !0),
                                                        (E = e),
                                                        (I = k),
                                                        (e += 3 * k));
                                                    var A = e;
                                                    for (e++; ; ) {
                                                        var T;
                                                        if (
                                                            !((T = t[e++]) >= 0)
                                                        )
                                                            throw Error(
                                                                'Invalid block size'
                                                            );
                                                        if (0 === T) break;
                                                        e += T;
                                                    }
                                                    c.push({
                                                        x: b,
                                                        y: v,
                                                        width: y,
                                                        height: w,
                                                        has_local_palette: S,
                                                        palette_offset: E,
                                                        palette_size: I,
                                                        data_offset: A,
                                                        data_length: e - A,
                                                        transparent_index: p,
                                                        interlaced: !!x,
                                                        delay: u,
                                                        disposal: d
                                                    });
                                                    break;
                                                case 59:
                                                    h = !1;
                                                    break;
                                                default:
                                                    throw new Error(
                                                        'Unknown gif block: 0x' +
                                                            t[e - 1].toString(
                                                                16
                                                            )
                                                    );
                                            }
                                        (this.numFrames = function() {
                                            return c.length;
                                        }),
                                            (this.loopCount = function() {
                                                return m;
                                            }),
                                            (this.frameInfo = function(t) {
                                                if (t < 0 || t >= c.length)
                                                    throw new Error(
                                                        'Frame index out of range.'
                                                    );
                                                return c[t];
                                            }),
                                            (this.decodeAndBlitFrameBGRA = function(
                                                e,
                                                n
                                            ) {
                                                var a = this.frameInfo(e),
                                                    o = a.width * a.height,
                                                    s = new Uint8Array(o);
                                                r(t, a.data_offset, s, o);
                                                var l = a.palette_offset,
                                                    f = a.transparent_index;
                                                null === f && (f = 256);
                                                var h = a.width,
                                                    c = i - h,
                                                    u = h,
                                                    p = 4 * (a.y * i + a.x),
                                                    d =
                                                        4 *
                                                        ((a.y + a.height) * i +
                                                            a.x),
                                                    m = p,
                                                    g = 4 * c;
                                                !0 === a.interlaced &&
                                                    (g += 4 * i * 7);
                                                for (
                                                    var b = 8,
                                                        v = 0,
                                                        y = s.length;
                                                    v < y;
                                                    ++v
                                                ) {
                                                    var w = s[v];
                                                    if (
                                                        (0 === u &&
                                                            ((u = h),
                                                            (m += g) >= d &&
                                                                ((g =
                                                                    4 * c +
                                                                    4 *
                                                                        i *
                                                                        (b -
                                                                            1)),
                                                                (m =
                                                                    p +
                                                                    (h + c) *
                                                                        (b <<
                                                                            1)),
                                                                (b >>= 1))),
                                                        w === f)
                                                    )
                                                        m += 4;
                                                    else {
                                                        var _ = t[l + 3 * w],
                                                            x =
                                                                t[
                                                                    l +
                                                                        3 * w +
                                                                        1
                                                                ],
                                                            k =
                                                                t[
                                                                    l +
                                                                        3 * w +
                                                                        2
                                                                ];
                                                        (n[m++] = k),
                                                            (n[m++] = x),
                                                            (n[m++] = _),
                                                            (n[m++] = 255);
                                                    }
                                                    --u;
                                                }
                                            }),
                                            (this.decodeAndBlitFrameRGBA = function(
                                                e,
                                                n
                                            ) {
                                                var a = this.frameInfo(e),
                                                    o = a.width * a.height,
                                                    s = new Uint8Array(o);
                                                r(t, a.data_offset, s, o);
                                                var l = a.palette_offset,
                                                    f = a.transparent_index;
                                                null === f && (f = 256);
                                                var h = a.width,
                                                    c = i - h,
                                                    u = h,
                                                    p = 4 * (a.y * i + a.x),
                                                    d =
                                                        4 *
                                                        ((a.y + a.height) * i +
                                                            a.x),
                                                    m = p,
                                                    g = 4 * c;
                                                !0 === a.interlaced &&
                                                    (g += 4 * i * 7);
                                                for (
                                                    var b = 8,
                                                        v = 0,
                                                        y = s.length;
                                                    v < y;
                                                    ++v
                                                ) {
                                                    var w = s[v];
                                                    if (
                                                        (0 === u &&
                                                            ((u = h),
                                                            (m += g) >= d &&
                                                                ((g =
                                                                    4 * c +
                                                                    4 *
                                                                        i *
                                                                        (b -
                                                                            1)),
                                                                (m =
                                                                    p +
                                                                    (h + c) *
                                                                        (b <<
                                                                            1)),
                                                                (b >>= 1))),
                                                        w === f)
                                                    )
                                                        m += 4;
                                                    else {
                                                        var _ = t[l + 3 * w],
                                                            x =
                                                                t[
                                                                    l +
                                                                        3 * w +
                                                                        1
                                                                ],
                                                            k =
                                                                t[
                                                                    l +
                                                                        3 * w +
                                                                        2
                                                                ];
                                                        (n[m++] = _),
                                                            (n[m++] = x),
                                                            (n[m++] = k),
                                                            (n[m++] = 255);
                                                    }
                                                    --u;
                                                }
                                            });
                                    });
                            } catch (t) {}
                        },
                        {}
                    ],
                    53: [
                        function(t, e, i) {
                            var r = {};
                            (0, t('./lib/utils/common').assign)(
                                r,
                                t('./lib/deflate'),
                                t('./lib/inflate'),
                                t('./lib/zlib/constants')
                            ),
                                (e.exports = r);
                        },
                        {
                            './lib/deflate': 54,
                            './lib/inflate': 55,
                            './lib/utils/common': 56,
                            './lib/zlib/constants': 59
                        }
                    ],
                    54: [
                        function(t, e, i) {
                            var r = t('./zlib/deflate'),
                                n = t('./utils/common'),
                                a = t('./utils/strings'),
                                o = t('./zlib/messages'),
                                s = t('./zlib/zstream'),
                                l = Object.prototype.toString,
                                f = 0,
                                h = -1,
                                c = 0,
                                u = 8;
                            function p(t) {
                                if (!(this instanceof p)) return new p(t);
                                this.options = n.assign(
                                    {
                                        level: h,
                                        method: u,
                                        chunkSize: 16384,
                                        windowBits: 15,
                                        memLevel: 8,
                                        strategy: c,
                                        to: ''
                                    },
                                    t || {}
                                );
                                var e = this.options;
                                e.raw && e.windowBits > 0
                                    ? (e.windowBits = -e.windowBits)
                                    : e.gzip &&
                                      e.windowBits > 0 &&
                                      e.windowBits < 16 &&
                                      (e.windowBits += 16),
                                    (this.err = 0),
                                    (this.msg = ''),
                                    (this.ended = !1),
                                    (this.chunks = []),
                                    (this.strm = new s()),
                                    (this.strm.avail_out = 0);
                                var i = r.deflateInit2(
                                    this.strm,
                                    e.level,
                                    e.method,
                                    e.windowBits,
                                    e.memLevel,
                                    e.strategy
                                );
                                if (i !== f) throw new Error(o[i]);
                                if (
                                    (e.header &&
                                        r.deflateSetHeader(this.strm, e.header),
                                    e.dictionary)
                                ) {
                                    var d;
                                    if (
                                        ((d =
                                            'string' == typeof e.dictionary
                                                ? a.string2buf(e.dictionary)
                                                : '[object ArrayBuffer]' ===
                                                  l.call(e.dictionary)
                                                    ? new Uint8Array(
                                                          e.dictionary
                                                      )
                                                    : e.dictionary),
                                        (i = r.deflateSetDictionary(
                                            this.strm,
                                            d
                                        )) !== f)
                                    )
                                        throw new Error(o[i]);
                                    this._dict_set = !0;
                                }
                            }
                            function d(t, e) {
                                var i = new p(e);
                                if ((i.push(t, !0), i.err))
                                    throw i.msg || o[i.err];
                                return i.result;
                            }
                            (p.prototype.push = function(t, e) {
                                var i,
                                    o,
                                    s = this.strm,
                                    h = this.options.chunkSize;
                                if (this.ended) return !1;
                                (o = e === ~~e ? e : !0 === e ? 4 : 0),
                                    'string' == typeof t
                                        ? (s.input = a.string2buf(t))
                                        : '[object ArrayBuffer]' === l.call(t)
                                            ? (s.input = new Uint8Array(t))
                                            : (s.input = t),
                                    (s.next_in = 0),
                                    (s.avail_in = s.input.length);
                                do {
                                    if (
                                        (0 === s.avail_out &&
                                            ((s.output = new n.Buf8(h)),
                                            (s.next_out = 0),
                                            (s.avail_out = h)),
                                        1 !== (i = r.deflate(s, o)) && i !== f)
                                    )
                                        return (
                                            this.onEnd(i), (this.ended = !0), !1
                                        );
                                    (0 !== s.avail_out &&
                                        (0 !== s.avail_in ||
                                            (4 !== o && 2 !== o))) ||
                                        ('string' === this.options.to
                                            ? this.onData(
                                                  a.buf2binstring(
                                                      n.shrinkBuf(
                                                          s.output,
                                                          s.next_out
                                                      )
                                                  )
                                              )
                                            : this.onData(
                                                  n.shrinkBuf(
                                                      s.output,
                                                      s.next_out
                                                  )
                                              ));
                                } while (
                                    (s.avail_in > 0 || 0 === s.avail_out) &&
                                    1 !== i
                                );
                                return 4 === o
                                    ? ((i = r.deflateEnd(this.strm)),
                                      this.onEnd(i),
                                      (this.ended = !0),
                                      i === f)
                                    : 2 !== o ||
                                          (this.onEnd(f),
                                          (s.avail_out = 0),
                                          !0);
                            }),
                                (p.prototype.onData = function(t) {
                                    this.chunks.push(t);
                                }),
                                (p.prototype.onEnd = function(t) {
                                    t === f &&
                                        ('string' === this.options.to
                                            ? (this.result = this.chunks.join(
                                                  ''
                                              ))
                                            : (this.result = n.flattenChunks(
                                                  this.chunks
                                              ))),
                                        (this.chunks = []),
                                        (this.err = t),
                                        (this.msg = this.strm.msg);
                                }),
                                (i.Deflate = p),
                                (i.deflate = d),
                                (i.deflateRaw = function(t, e) {
                                    return ((e = e || {}).raw = !0), d(t, e);
                                }),
                                (i.gzip = function(t, e) {
                                    return ((e = e || {}).gzip = !0), d(t, e);
                                });
                        },
                        {
                            './utils/common': 56,
                            './utils/strings': 57,
                            './zlib/deflate': 61,
                            './zlib/messages': 66,
                            './zlib/zstream': 68
                        }
                    ],
                    55: [
                        function(t, e, i) {
                            var r = t('./zlib/inflate'),
                                n = t('./utils/common'),
                                a = t('./utils/strings'),
                                o = t('./zlib/constants'),
                                s = t('./zlib/messages'),
                                l = t('./zlib/zstream'),
                                f = t('./zlib/gzheader'),
                                h = Object.prototype.toString;
                            function c(t) {
                                if (!(this instanceof c)) return new c(t);
                                this.options = n.assign(
                                    { chunkSize: 16384, windowBits: 0, to: '' },
                                    t || {}
                                );
                                var e = this.options;
                                e.raw &&
                                    e.windowBits >= 0 &&
                                    e.windowBits < 16 &&
                                    ((e.windowBits = -e.windowBits),
                                    0 === e.windowBits && (e.windowBits = -15)),
                                    !(e.windowBits >= 0 && e.windowBits < 16) ||
                                        (t && t.windowBits) ||
                                        (e.windowBits += 32),
                                    e.windowBits > 15 &&
                                        e.windowBits < 48 &&
                                        0 == (15 & e.windowBits) &&
                                        (e.windowBits |= 15),
                                    (this.err = 0),
                                    (this.msg = ''),
                                    (this.ended = !1),
                                    (this.chunks = []),
                                    (this.strm = new l()),
                                    (this.strm.avail_out = 0);
                                var i = r.inflateInit2(this.strm, e.windowBits);
                                if (i !== o.Z_OK) throw new Error(s[i]);
                                (this.header = new f()),
                                    r.inflateGetHeader(this.strm, this.header);
                            }
                            function u(t, e) {
                                var i = new c(e);
                                if ((i.push(t, !0), i.err))
                                    throw i.msg || s[i.err];
                                return i.result;
                            }
                            (c.prototype.push = function(t, e) {
                                var i,
                                    s,
                                    l,
                                    f,
                                    c,
                                    u,
                                    p = this.strm,
                                    d = this.options.chunkSize,
                                    m = this.options.dictionary,
                                    g = !1;
                                if (this.ended) return !1;
                                (s =
                                    e === ~~e
                                        ? e
                                        : !0 === e
                                            ? o.Z_FINISH
                                            : o.Z_NO_FLUSH),
                                    'string' == typeof t
                                        ? (p.input = a.binstring2buf(t))
                                        : '[object ArrayBuffer]' === h.call(t)
                                            ? (p.input = new Uint8Array(t))
                                            : (p.input = t),
                                    (p.next_in = 0),
                                    (p.avail_in = p.input.length);
                                do {
                                    if (
                                        (0 === p.avail_out &&
                                            ((p.output = new n.Buf8(d)),
                                            (p.next_out = 0),
                                            (p.avail_out = d)),
                                        (i = r.inflate(p, o.Z_NO_FLUSH)) ===
                                            o.Z_NEED_DICT &&
                                            m &&
                                            ((u =
                                                'string' == typeof m
                                                    ? a.string2buf(m)
                                                    : '[object ArrayBuffer]' ===
                                                      h.call(m)
                                                        ? new Uint8Array(m)
                                                        : m),
                                            (i = r.inflateSetDictionary(
                                                this.strm,
                                                u
                                            ))),
                                        i === o.Z_BUF_ERROR &&
                                            !0 === g &&
                                            ((i = o.Z_OK), (g = !1)),
                                        i !== o.Z_STREAM_END && i !== o.Z_OK)
                                    )
                                        return (
                                            this.onEnd(i), (this.ended = !0), !1
                                        );
                                    p.next_out &&
                                        ((0 !== p.avail_out &&
                                            i !== o.Z_STREAM_END &&
                                            (0 !== p.avail_in ||
                                                (s !== o.Z_FINISH &&
                                                    s !== o.Z_SYNC_FLUSH))) ||
                                            ('string' === this.options.to
                                                ? ((l = a.utf8border(
                                                      p.output,
                                                      p.next_out
                                                  )),
                                                  (f = p.next_out - l),
                                                  (c = a.buf2string(
                                                      p.output,
                                                      l
                                                  )),
                                                  (p.next_out = f),
                                                  (p.avail_out = d - f),
                                                  f &&
                                                      n.arraySet(
                                                          p.output,
                                                          p.output,
                                                          l,
                                                          f,
                                                          0
                                                      ),
                                                  this.onData(c))
                                                : this.onData(
                                                      n.shrinkBuf(
                                                          p.output,
                                                          p.next_out
                                                      )
                                                  ))),
                                        0 === p.avail_in &&
                                            0 === p.avail_out &&
                                            (g = !0);
                                } while (
                                    (p.avail_in > 0 || 0 === p.avail_out) &&
                                    i !== o.Z_STREAM_END
                                );
                                return (
                                    i === o.Z_STREAM_END && (s = o.Z_FINISH),
                                    s === o.Z_FINISH
                                        ? ((i = r.inflateEnd(this.strm)),
                                          this.onEnd(i),
                                          (this.ended = !0),
                                          i === o.Z_OK)
                                        : s !== o.Z_SYNC_FLUSH ||
                                          (this.onEnd(o.Z_OK),
                                          (p.avail_out = 0),
                                          !0)
                                );
                            }),
                                (c.prototype.onData = function(t) {
                                    this.chunks.push(t);
                                }),
                                (c.prototype.onEnd = function(t) {
                                    t === o.Z_OK &&
                                        ('string' === this.options.to
                                            ? (this.result = this.chunks.join(
                                                  ''
                                              ))
                                            : (this.result = n.flattenChunks(
                                                  this.chunks
                                              ))),
                                        (this.chunks = []),
                                        (this.err = t),
                                        (this.msg = this.strm.msg);
                                }),
                                (i.Inflate = c),
                                (i.inflate = u),
                                (i.inflateRaw = function(t, e) {
                                    return ((e = e || {}).raw = !0), u(t, e);
                                }),
                                (i.ungzip = u);
                        },
                        {
                            './utils/common': 56,
                            './utils/strings': 57,
                            './zlib/constants': 59,
                            './zlib/gzheader': 62,
                            './zlib/inflate': 64,
                            './zlib/messages': 66,
                            './zlib/zstream': 68
                        }
                    ],
                    56: [
                        function(t, e, i) {
                            var r =
                                'undefined' != typeof Uint8Array &&
                                'undefined' != typeof Uint16Array &&
                                'undefined' != typeof Int32Array;
                            function n(t, e) {
                                return Object.prototype.hasOwnProperty.call(
                                    t,
                                    e
                                );
                            }
                            (i.assign = function(t) {
                                for (
                                    var e = Array.prototype.slice.call(
                                        arguments,
                                        1
                                    );
                                    e.length;

                                ) {
                                    var i = e.shift();
                                    if (i) {
                                        if (
                                            'object' !==
                                            (void 0 === i ? 'undefined' : a(i))
                                        )
                                            throw new TypeError(
                                                i + 'must be non-object'
                                            );
                                        for (var r in i)
                                            n(i, r) && (t[r] = i[r]);
                                    }
                                }
                                return t;
                            }),
                                (i.shrinkBuf = function(t, e) {
                                    return t.length === e
                                        ? t
                                        : t.subarray
                                            ? t.subarray(0, e)
                                            : ((t.length = e), t);
                                });
                            var o = {
                                    arraySet: function(t, e, i, r, n) {
                                        if (e.subarray && t.subarray)
                                            t.set(e.subarray(i, i + r), n);
                                        else
                                            for (var a = 0; a < r; a++)
                                                t[n + a] = e[i + a];
                                    },
                                    flattenChunks: function(t) {
                                        var e, i, r, n, a, o;
                                        for (
                                            r = 0, e = 0, i = t.length;
                                            e < i;
                                            e++
                                        )
                                            r += t[e].length;
                                        for (
                                            o = new Uint8Array(r),
                                                n = 0,
                                                e = 0,
                                                i = t.length;
                                            e < i;
                                            e++
                                        )
                                            (a = t[e]),
                                                o.set(a, n),
                                                (n += a.length);
                                        return o;
                                    }
                                },
                                s = {
                                    arraySet: function(t, e, i, r, n) {
                                        for (var a = 0; a < r; a++)
                                            t[n + a] = e[i + a];
                                    },
                                    flattenChunks: function(t) {
                                        return [].concat.apply([], t);
                                    }
                                };
                            (i.setTyped = function(t) {
                                t
                                    ? ((i.Buf8 = Uint8Array),
                                      (i.Buf16 = Uint16Array),
                                      (i.Buf32 = Int32Array),
                                      i.assign(i, o))
                                    : ((i.Buf8 = Array),
                                      (i.Buf16 = Array),
                                      (i.Buf32 = Array),
                                      i.assign(i, s));
                            }),
                                i.setTyped(r);
                        },
                        {}
                    ],
                    57: [
                        function(t, e, i) {
                            var r = t('./common'),
                                n = !0,
                                a = !0;
                            try {
                                String.fromCharCode.apply(null, [0]);
                            } catch (t) {
                                n = !1;
                            }
                            try {
                                String.fromCharCode.apply(
                                    null,
                                    new Uint8Array(1)
                                );
                            } catch (t) {
                                a = !1;
                            }
                            for (var o = new r.Buf8(256), s = 0; s < 256; s++)
                                o[s] =
                                    s >= 252
                                        ? 6
                                        : s >= 248
                                            ? 5
                                            : s >= 240
                                                ? 4
                                                : s >= 224
                                                    ? 3
                                                    : s >= 192
                                                        ? 2
                                                        : 1;
                            function l(t, e) {
                                if (
                                    e < 65537 &&
                                    ((t.subarray && a) || (!t.subarray && n))
                                )
                                    return String.fromCharCode.apply(
                                        null,
                                        r.shrinkBuf(t, e)
                                    );
                                for (var i = '', o = 0; o < e; o++)
                                    i += String.fromCharCode(t[o]);
                                return i;
                            }
                            (o[254] = o[254] = 1),
                                (i.string2buf = function(t) {
                                    var e,
                                        i,
                                        n,
                                        a,
                                        o,
                                        s = t.length,
                                        l = 0;
                                    for (a = 0; a < s; a++)
                                        55296 ==
                                            (64512 & (i = t.charCodeAt(a))) &&
                                            a + 1 < s &&
                                            56320 ==
                                                (64512 &
                                                    (n = t.charCodeAt(
                                                        a + 1
                                                    ))) &&
                                            ((i =
                                                65536 +
                                                ((i - 55296) << 10) +
                                                (n - 56320)),
                                            a++),
                                            (l +=
                                                i < 128
                                                    ? 1
                                                    : i < 2048
                                                        ? 2
                                                        : i < 65536
                                                            ? 3
                                                            : 4);
                                    for (
                                        e = new r.Buf8(l), o = 0, a = 0;
                                        o < l;
                                        a++
                                    )
                                        55296 ==
                                            (64512 & (i = t.charCodeAt(a))) &&
                                            a + 1 < s &&
                                            56320 ==
                                                (64512 &
                                                    (n = t.charCodeAt(
                                                        a + 1
                                                    ))) &&
                                            ((i =
                                                65536 +
                                                ((i - 55296) << 10) +
                                                (n - 56320)),
                                            a++),
                                            i < 128
                                                ? (e[o++] = i)
                                                : i < 2048
                                                    ? ((e[o++] =
                                                          192 | (i >>> 6)),
                                                      (e[o++] = 128 | (63 & i)))
                                                    : i < 65536
                                                        ? ((e[o++] =
                                                              224 | (i >>> 12)),
                                                          (e[o++] =
                                                              128 |
                                                              ((i >>> 6) & 63)),
                                                          (e[o++] =
                                                              128 | (63 & i)))
                                                        : ((e[o++] =
                                                              240 | (i >>> 18)),
                                                          (e[o++] =
                                                              128 |
                                                              ((i >>> 12) &
                                                                  63)),
                                                          (e[o++] =
                                                              128 |
                                                              ((i >>> 6) & 63)),
                                                          (e[o++] =
                                                              128 | (63 & i)));
                                    return e;
                                }),
                                (i.buf2binstring = function(t) {
                                    return l(t, t.length);
                                }),
                                (i.binstring2buf = function(t) {
                                    for (
                                        var e = new r.Buf8(t.length),
                                            i = 0,
                                            n = e.length;
                                        i < n;
                                        i++
                                    )
                                        e[i] = t.charCodeAt(i);
                                    return e;
                                }),
                                (i.buf2string = function(t, e) {
                                    var i,
                                        r,
                                        n,
                                        a,
                                        s = e || t.length,
                                        f = new Array(2 * s);
                                    for (r = 0, i = 0; i < s; )
                                        if ((n = t[i++]) < 128) f[r++] = n;
                                        else if ((a = o[n]) > 4)
                                            (f[r++] = 65533), (i += a - 1);
                                        else {
                                            for (
                                                n &=
                                                    2 === a
                                                        ? 31
                                                        : 3 === a
                                                            ? 15
                                                            : 7;
                                                a > 1 && i < s;

                                            )
                                                (n = (n << 6) | (63 & t[i++])),
                                                    a--;
                                            a > 1
                                                ? (f[r++] = 65533)
                                                : n < 65536
                                                    ? (f[r++] = n)
                                                    : ((n -= 65536),
                                                      (f[r++] =
                                                          55296 |
                                                          ((n >> 10) & 1023)),
                                                      (f[r++] =
                                                          56320 | (1023 & n)));
                                        }
                                    return l(f, r);
                                }),
                                (i.utf8border = function(t, e) {
                                    var i;
                                    for (
                                        (e = e || t.length) > t.length &&
                                            (e = t.length),
                                            i = e - 1;
                                        i >= 0 && 128 == (192 & t[i]);

                                    )
                                        i--;
                                    return i < 0
                                        ? e
                                        : 0 === i
                                            ? e
                                            : i + o[t[i]] > e
                                                ? i
                                                : e;
                                });
                        },
                        { './common': 56 }
                    ],
                    58: [
                        function(t, e, i) {
                            e.exports = function(t, e, i, r) {
                                for (
                                    var n = (65535 & t) | 0,
                                        a = ((t >>> 16) & 65535) | 0,
                                        o = 0;
                                    0 !== i;

                                ) {
                                    i -= o = i > 2e3 ? 2e3 : i;
                                    do {
                                        a = (a + (n = (n + e[r++]) | 0)) | 0;
                                    } while (--o);
                                    (n %= 65521), (a %= 65521);
                                }
                                return n | (a << 16) | 0;
                            };
                        },
                        {}
                    ],
                    59: [
                        function(t, e, i) {
                            e.exports = {
                                Z_NO_FLUSH: 0,
                                Z_PARTIAL_FLUSH: 1,
                                Z_SYNC_FLUSH: 2,
                                Z_FULL_FLUSH: 3,
                                Z_FINISH: 4,
                                Z_BLOCK: 5,
                                Z_TREES: 6,
                                Z_OK: 0,
                                Z_STREAM_END: 1,
                                Z_NEED_DICT: 2,
                                Z_ERRNO: -1,
                                Z_STREAM_ERROR: -2,
                                Z_DATA_ERROR: -3,
                                Z_BUF_ERROR: -5,
                                Z_NO_COMPRESSION: 0,
                                Z_BEST_SPEED: 1,
                                Z_BEST_COMPRESSION: 9,
                                Z_DEFAULT_COMPRESSION: -1,
                                Z_FILTERED: 1,
                                Z_HUFFMAN_ONLY: 2,
                                Z_RLE: 3,
                                Z_FIXED: 4,
                                Z_DEFAULT_STRATEGY: 0,
                                Z_BINARY: 0,
                                Z_TEXT: 1,
                                Z_UNKNOWN: 2,
                                Z_DEFLATED: 8
                            };
                        },
                        {}
                    ],
                    60: [
                        function(t, e, i) {
                            var r = (function() {
                                for (var t, e = [], i = 0; i < 256; i++) {
                                    t = i;
                                    for (var r = 0; r < 8; r++)
                                        t =
                                            1 & t
                                                ? 3988292384 ^ (t >>> 1)
                                                : t >>> 1;
                                    e[i] = t;
                                }
                                return e;
                            })();
                            e.exports = function(t, e, i, n) {
                                var a = r,
                                    o = n + i;
                                t ^= -1;
                                for (var s = n; s < o; s++)
                                    t = (t >>> 8) ^ a[255 & (t ^ e[s])];
                                return -1 ^ t;
                            };
                        },
                        {}
                    ],
                    61: [
                        function(t, e, i) {
                            var r,
                                n = t('../utils/common'),
                                a = t('./trees'),
                                o = t('./adler32'),
                                s = t('./crc32'),
                                l = t('./messages'),
                                f = 0,
                                h = 1,
                                c = 3,
                                u = 4,
                                p = 5,
                                d = 0,
                                m = 1,
                                g = -2,
                                b = -3,
                                v = -5,
                                y = -1,
                                w = 1,
                                _ = 2,
                                x = 3,
                                k = 4,
                                E = 0,
                                I = 2,
                                S = 8,
                                A = 9,
                                T = 15,
                                C = 8,
                                M = 286,
                                P = 30,
                                L = 19,
                                O = 2 * M + 1,
                                R = 15,
                                B = 3,
                                D = 258,
                                z = D + B + 1,
                                U = 32,
                                N = 42,
                                F = 69,
                                j = 73,
                                H = 91,
                                G = 103,
                                q = 113,
                                W = 666,
                                Z = 1,
                                X = 2,
                                Y = 3,
                                J = 4,
                                V = 3;
                            function Q(t, e) {
                                return (t.msg = l[e]), e;
                            }
                            function K(t) {
                                return (t << 1) - (t > 4 ? 9 : 0);
                            }
                            function $(t) {
                                for (var e = t.length; --e >= 0; ) t[e] = 0;
                            }
                            function tt(t) {
                                var e = t.state,
                                    i = e.pending;
                                i > t.avail_out && (i = t.avail_out),
                                    0 !== i &&
                                        (n.arraySet(
                                            t.output,
                                            e.pending_buf,
                                            e.pending_out,
                                            i,
                                            t.next_out
                                        ),
                                        (t.next_out += i),
                                        (e.pending_out += i),
                                        (t.total_out += i),
                                        (t.avail_out -= i),
                                        (e.pending -= i),
                                        0 === e.pending && (e.pending_out = 0));
                            }
                            function et(t, e) {
                                a._tr_flush_block(
                                    t,
                                    t.block_start >= 0 ? t.block_start : -1,
                                    t.strstart - t.block_start,
                                    e
                                ),
                                    (t.block_start = t.strstart),
                                    tt(t.strm);
                            }
                            function it(t, e) {
                                t.pending_buf[t.pending++] = e;
                            }
                            function rt(t, e) {
                                (t.pending_buf[t.pending++] = (e >>> 8) & 255),
                                    (t.pending_buf[t.pending++] = 255 & e);
                            }
                            function nt(t, e, i, r) {
                                var a = t.avail_in;
                                return (
                                    a > r && (a = r),
                                    0 === a
                                        ? 0
                                        : ((t.avail_in -= a),
                                          n.arraySet(
                                              e,
                                              t.input,
                                              t.next_in,
                                              a,
                                              i
                                          ),
                                          1 === t.state.wrap
                                              ? (t.adler = o(t.adler, e, a, i))
                                              : 2 === t.state.wrap &&
                                                (t.adler = s(t.adler, e, a, i)),
                                          (t.next_in += a),
                                          (t.total_in += a),
                                          a)
                                );
                            }
                            function at(t, e) {
                                var i,
                                    r,
                                    n = t.max_chain_length,
                                    a = t.strstart,
                                    o = t.prev_length,
                                    s = t.nice_match,
                                    l =
                                        t.strstart > t.w_size - z
                                            ? t.strstart - (t.w_size - z)
                                            : 0,
                                    f = t.window,
                                    h = t.w_mask,
                                    c = t.prev,
                                    u = t.strstart + D,
                                    p = f[a + o - 1],
                                    d = f[a + o];
                                t.prev_length >= t.good_match && (n >>= 2),
                                    s > t.lookahead && (s = t.lookahead);
                                do {
                                    if (
                                        f[(i = e) + o] === d &&
                                        f[i + o - 1] === p &&
                                        f[i] === f[a] &&
                                        f[++i] === f[a + 1]
                                    ) {
                                        (a += 2), i++;
                                        do {} while (
                                            f[++a] === f[++i] &&
                                            f[++a] === f[++i] &&
                                            f[++a] === f[++i] &&
                                            f[++a] === f[++i] &&
                                            f[++a] === f[++i] &&
                                            f[++a] === f[++i] &&
                                            f[++a] === f[++i] &&
                                            f[++a] === f[++i] &&
                                            a < u
                                        );
                                        if (
                                            ((r = D - (u - a)),
                                            (a = u - D),
                                            r > o)
                                        ) {
                                            if (
                                                ((t.match_start = e),
                                                (o = r),
                                                r >= s)
                                            )
                                                break;
                                            (p = f[a + o - 1]), (d = f[a + o]);
                                        }
                                    }
                                } while ((e = c[e & h]) > l && 0 != --n);
                                return o <= t.lookahead ? o : t.lookahead;
                            }
                            function ot(t) {
                                var e,
                                    i,
                                    r,
                                    a,
                                    o,
                                    s = t.w_size;
                                do {
                                    if (
                                        ((a =
                                            t.window_size -
                                            t.lookahead -
                                            t.strstart),
                                        t.strstart >= s + (s - z))
                                    ) {
                                        n.arraySet(t.window, t.window, s, s, 0),
                                            (t.match_start -= s),
                                            (t.strstart -= s),
                                            (t.block_start -= s),
                                            (e = i = t.hash_size);
                                        do {
                                            (r = t.head[--e]),
                                                (t.head[e] =
                                                    r >= s ? r - s : 0);
                                        } while (--i);
                                        e = i = s;
                                        do {
                                            (r = t.prev[--e]),
                                                (t.prev[e] =
                                                    r >= s ? r - s : 0);
                                        } while (--i);
                                        a += s;
                                    }
                                    if (0 === t.strm.avail_in) break;
                                    if (
                                        ((i = nt(
                                            t.strm,
                                            t.window,
                                            t.strstart + t.lookahead,
                                            a
                                        )),
                                        (t.lookahead += i),
                                        t.lookahead + t.insert >= B)
                                    )
                                        for (
                                            o = t.strstart - t.insert,
                                                t.ins_h = t.window[o],
                                                t.ins_h =
                                                    ((t.ins_h << t.hash_shift) ^
                                                        t.window[o + 1]) &
                                                    t.hash_mask;
                                            t.insert &&
                                            ((t.ins_h =
                                                ((t.ins_h << t.hash_shift) ^
                                                    t.window[o + B - 1]) &
                                                t.hash_mask),
                                            (t.prev[o & t.w_mask] =
                                                t.head[t.ins_h]),
                                            (t.head[t.ins_h] = o),
                                            o++,
                                            t.insert--,
                                            !(t.lookahead + t.insert < B));

                                        );
                                } while (
                                    t.lookahead < z &&
                                    0 !== t.strm.avail_in
                                );
                            }
                            function st(t, e) {
                                for (var i, r; ; ) {
                                    if (t.lookahead < z) {
                                        if ((ot(t), t.lookahead < z && e === f))
                                            return Z;
                                        if (0 === t.lookahead) break;
                                    }
                                    if (
                                        ((i = 0),
                                        t.lookahead >= B &&
                                            ((t.ins_h =
                                                ((t.ins_h << t.hash_shift) ^
                                                    t.window[
                                                        t.strstart + B - 1
                                                    ]) &
                                                t.hash_mask),
                                            (i = t.prev[t.strstart & t.w_mask] =
                                                t.head[t.ins_h]),
                                            (t.head[t.ins_h] = t.strstart)),
                                        0 !== i &&
                                            t.strstart - i <= t.w_size - z &&
                                            (t.match_length = at(t, i)),
                                        t.match_length >= B)
                                    )
                                        if (
                                            ((r = a._tr_tally(
                                                t,
                                                t.strstart - t.match_start,
                                                t.match_length - B
                                            )),
                                            (t.lookahead -= t.match_length),
                                            t.match_length <=
                                                t.max_lazy_match &&
                                                t.lookahead >= B)
                                        ) {
                                            t.match_length--;
                                            do {
                                                t.strstart++,
                                                    (t.ins_h =
                                                        ((t.ins_h <<
                                                            t.hash_shift) ^
                                                            t.window[
                                                                t.strstart +
                                                                    B -
                                                                    1
                                                            ]) &
                                                        t.hash_mask),
                                                    (i = t.prev[
                                                        t.strstart & t.w_mask
                                                    ] =
                                                        t.head[t.ins_h]),
                                                    (t.head[t.ins_h] =
                                                        t.strstart);
                                            } while (0 != --t.match_length);
                                            t.strstart++;
                                        } else
                                            (t.strstart += t.match_length),
                                                (t.match_length = 0),
                                                (t.ins_h =
                                                    t.window[t.strstart]),
                                                (t.ins_h =
                                                    ((t.ins_h << t.hash_shift) ^
                                                        t.window[
                                                            t.strstart + 1
                                                        ]) &
                                                    t.hash_mask);
                                    else
                                        (r = a._tr_tally(
                                            t,
                                            0,
                                            t.window[t.strstart]
                                        )),
                                            t.lookahead--,
                                            t.strstart++;
                                    if (
                                        r &&
                                        (et(t, !1), 0 === t.strm.avail_out)
                                    )
                                        return Z;
                                }
                                return (
                                    (t.insert =
                                        t.strstart < B - 1
                                            ? t.strstart
                                            : B - 1),
                                    e === u
                                        ? (et(t, !0),
                                          0 === t.strm.avail_out ? Y : J)
                                        : t.last_lit &&
                                          (et(t, !1), 0 === t.strm.avail_out)
                                            ? Z
                                            : X
                                );
                            }
                            function lt(t, e) {
                                for (var i, r, n; ; ) {
                                    if (t.lookahead < z) {
                                        if ((ot(t), t.lookahead < z && e === f))
                                            return Z;
                                        if (0 === t.lookahead) break;
                                    }
                                    if (
                                        ((i = 0),
                                        t.lookahead >= B &&
                                            ((t.ins_h =
                                                ((t.ins_h << t.hash_shift) ^
                                                    t.window[
                                                        t.strstart + B - 1
                                                    ]) &
                                                t.hash_mask),
                                            (i = t.prev[t.strstart & t.w_mask] =
                                                t.head[t.ins_h]),
                                            (t.head[t.ins_h] = t.strstart)),
                                        (t.prev_length = t.match_length),
                                        (t.prev_match = t.match_start),
                                        (t.match_length = B - 1),
                                        0 !== i &&
                                            t.prev_length < t.max_lazy_match &&
                                            t.strstart - i <= t.w_size - z &&
                                            ((t.match_length = at(t, i)),
                                            t.match_length <= 5 &&
                                                (t.strategy === w ||
                                                    (t.match_length === B &&
                                                        t.strstart -
                                                            t.match_start >
                                                            4096)) &&
                                                (t.match_length = B - 1)),
                                        t.prev_length >= B &&
                                            t.match_length <= t.prev_length)
                                    ) {
                                        (n = t.strstart + t.lookahead - B),
                                            (r = a._tr_tally(
                                                t,
                                                t.strstart - 1 - t.prev_match,
                                                t.prev_length - B
                                            )),
                                            (t.lookahead -= t.prev_length - 1),
                                            (t.prev_length -= 2);
                                        do {
                                            ++t.strstart <= n &&
                                                ((t.ins_h =
                                                    ((t.ins_h << t.hash_shift) ^
                                                        t.window[
                                                            t.strstart + B - 1
                                                        ]) &
                                                    t.hash_mask),
                                                (i = t.prev[
                                                    t.strstart & t.w_mask
                                                ] =
                                                    t.head[t.ins_h]),
                                                (t.head[t.ins_h] = t.strstart));
                                        } while (0 != --t.prev_length);
                                        if (
                                            ((t.match_available = 0),
                                            (t.match_length = B - 1),
                                            t.strstart++,
                                            r &&
                                                (et(t, !1),
                                                0 === t.strm.avail_out))
                                        )
                                            return Z;
                                    } else if (t.match_available) {
                                        if (
                                            ((r = a._tr_tally(
                                                t,
                                                0,
                                                t.window[t.strstart - 1]
                                            )) && et(t, !1),
                                            t.strstart++,
                                            t.lookahead--,
                                            0 === t.strm.avail_out)
                                        )
                                            return Z;
                                    } else
                                        (t.match_available = 1),
                                            t.strstart++,
                                            t.lookahead--;
                                }
                                return (
                                    t.match_available &&
                                        ((r = a._tr_tally(
                                            t,
                                            0,
                                            t.window[t.strstart - 1]
                                        )),
                                        (t.match_available = 0)),
                                    (t.insert =
                                        t.strstart < B - 1
                                            ? t.strstart
                                            : B - 1),
                                    e === u
                                        ? (et(t, !0),
                                          0 === t.strm.avail_out ? Y : J)
                                        : t.last_lit &&
                                          (et(t, !1), 0 === t.strm.avail_out)
                                            ? Z
                                            : X
                                );
                            }
                            function ft(t, e, i, r, n) {
                                (this.good_length = t),
                                    (this.max_lazy = e),
                                    (this.nice_length = i),
                                    (this.max_chain = r),
                                    (this.func = n);
                            }
                            function ht(t) {
                                var e;
                                return t && t.state
                                    ? ((t.total_in = t.total_out = 0),
                                      (t.data_type = I),
                                      ((e = t.state).pending = 0),
                                      (e.pending_out = 0),
                                      e.wrap < 0 && (e.wrap = -e.wrap),
                                      (e.status = e.wrap ? N : q),
                                      (t.adler = 2 === e.wrap ? 0 : 1),
                                      (e.last_flush = f),
                                      a._tr_init(e),
                                      d)
                                    : Q(t, g);
                            }
                            function ct(t) {
                                var e = ht(t);
                                return (
                                    e === d &&
                                        (function(t) {
                                            (t.window_size = 2 * t.w_size),
                                                $(t.head),
                                                (t.max_lazy_match =
                                                    r[t.level].max_lazy),
                                                (t.good_match =
                                                    r[t.level].good_length),
                                                (t.nice_match =
                                                    r[t.level].nice_length),
                                                (t.max_chain_length =
                                                    r[t.level].max_chain),
                                                (t.strstart = 0),
                                                (t.block_start = 0),
                                                (t.lookahead = 0),
                                                (t.insert = 0),
                                                (t.match_length = t.prev_length =
                                                    B - 1),
                                                (t.match_available = 0),
                                                (t.ins_h = 0);
                                        })(t.state),
                                    e
                                );
                            }
                            function ut(t, e, i, r, a, o) {
                                if (!t) return g;
                                var s = 1;
                                if (
                                    (e === y && (e = 6),
                                    r < 0
                                        ? ((s = 0), (r = -r))
                                        : r > 15 && ((s = 2), (r -= 16)),
                                    a < 1 ||
                                        a > A ||
                                        i !== S ||
                                        r < 8 ||
                                        r > 15 ||
                                        e < 0 ||
                                        e > 9 ||
                                        o < 0 ||
                                        o > k)
                                )
                                    return Q(t, g);
                                8 === r && (r = 9);
                                var l = new function() {
                                    (this.strm = null),
                                        (this.status = 0),
                                        (this.pending_buf = null),
                                        (this.pending_buf_size = 0),
                                        (this.pending_out = 0),
                                        (this.pending = 0),
                                        (this.wrap = 0),
                                        (this.gzhead = null),
                                        (this.gzindex = 0),
                                        (this.method = S),
                                        (this.last_flush = -1),
                                        (this.w_size = 0),
                                        (this.w_bits = 0),
                                        (this.w_mask = 0),
                                        (this.window = null),
                                        (this.window_size = 0),
                                        (this.prev = null),
                                        (this.head = null),
                                        (this.ins_h = 0),
                                        (this.hash_size = 0),
                                        (this.hash_bits = 0),
                                        (this.hash_mask = 0),
                                        (this.hash_shift = 0),
                                        (this.block_start = 0),
                                        (this.match_length = 0),
                                        (this.prev_match = 0),
                                        (this.match_available = 0),
                                        (this.strstart = 0),
                                        (this.match_start = 0),
                                        (this.lookahead = 0),
                                        (this.prev_length = 0),
                                        (this.max_chain_length = 0),
                                        (this.max_lazy_match = 0),
                                        (this.level = 0),
                                        (this.strategy = 0),
                                        (this.good_match = 0),
                                        (this.nice_match = 0),
                                        (this.dyn_ltree = new n.Buf16(2 * O)),
                                        (this.dyn_dtree = new n.Buf16(
                                            2 * (2 * P + 1)
                                        )),
                                        (this.bl_tree = new n.Buf16(
                                            2 * (2 * L + 1)
                                        )),
                                        $(this.dyn_ltree),
                                        $(this.dyn_dtree),
                                        $(this.bl_tree),
                                        (this.l_desc = null),
                                        (this.d_desc = null),
                                        (this.bl_desc = null),
                                        (this.bl_count = new n.Buf16(R + 1)),
                                        (this.heap = new n.Buf16(2 * M + 1)),
                                        $(this.heap),
                                        (this.heap_len = 0),
                                        (this.heap_max = 0),
                                        (this.depth = new n.Buf16(2 * M + 1)),
                                        $(this.depth),
                                        (this.l_buf = 0),
                                        (this.lit_bufsize = 0),
                                        (this.last_lit = 0),
                                        (this.d_buf = 0),
                                        (this.opt_len = 0),
                                        (this.static_len = 0),
                                        (this.matches = 0),
                                        (this.insert = 0),
                                        (this.bi_buf = 0),
                                        (this.bi_valid = 0);
                                }();
                                return (
                                    (t.state = l),
                                    (l.strm = t),
                                    (l.wrap = s),
                                    (l.gzhead = null),
                                    (l.w_bits = r),
                                    (l.w_size = 1 << l.w_bits),
                                    (l.w_mask = l.w_size - 1),
                                    (l.hash_bits = a + 7),
                                    (l.hash_size = 1 << l.hash_bits),
                                    (l.hash_mask = l.hash_size - 1),
                                    (l.hash_shift = ~~(
                                        (l.hash_bits + B - 1) /
                                        B
                                    )),
                                    (l.window = new n.Buf8(2 * l.w_size)),
                                    (l.head = new n.Buf16(l.hash_size)),
                                    (l.prev = new n.Buf16(l.w_size)),
                                    (l.lit_bufsize = 1 << (a + 6)),
                                    (l.pending_buf_size = 4 * l.lit_bufsize),
                                    (l.pending_buf = new n.Buf8(
                                        l.pending_buf_size
                                    )),
                                    (l.d_buf = 1 * l.lit_bufsize),
                                    (l.l_buf = 3 * l.lit_bufsize),
                                    (l.level = e),
                                    (l.strategy = o),
                                    (l.method = i),
                                    ct(t)
                                );
                            }
                            (r = [
                                new ft(0, 0, 0, 0, function(t, e) {
                                    var i = 65535;
                                    for (
                                        i > t.pending_buf_size - 5 &&
                                        (i = t.pending_buf_size - 5);
                                        ;

                                    ) {
                                        if (t.lookahead <= 1) {
                                            if (
                                                (ot(t),
                                                0 === t.lookahead && e === f)
                                            )
                                                return Z;
                                            if (0 === t.lookahead) break;
                                        }
                                        (t.strstart += t.lookahead),
                                            (t.lookahead = 0);
                                        var r = t.block_start + i;
                                        if (
                                            (0 === t.strstart ||
                                                t.strstart >= r) &&
                                            ((t.lookahead = t.strstart - r),
                                            (t.strstart = r),
                                            et(t, !1),
                                            0 === t.strm.avail_out)
                                        )
                                            return Z;
                                        if (
                                            t.strstart - t.block_start >=
                                                t.w_size - z &&
                                            (et(t, !1), 0 === t.strm.avail_out)
                                        )
                                            return Z;
                                    }
                                    return (
                                        (t.insert = 0),
                                        e === u
                                            ? (et(t, !0),
                                              0 === t.strm.avail_out ? Y : J)
                                            : (t.strstart > t.block_start &&
                                                  (et(t, !1), t.strm.avail_out),
                                              Z)
                                    );
                                }),
                                new ft(4, 4, 8, 4, st),
                                new ft(4, 5, 16, 8, st),
                                new ft(4, 6, 32, 32, st),
                                new ft(4, 4, 16, 16, lt),
                                new ft(8, 16, 32, 32, lt),
                                new ft(8, 16, 128, 128, lt),
                                new ft(8, 32, 128, 256, lt),
                                new ft(32, 128, 258, 1024, lt),
                                new ft(32, 258, 258, 4096, lt)
                            ]),
                                (i.deflateInit = function(t, e) {
                                    return ut(t, e, S, T, C, E);
                                }),
                                (i.deflateInit2 = ut),
                                (i.deflateReset = ct),
                                (i.deflateResetKeep = ht),
                                (i.deflateSetHeader = function(t, e) {
                                    return t && t.state
                                        ? 2 !== t.state.wrap
                                            ? g
                                            : ((t.state.gzhead = e), d)
                                        : g;
                                }),
                                (i.deflate = function(t, e) {
                                    var i, n, o, l;
                                    if (!t || !t.state || e > p || e < 0)
                                        return t ? Q(t, g) : g;
                                    if (
                                        ((n = t.state),
                                        !t.output ||
                                            (!t.input && 0 !== t.avail_in) ||
                                            (n.status === W && e !== u))
                                    )
                                        return Q(t, 0 === t.avail_out ? v : g);
                                    if (
                                        ((n.strm = t),
                                        (i = n.last_flush),
                                        (n.last_flush = e),
                                        n.status === N)
                                    )
                                        if (2 === n.wrap)
                                            (t.adler = 0),
                                                it(n, 31),
                                                it(n, 139),
                                                it(n, 8),
                                                n.gzhead
                                                    ? (it(
                                                          n,
                                                          (n.gzhead.text
                                                              ? 1
                                                              : 0) +
                                                              (n.gzhead.hcrc
                                                                  ? 2
                                                                  : 0) +
                                                              (n.gzhead.extra
                                                                  ? 4
                                                                  : 0) +
                                                              (n.gzhead.name
                                                                  ? 8
                                                                  : 0) +
                                                              (n.gzhead.comment
                                                                  ? 16
                                                                  : 0)
                                                      ),
                                                      it(
                                                          n,
                                                          255 & n.gzhead.time
                                                      ),
                                                      it(
                                                          n,
                                                          (n.gzhead.time >> 8) &
                                                              255
                                                      ),
                                                      it(
                                                          n,
                                                          (n.gzhead.time >>
                                                              16) &
                                                              255
                                                      ),
                                                      it(
                                                          n,
                                                          (n.gzhead.time >>
                                                              24) &
                                                              255
                                                      ),
                                                      it(
                                                          n,
                                                          9 === n.level
                                                              ? 2
                                                              : n.strategy >=
                                                                    _ ||
                                                                n.level < 2
                                                                  ? 4
                                                                  : 0
                                                      ),
                                                      it(n, 255 & n.gzhead.os),
                                                      n.gzhead.extra &&
                                                          n.gzhead.extra
                                                              .length &&
                                                          (it(
                                                              n,
                                                              255 &
                                                                  n.gzhead.extra
                                                                      .length
                                                          ),
                                                          it(
                                                              n,
                                                              (n.gzhead.extra
                                                                  .length >>
                                                                  8) &
                                                                  255
                                                          )),
                                                      n.gzhead.hcrc &&
                                                          (t.adler = s(
                                                              t.adler,
                                                              n.pending_buf,
                                                              n.pending,
                                                              0
                                                          )),
                                                      (n.gzindex = 0),
                                                      (n.status = F))
                                                    : (it(n, 0),
                                                      it(n, 0),
                                                      it(n, 0),
                                                      it(n, 0),
                                                      it(n, 0),
                                                      it(
                                                          n,
                                                          9 === n.level
                                                              ? 2
                                                              : n.strategy >=
                                                                    _ ||
                                                                n.level < 2
                                                                  ? 4
                                                                  : 0
                                                      ),
                                                      it(n, V),
                                                      (n.status = q));
                                        else {
                                            var b =
                                                (S + ((n.w_bits - 8) << 4)) <<
                                                8;
                                            (b |=
                                                (n.strategy >= _ || n.level < 2
                                                    ? 0
                                                    : n.level < 6
                                                        ? 1
                                                        : 6 === n.level
                                                            ? 2
                                                            : 3) << 6),
                                                0 !== n.strstart && (b |= U),
                                                (b += 31 - (b % 31)),
                                                (n.status = q),
                                                rt(n, b),
                                                0 !== n.strstart &&
                                                    (rt(n, t.adler >>> 16),
                                                    rt(n, 65535 & t.adler)),
                                                (t.adler = 1);
                                        }
                                    if (n.status === F)
                                        if (n.gzhead.extra) {
                                            for (
                                                o = n.pending;
                                                n.gzindex <
                                                    (65535 &
                                                        n.gzhead.extra
                                                            .length) &&
                                                (n.pending !==
                                                    n.pending_buf_size ||
                                                    (n.gzhead.hcrc &&
                                                        n.pending > o &&
                                                        (t.adler = s(
                                                            t.adler,
                                                            n.pending_buf,
                                                            n.pending - o,
                                                            o
                                                        )),
                                                    tt(t),
                                                    (o = n.pending),
                                                    n.pending !==
                                                        n.pending_buf_size));

                                            )
                                                it(
                                                    n,
                                                    255 &
                                                        n.gzhead.extra[
                                                            n.gzindex
                                                        ]
                                                ),
                                                    n.gzindex++;
                                            n.gzhead.hcrc &&
                                                n.pending > o &&
                                                (t.adler = s(
                                                    t.adler,
                                                    n.pending_buf,
                                                    n.pending - o,
                                                    o
                                                )),
                                                n.gzindex ===
                                                    n.gzhead.extra.length &&
                                                    ((n.gzindex = 0),
                                                    (n.status = j));
                                        } else n.status = j;
                                    if (n.status === j)
                                        if (n.gzhead.name) {
                                            o = n.pending;
                                            do {
                                                if (
                                                    n.pending ===
                                                        n.pending_buf_size &&
                                                    (n.gzhead.hcrc &&
                                                        n.pending > o &&
                                                        (t.adler = s(
                                                            t.adler,
                                                            n.pending_buf,
                                                            n.pending - o,
                                                            o
                                                        )),
                                                    tt(t),
                                                    (o = n.pending),
                                                    n.pending ===
                                                        n.pending_buf_size)
                                                ) {
                                                    l = 1;
                                                    break;
                                                }
                                                (l =
                                                    n.gzindex <
                                                    n.gzhead.name.length
                                                        ? 255 &
                                                          n.gzhead.name.charCodeAt(
                                                              n.gzindex++
                                                          )
                                                        : 0),
                                                    it(n, l);
                                            } while (0 !== l);
                                            n.gzhead.hcrc &&
                                                n.pending > o &&
                                                (t.adler = s(
                                                    t.adler,
                                                    n.pending_buf,
                                                    n.pending - o,
                                                    o
                                                )),
                                                0 === l &&
                                                    ((n.gzindex = 0),
                                                    (n.status = H));
                                        } else n.status = H;
                                    if (n.status === H)
                                        if (n.gzhead.comment) {
                                            o = n.pending;
                                            do {
                                                if (
                                                    n.pending ===
                                                        n.pending_buf_size &&
                                                    (n.gzhead.hcrc &&
                                                        n.pending > o &&
                                                        (t.adler = s(
                                                            t.adler,
                                                            n.pending_buf,
                                                            n.pending - o,
                                                            o
                                                        )),
                                                    tt(t),
                                                    (o = n.pending),
                                                    n.pending ===
                                                        n.pending_buf_size)
                                                ) {
                                                    l = 1;
                                                    break;
                                                }
                                                (l =
                                                    n.gzindex <
                                                    n.gzhead.comment.length
                                                        ? 255 &
                                                          n.gzhead.comment.charCodeAt(
                                                              n.gzindex++
                                                          )
                                                        : 0),
                                                    it(n, l);
                                            } while (0 !== l);
                                            n.gzhead.hcrc &&
                                                n.pending > o &&
                                                (t.adler = s(
                                                    t.adler,
                                                    n.pending_buf,
                                                    n.pending - o,
                                                    o
                                                )),
                                                0 === l && (n.status = G);
                                        } else n.status = G;
                                    if (
                                        (n.status === G &&
                                            (n.gzhead.hcrc
                                                ? (n.pending + 2 >
                                                      n.pending_buf_size &&
                                                      tt(t),
                                                  n.pending + 2 <=
                                                      n.pending_buf_size &&
                                                      (it(n, 255 & t.adler),
                                                      it(
                                                          n,
                                                          (t.adler >> 8) & 255
                                                      ),
                                                      (t.adler = 0),
                                                      (n.status = q)))
                                                : (n.status = q)),
                                        0 !== n.pending)
                                    ) {
                                        if ((tt(t), 0 === t.avail_out))
                                            return (n.last_flush = -1), d;
                                    } else if (
                                        0 === t.avail_in &&
                                        K(e) <= K(i) &&
                                        e !== u
                                    )
                                        return Q(t, v);
                                    if (n.status === W && 0 !== t.avail_in)
                                        return Q(t, v);
                                    if (
                                        0 !== t.avail_in ||
                                        0 !== n.lookahead ||
                                        (e !== f && n.status !== W)
                                    ) {
                                        var y =
                                            n.strategy === _
                                                ? (function(t, e) {
                                                      for (var i; ; ) {
                                                          if (
                                                              0 ===
                                                                  t.lookahead &&
                                                              (ot(t),
                                                              0 === t.lookahead)
                                                          ) {
                                                              if (e === f)
                                                                  return Z;
                                                              break;
                                                          }
                                                          if (
                                                              ((t.match_length = 0),
                                                              (i = a._tr_tally(
                                                                  t,
                                                                  0,
                                                                  t.window[
                                                                      t.strstart
                                                                  ]
                                                              )),
                                                              t.lookahead--,
                                                              t.strstart++,
                                                              i &&
                                                                  (et(t, !1),
                                                                  0 ===
                                                                      t.strm
                                                                          .avail_out))
                                                          )
                                                              return Z;
                                                      }
                                                      return (
                                                          (t.insert = 0),
                                                          e === u
                                                              ? (et(t, !0),
                                                                0 ===
                                                                t.strm.avail_out
                                                                    ? Y
                                                                    : J)
                                                              : t.last_lit &&
                                                                (et(t, !1),
                                                                0 ===
                                                                    t.strm
                                                                        .avail_out)
                                                                  ? Z
                                                                  : X
                                                      );
                                                  })(n, e)
                                                : n.strategy === x
                                                    ? (function(t, e) {
                                                          for (
                                                              var i,
                                                                  r,
                                                                  n,
                                                                  o,
                                                                  s = t.window;
                                                              ;

                                                          ) {
                                                              if (
                                                                  t.lookahead <=
                                                                  D
                                                              ) {
                                                                  if (
                                                                      (ot(t),
                                                                      t.lookahead <=
                                                                          D &&
                                                                          e ===
                                                                              f)
                                                                  )
                                                                      return Z;
                                                                  if (
                                                                      0 ===
                                                                      t.lookahead
                                                                  )
                                                                      break;
                                                              }
                                                              if (
                                                                  ((t.match_length = 0),
                                                                  t.lookahead >=
                                                                      B &&
                                                                      t.strstart >
                                                                          0 &&
                                                                      (r =
                                                                          s[
                                                                              (n =
                                                                                  t.strstart -
                                                                                  1)
                                                                          ]) ===
                                                                          s[
                                                                              ++n
                                                                          ] &&
                                                                      r ===
                                                                          s[
                                                                              ++n
                                                                          ] &&
                                                                      r ===
                                                                          s[
                                                                              ++n
                                                                          ])
                                                              ) {
                                                                  o =
                                                                      t.strstart +
                                                                      D;
                                                                  do {} while (
                                                                      r ===
                                                                          s[
                                                                              ++n
                                                                          ] &&
                                                                      r ===
                                                                          s[
                                                                              ++n
                                                                          ] &&
                                                                      r ===
                                                                          s[
                                                                              ++n
                                                                          ] &&
                                                                      r ===
                                                                          s[
                                                                              ++n
                                                                          ] &&
                                                                      r ===
                                                                          s[
                                                                              ++n
                                                                          ] &&
                                                                      r ===
                                                                          s[
                                                                              ++n
                                                                          ] &&
                                                                      r ===
                                                                          s[
                                                                              ++n
                                                                          ] &&
                                                                      r ===
                                                                          s[
                                                                              ++n
                                                                          ] &&
                                                                      n < o
                                                                  );
                                                                  (t.match_length =
                                                                      D -
                                                                      (o - n)),
                                                                      t.match_length >
                                                                          t.lookahead &&
                                                                          (t.match_length =
                                                                              t.lookahead);
                                                              }
                                                              if (
                                                                  (t.match_length >=
                                                                  B
                                                                      ? ((i = a._tr_tally(
                                                                            t,
                                                                            1,
                                                                            t.match_length -
                                                                                B
                                                                        )),
                                                                        (t.lookahead -=
                                                                            t.match_length),
                                                                        (t.strstart +=
                                                                            t.match_length),
                                                                        (t.match_length = 0))
                                                                      : ((i = a._tr_tally(
                                                                            t,
                                                                            0,
                                                                            t
                                                                                .window[
                                                                                t
                                                                                    .strstart
                                                                            ]
                                                                        )),
                                                                        t.lookahead--,
                                                                        t.strstart++),
                                                                  i &&
                                                                      (et(
                                                                          t,
                                                                          !1
                                                                      ),
                                                                      0 ===
                                                                          t.strm
                                                                              .avail_out))
                                                              )
                                                                  return Z;
                                                          }
                                                          return (
                                                              (t.insert = 0),
                                                              e === u
                                                                  ? (et(t, !0),
                                                                    0 ===
                                                                    t.strm
                                                                        .avail_out
                                                                        ? Y
                                                                        : J)
                                                                  : t.last_lit &&
                                                                    (et(t, !1),
                                                                    0 ===
                                                                        t.strm
                                                                            .avail_out)
                                                                      ? Z
                                                                      : X
                                                          );
                                                      })(n, e)
                                                    : r[n.level].func(n, e);
                                        if (
                                            ((y !== Y && y !== J) ||
                                                (n.status = W),
                                            y === Z || y === Y)
                                        )
                                            return (
                                                0 === t.avail_out &&
                                                    (n.last_flush = -1),
                                                d
                                            );
                                        if (
                                            y === X &&
                                            (e === h
                                                ? a._tr_align(n)
                                                : e !== p &&
                                                  (a._tr_stored_block(
                                                      n,
                                                      0,
                                                      0,
                                                      !1
                                                  ),
                                                  e === c &&
                                                      ($(n.head),
                                                      0 === n.lookahead &&
                                                          ((n.strstart = 0),
                                                          (n.block_start = 0),
                                                          (n.insert = 0)))),
                                            tt(t),
                                            0 === t.avail_out)
                                        )
                                            return (n.last_flush = -1), d;
                                    }
                                    return e !== u
                                        ? d
                                        : n.wrap <= 0
                                            ? m
                                            : (2 === n.wrap
                                                  ? (it(n, 255 & t.adler),
                                                    it(n, (t.adler >> 8) & 255),
                                                    it(
                                                        n,
                                                        (t.adler >> 16) & 255
                                                    ),
                                                    it(
                                                        n,
                                                        (t.adler >> 24) & 255
                                                    ),
                                                    it(n, 255 & t.total_in),
                                                    it(
                                                        n,
                                                        (t.total_in >> 8) & 255
                                                    ),
                                                    it(
                                                        n,
                                                        (t.total_in >> 16) & 255
                                                    ),
                                                    it(
                                                        n,
                                                        (t.total_in >> 24) & 255
                                                    ))
                                                  : (rt(n, t.adler >>> 16),
                                                    rt(n, 65535 & t.adler)),
                                              tt(t),
                                              n.wrap > 0 && (n.wrap = -n.wrap),
                                              0 !== n.pending ? d : m);
                                }),
                                (i.deflateEnd = function(t) {
                                    var e;
                                    return t && t.state
                                        ? (e = t.state.status) !== N &&
                                          e !== F &&
                                          e !== j &&
                                          e !== H &&
                                          e !== G &&
                                          e !== q &&
                                          e !== W
                                            ? Q(t, g)
                                            : ((t.state = null),
                                              e === q ? Q(t, b) : d)
                                        : g;
                                }),
                                (i.deflateSetDictionary = function(t, e) {
                                    var i,
                                        r,
                                        a,
                                        s,
                                        l,
                                        f,
                                        h,
                                        c,
                                        u = e.length;
                                    if (!t || !t.state) return g;
                                    if (
                                        2 === (s = (i = t.state).wrap) ||
                                        (1 === s && i.status !== N) ||
                                        i.lookahead
                                    )
                                        return g;
                                    for (
                                        1 === s &&
                                            (t.adler = o(t.adler, e, u, 0)),
                                            i.wrap = 0,
                                            u >= i.w_size &&
                                                (0 === s &&
                                                    ($(i.head),
                                                    (i.strstart = 0),
                                                    (i.block_start = 0),
                                                    (i.insert = 0)),
                                                (c = new n.Buf8(i.w_size)),
                                                n.arraySet(
                                                    c,
                                                    e,
                                                    u - i.w_size,
                                                    i.w_size,
                                                    0
                                                ),
                                                (e = c),
                                                (u = i.w_size)),
                                            l = t.avail_in,
                                            f = t.next_in,
                                            h = t.input,
                                            t.avail_in = u,
                                            t.next_in = 0,
                                            t.input = e,
                                            ot(i);
                                        i.lookahead >= B;

                                    ) {
                                        (r = i.strstart),
                                            (a = i.lookahead - (B - 1));
                                        do {
                                            (i.ins_h =
                                                ((i.ins_h << i.hash_shift) ^
                                                    i.window[r + B - 1]) &
                                                i.hash_mask),
                                                (i.prev[r & i.w_mask] =
                                                    i.head[i.ins_h]),
                                                (i.head[i.ins_h] = r),
                                                r++;
                                        } while (--a);
                                        (i.strstart = r),
                                            (i.lookahead = B - 1),
                                            ot(i);
                                    }
                                    return (
                                        (i.strstart += i.lookahead),
                                        (i.block_start = i.strstart),
                                        (i.insert = i.lookahead),
                                        (i.lookahead = 0),
                                        (i.match_length = i.prev_length =
                                            B - 1),
                                        (i.match_available = 0),
                                        (t.next_in = f),
                                        (t.input = h),
                                        (t.avail_in = l),
                                        (i.wrap = s),
                                        d
                                    );
                                }),
                                (i.deflateInfo =
                                    'pako deflate (from Nodeca project)');
                        },
                        {
                            '../utils/common': 56,
                            './adler32': 58,
                            './crc32': 60,
                            './messages': 66,
                            './trees': 67
                        }
                    ],
                    62: [
                        function(t, e, i) {
                            e.exports = function() {
                                (this.text = 0),
                                    (this.time = 0),
                                    (this.xflags = 0),
                                    (this.os = 0),
                                    (this.extra = null),
                                    (this.extra_len = 0),
                                    (this.name = ''),
                                    (this.comment = ''),
                                    (this.hcrc = 0),
                                    (this.done = !1);
                            };
                        },
                        {}
                    ],
                    63: [
                        function(t, e, i) {
                            e.exports = function(t, e) {
                                var i,
                                    r,
                                    n,
                                    a,
                                    o,
                                    s,
                                    l,
                                    f,
                                    h,
                                    c,
                                    u,
                                    p,
                                    d,
                                    m,
                                    g,
                                    b,
                                    v,
                                    y,
                                    w,
                                    _,
                                    x,
                                    k,
                                    E,
                                    I,
                                    S;
                                (i = t.state),
                                    (r = t.next_in),
                                    (I = t.input),
                                    (n = r + (t.avail_in - 5)),
                                    (a = t.next_out),
                                    (S = t.output),
                                    (o = a - (e - t.avail_out)),
                                    (s = a + (t.avail_out - 257)),
                                    (l = i.dmax),
                                    (f = i.wsize),
                                    (h = i.whave),
                                    (c = i.wnext),
                                    (u = i.window),
                                    (p = i.hold),
                                    (d = i.bits),
                                    (m = i.lencode),
                                    (g = i.distcode),
                                    (b = (1 << i.lenbits) - 1),
                                    (v = (1 << i.distbits) - 1);
                                t: do {
                                    d < 15 &&
                                        ((p += I[r++] << d),
                                        (d += 8),
                                        (p += I[r++] << d),
                                        (d += 8)),
                                        (y = m[p & b]);
                                    e: for (;;) {
                                        if (
                                            ((p >>>= w = y >>> 24),
                                            (d -= w),
                                            0 === (w = (y >>> 16) & 255))
                                        )
                                            S[a++] = 65535 & y;
                                        else {
                                            if (!(16 & w)) {
                                                if (0 == (64 & w)) {
                                                    y =
                                                        m[
                                                            (65535 & y) +
                                                                (p &
                                                                    ((1 << w) -
                                                                        1))
                                                        ];
                                                    continue e;
                                                }
                                                if (32 & w) {
                                                    i.mode = 12;
                                                    break t;
                                                }
                                                (t.msg =
                                                    'invalid literal/length code'),
                                                    (i.mode = 30);
                                                break t;
                                            }
                                            (_ = 65535 & y),
                                                (w &= 15) &&
                                                    (d < w &&
                                                        ((p += I[r++] << d),
                                                        (d += 8)),
                                                    (_ += p & ((1 << w) - 1)),
                                                    (p >>>= w),
                                                    (d -= w)),
                                                d < 15 &&
                                                    ((p += I[r++] << d),
                                                    (d += 8),
                                                    (p += I[r++] << d),
                                                    (d += 8)),
                                                (y = g[p & v]);
                                            i: for (;;) {
                                                if (
                                                    ((p >>>= w = y >>> 24),
                                                    (d -= w),
                                                    !(
                                                        16 &
                                                        (w = (y >>> 16) & 255)
                                                    ))
                                                ) {
                                                    if (0 == (64 & w)) {
                                                        y =
                                                            g[
                                                                (65535 & y) +
                                                                    (p &
                                                                        ((1 <<
                                                                            w) -
                                                                            1))
                                                            ];
                                                        continue i;
                                                    }
                                                    (t.msg =
                                                        'invalid distance code'),
                                                        (i.mode = 30);
                                                    break t;
                                                }
                                                if (
                                                    ((x = 65535 & y),
                                                    d < (w &= 15) &&
                                                        ((p += I[r++] << d),
                                                        (d += 8) < w &&
                                                            ((p += I[r++] << d),
                                                            (d += 8))),
                                                    (x += p & ((1 << w) - 1)) >
                                                        l)
                                                ) {
                                                    (t.msg =
                                                        'invalid distance too far back'),
                                                        (i.mode = 30);
                                                    break t;
                                                }
                                                if (
                                                    ((p >>>= w),
                                                    (d -= w),
                                                    x > (w = a - o))
                                                ) {
                                                    if (
                                                        (w = x - w) > h &&
                                                        i.sane
                                                    ) {
                                                        (t.msg =
                                                            'invalid distance too far back'),
                                                            (i.mode = 30);
                                                        break t;
                                                    }
                                                    if (
                                                        ((k = 0),
                                                        (E = u),
                                                        0 === c)
                                                    ) {
                                                        if (
                                                            ((k += f - w),
                                                            w < _)
                                                        ) {
                                                            _ -= w;
                                                            do {
                                                                S[a++] = u[k++];
                                                            } while (--w);
                                                            (k = a - x),
                                                                (E = S);
                                                        }
                                                    } else if (c < w) {
                                                        if (
                                                            ((k += f + c - w),
                                                            (w -= c) < _)
                                                        ) {
                                                            _ -= w;
                                                            do {
                                                                S[a++] = u[k++];
                                                            } while (--w);
                                                            if (
                                                                ((k = 0), c < _)
                                                            ) {
                                                                _ -= w = c;
                                                                do {
                                                                    S[a++] =
                                                                        u[k++];
                                                                } while (--w);
                                                                (k = a - x),
                                                                    (E = S);
                                                            }
                                                        }
                                                    } else if (
                                                        ((k += c - w), w < _)
                                                    ) {
                                                        _ -= w;
                                                        do {
                                                            S[a++] = u[k++];
                                                        } while (--w);
                                                        (k = a - x), (E = S);
                                                    }
                                                    for (; _ > 2; )
                                                        (S[a++] = E[k++]),
                                                            (S[a++] = E[k++]),
                                                            (S[a++] = E[k++]),
                                                            (_ -= 3);
                                                    _ &&
                                                        ((S[a++] = E[k++]),
                                                        _ > 1 &&
                                                            (S[a++] = E[k++]));
                                                } else {
                                                    k = a - x;
                                                    do {
                                                        (S[a++] = S[k++]),
                                                            (S[a++] = S[k++]),
                                                            (S[a++] = S[k++]),
                                                            (_ -= 3);
                                                    } while (_ > 2);
                                                    _ &&
                                                        ((S[a++] = S[k++]),
                                                        _ > 1 &&
                                                            (S[a++] = S[k++]));
                                                }
                                                break;
                                            }
                                        }
                                        break;
                                    }
                                } while (r < n && a < s);
                                (r -= _ = d >> 3),
                                    (p &= (1 << (d -= _ << 3)) - 1),
                                    (t.next_in = r),
                                    (t.next_out = a),
                                    (t.avail_in =
                                        r < n ? n - r + 5 : 5 - (r - n)),
                                    (t.avail_out =
                                        a < s ? s - a + 257 : 257 - (a - s)),
                                    (i.hold = p),
                                    (i.bits = d);
                            };
                        },
                        {}
                    ],
                    64: [
                        function(t, e, i) {
                            var r = t('../utils/common'),
                                n = t('./adler32'),
                                a = t('./crc32'),
                                o = t('./inffast'),
                                s = t('./inftrees'),
                                l = 0,
                                f = 1,
                                h = 2,
                                c = 4,
                                u = 5,
                                p = 6,
                                d = 0,
                                m = 1,
                                g = 2,
                                b = -2,
                                v = -3,
                                y = -4,
                                w = -5,
                                _ = 8,
                                x = 1,
                                k = 2,
                                E = 3,
                                I = 4,
                                S = 5,
                                A = 6,
                                T = 7,
                                C = 8,
                                M = 9,
                                P = 10,
                                L = 11,
                                O = 12,
                                R = 13,
                                B = 14,
                                D = 15,
                                z = 16,
                                U = 17,
                                N = 18,
                                F = 19,
                                j = 20,
                                H = 21,
                                G = 22,
                                q = 23,
                                W = 24,
                                Z = 25,
                                X = 26,
                                Y = 27,
                                J = 28,
                                V = 29,
                                Q = 30,
                                K = 31,
                                $ = 32,
                                tt = 852,
                                et = 592,
                                it = 15;
                            function rt(t) {
                                return (
                                    ((t >>> 24) & 255) +
                                    ((t >>> 8) & 65280) +
                                    ((65280 & t) << 8) +
                                    ((255 & t) << 24)
                                );
                            }
                            function nt(t) {
                                var e;
                                return t && t.state
                                    ? ((e = t.state),
                                      (t.total_in = t.total_out = e.total = 0),
                                      (t.msg = ''),
                                      e.wrap && (t.adler = 1 & e.wrap),
                                      (e.mode = x),
                                      (e.last = 0),
                                      (e.havedict = 0),
                                      (e.dmax = 32768),
                                      (e.head = null),
                                      (e.hold = 0),
                                      (e.bits = 0),
                                      (e.lencode = e.lendyn = new r.Buf32(tt)),
                                      (e.distcode = e.distdyn = new r.Buf32(
                                          et
                                      )),
                                      (e.sane = 1),
                                      (e.back = -1),
                                      d)
                                    : b;
                            }
                            function at(t) {
                                var e;
                                return t && t.state
                                    ? (((e = t.state).wsize = 0),
                                      (e.whave = 0),
                                      (e.wnext = 0),
                                      nt(t))
                                    : b;
                            }
                            function ot(t, e) {
                                var i, r;
                                return t && t.state
                                    ? ((r = t.state),
                                      e < 0
                                          ? ((i = 0), (e = -e))
                                          : ((i = 1 + (e >> 4)),
                                            e < 48 && (e &= 15)),
                                      e && (e < 8 || e > 15)
                                          ? b
                                          : (null !== r.window &&
                                                r.wbits !== e &&
                                                (r.window = null),
                                            (r.wrap = i),
                                            (r.wbits = e),
                                            at(t)))
                                    : b;
                            }
                            function st(t, e) {
                                var i, n;
                                return t
                                    ? ((n = new function() {
                                          (this.mode = 0),
                                              (this.last = !1),
                                              (this.wrap = 0),
                                              (this.havedict = !1),
                                              (this.flags = 0),
                                              (this.dmax = 0),
                                              (this.check = 0),
                                              (this.total = 0),
                                              (this.head = null),
                                              (this.wbits = 0),
                                              (this.wsize = 0),
                                              (this.whave = 0),
                                              (this.wnext = 0),
                                              (this.window = null),
                                              (this.hold = 0),
                                              (this.bits = 0),
                                              (this.length = 0),
                                              (this.offset = 0),
                                              (this.extra = 0),
                                              (this.lencode = null),
                                              (this.distcode = null),
                                              (this.lenbits = 0),
                                              (this.distbits = 0),
                                              (this.ncode = 0),
                                              (this.nlen = 0),
                                              (this.ndist = 0),
                                              (this.have = 0),
                                              (this.next = null),
                                              (this.lens = new r.Buf16(320)),
                                              (this.work = new r.Buf16(288)),
                                              (this.lendyn = null),
                                              (this.distdyn = null),
                                              (this.sane = 0),
                                              (this.back = 0),
                                              (this.was = 0);
                                      }()),
                                      (t.state = n),
                                      (n.window = null),
                                      (i = ot(t, e)) !== d && (t.state = null),
                                      i)
                                    : b;
                            }
                            var lt,
                                ft,
                                ht = !0;
                            function ct(t) {
                                if (ht) {
                                    var e;
                                    for (
                                        lt = new r.Buf32(512),
                                            ft = new r.Buf32(32),
                                            e = 0;
                                        e < 144;

                                    )
                                        t.lens[e++] = 8;
                                    for (; e < 256; ) t.lens[e++] = 9;
                                    for (; e < 280; ) t.lens[e++] = 7;
                                    for (; e < 288; ) t.lens[e++] = 8;
                                    for (
                                        s(f, t.lens, 0, 288, lt, 0, t.work, {
                                            bits: 9
                                        }),
                                            e = 0;
                                        e < 32;

                                    )
                                        t.lens[e++] = 5;
                                    s(h, t.lens, 0, 32, ft, 0, t.work, {
                                        bits: 5
                                    }),
                                        (ht = !1);
                                }
                                (t.lencode = lt),
                                    (t.lenbits = 9),
                                    (t.distcode = ft),
                                    (t.distbits = 5);
                            }
                            function ut(t, e, i, n) {
                                var a,
                                    o = t.state;
                                return (
                                    null === o.window &&
                                        ((o.wsize = 1 << o.wbits),
                                        (o.wnext = 0),
                                        (o.whave = 0),
                                        (o.window = new r.Buf8(o.wsize))),
                                    n >= o.wsize
                                        ? (r.arraySet(
                                              o.window,
                                              e,
                                              i - o.wsize,
                                              o.wsize,
                                              0
                                          ),
                                          (o.wnext = 0),
                                          (o.whave = o.wsize))
                                        : ((a = o.wsize - o.wnext) > n &&
                                              (a = n),
                                          r.arraySet(
                                              o.window,
                                              e,
                                              i - n,
                                              a,
                                              o.wnext
                                          ),
                                          (n -= a)
                                              ? (r.arraySet(
                                                    o.window,
                                                    e,
                                                    i - n,
                                                    n,
                                                    0
                                                ),
                                                (o.wnext = n),
                                                (o.whave = o.wsize))
                                              : ((o.wnext += a),
                                                o.wnext === o.wsize &&
                                                    (o.wnext = 0),
                                                o.whave < o.wsize &&
                                                    (o.whave += a))),
                                    0
                                );
                            }
                            (i.inflateReset = at),
                                (i.inflateReset2 = ot),
                                (i.inflateResetKeep = nt),
                                (i.inflateInit = function(t) {
                                    return st(t, it);
                                }),
                                (i.inflateInit2 = st),
                                (i.inflate = function(t, e) {
                                    var i,
                                        tt,
                                        et,
                                        it,
                                        nt,
                                        at,
                                        ot,
                                        st,
                                        lt,
                                        ft,
                                        ht,
                                        pt,
                                        dt,
                                        mt,
                                        gt,
                                        bt,
                                        vt,
                                        yt,
                                        wt,
                                        _t,
                                        xt,
                                        kt,
                                        Et,
                                        It,
                                        St = 0,
                                        At = new r.Buf8(4),
                                        Tt = [
                                            16,
                                            17,
                                            18,
                                            0,
                                            8,
                                            7,
                                            9,
                                            6,
                                            10,
                                            5,
                                            11,
                                            4,
                                            12,
                                            3,
                                            13,
                                            2,
                                            14,
                                            1,
                                            15
                                        ];
                                    if (
                                        !t ||
                                        !t.state ||
                                        !t.output ||
                                        (!t.input && 0 !== t.avail_in)
                                    )
                                        return b;
                                    (i = t.state).mode === O && (i.mode = R),
                                        (nt = t.next_out),
                                        (et = t.output),
                                        (ot = t.avail_out),
                                        (it = t.next_in),
                                        (tt = t.input),
                                        (at = t.avail_in),
                                        (st = i.hold),
                                        (lt = i.bits),
                                        (ft = at),
                                        (ht = ot),
                                        (kt = d);
                                    t: for (;;)
                                        switch (i.mode) {
                                            case x:
                                                if (0 === i.wrap) {
                                                    i.mode = R;
                                                    break;
                                                }
                                                for (; lt < 16; ) {
                                                    if (0 === at) break t;
                                                    at--,
                                                        (st += tt[it++] << lt),
                                                        (lt += 8);
                                                }
                                                if (
                                                    2 & i.wrap &&
                                                    35615 === st
                                                ) {
                                                    (i.check = 0),
                                                        (At[0] = 255 & st),
                                                        (At[1] =
                                                            (st >>> 8) & 255),
                                                        (i.check = a(
                                                            i.check,
                                                            At,
                                                            2,
                                                            0
                                                        )),
                                                        (st = 0),
                                                        (lt = 0),
                                                        (i.mode = k);
                                                    break;
                                                }
                                                if (
                                                    ((i.flags = 0),
                                                    i.head &&
                                                        (i.head.done = !1),
                                                    !(1 & i.wrap) ||
                                                        (((255 & st) << 8) +
                                                            (st >> 8)) %
                                                            31)
                                                ) {
                                                    (t.msg =
                                                        'incorrect header check'),
                                                        (i.mode = Q);
                                                    break;
                                                }
                                                if ((15 & st) !== _) {
                                                    (t.msg =
                                                        'unknown compression method'),
                                                        (i.mode = Q);
                                                    break;
                                                }
                                                if (
                                                    ((lt -= 4),
                                                    (xt =
                                                        8 + (15 & (st >>>= 4))),
                                                    0 === i.wbits)
                                                )
                                                    i.wbits = xt;
                                                else if (xt > i.wbits) {
                                                    (t.msg =
                                                        'invalid window size'),
                                                        (i.mode = Q);
                                                    break;
                                                }
                                                (i.dmax = 1 << xt),
                                                    (t.adler = i.check = 1),
                                                    (i.mode = 512 & st ? P : O),
                                                    (st = 0),
                                                    (lt = 0);
                                                break;
                                            case k:
                                                for (; lt < 16; ) {
                                                    if (0 === at) break t;
                                                    at--,
                                                        (st += tt[it++] << lt),
                                                        (lt += 8);
                                                }
                                                if (
                                                    ((i.flags = st),
                                                    (255 & i.flags) !== _)
                                                ) {
                                                    (t.msg =
                                                        'unknown compression method'),
                                                        (i.mode = Q);
                                                    break;
                                                }
                                                if (57344 & i.flags) {
                                                    (t.msg =
                                                        'unknown header flags set'),
                                                        (i.mode = Q);
                                                    break;
                                                }
                                                i.head &&
                                                    (i.head.text =
                                                        (st >> 8) & 1),
                                                    512 & i.flags &&
                                                        ((At[0] = 255 & st),
                                                        (At[1] =
                                                            (st >>> 8) & 255),
                                                        (i.check = a(
                                                            i.check,
                                                            At,
                                                            2,
                                                            0
                                                        ))),
                                                    (st = 0),
                                                    (lt = 0),
                                                    (i.mode = E);
                                            case E:
                                                for (; lt < 32; ) {
                                                    if (0 === at) break t;
                                                    at--,
                                                        (st += tt[it++] << lt),
                                                        (lt += 8);
                                                }
                                                i.head && (i.head.time = st),
                                                    512 & i.flags &&
                                                        ((At[0] = 255 & st),
                                                        (At[1] =
                                                            (st >>> 8) & 255),
                                                        (At[2] =
                                                            (st >>> 16) & 255),
                                                        (At[3] =
                                                            (st >>> 24) & 255),
                                                        (i.check = a(
                                                            i.check,
                                                            At,
                                                            4,
                                                            0
                                                        ))),
                                                    (st = 0),
                                                    (lt = 0),
                                                    (i.mode = I);
                                            case I:
                                                for (; lt < 16; ) {
                                                    if (0 === at) break t;
                                                    at--,
                                                        (st += tt[it++] << lt),
                                                        (lt += 8);
                                                }
                                                i.head &&
                                                    ((i.head.xflags = 255 & st),
                                                    (i.head.os = st >> 8)),
                                                    512 & i.flags &&
                                                        ((At[0] = 255 & st),
                                                        (At[1] =
                                                            (st >>> 8) & 255),
                                                        (i.check = a(
                                                            i.check,
                                                            At,
                                                            2,
                                                            0
                                                        ))),
                                                    (st = 0),
                                                    (lt = 0),
                                                    (i.mode = S);
                                            case S:
                                                if (1024 & i.flags) {
                                                    for (; lt < 16; ) {
                                                        if (0 === at) break t;
                                                        at--,
                                                            (st +=
                                                                tt[it++] << lt),
                                                            (lt += 8);
                                                    }
                                                    (i.length = st),
                                                        i.head &&
                                                            (i.head.extra_len = st),
                                                        512 & i.flags &&
                                                            ((At[0] = 255 & st),
                                                            (At[1] =
                                                                (st >>> 8) &
                                                                255),
                                                            (i.check = a(
                                                                i.check,
                                                                At,
                                                                2,
                                                                0
                                                            ))),
                                                        (st = 0),
                                                        (lt = 0);
                                                } else
                                                    i.head &&
                                                        (i.head.extra = null);
                                                i.mode = A;
                                            case A:
                                                if (
                                                    1024 & i.flags &&
                                                    ((pt = i.length) > at &&
                                                        (pt = at),
                                                    pt &&
                                                        (i.head &&
                                                            ((xt =
                                                                i.head
                                                                    .extra_len -
                                                                i.length),
                                                            i.head.extra ||
                                                                (i.head.extra = new Array(
                                                                    i.head.extra_len
                                                                )),
                                                            r.arraySet(
                                                                i.head.extra,
                                                                tt,
                                                                it,
                                                                pt,
                                                                xt
                                                            )),
                                                        512 & i.flags &&
                                                            (i.check = a(
                                                                i.check,
                                                                tt,
                                                                pt,
                                                                it
                                                            )),
                                                        (at -= pt),
                                                        (it += pt),
                                                        (i.length -= pt)),
                                                    i.length)
                                                )
                                                    break t;
                                                (i.length = 0), (i.mode = T);
                                            case T:
                                                if (2048 & i.flags) {
                                                    if (0 === at) break t;
                                                    pt = 0;
                                                    do {
                                                        (xt = tt[it + pt++]),
                                                            i.head &&
                                                                xt &&
                                                                i.length <
                                                                    65536 &&
                                                                (i.head.name += String.fromCharCode(
                                                                    xt
                                                                ));
                                                    } while (xt && pt < at);
                                                    if (
                                                        (512 & i.flags &&
                                                            (i.check = a(
                                                                i.check,
                                                                tt,
                                                                pt,
                                                                it
                                                            )),
                                                        (at -= pt),
                                                        (it += pt),
                                                        xt)
                                                    )
                                                        break t;
                                                } else
                                                    i.head &&
                                                        (i.head.name = null);
                                                (i.length = 0), (i.mode = C);
                                            case C:
                                                if (4096 & i.flags) {
                                                    if (0 === at) break t;
                                                    pt = 0;
                                                    do {
                                                        (xt = tt[it + pt++]),
                                                            i.head &&
                                                                xt &&
                                                                i.length <
                                                                    65536 &&
                                                                (i.head.comment += String.fromCharCode(
                                                                    xt
                                                                ));
                                                    } while (xt && pt < at);
                                                    if (
                                                        (512 & i.flags &&
                                                            (i.check = a(
                                                                i.check,
                                                                tt,
                                                                pt,
                                                                it
                                                            )),
                                                        (at -= pt),
                                                        (it += pt),
                                                        xt)
                                                    )
                                                        break t;
                                                } else
                                                    i.head &&
                                                        (i.head.comment = null);
                                                i.mode = M;
                                            case M:
                                                if (512 & i.flags) {
                                                    for (; lt < 16; ) {
                                                        if (0 === at) break t;
                                                        at--,
                                                            (st +=
                                                                tt[it++] << lt),
                                                            (lt += 8);
                                                    }
                                                    if (
                                                        st !==
                                                        (65535 & i.check)
                                                    ) {
                                                        (t.msg =
                                                            'header crc mismatch'),
                                                            (i.mode = Q);
                                                        break;
                                                    }
                                                    (st = 0), (lt = 0);
                                                }
                                                i.head &&
                                                    ((i.head.hcrc =
                                                        (i.flags >> 9) & 1),
                                                    (i.head.done = !0)),
                                                    (t.adler = i.check = 0),
                                                    (i.mode = O);
                                                break;
                                            case P:
                                                for (; lt < 32; ) {
                                                    if (0 === at) break t;
                                                    at--,
                                                        (st += tt[it++] << lt),
                                                        (lt += 8);
                                                }
                                                (t.adler = i.check = rt(st)),
                                                    (st = 0),
                                                    (lt = 0),
                                                    (i.mode = L);
                                            case L:
                                                if (0 === i.havedict)
                                                    return (
                                                        (t.next_out = nt),
                                                        (t.avail_out = ot),
                                                        (t.next_in = it),
                                                        (t.avail_in = at),
                                                        (i.hold = st),
                                                        (i.bits = lt),
                                                        g
                                                    );
                                                (t.adler = i.check = 1),
                                                    (i.mode = O);
                                            case O:
                                                if (e === u || e === p) break t;
                                            case R:
                                                if (i.last) {
                                                    (st >>>= 7 & lt),
                                                        (lt -= 7 & lt),
                                                        (i.mode = Y);
                                                    break;
                                                }
                                                for (; lt < 3; ) {
                                                    if (0 === at) break t;
                                                    at--,
                                                        (st += tt[it++] << lt),
                                                        (lt += 8);
                                                }
                                                switch (
                                                    ((i.last = 1 & st),
                                                    (lt -= 1),
                                                    3 & (st >>>= 1))
                                                ) {
                                                    case 0:
                                                        i.mode = B;
                                                        break;
                                                    case 1:
                                                        if (
                                                            (ct(i),
                                                            (i.mode = j),
                                                            e === p)
                                                        ) {
                                                            (st >>>= 2),
                                                                (lt -= 2);
                                                            break t;
                                                        }
                                                        break;
                                                    case 2:
                                                        i.mode = U;
                                                        break;
                                                    case 3:
                                                        (t.msg =
                                                            'invalid block type'),
                                                            (i.mode = Q);
                                                }
                                                (st >>>= 2), (lt -= 2);
                                                break;
                                            case B:
                                                for (
                                                    st >>>= 7 & lt,
                                                        lt -= 7 & lt;
                                                    lt < 32;

                                                ) {
                                                    if (0 === at) break t;
                                                    at--,
                                                        (st += tt[it++] << lt),
                                                        (lt += 8);
                                                }
                                                if (
                                                    (65535 & st) !=
                                                    ((st >>> 16) ^ 65535)
                                                ) {
                                                    (t.msg =
                                                        'invalid stored block lengths'),
                                                        (i.mode = Q);
                                                    break;
                                                }
                                                if (
                                                    ((i.length = 65535 & st),
                                                    (st = 0),
                                                    (lt = 0),
                                                    (i.mode = D),
                                                    e === p)
                                                )
                                                    break t;
                                            case D:
                                                i.mode = z;
                                            case z:
                                                if ((pt = i.length)) {
                                                    if (
                                                        (pt > at && (pt = at),
                                                        pt > ot && (pt = ot),
                                                        0 === pt)
                                                    )
                                                        break t;
                                                    r.arraySet(
                                                        et,
                                                        tt,
                                                        it,
                                                        pt,
                                                        nt
                                                    ),
                                                        (at -= pt),
                                                        (it += pt),
                                                        (ot -= pt),
                                                        (nt += pt),
                                                        (i.length -= pt);
                                                    break;
                                                }
                                                i.mode = O;
                                                break;
                                            case U:
                                                for (; lt < 14; ) {
                                                    if (0 === at) break t;
                                                    at--,
                                                        (st += tt[it++] << lt),
                                                        (lt += 8);
                                                }
                                                if (
                                                    ((i.nlen = 257 + (31 & st)),
                                                    (st >>>= 5),
                                                    (lt -= 5),
                                                    (i.ndist = 1 + (31 & st)),
                                                    (st >>>= 5),
                                                    (lt -= 5),
                                                    (i.ncode = 4 + (15 & st)),
                                                    (st >>>= 4),
                                                    (lt -= 4),
                                                    i.nlen > 286 ||
                                                        i.ndist > 30)
                                                ) {
                                                    (t.msg =
                                                        'too many length or distance symbols'),
                                                        (i.mode = Q);
                                                    break;
                                                }
                                                (i.have = 0), (i.mode = N);
                                            case N:
                                                for (; i.have < i.ncode; ) {
                                                    for (; lt < 3; ) {
                                                        if (0 === at) break t;
                                                        at--,
                                                            (st +=
                                                                tt[it++] << lt),
                                                            (lt += 8);
                                                    }
                                                    (i.lens[Tt[i.have++]] =
                                                        7 & st),
                                                        (st >>>= 3),
                                                        (lt -= 3);
                                                }
                                                for (; i.have < 19; )
                                                    i.lens[Tt[i.have++]] = 0;
                                                if (
                                                    ((i.lencode = i.lendyn),
                                                    (i.lenbits = 7),
                                                    (Et = { bits: i.lenbits }),
                                                    (kt = s(
                                                        l,
                                                        i.lens,
                                                        0,
                                                        19,
                                                        i.lencode,
                                                        0,
                                                        i.work,
                                                        Et
                                                    )),
                                                    (i.lenbits = Et.bits),
                                                    kt)
                                                ) {
                                                    (t.msg =
                                                        'invalid code lengths set'),
                                                        (i.mode = Q);
                                                    break;
                                                }
                                                (i.have = 0), (i.mode = F);
                                            case F:
                                                for (
                                                    ;
                                                    i.have < i.nlen + i.ndist;

                                                ) {
                                                    for (
                                                        ;
                                                        (bt =
                                                            ((St =
                                                                i.lencode[
                                                                    st &
                                                                        ((1 <<
                                                                            i.lenbits) -
                                                                            1)
                                                                ]) >>>
                                                                16) &
                                                            255),
                                                            (vt = 65535 & St),
                                                            !(
                                                                (gt =
                                                                    St >>>
                                                                    24) <= lt
                                                            );

                                                    ) {
                                                        if (0 === at) break t;
                                                        at--,
                                                            (st +=
                                                                tt[it++] << lt),
                                                            (lt += 8);
                                                    }
                                                    if (vt < 16)
                                                        (st >>>= gt),
                                                            (lt -= gt),
                                                            (i.lens[
                                                                i.have++
                                                            ] = vt);
                                                    else {
                                                        if (16 === vt) {
                                                            for (
                                                                It = gt + 2;
                                                                lt < It;

                                                            ) {
                                                                if (0 === at)
                                                                    break t;
                                                                at--,
                                                                    (st +=
                                                                        tt[
                                                                            it++
                                                                        ] <<
                                                                        lt),
                                                                    (lt += 8);
                                                            }
                                                            if (
                                                                ((st >>>= gt),
                                                                (lt -= gt),
                                                                0 === i.have)
                                                            ) {
                                                                (t.msg =
                                                                    'invalid bit length repeat'),
                                                                    (i.mode = Q);
                                                                break;
                                                            }
                                                            (xt =
                                                                i.lens[
                                                                    i.have - 1
                                                                ]),
                                                                (pt =
                                                                    3 +
                                                                    (3 & st)),
                                                                (st >>>= 2),
                                                                (lt -= 2);
                                                        } else if (17 === vt) {
                                                            for (
                                                                It = gt + 3;
                                                                lt < It;

                                                            ) {
                                                                if (0 === at)
                                                                    break t;
                                                                at--,
                                                                    (st +=
                                                                        tt[
                                                                            it++
                                                                        ] <<
                                                                        lt),
                                                                    (lt += 8);
                                                            }
                                                            (lt -= gt),
                                                                (xt = 0),
                                                                (pt =
                                                                    3 +
                                                                    (7 &
                                                                        (st >>>= gt))),
                                                                (st >>>= 3),
                                                                (lt -= 3);
                                                        } else {
                                                            for (
                                                                It = gt + 7;
                                                                lt < It;

                                                            ) {
                                                                if (0 === at)
                                                                    break t;
                                                                at--,
                                                                    (st +=
                                                                        tt[
                                                                            it++
                                                                        ] <<
                                                                        lt),
                                                                    (lt += 8);
                                                            }
                                                            (lt -= gt),
                                                                (xt = 0),
                                                                (pt =
                                                                    11 +
                                                                    (127 &
                                                                        (st >>>= gt))),
                                                                (st >>>= 7),
                                                                (lt -= 7);
                                                        }
                                                        if (
                                                            i.have + pt >
                                                            i.nlen + i.ndist
                                                        ) {
                                                            (t.msg =
                                                                'invalid bit length repeat'),
                                                                (i.mode = Q);
                                                            break;
                                                        }
                                                        for (; pt--; )
                                                            i.lens[
                                                                i.have++
                                                            ] = xt;
                                                    }
                                                }
                                                if (i.mode === Q) break;
                                                if (0 === i.lens[256]) {
                                                    (t.msg =
                                                        'invalid code -- missing end-of-block'),
                                                        (i.mode = Q);
                                                    break;
                                                }
                                                if (
                                                    ((i.lenbits = 9),
                                                    (Et = { bits: i.lenbits }),
                                                    (kt = s(
                                                        f,
                                                        i.lens,
                                                        0,
                                                        i.nlen,
                                                        i.lencode,
                                                        0,
                                                        i.work,
                                                        Et
                                                    )),
                                                    (i.lenbits = Et.bits),
                                                    kt)
                                                ) {
                                                    (t.msg =
                                                        'invalid literal/lengths set'),
                                                        (i.mode = Q);
                                                    break;
                                                }
                                                if (
                                                    ((i.distbits = 6),
                                                    (i.distcode = i.distdyn),
                                                    (Et = { bits: i.distbits }),
                                                    (kt = s(
                                                        h,
                                                        i.lens,
                                                        i.nlen,
                                                        i.ndist,
                                                        i.distcode,
                                                        0,
                                                        i.work,
                                                        Et
                                                    )),
                                                    (i.distbits = Et.bits),
                                                    kt)
                                                ) {
                                                    (t.msg =
                                                        'invalid distances set'),
                                                        (i.mode = Q);
                                                    break;
                                                }
                                                if (((i.mode = j), e === p))
                                                    break t;
                                            case j:
                                                i.mode = H;
                                            case H:
                                                if (at >= 6 && ot >= 258) {
                                                    (t.next_out = nt),
                                                        (t.avail_out = ot),
                                                        (t.next_in = it),
                                                        (t.avail_in = at),
                                                        (i.hold = st),
                                                        (i.bits = lt),
                                                        o(t, ht),
                                                        (nt = t.next_out),
                                                        (et = t.output),
                                                        (ot = t.avail_out),
                                                        (it = t.next_in),
                                                        (tt = t.input),
                                                        (at = t.avail_in),
                                                        (st = i.hold),
                                                        (lt = i.bits),
                                                        i.mode === O &&
                                                            (i.back = -1);
                                                    break;
                                                }
                                                for (
                                                    i.back = 0;
                                                    (bt =
                                                        ((St =
                                                            i.lencode[
                                                                st &
                                                                    ((1 <<
                                                                        i.lenbits) -
                                                                        1)
                                                            ]) >>>
                                                            16) &
                                                        255),
                                                        (vt = 65535 & St),
                                                        !(
                                                            (gt = St >>> 24) <=
                                                            lt
                                                        );

                                                ) {
                                                    if (0 === at) break t;
                                                    at--,
                                                        (st += tt[it++] << lt),
                                                        (lt += 8);
                                                }
                                                if (bt && 0 == (240 & bt)) {
                                                    for (
                                                        yt = gt,
                                                            wt = bt,
                                                            _t = vt;
                                                        (bt =
                                                            ((St =
                                                                i.lencode[
                                                                    _t +
                                                                        ((st &
                                                                            ((1 <<
                                                                                (yt +
                                                                                    wt)) -
                                                                                1)) >>
                                                                            yt)
                                                                ]) >>>
                                                                16) &
                                                            255),
                                                            (vt = 65535 & St),
                                                            !(
                                                                yt +
                                                                    (gt =
                                                                        St >>>
                                                                        24) <=
                                                                lt
                                                            );

                                                    ) {
                                                        if (0 === at) break t;
                                                        at--,
                                                            (st +=
                                                                tt[it++] << lt),
                                                            (lt += 8);
                                                    }
                                                    (st >>>= yt),
                                                        (lt -= yt),
                                                        (i.back += yt);
                                                }
                                                if (
                                                    ((st >>>= gt),
                                                    (lt -= gt),
                                                    (i.back += gt),
                                                    (i.length = vt),
                                                    0 === bt)
                                                ) {
                                                    i.mode = X;
                                                    break;
                                                }
                                                if (32 & bt) {
                                                    (i.back = -1), (i.mode = O);
                                                    break;
                                                }
                                                if (64 & bt) {
                                                    (t.msg =
                                                        'invalid literal/length code'),
                                                        (i.mode = Q);
                                                    break;
                                                }
                                                (i.extra = 15 & bt),
                                                    (i.mode = G);
                                            case G:
                                                if (i.extra) {
                                                    for (
                                                        It = i.extra;
                                                        lt < It;

                                                    ) {
                                                        if (0 === at) break t;
                                                        at--,
                                                            (st +=
                                                                tt[it++] << lt),
                                                            (lt += 8);
                                                    }
                                                    (i.length +=
                                                        st &
                                                        ((1 << i.extra) - 1)),
                                                        (st >>>= i.extra),
                                                        (lt -= i.extra),
                                                        (i.back += i.extra);
                                                }
                                                (i.was = i.length),
                                                    (i.mode = q);
                                            case q:
                                                for (
                                                    ;
                                                    (bt =
                                                        ((St =
                                                            i.distcode[
                                                                st &
                                                                    ((1 <<
                                                                        i.distbits) -
                                                                        1)
                                                            ]) >>>
                                                            16) &
                                                        255),
                                                        (vt = 65535 & St),
                                                        !(
                                                            (gt = St >>> 24) <=
                                                            lt
                                                        );

                                                ) {
                                                    if (0 === at) break t;
                                                    at--,
                                                        (st += tt[it++] << lt),
                                                        (lt += 8);
                                                }
                                                if (0 == (240 & bt)) {
                                                    for (
                                                        yt = gt,
                                                            wt = bt,
                                                            _t = vt;
                                                        (bt =
                                                            ((St =
                                                                i.distcode[
                                                                    _t +
                                                                        ((st &
                                                                            ((1 <<
                                                                                (yt +
                                                                                    wt)) -
                                                                                1)) >>
                                                                            yt)
                                                                ]) >>>
                                                                16) &
                                                            255),
                                                            (vt = 65535 & St),
                                                            !(
                                                                yt +
                                                                    (gt =
                                                                        St >>>
                                                                        24) <=
                                                                lt
                                                            );

                                                    ) {
                                                        if (0 === at) break t;
                                                        at--,
                                                            (st +=
                                                                tt[it++] << lt),
                                                            (lt += 8);
                                                    }
                                                    (st >>>= yt),
                                                        (lt -= yt),
                                                        (i.back += yt);
                                                }
                                                if (
                                                    ((st >>>= gt),
                                                    (lt -= gt),
                                                    (i.back += gt),
                                                    64 & bt)
                                                ) {
                                                    (t.msg =
                                                        'invalid distance code'),
                                                        (i.mode = Q);
                                                    break;
                                                }
                                                (i.offset = vt),
                                                    (i.extra = 15 & bt),
                                                    (i.mode = W);
                                            case W:
                                                if (i.extra) {
                                                    for (
                                                        It = i.extra;
                                                        lt < It;

                                                    ) {
                                                        if (0 === at) break t;
                                                        at--,
                                                            (st +=
                                                                tt[it++] << lt),
                                                            (lt += 8);
                                                    }
                                                    (i.offset +=
                                                        st &
                                                        ((1 << i.extra) - 1)),
                                                        (st >>>= i.extra),
                                                        (lt -= i.extra),
                                                        (i.back += i.extra);
                                                }
                                                if (i.offset > i.dmax) {
                                                    (t.msg =
                                                        'invalid distance too far back'),
                                                        (i.mode = Q);
                                                    break;
                                                }
                                                i.mode = Z;
                                            case Z:
                                                if (0 === ot) break t;
                                                if (
                                                    ((pt = ht - ot),
                                                    i.offset > pt)
                                                ) {
                                                    if (
                                                        (pt = i.offset - pt) >
                                                            i.whave &&
                                                        i.sane
                                                    ) {
                                                        (t.msg =
                                                            'invalid distance too far back'),
                                                            (i.mode = Q);
                                                        break;
                                                    }
                                                    pt > i.wnext
                                                        ? ((pt -= i.wnext),
                                                          (dt = i.wsize - pt))
                                                        : (dt = i.wnext - pt),
                                                        pt > i.length &&
                                                            (pt = i.length),
                                                        (mt = i.window);
                                                } else
                                                    (mt = et),
                                                        (dt = nt - i.offset),
                                                        (pt = i.length);
                                                pt > ot && (pt = ot),
                                                    (ot -= pt),
                                                    (i.length -= pt);
                                                do {
                                                    et[nt++] = mt[dt++];
                                                } while (--pt);
                                                0 === i.length && (i.mode = H);
                                                break;
                                            case X:
                                                if (0 === ot) break t;
                                                (et[nt++] = i.length),
                                                    ot--,
                                                    (i.mode = H);
                                                break;
                                            case Y:
                                                if (i.wrap) {
                                                    for (; lt < 32; ) {
                                                        if (0 === at) break t;
                                                        at--,
                                                            (st |=
                                                                tt[it++] << lt),
                                                            (lt += 8);
                                                    }
                                                    if (
                                                        ((ht -= ot),
                                                        (t.total_out += ht),
                                                        (i.total += ht),
                                                        ht &&
                                                            (t.adler = i.check = i.flags
                                                                ? a(
                                                                      i.check,
                                                                      et,
                                                                      ht,
                                                                      nt - ht
                                                                  )
                                                                : n(
                                                                      i.check,
                                                                      et,
                                                                      ht,
                                                                      nt - ht
                                                                  )),
                                                        (ht = ot),
                                                        (i.flags
                                                            ? st
                                                            : rt(st)) !==
                                                            i.check)
                                                    ) {
                                                        (t.msg =
                                                            'incorrect data check'),
                                                            (i.mode = Q);
                                                        break;
                                                    }
                                                    (st = 0), (lt = 0);
                                                }
                                                i.mode = J;
                                            case J:
                                                if (i.wrap && i.flags) {
                                                    for (; lt < 32; ) {
                                                        if (0 === at) break t;
                                                        at--,
                                                            (st +=
                                                                tt[it++] << lt),
                                                            (lt += 8);
                                                    }
                                                    if (
                                                        st !==
                                                        (4294967295 & i.total)
                                                    ) {
                                                        (t.msg =
                                                            'incorrect length check'),
                                                            (i.mode = Q);
                                                        break;
                                                    }
                                                    (st = 0), (lt = 0);
                                                }
                                                i.mode = V;
                                            case V:
                                                kt = m;
                                                break t;
                                            case Q:
                                                kt = v;
                                                break t;
                                            case K:
                                                return y;
                                            case $:
                                            default:
                                                return b;
                                        }
                                    return (
                                        (t.next_out = nt),
                                        (t.avail_out = ot),
                                        (t.next_in = it),
                                        (t.avail_in = at),
                                        (i.hold = st),
                                        (i.bits = lt),
                                        (i.wsize ||
                                            (ht !== t.avail_out &&
                                                i.mode < Q &&
                                                (i.mode < Y || e !== c))) &&
                                        ut(
                                            t,
                                            t.output,
                                            t.next_out,
                                            ht - t.avail_out
                                        )
                                            ? ((i.mode = K), y)
                                            : ((ft -= t.avail_in),
                                              (ht -= t.avail_out),
                                              (t.total_in += ft),
                                              (t.total_out += ht),
                                              (i.total += ht),
                                              i.wrap &&
                                                  ht &&
                                                  (t.adler = i.check = i.flags
                                                      ? a(
                                                            i.check,
                                                            et,
                                                            ht,
                                                            t.next_out - ht
                                                        )
                                                      : n(
                                                            i.check,
                                                            et,
                                                            ht,
                                                            t.next_out - ht
                                                        )),
                                              (t.data_type =
                                                  i.bits +
                                                  (i.last ? 64 : 0) +
                                                  (i.mode === O ? 128 : 0) +
                                                  (i.mode === j || i.mode === D
                                                      ? 256
                                                      : 0)),
                                              ((0 === ft && 0 === ht) ||
                                                  e === c) &&
                                                  kt === d &&
                                                  (kt = w),
                                              kt)
                                    );
                                }),
                                (i.inflateEnd = function(t) {
                                    if (!t || !t.state) return b;
                                    var e = t.state;
                                    return (
                                        e.window && (e.window = null),
                                        (t.state = null),
                                        d
                                    );
                                }),
                                (i.inflateGetHeader = function(t, e) {
                                    var i;
                                    return t && t.state
                                        ? 0 == (2 & (i = t.state).wrap)
                                            ? b
                                            : ((i.head = e), (e.done = !1), d)
                                        : b;
                                }),
                                (i.inflateSetDictionary = function(t, e) {
                                    var i,
                                        r = e.length;
                                    return t && t.state
                                        ? 0 !== (i = t.state).wrap &&
                                          i.mode !== L
                                            ? b
                                            : i.mode === L &&
                                              n(1, e, r, 0) !== i.check
                                                ? v
                                                : ut(t, e, r, r)
                                                    ? ((i.mode = K), y)
                                                    : ((i.havedict = 1), d)
                                        : b;
                                }),
                                (i.inflateInfo =
                                    'pako inflate (from Nodeca project)');
                        },
                        {
                            '../utils/common': 56,
                            './adler32': 58,
                            './crc32': 60,
                            './inffast': 63,
                            './inftrees': 65
                        }
                    ],
                    65: [
                        function(t, e, i) {
                            var r = t('../utils/common'),
                                n = [
                                    3,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8,
                                    9,
                                    10,
                                    11,
                                    13,
                                    15,
                                    17,
                                    19,
                                    23,
                                    27,
                                    31,
                                    35,
                                    43,
                                    51,
                                    59,
                                    67,
                                    83,
                                    99,
                                    115,
                                    131,
                                    163,
                                    195,
                                    227,
                                    258,
                                    0,
                                    0
                                ],
                                a = [
                                    16,
                                    16,
                                    16,
                                    16,
                                    16,
                                    16,
                                    16,
                                    16,
                                    17,
                                    17,
                                    17,
                                    17,
                                    18,
                                    18,
                                    18,
                                    18,
                                    19,
                                    19,
                                    19,
                                    19,
                                    20,
                                    20,
                                    20,
                                    20,
                                    21,
                                    21,
                                    21,
                                    21,
                                    16,
                                    72,
                                    78
                                ],
                                o = [
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    7,
                                    9,
                                    13,
                                    17,
                                    25,
                                    33,
                                    49,
                                    65,
                                    97,
                                    129,
                                    193,
                                    257,
                                    385,
                                    513,
                                    769,
                                    1025,
                                    1537,
                                    2049,
                                    3073,
                                    4097,
                                    6145,
                                    8193,
                                    12289,
                                    16385,
                                    24577,
                                    0,
                                    0
                                ],
                                s = [
                                    16,
                                    16,
                                    16,
                                    16,
                                    17,
                                    17,
                                    18,
                                    18,
                                    19,
                                    19,
                                    20,
                                    20,
                                    21,
                                    21,
                                    22,
                                    22,
                                    23,
                                    23,
                                    24,
                                    24,
                                    25,
                                    25,
                                    26,
                                    26,
                                    27,
                                    27,
                                    28,
                                    28,
                                    29,
                                    29,
                                    64,
                                    64
                                ];
                            e.exports = function(t, e, i, l, f, h, c, u) {
                                var p,
                                    d,
                                    m,
                                    g,
                                    b,
                                    v,
                                    y,
                                    w,
                                    _,
                                    x = u.bits,
                                    k = 0,
                                    E = 0,
                                    I = 0,
                                    S = 0,
                                    A = 0,
                                    T = 0,
                                    C = 0,
                                    M = 0,
                                    P = 0,
                                    L = 0,
                                    O = null,
                                    R = 0,
                                    B = new r.Buf16(16),
                                    D = new r.Buf16(16),
                                    z = null,
                                    U = 0;
                                for (k = 0; k <= 15; k++) B[k] = 0;
                                for (E = 0; E < l; E++) B[e[i + E]]++;
                                for (A = x, S = 15; S >= 1 && 0 === B[S]; S--);
                                if ((A > S && (A = S), 0 === S))
                                    return (
                                        (f[h++] = 20971520),
                                        (f[h++] = 20971520),
                                        (u.bits = 1),
                                        0
                                    );
                                for (I = 1; I < S && 0 === B[I]; I++);
                                for (
                                    A < I && (A = I), M = 1, k = 1;
                                    k <= 15;
                                    k++
                                )
                                    if (((M <<= 1), (M -= B[k]) < 0)) return -1;
                                if (M > 0 && (0 === t || 1 !== S)) return -1;
                                for (D[1] = 0, k = 1; k < 15; k++)
                                    D[k + 1] = D[k] + B[k];
                                for (E = 0; E < l; E++)
                                    0 !== e[i + E] && (c[D[e[i + E]]++] = E);
                                if (
                                    (0 === t
                                        ? ((O = z = c), (v = 19))
                                        : 1 === t
                                            ? ((O = n),
                                              (R -= 257),
                                              (z = a),
                                              (U -= 257),
                                              (v = 256))
                                            : ((O = o), (z = s), (v = -1)),
                                    (L = 0),
                                    (E = 0),
                                    (k = I),
                                    (b = h),
                                    (T = A),
                                    (C = 0),
                                    (m = -1),
                                    (g = (P = 1 << A) - 1),
                                    (1 === t && P > 852) ||
                                        (2 === t && P > 592))
                                )
                                    return 1;
                                for (;;) {
                                    (y = k - C),
                                        c[E] < v
                                            ? ((w = 0), (_ = c[E]))
                                            : c[E] > v
                                                ? ((w = z[U + c[E]]),
                                                  (_ = O[R + c[E]]))
                                                : ((w = 96), (_ = 0)),
                                        (p = 1 << (k - C)),
                                        (I = d = 1 << T);
                                    do {
                                        f[b + (L >> C) + (d -= p)] =
                                            (y << 24) | (w << 16) | _ | 0;
                                    } while (0 !== d);
                                    for (p = 1 << (k - 1); L & p; ) p >>= 1;
                                    if (
                                        (0 !== p
                                            ? ((L &= p - 1), (L += p))
                                            : (L = 0),
                                        E++,
                                        0 == --B[k])
                                    ) {
                                        if (k === S) break;
                                        k = e[i + c[E]];
                                    }
                                    if (k > A && (L & g) !== m) {
                                        for (
                                            0 === C && (C = A),
                                                b += I,
                                                M = 1 << (T = k - C);
                                            T + C < S &&
                                            !((M -= B[T + C]) <= 0);

                                        )
                                            T++, (M <<= 1);
                                        if (
                                            ((P += 1 << T),
                                            (1 === t && P > 852) ||
                                                (2 === t && P > 592))
                                        )
                                            return 1;
                                        f[(m = L & g)] =
                                            (A << 24) | (T << 16) | (b - h) | 0;
                                    }
                                }
                                return (
                                    0 !== L &&
                                        (f[b + L] =
                                            ((k - C) << 24) | (64 << 16) | 0),
                                    (u.bits = A),
                                    0
                                );
                            };
                        },
                        { '../utils/common': 56 }
                    ],
                    66: [
                        function(t, e, i) {
                            e.exports = {
                                2: 'need dictionary',
                                1: 'stream end',
                                0: '',
                                '-1': 'file error',
                                '-2': 'stream error',
                                '-3': 'data error',
                                '-4': 'insufficient memory',
                                '-5': 'buffer error',
                                '-6': 'incompatible version'
                            };
                        },
                        {}
                    ],
                    67: [
                        function(t, e, i) {
                            var r = t('../utils/common'),
                                n = 4,
                                a = 0,
                                o = 1,
                                s = 2;
                            function l(t) {
                                for (var e = t.length; --e >= 0; ) t[e] = 0;
                            }
                            var f = 0,
                                h = 1,
                                c = 2,
                                u = 29,
                                p = 256,
                                d = p + 1 + u,
                                m = 30,
                                g = 19,
                                b = 2 * d + 1,
                                v = 15,
                                y = 16,
                                w = 7,
                                _ = 256,
                                x = 16,
                                k = 17,
                                E = 18,
                                I = [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    1,
                                    1,
                                    1,
                                    1,
                                    2,
                                    2,
                                    2,
                                    2,
                                    3,
                                    3,
                                    3,
                                    3,
                                    4,
                                    4,
                                    4,
                                    4,
                                    5,
                                    5,
                                    5,
                                    5,
                                    0
                                ],
                                S = [
                                    0,
                                    0,
                                    0,
                                    0,
                                    1,
                                    1,
                                    2,
                                    2,
                                    3,
                                    3,
                                    4,
                                    4,
                                    5,
                                    5,
                                    6,
                                    6,
                                    7,
                                    7,
                                    8,
                                    8,
                                    9,
                                    9,
                                    10,
                                    10,
                                    11,
                                    11,
                                    12,
                                    12,
                                    13,
                                    13
                                ],
                                A = [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    2,
                                    3,
                                    7
                                ],
                                T = [
                                    16,
                                    17,
                                    18,
                                    0,
                                    8,
                                    7,
                                    9,
                                    6,
                                    10,
                                    5,
                                    11,
                                    4,
                                    12,
                                    3,
                                    13,
                                    2,
                                    14,
                                    1,
                                    15
                                ],
                                C = new Array(2 * (d + 2));
                            l(C);
                            var M = new Array(2 * m);
                            l(M);
                            var P = new Array(512);
                            l(P);
                            var L = new Array(256);
                            l(L);
                            var O = new Array(u);
                            l(O);
                            var R,
                                B,
                                D,
                                z = new Array(m);
                            function U(t, e, i, r, n) {
                                (this.static_tree = t),
                                    (this.extra_bits = e),
                                    (this.extra_base = i),
                                    (this.elems = r),
                                    (this.max_length = n),
                                    (this.has_stree = t && t.length);
                            }
                            function N(t, e) {
                                (this.dyn_tree = t),
                                    (this.max_code = 0),
                                    (this.stat_desc = e);
                            }
                            function F(t) {
                                return t < 256 ? P[t] : P[256 + (t >>> 7)];
                            }
                            function j(t, e) {
                                (t.pending_buf[t.pending++] = 255 & e),
                                    (t.pending_buf[t.pending++] =
                                        (e >>> 8) & 255);
                            }
                            function H(t, e, i) {
                                t.bi_valid > y - i
                                    ? ((t.bi_buf |= (e << t.bi_valid) & 65535),
                                      j(t, t.bi_buf),
                                      (t.bi_buf = e >> (y - t.bi_valid)),
                                      (t.bi_valid += i - y))
                                    : ((t.bi_buf |= (e << t.bi_valid) & 65535),
                                      (t.bi_valid += i));
                            }
                            function G(t, e, i) {
                                H(t, i[2 * e], i[2 * e + 1]);
                            }
                            function q(t, e) {
                                var i = 0;
                                do {
                                    (i |= 1 & t), (t >>>= 1), (i <<= 1);
                                } while (--e > 0);
                                return i >>> 1;
                            }
                            function W(t, e, i) {
                                var r,
                                    n,
                                    a = new Array(v + 1),
                                    o = 0;
                                for (r = 1; r <= v; r++)
                                    a[r] = o = (o + i[r - 1]) << 1;
                                for (n = 0; n <= e; n++) {
                                    var s = t[2 * n + 1];
                                    0 !== s && (t[2 * n] = q(a[s]++, s));
                                }
                            }
                            function Z(t) {
                                var e;
                                for (e = 0; e < d; e++) t.dyn_ltree[2 * e] = 0;
                                for (e = 0; e < m; e++) t.dyn_dtree[2 * e] = 0;
                                for (e = 0; e < g; e++) t.bl_tree[2 * e] = 0;
                                (t.dyn_ltree[2 * _] = 1),
                                    (t.opt_len = t.static_len = 0),
                                    (t.last_lit = t.matches = 0);
                            }
                            function X(t) {
                                t.bi_valid > 8
                                    ? j(t, t.bi_buf)
                                    : t.bi_valid > 0 &&
                                      (t.pending_buf[t.pending++] = t.bi_buf),
                                    (t.bi_buf = 0),
                                    (t.bi_valid = 0);
                            }
                            function Y(t, e, i, r) {
                                var n = 2 * e,
                                    a = 2 * i;
                                return (
                                    t[n] < t[a] ||
                                    (t[n] === t[a] && r[e] <= r[i])
                                );
                            }
                            function J(t, e, i) {
                                for (
                                    var r = t.heap[i], n = i << 1;
                                    n <= t.heap_len &&
                                    (n < t.heap_len &&
                                        Y(
                                            e,
                                            t.heap[n + 1],
                                            t.heap[n],
                                            t.depth
                                        ) &&
                                        n++,
                                    !Y(e, r, t.heap[n], t.depth));

                                )
                                    (t.heap[i] = t.heap[n]), (i = n), (n <<= 1);
                                t.heap[i] = r;
                            }
                            function V(t, e, i) {
                                var r,
                                    n,
                                    a,
                                    o,
                                    s = 0;
                                if (0 !== t.last_lit)
                                    do {
                                        (r =
                                            (t.pending_buf[t.d_buf + 2 * s] <<
                                                8) |
                                            t.pending_buf[t.d_buf + 2 * s + 1]),
                                            (n = t.pending_buf[t.l_buf + s]),
                                            s++,
                                            0 === r
                                                ? G(t, n, e)
                                                : (G(t, (a = L[n]) + p + 1, e),
                                                  0 !== (o = I[a]) &&
                                                      H(t, (n -= O[a]), o),
                                                  G(t, (a = F(--r)), i),
                                                  0 !== (o = S[a]) &&
                                                      H(t, (r -= z[a]), o));
                                    } while (s < t.last_lit);
                                G(t, _, e);
                            }
                            function Q(t, e) {
                                var i,
                                    r,
                                    n,
                                    a = e.dyn_tree,
                                    o = e.stat_desc.static_tree,
                                    s = e.stat_desc.has_stree,
                                    l = e.stat_desc.elems,
                                    f = -1;
                                for (
                                    t.heap_len = 0, t.heap_max = b, i = 0;
                                    i < l;
                                    i++
                                )
                                    0 !== a[2 * i]
                                        ? ((t.heap[++t.heap_len] = f = i),
                                          (t.depth[i] = 0))
                                        : (a[2 * i + 1] = 0);
                                for (; t.heap_len < 2; )
                                    (a[
                                        2 *
                                            (n = t.heap[++t.heap_len] =
                                                f < 2 ? ++f : 0)
                                    ] = 1),
                                        (t.depth[n] = 0),
                                        t.opt_len--,
                                        s && (t.static_len -= o[2 * n + 1]);
                                for (
                                    e.max_code = f, i = t.heap_len >> 1;
                                    i >= 1;
                                    i--
                                )
                                    J(t, a, i);
                                n = l;
                                do {
                                    (i = t.heap[1]),
                                        (t.heap[1] = t.heap[t.heap_len--]),
                                        J(t, a, 1),
                                        (r = t.heap[1]),
                                        (t.heap[--t.heap_max] = i),
                                        (t.heap[--t.heap_max] = r),
                                        (a[2 * n] = a[2 * i] + a[2 * r]),
                                        (t.depth[n] =
                                            (t.depth[i] >= t.depth[r]
                                                ? t.depth[i]
                                                : t.depth[r]) + 1),
                                        (a[2 * i + 1] = a[2 * r + 1] = n),
                                        (t.heap[1] = n++),
                                        J(t, a, 1);
                                } while (t.heap_len >= 2);
                                (t.heap[--t.heap_max] = t.heap[1]),
                                    (function(t, e) {
                                        var i,
                                            r,
                                            n,
                                            a,
                                            o,
                                            s,
                                            l = e.dyn_tree,
                                            f = e.max_code,
                                            h = e.stat_desc.static_tree,
                                            c = e.stat_desc.has_stree,
                                            u = e.stat_desc.extra_bits,
                                            p = e.stat_desc.extra_base,
                                            d = e.stat_desc.max_length,
                                            m = 0;
                                        for (a = 0; a <= v; a++)
                                            t.bl_count[a] = 0;
                                        for (
                                            l[2 * t.heap[t.heap_max] + 1] = 0,
                                                i = t.heap_max + 1;
                                            i < b;
                                            i++
                                        )
                                            (a =
                                                l[
                                                    2 *
                                                        l[
                                                            2 *
                                                                (r =
                                                                    t.heap[i]) +
                                                                1
                                                        ] +
                                                        1
                                                ] + 1) > d && ((a = d), m++),
                                                (l[2 * r + 1] = a),
                                                r > f ||
                                                    (t.bl_count[a]++,
                                                    (o = 0),
                                                    r >= p && (o = u[r - p]),
                                                    (s = l[2 * r]),
                                                    (t.opt_len += s * (a + o)),
                                                    c &&
                                                        (t.static_len +=
                                                            s *
                                                            (h[2 * r + 1] +
                                                                o)));
                                        if (0 !== m) {
                                            do {
                                                for (
                                                    a = d - 1;
                                                    0 === t.bl_count[a];

                                                )
                                                    a--;
                                                t.bl_count[a]--,
                                                    (t.bl_count[a + 1] += 2),
                                                    t.bl_count[d]--,
                                                    (m -= 2);
                                            } while (m > 0);
                                            for (a = d; 0 !== a; a--)
                                                for (
                                                    r = t.bl_count[a];
                                                    0 !== r;

                                                )
                                                    (n = t.heap[--i]) > f ||
                                                        (l[2 * n + 1] !== a &&
                                                            ((t.opt_len +=
                                                                (a -
                                                                    l[
                                                                        2 * n +
                                                                            1
                                                                    ]) *
                                                                l[2 * n]),
                                                            (l[2 * n + 1] = a)),
                                                        r--);
                                        }
                                    })(t, e),
                                    W(a, f, t.bl_count);
                            }
                            function K(t, e, i) {
                                var r,
                                    n,
                                    a = -1,
                                    o = e[1],
                                    s = 0,
                                    l = 7,
                                    f = 4;
                                for (
                                    0 === o && ((l = 138), (f = 3)),
                                        e[2 * (i + 1) + 1] = 65535,
                                        r = 0;
                                    r <= i;
                                    r++
                                )
                                    (n = o),
                                        (o = e[2 * (r + 1) + 1]),
                                        (++s < l && n === o) ||
                                            (s < f
                                                ? (t.bl_tree[2 * n] += s)
                                                : 0 !== n
                                                    ? (n !== a &&
                                                          t.bl_tree[2 * n]++,
                                                      t.bl_tree[2 * x]++)
                                                    : s <= 10
                                                        ? t.bl_tree[2 * k]++
                                                        : t.bl_tree[2 * E]++,
                                            (s = 0),
                                            (a = n),
                                            0 === o
                                                ? ((l = 138), (f = 3))
                                                : n === o
                                                    ? ((l = 6), (f = 3))
                                                    : ((l = 7), (f = 4)));
                            }
                            function $(t, e, i) {
                                var r,
                                    n,
                                    a = -1,
                                    o = e[1],
                                    s = 0,
                                    l = 7,
                                    f = 4;
                                for (
                                    0 === o && ((l = 138), (f = 3)), r = 0;
                                    r <= i;
                                    r++
                                )
                                    if (
                                        ((n = o),
                                        (o = e[2 * (r + 1) + 1]),
                                        !(++s < l && n === o))
                                    ) {
                                        if (s < f)
                                            do {
                                                G(t, n, t.bl_tree);
                                            } while (0 != --s);
                                        else
                                            0 !== n
                                                ? (n !== a &&
                                                      (G(t, n, t.bl_tree), s--),
                                                  G(t, x, t.bl_tree),
                                                  H(t, s - 3, 2))
                                                : s <= 10
                                                    ? (G(t, k, t.bl_tree),
                                                      H(t, s - 3, 3))
                                                    : (G(t, E, t.bl_tree),
                                                      H(t, s - 11, 7));
                                        (s = 0),
                                            (a = n),
                                            0 === o
                                                ? ((l = 138), (f = 3))
                                                : n === o
                                                    ? ((l = 6), (f = 3))
                                                    : ((l = 7), (f = 4));
                                    }
                            }
                            l(z);
                            var tt = !1;
                            function et(t, e, i, n) {
                                H(t, (f << 1) + (n ? 1 : 0), 3),
                                    (function(t, e, i, n) {
                                        X(t),
                                            n && (j(t, i), j(t, ~i)),
                                            r.arraySet(
                                                t.pending_buf,
                                                t.window,
                                                e,
                                                i,
                                                t.pending
                                            ),
                                            (t.pending += i);
                                    })(t, e, i, !0);
                            }
                            (i._tr_init = function(t) {
                                tt ||
                                    ((function() {
                                        var t,
                                            e,
                                            i,
                                            r,
                                            n,
                                            a = new Array(v + 1);
                                        for (i = 0, r = 0; r < u - 1; r++)
                                            for (
                                                O[r] = i, t = 0;
                                                t < 1 << I[r];
                                                t++
                                            )
                                                L[i++] = r;
                                        for (
                                            L[i - 1] = r, n = 0, r = 0;
                                            r < 16;
                                            r++
                                        )
                                            for (
                                                z[r] = n, t = 0;
                                                t < 1 << S[r];
                                                t++
                                            )
                                                P[n++] = r;
                                        for (n >>= 7; r < m; r++)
                                            for (
                                                z[r] = n << 7, t = 0;
                                                t < 1 << (S[r] - 7);
                                                t++
                                            )
                                                P[256 + n++] = r;
                                        for (e = 0; e <= v; e++) a[e] = 0;
                                        for (t = 0; t <= 143; )
                                            (C[2 * t + 1] = 8), t++, a[8]++;
                                        for (; t <= 255; )
                                            (C[2 * t + 1] = 9), t++, a[9]++;
                                        for (; t <= 279; )
                                            (C[2 * t + 1] = 7), t++, a[7]++;
                                        for (; t <= 287; )
                                            (C[2 * t + 1] = 8), t++, a[8]++;
                                        for (W(C, d + 1, a), t = 0; t < m; t++)
                                            (M[2 * t + 1] = 5),
                                                (M[2 * t] = q(t, 5));
                                        (R = new U(C, I, p + 1, d, v)),
                                            (B = new U(M, S, 0, m, v)),
                                            (D = new U(
                                                new Array(0),
                                                A,
                                                0,
                                                g,
                                                w
                                            ));
                                    })(),
                                    (tt = !0)),
                                    (t.l_desc = new N(t.dyn_ltree, R)),
                                    (t.d_desc = new N(t.dyn_dtree, B)),
                                    (t.bl_desc = new N(t.bl_tree, D)),
                                    (t.bi_buf = 0),
                                    (t.bi_valid = 0),
                                    Z(t);
                            }),
                                (i._tr_stored_block = et),
                                (i._tr_flush_block = function(t, e, i, r) {
                                    var l,
                                        f,
                                        u = 0;
                                    t.level > 0
                                        ? (t.strm.data_type === s &&
                                              (t.strm.data_type = (function(t) {
                                                  var e,
                                                      i = 4093624447;
                                                  for (
                                                      e = 0;
                                                      e <= 31;
                                                      e++, i >>>= 1
                                                  )
                                                      if (
                                                          1 & i &&
                                                          0 !==
                                                              t.dyn_ltree[2 * e]
                                                      )
                                                          return a;
                                                  if (
                                                      0 !== t.dyn_ltree[18] ||
                                                      0 !== t.dyn_ltree[20] ||
                                                      0 !== t.dyn_ltree[26]
                                                  )
                                                      return o;
                                                  for (e = 32; e < p; e++)
                                                      if (
                                                          0 !==
                                                          t.dyn_ltree[2 * e]
                                                      )
                                                          return o;
                                                  return a;
                                              })(t)),
                                          Q(t, t.l_desc),
                                          Q(t, t.d_desc),
                                          (u = (function(t) {
                                              var e;
                                              for (
                                                  K(
                                                      t,
                                                      t.dyn_ltree,
                                                      t.l_desc.max_code
                                                  ),
                                                      K(
                                                          t,
                                                          t.dyn_dtree,
                                                          t.d_desc.max_code
                                                      ),
                                                      Q(t, t.bl_desc),
                                                      e = g - 1;
                                                  e >= 3 &&
                                                  0 === t.bl_tree[2 * T[e] + 1];
                                                  e--
                                              );
                                              return (
                                                  (t.opt_len +=
                                                      3 * (e + 1) + 5 + 5 + 4),
                                                  e
                                              );
                                          })(t)),
                                          (l = (t.opt_len + 3 + 7) >>> 3),
                                          (f = (t.static_len + 3 + 7) >>> 3) <=
                                              l && (l = f))
                                        : (l = f = i + 5),
                                        i + 4 <= l && -1 !== e
                                            ? et(t, e, i, r)
                                            : t.strategy === n || f === l
                                                ? (H(
                                                      t,
                                                      (h << 1) + (r ? 1 : 0),
                                                      3
                                                  ),
                                                  V(t, C, M))
                                                : (H(
                                                      t,
                                                      (c << 1) + (r ? 1 : 0),
                                                      3
                                                  ),
                                                  (function(t, e, i, r) {
                                                      var n;
                                                      for (
                                                          H(t, e - 257, 5),
                                                              H(t, i - 1, 5),
                                                              H(t, r - 4, 4),
                                                              n = 0;
                                                          n < r;
                                                          n++
                                                      )
                                                          H(
                                                              t,
                                                              t.bl_tree[
                                                                  2 * T[n] + 1
                                                              ],
                                                              3
                                                          );
                                                      $(t, t.dyn_ltree, e - 1),
                                                          $(
                                                              t,
                                                              t.dyn_dtree,
                                                              i - 1
                                                          );
                                                  })(
                                                      t,
                                                      t.l_desc.max_code + 1,
                                                      t.d_desc.max_code + 1,
                                                      u + 1
                                                  ),
                                                  V(
                                                      t,
                                                      t.dyn_ltree,
                                                      t.dyn_dtree
                                                  )),
                                        Z(t),
                                        r && X(t);
                                }),
                                (i._tr_tally = function(t, e, i) {
                                    return (
                                        (t.pending_buf[
                                            t.d_buf + 2 * t.last_lit
                                        ] =
                                            (e >>> 8) & 255),
                                        (t.pending_buf[
                                            t.d_buf + 2 * t.last_lit + 1
                                        ] =
                                            255 & e),
                                        (t.pending_buf[t.l_buf + t.last_lit] =
                                            255 & i),
                                        t.last_lit++,
                                        0 === e
                                            ? t.dyn_ltree[2 * i]++
                                            : (t.matches++,
                                              e--,
                                              t.dyn_ltree[2 * (L[i] + p + 1)]++,
                                              t.dyn_dtree[2 * F(e)]++),
                                        t.last_lit === t.lit_bufsize - 1
                                    );
                                }),
                                (i._tr_align = function(t) {
                                    H(t, h << 1, 3),
                                        G(t, _, C),
                                        (function(t) {
                                            16 === t.bi_valid
                                                ? (j(t, t.bi_buf),
                                                  (t.bi_buf = 0),
                                                  (t.bi_valid = 0))
                                                : t.bi_valid >= 8 &&
                                                  ((t.pending_buf[t.pending++] =
                                                      255 & t.bi_buf),
                                                  (t.bi_buf >>= 8),
                                                  (t.bi_valid -= 8));
                                        })(t);
                                });
                        },
                        { '../utils/common': 56 }
                    ],
                    68: [
                        function(t, e, i) {
                            e.exports = function() {
                                (this.input = null),
                                    (this.next_in = 0),
                                    (this.avail_in = 0),
                                    (this.total_in = 0),
                                    (this.output = null),
                                    (this.next_out = 0),
                                    (this.avail_out = 0),
                                    (this.total_out = 0),
                                    (this.msg = ''),
                                    (this.state = null),
                                    (this.data_type = 2),
                                    (this.adler = 0);
                            };
                        },
                        {}
                    ],
                    69: [
                        function(t, e, i) {
                            function r(t, e) {
                                if (!(t = t.replace(/\t+/g, ' ').trim()))
                                    return null;
                                var i = t.indexOf(' ');
                                if (-1 === i)
                                    throw new Error(
                                        'no named row at line ' + e
                                    );
                                var r = t.substring(0, i);
                                t = (t = (t = (t = t.substring(i + 1)).replace(
                                    /letter=[\'\"]\S+[\'\"]/gi,
                                    ''
                                )).split('=')).map(function(t) {
                                    return t
                                        .trim()
                                        .match(/(".*?"|[^"\s]+)+(?=\s*|\s*$)/g);
                                });
                                for (var a = [], o = 0; o < t.length; o++) {
                                    var s = t[o];
                                    0 === o
                                        ? a.push({ key: s[0], data: '' })
                                        : o === t.length - 1
                                            ? (a[a.length - 1].data = n(s[0]))
                                            : ((a[a.length - 1].data = n(s[0])),
                                              a.push({ key: s[1], data: '' }));
                                }
                                var l = { key: r, data: {} };
                                return (
                                    a.forEach(function(t) {
                                        l.data[t.key] = t.data;
                                    }),
                                    l
                                );
                            }
                            function n(t) {
                                return t && 0 !== t.length
                                    ? 0 === t.indexOf('"') ||
                                      0 === t.indexOf("'")
                                        ? t.substring(1, t.length - 1)
                                        : -1 !== t.indexOf(',')
                                            ? (function(t) {
                                                  return t
                                                      .split(',')
                                                      .map(function(t) {
                                                          return parseInt(
                                                              t,
                                                              10
                                                          );
                                                      });
                                              })(t)
                                            : parseInt(t, 10)
                                    : '';
                            }
                            e.exports = function(t) {
                                if (!t) throw new Error('no data provided');
                                var e = { pages: [], chars: [], kernings: [] },
                                    i = (t = t.toString().trim()).split(
                                        /\r\n?|\n/g
                                    );
                                if (0 === i.length)
                                    throw new Error('no data in BMFont file');
                                for (var n = 0; n < i.length; n++) {
                                    var a = r(i[n], n);
                                    if (a)
                                        if ('page' === a.key) {
                                            if ('number' != typeof a.data.id)
                                                throw new Error(
                                                    'malformed file at line ' +
                                                        n +
                                                        ' -- needs page id=N'
                                                );
                                            if ('string' != typeof a.data.file)
                                                throw new Error(
                                                    'malformed file at line ' +
                                                        n +
                                                        ' -- needs page file="path"'
                                                );
                                            e.pages[a.data.id] = a.data.file;
                                        } else
                                            'chars' === a.key ||
                                                'kernings' === a.key ||
                                                ('char' === a.key
                                                    ? e.chars.push(a.data)
                                                    : 'kerning' === a.key
                                                        ? e.kernings.push(
                                                              a.data
                                                          )
                                                        : (e[a.key] = a.data));
                                }
                                return e;
                            };
                        },
                        {}
                    ],
                    70: [
                        function(t, e, i) {
                            var r = [66, 77, 70];
                            function n(t, e, i) {
                                if (i > e.length - 1) return 0;
                                var r = e.readUInt8(i++),
                                    n = e.readInt32LE(i);
                                switch (((i += 4), r)) {
                                    case 1:
                                        t.info = (function(t, e) {
                                            var i = {};
                                            i.size = t.readInt16LE(e);
                                            var r = t.readUInt8(e + 2);
                                            (i.smooth = (r >> 7) & 1),
                                                (i.unicode = (r >> 6) & 1),
                                                (i.italic = (r >> 5) & 1),
                                                (i.bold = (r >> 4) & 1),
                                                (r >> 3) & 1 &&
                                                    (i.fixedHeight = 1);
                                            return (
                                                (i.charset =
                                                    t.readUInt8(e + 3) || ''),
                                                (i.stretchH = t.readUInt16LE(
                                                    e + 4
                                                )),
                                                (i.aa = t.readUInt8(e + 6)),
                                                (i.padding = [
                                                    t.readInt8(e + 7),
                                                    t.readInt8(e + 8),
                                                    t.readInt8(e + 9),
                                                    t.readInt8(e + 10)
                                                ]),
                                                (i.spacing = [
                                                    t.readInt8(e + 11),
                                                    t.readInt8(e + 12)
                                                ]),
                                                (i.outline = t.readUInt8(
                                                    e + 13
                                                )),
                                                (i.face = (function(t, e) {
                                                    return a(t, e).toString(
                                                        'utf8'
                                                    );
                                                })(t, e + 14)),
                                                i
                                            );
                                        })(e, i);
                                        break;
                                    case 2:
                                        t.common = (function(t, e) {
                                            var i = {};
                                            (i.lineHeight = t.readUInt16LE(e)),
                                                (i.base = t.readUInt16LE(
                                                    e + 2
                                                )),
                                                (i.scaleW = t.readUInt16LE(
                                                    e + 4
                                                )),
                                                (i.scaleH = t.readUInt16LE(
                                                    e + 6
                                                )),
                                                (i.pages = t.readUInt16LE(
                                                    e + 8
                                                ));
                                            t.readUInt8(e + 10);
                                            return (
                                                (i.packed = 0),
                                                (i.alphaChnl = t.readUInt8(
                                                    e + 11
                                                )),
                                                (i.redChnl = t.readUInt8(
                                                    e + 12
                                                )),
                                                (i.greenChnl = t.readUInt8(
                                                    e + 13
                                                )),
                                                (i.blueChnl = t.readUInt8(
                                                    e + 14
                                                )),
                                                i
                                            );
                                        })(e, i);
                                        break;
                                    case 3:
                                        t.pages = (function(t, e, i) {
                                            for (
                                                var r = [],
                                                    n = a(t, e),
                                                    o = n.length + 1,
                                                    s = i / o,
                                                    l = 0;
                                                l < s;
                                                l++
                                            )
                                                (r[l] = t
                                                    .slice(e, e + n.length)
                                                    .toString('utf8')),
                                                    (e += o);
                                            return r;
                                        })(e, i, n);
                                        break;
                                    case 4:
                                        t.chars = (function(t, e, i) {
                                            for (
                                                var r = [], n = i / 20, a = 0;
                                                a < n;
                                                a++
                                            ) {
                                                var o = {},
                                                    s = 20 * a;
                                                (o.id = t.readUInt32LE(
                                                    e + 0 + s
                                                )),
                                                    (o.x = t.readUInt16LE(
                                                        e + 4 + s
                                                    )),
                                                    (o.y = t.readUInt16LE(
                                                        e + 6 + s
                                                    )),
                                                    (o.width = t.readUInt16LE(
                                                        e + 8 + s
                                                    )),
                                                    (o.height = t.readUInt16LE(
                                                        e + 10 + s
                                                    )),
                                                    (o.xoffset = t.readInt16LE(
                                                        e + 12 + s
                                                    )),
                                                    (o.yoffset = t.readInt16LE(
                                                        e + 14 + s
                                                    )),
                                                    (o.xadvance = t.readInt16LE(
                                                        e + 16 + s
                                                    )),
                                                    (o.page = t.readUInt8(
                                                        e + 18 + s
                                                    )),
                                                    (o.chnl = t.readUInt8(
                                                        e + 19 + s
                                                    )),
                                                    (r[a] = o);
                                            }
                                            return r;
                                        })(e, i, n);
                                        break;
                                    case 5:
                                        t.kernings = (function(t, e, i) {
                                            for (
                                                var r = [], n = i / 10, a = 0;
                                                a < n;
                                                a++
                                            ) {
                                                var o = {},
                                                    s = 10 * a;
                                                (o.first = t.readUInt32LE(
                                                    e + 0 + s
                                                )),
                                                    (o.second = t.readUInt32LE(
                                                        e + 4 + s
                                                    )),
                                                    (o.amount = t.readInt16LE(
                                                        e + 8 + s
                                                    )),
                                                    (r[a] = o);
                                            }
                                            return r;
                                        })(e, i, n);
                                }
                                return 5 + n;
                            }
                            function a(t, e) {
                                for (
                                    var i = e;
                                    i < t.length && 0 !== t[i];
                                    i++
                                );
                                return t.slice(e, i);
                            }
                            e.exports = function(t) {
                                if (t.length < 6)
                                    throw new Error(
                                        'invalid buffer length for BMFont'
                                    );
                                if (
                                    !r.every(function(e, i) {
                                        return t.readUInt8(i) === e;
                                    })
                                )
                                    throw new Error(
                                        'BMFont missing BMF byte header'
                                    );
                                var e = 3;
                                if (t.readUInt8(e++) > 3)
                                    throw new Error(
                                        'Only supports BMFont Binary v3 (BMFont App v1.10)'
                                    );
                                for (
                                    var i = { kernings: [], chars: [] }, a = 0;
                                    a < 5;
                                    a++
                                )
                                    e += n(i, t, e);
                                return i;
                            };
                        },
                        {}
                    ],
                    71: [
                        function(t, e, i) {
                            var r = t('./parse-attribs'),
                                n = t('xml-parse-from-string'),
                                a = {
                                    scaleh: 'scaleH',
                                    scalew: 'scaleW',
                                    stretchh: 'stretchH',
                                    lineheight: 'lineHeight',
                                    alphachnl: 'alphaChnl',
                                    redchnl: 'redChnl',
                                    greenchnl: 'greenChnl',
                                    bluechnl: 'blueChnl'
                                };
                            function o(t) {
                                return (function(t) {
                                    for (
                                        var e = [], i = 0;
                                        i < t.attributes.length;
                                        i++
                                    )
                                        e.push(t.attributes[i]);
                                    return e;
                                })(t).reduce(function(t, e) {
                                    return (
                                        (t[
                                            (function(t) {
                                                return a[t.toLowerCase()] || t;
                                            })(e.nodeName)
                                        ] =
                                            e.nodeValue),
                                        t
                                    );
                                }, {});
                            }
                            e.exports = function(t) {
                                t = t.toString();
                                var e = n(t),
                                    i = { pages: [], chars: [], kernings: [] };
                                ['info', 'common'].forEach(function(t) {
                                    var n = e.getElementsByTagName(t)[0];
                                    n && (i[t] = r(o(n)));
                                });
                                var a = e.getElementsByTagName('pages')[0];
                                if (!a)
                                    throw new Error(
                                        'malformed file -- no <pages> element'
                                    );
                                for (
                                    var s = a.getElementsByTagName('page'),
                                        l = 0;
                                    l < s.length;
                                    l++
                                ) {
                                    var f = s[l],
                                        h = parseInt(f.getAttribute('id'), 10),
                                        c = f.getAttribute('file');
                                    if (isNaN(h))
                                        throw new Error(
                                            'malformed file -- page "id" attribute is NaN'
                                        );
                                    if (!c)
                                        throw new Error(
                                            'malformed file -- needs page "file" attribute'
                                        );
                                    i.pages[parseInt(h, 10)] = c;
                                }
                                return (
                                    ['chars', 'kernings'].forEach(function(t) {
                                        var n = e.getElementsByTagName(t)[0];
                                        if (n)
                                            for (
                                                var a = t.substring(
                                                        0,
                                                        t.length - 1
                                                    ),
                                                    s = n.getElementsByTagName(
                                                        a
                                                    ),
                                                    l = 0;
                                                l < s.length;
                                                l++
                                            ) {
                                                var f = s[l];
                                                i[t].push(r(o(f)));
                                            }
                                    }),
                                    i
                                );
                            };
                        },
                        { './parse-attribs': 72, 'xml-parse-from-string': 136 }
                    ],
                    72: [
                        function(t, e, i) {
                            function r(t) {
                                return t.split(',').map(function(t) {
                                    return parseInt(t, 10);
                                });
                            }
                            e.exports = function(t) {
                                for (var e in ('chasrset' in t &&
                                    ((t.charset = t.chasrset),
                                    delete t.chasrset),
                                t))
                                    'face' !== e &&
                                        'charset' !== e &&
                                        (t[e] =
                                            'padding' === e || 'spacing' === e
                                                ? r(t[e])
                                                : parseInt(t[e], 10));
                                return t;
                            };
                        },
                        {}
                    ],
                    73: [
                        function(t, e, i) {
                            var r = t('trim'),
                                n = t('for-each');
                            e.exports = function(t) {
                                if (!t) return {};
                                var e = {};
                                return (
                                    n(r(t).split('\n'), function(t) {
                                        var i = t.indexOf(':'),
                                            n = r(t.slice(0, i)).toLowerCase(),
                                            a = r(t.slice(i + 1));
                                        void 0 === e[n]
                                            ? (e[n] = a)
                                            : !(function(t) {
                                                  return (
                                                      '[object Array]' ===
                                                      Object.prototype.toString.call(
                                                          t
                                                      )
                                                  );
                                              })(e[n])
                                                ? (e[n] = [e[n], a])
                                                : e[n].push(a);
                                    }),
                                    e
                                );
                            };
                        },
                        { 'for-each': 32, trim: 128 }
                    ],
                    74: [
                        function(t, e, i) {
                            (function(t) {
                                function e(t, e) {
                                    for (
                                        var i = 0, r = t.length - 1;
                                        r >= 0;
                                        r--
                                    ) {
                                        var n = t[r];
                                        '.' === n
                                            ? t.splice(r, 1)
                                            : '..' === n
                                                ? (t.splice(r, 1), i++)
                                                : i && (t.splice(r, 1), i--);
                                    }
                                    if (e) for (; i--; i) t.unshift('..');
                                    return t;
                                }
                                function r(t, e) {
                                    if (t.filter) return t.filter(e);
                                    for (var i = [], r = 0; r < t.length; r++)
                                        e(t[r], r, t) && i.push(t[r]);
                                    return i;
                                }
                                (i.resolve = function() {
                                    for (
                                        var i = '',
                                            n = !1,
                                            a = arguments.length - 1;
                                        a >= -1 && !n;
                                        a--
                                    ) {
                                        var o = a >= 0 ? arguments[a] : t.cwd();
                                        if ('string' != typeof o)
                                            throw new TypeError(
                                                'Arguments to path.resolve must be strings'
                                            );
                                        o &&
                                            ((i = o + '/' + i),
                                            (n = '/' === o.charAt(0)));
                                    }
                                    return (
                                        (i = e(
                                            r(i.split('/'), function(t) {
                                                return !!t;
                                            }),
                                            !n
                                        ).join('/')),
                                        (n ? '/' : '') + i || '.'
                                    );
                                }),
                                    (i.normalize = function(t) {
                                        var a = i.isAbsolute(t),
                                            o = '/' === n(t, -1);
                                        return (
                                            (t = e(
                                                r(t.split('/'), function(t) {
                                                    return !!t;
                                                }),
                                                !a
                                            ).join('/')) ||
                                                a ||
                                                (t = '.'),
                                            t && o && (t += '/'),
                                            (a ? '/' : '') + t
                                        );
                                    }),
                                    (i.isAbsolute = function(t) {
                                        return '/' === t.charAt(0);
                                    }),
                                    (i.join = function() {
                                        var t = Array.prototype.slice.call(
                                            arguments,
                                            0
                                        );
                                        return i.normalize(
                                            r(t, function(t, e) {
                                                if ('string' != typeof t)
                                                    throw new TypeError(
                                                        'Arguments to path.join must be strings'
                                                    );
                                                return t;
                                            }).join('/')
                                        );
                                    }),
                                    (i.relative = function(t, e) {
                                        function r(t) {
                                            for (
                                                var e = 0;
                                                e < t.length && '' === t[e];
                                                e++
                                            );
                                            for (
                                                var i = t.length - 1;
                                                i >= 0 && '' === t[i];
                                                i--
                                            );
                                            return e > i
                                                ? []
                                                : t.slice(e, i - e + 1);
                                        }
                                        (t = i.resolve(t).substr(1)),
                                            (e = i.resolve(e).substr(1));
                                        for (
                                            var n = r(t.split('/')),
                                                a = r(e.split('/')),
                                                o = Math.min(
                                                    n.length,
                                                    a.length
                                                ),
                                                s = o,
                                                l = 0;
                                            l < o;
                                            l++
                                        )
                                            if (n[l] !== a[l]) {
                                                s = l;
                                                break;
                                            }
                                        var f = [];
                                        for (l = s; l < n.length; l++)
                                            f.push('..');
                                        return (f = f.concat(a.slice(s))).join(
                                            '/'
                                        );
                                    }),
                                    (i.sep = '/'),
                                    (i.delimiter = ':'),
                                    (i.dirname = function(t) {
                                        if (
                                            ('string' != typeof t && (t += ''),
                                            0 === t.length)
                                        )
                                            return '.';
                                        for (
                                            var e = t.charCodeAt(0),
                                                i = 47 === e,
                                                r = -1,
                                                n = !0,
                                                a = t.length - 1;
                                            a >= 1;
                                            --a
                                        )
                                            if (47 === (e = t.charCodeAt(a))) {
                                                if (!n) {
                                                    r = a;
                                                    break;
                                                }
                                            } else n = !1;
                                        return -1 === r
                                            ? i
                                                ? '/'
                                                : '.'
                                            : i && 1 === r
                                                ? '/'
                                                : t.slice(0, r);
                                    }),
                                    (i.basename = function(t, e) {
                                        var i = (function(t) {
                                            'string' != typeof t && (t += '');
                                            var e,
                                                i = 0,
                                                r = -1,
                                                n = !0;
                                            for (e = t.length - 1; e >= 0; --e)
                                                if (47 === t.charCodeAt(e)) {
                                                    if (!n) {
                                                        i = e + 1;
                                                        break;
                                                    }
                                                } else
                                                    -1 === r &&
                                                        ((n = !1), (r = e + 1));
                                            return -1 === r
                                                ? ''
                                                : t.slice(i, r);
                                        })(t);
                                        return (
                                            e &&
                                                i.substr(-1 * e.length) === e &&
                                                (i = i.substr(
                                                    0,
                                                    i.length - e.length
                                                )),
                                            i
                                        );
                                    }),
                                    (i.extname = function(t) {
                                        'string' != typeof t && (t += '');
                                        for (
                                            var e = -1,
                                                i = 0,
                                                r = -1,
                                                n = !0,
                                                a = 0,
                                                o = t.length - 1;
                                            o >= 0;
                                            --o
                                        ) {
                                            var s = t.charCodeAt(o);
                                            if (47 !== s)
                                                -1 === r &&
                                                    ((n = !1), (r = o + 1)),
                                                    46 === s
                                                        ? -1 === e
                                                            ? (e = o)
                                                            : 1 !== a && (a = 1)
                                                        : -1 !== e && (a = -1);
                                            else if (!n) {
                                                i = o + 1;
                                                break;
                                            }
                                        }
                                        return -1 === e ||
                                            -1 === r ||
                                            0 === a ||
                                            (1 === a &&
                                                e === r - 1 &&
                                                e === i + 1)
                                            ? ''
                                            : t.slice(e, r);
                                    });
                                var n =
                                    'b' === 'ab'.substr(-1)
                                        ? function(t, e, i) {
                                              return t.substr(e, i);
                                          }
                                        : function(t, e, i) {
                                              return (
                                                  e < 0 && (e = t.length + e),
                                                  t.substr(e, i)
                                              );
                                          };
                            }.call(this, t('_process')));
                        },
                        { _process: 15 }
                    ],
                    75: [
                        function(t, e, i) {
                            (function(i) {
                                var r =
                                        'function' == typeof Symbol &&
                                        'symbol' === a(Symbol.iterator)
                                            ? function(t) {
                                                  return void 0 === t
                                                      ? 'undefined'
                                                      : a(t);
                                              }
                                            : function(t) {
                                                  return t &&
                                                      'function' ==
                                                          typeof Symbol &&
                                                      t.constructor ===
                                                          Symbol &&
                                                      t !== Symbol.prototype
                                                      ? 'symbol'
                                                      : void 0 === t
                                                          ? 'undefined'
                                                          : a(t);
                                              },
                                    n = t('http'),
                                    o = t('https'),
                                    s = t('url'),
                                    l = t('querystring'),
                                    f = t('zlib'),
                                    h = t('util'),
                                    c = function(t, e) {
                                        if (
                                            'string' != typeof t &&
                                            !t.hasOwnProperty('url')
                                        )
                                            throw new Error(
                                                'Missing url option from options for request method.'
                                            );
                                        var a =
                                                'object' ===
                                                (void 0 === t
                                                    ? 'undefined'
                                                    : r(t))
                                                    ? s.parse(t.url)
                                                    : s.parse(t),
                                            h = {
                                                hostname: a.hostname,
                                                port:
                                                    a.port ||
                                                    ('http:' ===
                                                    a.protocol.toLowerCase()
                                                        ? 80
                                                        : 443),
                                                path: a.path,
                                                method: 'GET',
                                                headers: {},
                                                auth: a.auth || null,
                                                timeout: null,
                                                parse: 'none',
                                                stream: !1
                                            };
                                        if (
                                            ('object' ===
                                                (void 0 === t
                                                    ? 'undefined'
                                                    : r(t)) &&
                                                (h = Object.assign(h, t)),
                                            (h.port = Number(h.port)),
                                            !0 === h.compressed &&
                                                (h.headers['accept-encoding'] =
                                                    'gzip, deflate'),
                                            t.hasOwnProperty('form'))
                                        ) {
                                            if ('object' !== r(t.form))
                                                throw new Error(
                                                    "phin 'form' option must be of type Object if present."
                                                );
                                            var c = l.stringify(t.form);
                                            (h.headers['Content-Type'] =
                                                'application/x-www-form-urlencoded'),
                                                (h.headers[
                                                    'Content-Length'
                                                ] = i.byteLength(c)),
                                                (t.data = c);
                                        }
                                        var u = void 0,
                                            p = function(t) {
                                                var r = t;
                                                !0 === h.compressed &&
                                                    ('gzip' ===
                                                    t.headers[
                                                        'content-encoding'
                                                    ]
                                                        ? (r = t.pipe(
                                                              f.createGunzip()
                                                          ))
                                                        : 'deflate' ===
                                                              t.headers[
                                                                  'content-encoding'
                                                              ] &&
                                                          (r = t.pipe(
                                                              f.createInflate()
                                                          ))),
                                                    !0 === h.stream
                                                        ? ((t.stream = r),
                                                          e(null, t))
                                                        : ((t.body = new i([])),
                                                          r.on('data', function(
                                                              e
                                                          ) {
                                                              t.body = i.concat(
                                                                  [t.body, e]
                                                              );
                                                          }),
                                                          r.on(
                                                              'end',
                                                              function() {
                                                                  if (e) {
                                                                      if (
                                                                          'json' ===
                                                                          h.parse
                                                                      )
                                                                          try {
                                                                              t.body = JSON.parse(
                                                                                  t.body.toString()
                                                                              );
                                                                          } catch (i) {
                                                                              return void e(
                                                                                  'Invalid JSON received.',
                                                                                  t
                                                                              );
                                                                          }
                                                                      e(
                                                                          null,
                                                                          t
                                                                      );
                                                                  }
                                                              }
                                                          ));
                                            };
                                        switch (a.protocol.toLowerCase()) {
                                            case 'http:':
                                                u = n.request(h, p);
                                                break;
                                            case 'https:':
                                                u = o.request(h, p);
                                                break;
                                            default:
                                                return void (
                                                    e &&
                                                    e(
                                                        new Error(
                                                            'Invalid / unknown URL protocol. Expected HTTP or HTTPS.'
                                                        ),
                                                        null
                                                    )
                                                );
                                        }
                                        if (
                                            ('number' == typeof h.timeout &&
                                                u.setTimeout(
                                                    h.timeout,
                                                    function() {
                                                        u.abort(),
                                                            e(
                                                                new Error(
                                                                    'Timeout has been reached.'
                                                                ),
                                                                null
                                                            ),
                                                            (e = null);
                                                    }
                                                ),
                                            u.on('error', function(t) {
                                                e && e(t, null);
                                            }),
                                            t.hasOwnProperty('data'))
                                        ) {
                                            var d = t.data;
                                            if (
                                                !(t.data instanceof i) &&
                                                'object' === r(t.data)
                                            )
                                                if (
                                                    'application/x-www-form-urlencoded' ===
                                                    (h.headers[
                                                        'content-type'
                                                    ] ||
                                                        h.headers[
                                                            'Content-Type'
                                                        ])
                                                )
                                                    d = l.stringify(t.data);
                                                else
                                                    try {
                                                        d = JSON.stringify(
                                                            t.data
                                                        );
                                                    } catch (t) {
                                                        e(
                                                            new Error(
                                                                "Couldn't stringify object. (Likely due to a circular reference.)"
                                                            ),
                                                            null
                                                        );
                                                    }
                                            u.write(d);
                                        }
                                        u.end();
                                    };
                                (c.promisified = function(t, e) {
                                    return new Promise(function(e, i) {
                                        c(t, function(t, r) {
                                            t ? i(t) : e(r);
                                        });
                                    });
                                }),
                                    h.promisify &&
                                        (c[h.promisify.custom] = c.promisified),
                                    (e.exports = c);
                            }.call(this, t('buffer').Buffer));
                        },
                        {
                            buffer: 17,
                            http: 119,
                            https: 34,
                            querystring: 103,
                            url: 129,
                            util: 134,
                            zlib: 13
                        }
                    ],
                    76: [
                        function(t, e, i) {
                            function r(t, e, i, a, o, s) {
                                for (
                                    var l,
                                        f,
                                        h,
                                        c,
                                        u = Math.max(e - 1, 0),
                                        p = Math.max(i - 1, 0),
                                        d = Math.min(e + 1, a - 1),
                                        m = Math.min(i + 1, o - 1),
                                        g = 4 * (i * a + e),
                                        b = 0,
                                        v = 0,
                                        y = 0,
                                        w = 0,
                                        _ = 0,
                                        x = u;
                                    x <= d;
                                    x++
                                )
                                    for (var k = p; k <= m; k++)
                                        if (x !== e || k !== i) {
                                            var E = n(
                                                t,
                                                t,
                                                g,
                                                4 * (k * a + x),
                                                !0
                                            );
                                            if (
                                                (0 === E
                                                    ? b++
                                                    : E < 0
                                                        ? y++
                                                        : E > 0 && v++,
                                                b > 2)
                                            )
                                                return !1;
                                            s &&
                                                (E < w &&
                                                    ((w = E), (l = x), (f = k)),
                                                E > _ &&
                                                    ((_ = E),
                                                    (h = x),
                                                    (c = k)));
                                        }
                                return (
                                    !s ||
                                    (0 !== y &&
                                        0 !== v &&
                                        ((!r(t, l, f, a, o) &&
                                            !r(s, l, f, a, o)) ||
                                            (!r(t, h, c, a, o) &&
                                                !r(s, h, c, a, o))))
                                );
                            }
                            function n(t, e, i, r, n) {
                                var f = t[i + 3] / 255,
                                    h = e[r + 3] / 255,
                                    c = l(t[i + 0], f),
                                    u = l(t[i + 1], f),
                                    p = l(t[i + 2], f),
                                    d = l(e[r + 0], h),
                                    m = l(e[r + 1], h),
                                    g = l(e[r + 2], h),
                                    b = a(c, u, p) - a(d, m, g);
                                if (n) return b;
                                var v = o(c, u, p) - o(d, m, g),
                                    y = s(c, u, p) - s(d, m, g);
                                return (
                                    0.5053 * b * b +
                                    0.299 * v * v +
                                    0.1957 * y * y
                                );
                            }
                            function a(t, e, i) {
                                return (
                                    0.29889531 * t +
                                    0.58662247 * e +
                                    0.11448223 * i
                                );
                            }
                            function o(t, e, i) {
                                return (
                                    0.59597799 * t -
                                    0.2741761 * e -
                                    0.32180189 * i
                                );
                            }
                            function s(t, e, i) {
                                return (
                                    0.21147017 * t -
                                    0.52261711 * e +
                                    0.31114694 * i
                                );
                            }
                            function l(t, e) {
                                return 255 + (t - 255) * e;
                            }
                            function f(t, e, i, r, n) {
                                (t[e + 0] = i),
                                    (t[e + 1] = r),
                                    (t[e + 2] = n),
                                    (t[e + 3] = 255);
                            }
                            function h(t, e) {
                                var i = t[e + 3] / 255;
                                return a(
                                    l(t[e + 0], i),
                                    l(t[e + 1], i),
                                    l(t[e + 2], i)
                                );
                            }
                            e.exports = function(t, e, i, a, o, s) {
                                s || (s = {});
                                for (
                                    var c =
                                            void 0 === s.threshold
                                                ? 0.1
                                                : s.threshold,
                                        u = 35215 * c * c,
                                        p = 0,
                                        d = 0;
                                    d < o;
                                    d++
                                )
                                    for (var m = 0; m < a; m++) {
                                        var g = 4 * (d * a + m),
                                            b = n(t, e, g, g);
                                        if (b > u)
                                            s.includeAA ||
                                            (!r(t, m, d, a, o, e) &&
                                                !r(e, m, d, a, o, t))
                                                ? (i && f(i, g, 255, 0, 0), p++)
                                                : i && f(i, g, 255, 255, 0);
                                        else if (i) {
                                            var v = l(h(t, g), 0.1);
                                            f(i, g, v, v, v);
                                        }
                                    }
                                return p;
                            };
                        },
                        {}
                    ],
                    77: [
                        function(t, e, i) {
                            (function(e) {
                                var r = t('./interlace'),
                                    n = {
                                        1: { 0: 0, 1: 0, 2: 0, 3: 255 },
                                        2: { 0: 0, 1: 0, 2: 0, 3: 1 },
                                        3: { 0: 0, 1: 1, 2: 2, 3: 255 },
                                        4: { 0: 0, 1: 1, 2: 2, 3: 3 }
                                    };
                                function a(t, e, i, r, a, o) {
                                    for (
                                        var s = t.width,
                                            l = t.height,
                                            f = t.index,
                                            h = 0;
                                        h < l;
                                        h++
                                    )
                                        for (var c = 0; c < s; c++) {
                                            for (
                                                var u = i(c, h, f), p = 0;
                                                p < 4;
                                                p++
                                            ) {
                                                var d = n[r][p];
                                                if (255 === d) e[u + p] = 255;
                                                else {
                                                    var m = d + o;
                                                    if (m === a.length)
                                                        throw new Error(
                                                            'Ran out of data'
                                                        );
                                                    e[u + p] = a[m];
                                                }
                                            }
                                            o += r;
                                        }
                                    return o;
                                }
                                function o(t, e, i, r, a, o) {
                                    for (
                                        var s = t.width,
                                            l = t.height,
                                            f = t.index,
                                            h = 0;
                                        h < l;
                                        h++
                                    ) {
                                        for (var c = 0; c < s; c++)
                                            for (
                                                var u = a.get(r),
                                                    p = i(c, h, f),
                                                    d = 0;
                                                d < 4;
                                                d++
                                            ) {
                                                var m = n[r][d];
                                                e[p + d] = 255 !== m ? u[m] : o;
                                            }
                                        a.resetAfterLine();
                                    }
                                }
                                i.dataToBitMap = function(t, i) {
                                    var n,
                                        s = i.width,
                                        l = i.height,
                                        f = i.depth,
                                        h = i.bpp,
                                        c = i.interlace;
                                    if (8 !== f)
                                        var u = (function(t, e) {
                                            var i = [],
                                                r = 0;
                                            function n() {
                                                if (r === t.length)
                                                    throw new Error(
                                                        'Ran out of data'
                                                    );
                                                var n,
                                                    a,
                                                    o,
                                                    s,
                                                    l,
                                                    f,
                                                    h,
                                                    c,
                                                    u = t[r];
                                                switch ((r++, e)) {
                                                    default:
                                                        throw new Error(
                                                            'unrecognised depth'
                                                        );
                                                    case 16:
                                                        (h = t[r]),
                                                            r++,
                                                            i.push(
                                                                (u << 8) + h
                                                            );
                                                        break;
                                                    case 4:
                                                        (h = 15 & u),
                                                            (c = u >> 4),
                                                            i.push(c, h);
                                                        break;
                                                    case 2:
                                                        (l = 3 & u),
                                                            (f = (u >> 2) & 3),
                                                            (h = (u >> 4) & 3),
                                                            (c = (u >> 6) & 3),
                                                            i.push(c, h, f, l);
                                                        break;
                                                    case 1:
                                                        (n = 1 & u),
                                                            (a = (u >> 1) & 1),
                                                            (o = (u >> 2) & 1),
                                                            (s = (u >> 3) & 1),
                                                            (l = (u >> 4) & 1),
                                                            (f = (u >> 5) & 1),
                                                            (h = (u >> 6) & 1),
                                                            (c = (u >> 7) & 1),
                                                            i.push(
                                                                c,
                                                                h,
                                                                f,
                                                                l,
                                                                s,
                                                                o,
                                                                a,
                                                                n
                                                            );
                                                }
                                            }
                                            return {
                                                get: function(t) {
                                                    for (; i.length < t; ) n();
                                                    var e = i.slice(0, t);
                                                    return (i = i.slice(t)), e;
                                                },
                                                resetAfterLine: function() {
                                                    i.length = 0;
                                                },
                                                end: function() {
                                                    if (r !== t.length)
                                                        throw new Error(
                                                            'extra data found'
                                                        );
                                                }
                                            };
                                        })(t, f);
                                    n =
                                        f <= 8
                                            ? new e(s * l * 4)
                                            : new Uint16Array(s * l * 4);
                                    var p,
                                        d,
                                        m = Math.pow(2, f) - 1,
                                        g = 0;
                                    if (c)
                                        (p = r.getImagePasses(s, l)),
                                            (d = r.getInterlaceIterator(s, l));
                                    else {
                                        var b = 0;
                                        (d = function() {
                                            var t = b;
                                            return (b += 4), t;
                                        }),
                                            (p = [{ width: s, height: l }]);
                                    }
                                    for (var v = 0; v < p.length; v++)
                                        8 === f
                                            ? (g = a(p[v], n, d, h, t, g))
                                            : o(p[v], n, d, h, u, m);
                                    if (8 === f) {
                                        if (g !== t.length)
                                            throw new Error('extra data found');
                                    } else u.end();
                                    return n;
                                };
                            }.call(this, t('buffer').Buffer));
                        },
                        { './interlace': 87, buffer: 17 }
                    ],
                    78: [
                        function(t, e, i) {
                            (function(i) {
                                var r = t('./constants');
                                e.exports = function(t, e, n, a) {
                                    var o =
                                        -1 !==
                                        [
                                            r.COLORTYPE_COLOR_ALPHA,
                                            r.COLORTYPE_ALPHA
                                        ].indexOf(a.colorType);
                                    if (a.colorType === a.inputColorType) {
                                        var s = (function() {
                                            var t = new ArrayBuffer(2);
                                            return (
                                                new DataView(t).setInt16(
                                                    0,
                                                    256,
                                                    !0
                                                ),
                                                256 !== new Int16Array(t)[0]
                                            );
                                        })();
                                        if (
                                            8 === a.bitDepth ||
                                            (16 === a.bitDepth && s)
                                        )
                                            return t;
                                    }
                                    var l =
                                            16 !== a.bitDepth
                                                ? t
                                                : new Uint16Array(t.buffer),
                                        f = 255,
                                        h =
                                            r.COLORTYPE_TO_BPP_MAP[
                                                a.inputColorType
                                            ];
                                    4 != h || a.inputHasAlpha || (h = 3);
                                    var c = r.COLORTYPE_TO_BPP_MAP[a.colorType];
                                    16 === a.bitDepth &&
                                        ((f = 65535), (c *= 2));
                                    var u = new i(e * n * c),
                                        p = 0,
                                        d = 0,
                                        m = a.bgColor || {};
                                    function g(t, e) {
                                        var i,
                                            n,
                                            s,
                                            l = f;
                                        switch (a.inputColorType) {
                                            case r.COLORTYPE_COLOR_ALPHA:
                                                (l = t[e + 3]),
                                                    (i = t[e]),
                                                    (n = t[e + 1]),
                                                    (s = t[e + 2]);
                                                break;
                                            case r.COLORTYPE_COLOR:
                                                (i = t[e]),
                                                    (n = t[e + 1]),
                                                    (s = t[e + 2]);
                                                break;
                                            case r.COLORTYPE_ALPHA:
                                                (l = t[e + 1]),
                                                    (n = i = t[e]),
                                                    (s = i);
                                                break;
                                            case r.COLORTYPE_GRAYSCALE:
                                                (n = i = t[e]), (s = i);
                                                break;
                                            default:
                                                throw new Error(
                                                    'input color type:' +
                                                        a.inputColorType +
                                                        ' is not supported at present'
                                                );
                                        }
                                        return (
                                            a.inputHasAlpha &&
                                                (o ||
                                                    ((l /= f),
                                                    (i = Math.min(
                                                        Math.max(
                                                            Math.round(
                                                                (1 - l) *
                                                                    m.red +
                                                                    l * i
                                                            ),
                                                            0
                                                        ),
                                                        f
                                                    )),
                                                    (n = Math.min(
                                                        Math.max(
                                                            Math.round(
                                                                (1 - l) *
                                                                    m.green +
                                                                    l * n
                                                            ),
                                                            0
                                                        ),
                                                        f
                                                    )),
                                                    (s = Math.min(
                                                        Math.max(
                                                            Math.round(
                                                                (1 - l) *
                                                                    m.blue +
                                                                    l * s
                                                            ),
                                                            0
                                                        ),
                                                        f
                                                    )))),
                                            {
                                                red: i,
                                                green: n,
                                                blue: s,
                                                alpha: l
                                            }
                                        );
                                    }
                                    void 0 === m.red && (m.red = f),
                                        void 0 === m.green && (m.green = f),
                                        void 0 === m.blue && (m.blue = f);
                                    for (var b = 0; b < n; b++)
                                        for (var v = 0; v < e; v++) {
                                            var y = g(l, p);
                                            switch (a.colorType) {
                                                case r.COLORTYPE_COLOR_ALPHA:
                                                case r.COLORTYPE_COLOR:
                                                    8 === a.bitDepth
                                                        ? ((u[d] = y.red),
                                                          (u[d + 1] = y.green),
                                                          (u[d + 2] = y.blue),
                                                          o &&
                                                              (u[d + 3] =
                                                                  y.alpha))
                                                        : (u.writeUInt16BE(
                                                              y.red,
                                                              d
                                                          ),
                                                          u.writeUInt16BE(
                                                              y.green,
                                                              d + 2
                                                          ),
                                                          u.writeUInt16BE(
                                                              y.blue,
                                                              d + 4
                                                          ),
                                                          o &&
                                                              u.writeUInt16BE(
                                                                  y.alpha,
                                                                  d + 6
                                                              ));
                                                    break;
                                                case r.COLORTYPE_ALPHA:
                                                case r.COLORTYPE_GRAYSCALE:
                                                    var w =
                                                        (y.red +
                                                            y.green +
                                                            y.blue) /
                                                        3;
                                                    8 === a.bitDepth
                                                        ? ((u[d] = w),
                                                          o &&
                                                              (u[d + 1] =
                                                                  y.alpha))
                                                        : (u.writeUInt16BE(
                                                              w,
                                                              d
                                                          ),
                                                          o &&
                                                              u.writeUInt16BE(
                                                                  y.alpha,
                                                                  d + 2
                                                              ));
                                            }
                                            (p += h), (d += c);
                                        }
                                    return u;
                                };
                            }.call(this, t('buffer').Buffer));
                        },
                        { './constants': 80, buffer: 17 }
                    ],
                    79: [
                        function(t, e, i) {
                            (function(i, r) {
                                var n = t('util'),
                                    a = t('stream'),
                                    o = (e.exports = function() {
                                        a.call(this),
                                            (this._buffers = []),
                                            (this._buffered = 0),
                                            (this._reads = []),
                                            (this._paused = !1),
                                            (this._encoding = 'utf8'),
                                            (this.writable = !0);
                                    });
                                n.inherits(o, a),
                                    (o.prototype.read = function(t, e) {
                                        this._reads.push({
                                            length: Math.abs(t),
                                            allowLess: t < 0,
                                            func: e
                                        }),
                                            i.nextTick(
                                                function() {
                                                    this._process(),
                                                        this._paused &&
                                                            this._reads.length >
                                                                0 &&
                                                            ((this._paused = !1),
                                                            this.emit('drain'));
                                                }.bind(this)
                                            );
                                    }),
                                    (o.prototype.write = function(t, e) {
                                        return this.writable
                                            ? ((i = r.isBuffer(t)
                                                  ? t
                                                  : new r(
                                                        t,
                                                        e || this._encoding
                                                    )),
                                              this._buffers.push(i),
                                              (this._buffered += i.length),
                                              this._process(),
                                              this._reads &&
                                                  0 === this._reads.length &&
                                                  (this._paused = !0),
                                              this.writable && !this._paused)
                                            : (this.emit(
                                                  'error',
                                                  new Error(
                                                      'Stream not writable'
                                                  )
                                              ),
                                              !1);
                                        var i;
                                    }),
                                    (o.prototype.end = function(t, e) {
                                        t && this.write(t, e),
                                            (this.writable = !1),
                                            this._buffers &&
                                                (0 === this._buffers.length
                                                    ? this._end()
                                                    : (this._buffers.push(null),
                                                      this._process()));
                                    }),
                                    (o.prototype.destroySoon = o.prototype.end),
                                    (o.prototype._end = function() {
                                        this._reads.length > 0 &&
                                            this.emit(
                                                'error',
                                                new Error(
                                                    'There are some read requests waiting on finished stream'
                                                )
                                            ),
                                            this.destroy();
                                    }),
                                    (o.prototype.destroy = function() {
                                        this._buffers &&
                                            ((this.writable = !1),
                                            (this._reads = null),
                                            (this._buffers = null),
                                            this.emit('close'));
                                    }),
                                    (o.prototype._processReadAllowingLess = function(
                                        t
                                    ) {
                                        this._reads.shift();
                                        var e = this._buffers[0];
                                        e.length > t.length
                                            ? ((this._buffered -= t.length),
                                              (this._buffers[0] = e.slice(
                                                  t.length
                                              )),
                                              t.func.call(
                                                  this,
                                                  e.slice(0, t.length)
                                              ))
                                            : ((this._buffered -= e.length),
                                              this._buffers.shift(),
                                              t.func.call(this, e));
                                    }),
                                    (o.prototype._processRead = function(t) {
                                        this._reads.shift();
                                        for (
                                            var e = 0,
                                                i = 0,
                                                n = new r(t.length);
                                            e < t.length;

                                        ) {
                                            var a = this._buffers[i++],
                                                o = Math.min(
                                                    a.length,
                                                    t.length - e
                                                );
                                            a.copy(n, e, 0, o),
                                                (e += o),
                                                o !== a.length &&
                                                    (this._buffers[
                                                        --i
                                                    ] = a.slice(o));
                                        }
                                        i > 0 && this._buffers.splice(0, i),
                                            (this._buffered -= t.length),
                                            t.func.call(this, n);
                                    }),
                                    (o.prototype._process = function() {
                                        try {
                                            for (
                                                ;
                                                this._buffered > 0 &&
                                                this._reads &&
                                                this._reads.length > 0;

                                            ) {
                                                var t = this._reads[0];
                                                if (t.allowLess)
                                                    this._processReadAllowingLess(
                                                        t
                                                    );
                                                else {
                                                    if (
                                                        !(
                                                            this._buffered >=
                                                            t.length
                                                        )
                                                    )
                                                        break;
                                                    this._processRead(t);
                                                }
                                            }
                                            this._buffers &&
                                                this._buffers.length > 0 &&
                                                null === this._buffers[0] &&
                                                this._end();
                                        } catch (t) {
                                            this.emit('error', t);
                                        }
                                    });
                            }.call(this, t('_process'), t('buffer').Buffer));
                        },
                        { _process: 15, buffer: 17, stream: 118, util: 134 }
                    ],
                    80: [
                        function(t, e, i) {
                            e.exports = {
                                PNG_SIGNATURE: [
                                    137,
                                    80,
                                    78,
                                    71,
                                    13,
                                    10,
                                    26,
                                    10
                                ],
                                TYPE_IHDR: 1229472850,
                                TYPE_IEND: 1229278788,
                                TYPE_IDAT: 1229209940,
                                TYPE_PLTE: 1347179589,
                                TYPE_tRNS: 1951551059,
                                TYPE_gAMA: 1732332865,
                                COLORTYPE_GRAYSCALE: 0,
                                COLORTYPE_PALETTE: 1,
                                COLORTYPE_COLOR: 2,
                                COLORTYPE_ALPHA: 4,
                                COLORTYPE_PALETTE_COLOR: 3,
                                COLORTYPE_COLOR_ALPHA: 6,
                                COLORTYPE_TO_BPP_MAP: {
                                    0: 1,
                                    2: 3,
                                    3: 1,
                                    4: 2,
                                    6: 4
                                },
                                GAMMA_DIVISION: 1e5
                            };
                        },
                        {}
                    ],
                    81: [
                        function(t, e, i) {
                            var r = [];
                            !(function() {
                                for (var t = 0; t < 256; t++) {
                                    for (var e = t, i = 0; i < 8; i++)
                                        1 & e
                                            ? (e = 3988292384 ^ (e >>> 1))
                                            : (e >>>= 1);
                                    r[t] = e;
                                }
                            })();
                            var n = (e.exports = function() {
                                this._crc = -1;
                            });
                            (n.prototype.write = function(t) {
                                for (var e = 0; e < t.length; e++)
                                    this._crc =
                                        r[255 & (this._crc ^ t[e])] ^
                                        (this._crc >>> 8);
                                return !0;
                            }),
                                (n.prototype.crc32 = function() {
                                    return -1 ^ this._crc;
                                }),
                                (n.crc32 = function(t) {
                                    for (var e = -1, i = 0; i < t.length; i++)
                                        e = r[255 & (e ^ t[i])] ^ (e >>> 8);
                                    return -1 ^ e;
                                });
                        },
                        {}
                    ],
                    82: [
                        function(t, e, i) {
                            (function(i) {
                                var r = t('./paeth-predictor');
                                var n = {
                                        0: function(t, e, i, r, n) {
                                            for (var a = 0; a < i; a++)
                                                r[n + a] = t[e + a];
                                        },
                                        1: function(t, e, i, r, n, a) {
                                            for (var o = 0; o < i; o++) {
                                                var s =
                                                        o >= a
                                                            ? t[e + o - a]
                                                            : 0,
                                                    l = t[e + o] - s;
                                                r[n + o] = l;
                                            }
                                        },
                                        2: function(t, e, i, r, n) {
                                            for (var a = 0; a < i; a++) {
                                                var o =
                                                        e > 0
                                                            ? t[e + a - i]
                                                            : 0,
                                                    s = t[e + a] - o;
                                                r[n + a] = s;
                                            }
                                        },
                                        3: function(t, e, i, r, n, a) {
                                            for (var o = 0; o < i; o++) {
                                                var s =
                                                        o >= a
                                                            ? t[e + o - a]
                                                            : 0,
                                                    l =
                                                        e > 0
                                                            ? t[e + o - i]
                                                            : 0,
                                                    f =
                                                        t[e + o] -
                                                        ((s + l) >> 1);
                                                r[n + o] = f;
                                            }
                                        },
                                        4: function(t, e, i, n, a, o) {
                                            for (var s = 0; s < i; s++) {
                                                var l =
                                                        s >= o
                                                            ? t[e + s - o]
                                                            : 0,
                                                    f =
                                                        e > 0
                                                            ? t[e + s - i]
                                                            : 0,
                                                    h =
                                                        e > 0 && s >= o
                                                            ? t[e + s - (i + o)]
                                                            : 0,
                                                    c = t[e + s] - r(l, f, h);
                                                n[a + s] = c;
                                            }
                                        }
                                    },
                                    a = {
                                        0: function(t, e, i) {
                                            for (
                                                var r = 0, n = e + i, a = e;
                                                a < n;
                                                a++
                                            )
                                                r += Math.abs(t[a]);
                                            return r;
                                        },
                                        1: function(t, e, i, r) {
                                            for (var n = 0, a = 0; a < i; a++) {
                                                var o =
                                                        a >= r
                                                            ? t[e + a - r]
                                                            : 0,
                                                    s = t[e + a] - o;
                                                n += Math.abs(s);
                                            }
                                            return n;
                                        },
                                        2: function(t, e, i) {
                                            for (
                                                var r = 0, n = e + i, a = e;
                                                a < n;
                                                a++
                                            ) {
                                                var o = e > 0 ? t[a - i] : 0,
                                                    s = t[a] - o;
                                                r += Math.abs(s);
                                            }
                                            return r;
                                        },
                                        3: function(t, e, i, r) {
                                            for (var n = 0, a = 0; a < i; a++) {
                                                var o =
                                                        a >= r
                                                            ? t[e + a - r]
                                                            : 0,
                                                    s =
                                                        e > 0
                                                            ? t[e + a - i]
                                                            : 0,
                                                    l =
                                                        t[e + a] -
                                                        ((o + s) >> 1);
                                                n += Math.abs(l);
                                            }
                                            return n;
                                        },
                                        4: function(t, e, i, n) {
                                            for (var a = 0, o = 0; o < i; o++) {
                                                var s =
                                                        o >= n
                                                            ? t[e + o - n]
                                                            : 0,
                                                    l =
                                                        e > 0
                                                            ? t[e + o - i]
                                                            : 0,
                                                    f =
                                                        e > 0 && o >= n
                                                            ? t[e + o - (i + n)]
                                                            : 0,
                                                    h = t[e + o] - r(s, l, f);
                                                a += Math.abs(h);
                                            }
                                            return a;
                                        }
                                    };
                                e.exports = function(t, e, r, o, s) {
                                    var l;
                                    if (
                                        'filterType' in o &&
                                        -1 !== o.filterType
                                    ) {
                                        if ('number' != typeof o.filterType)
                                            throw new Error(
                                                'unrecognised filter types'
                                            );
                                        l = [o.filterType];
                                    } else l = [0, 1, 2, 3, 4];
                                    16 === o.bitDepth && (s *= 2);
                                    for (
                                        var f = e * s,
                                            h = 0,
                                            c = 0,
                                            u = new i((f + 1) * r),
                                            p = l[0],
                                            d = 0;
                                        d < r;
                                        d++
                                    ) {
                                        if (l.length > 1)
                                            for (
                                                var m = 1 / 0, g = 0;
                                                g < l.length;
                                                g++
                                            ) {
                                                var b = a[l[g]](t, c, f, s);
                                                b < m && ((p = l[g]), (m = b));
                                            }
                                        (u[h] = p),
                                            h++,
                                            n[p](t, c, f, u, h, s),
                                            (h += f),
                                            (c += f);
                                    }
                                    return u;
                                };
                            }.call(this, t('buffer').Buffer));
                        },
                        { './paeth-predictor': 91, buffer: 17 }
                    ],
                    83: [
                        function(t, e, i) {
                            (function(i) {
                                var r = t('util'),
                                    n = t('./chunkstream'),
                                    a = t('./filter-parse'),
                                    o = (e.exports = function(t) {
                                        n.call(this);
                                        var e = [],
                                            r = this;
                                        (this._filter = new a(t, {
                                            read: this.read.bind(this),
                                            write: function(t) {
                                                e.push(t);
                                            },
                                            complete: function() {
                                                r.emit('complete', i.concat(e));
                                            }
                                        })),
                                            this._filter.start();
                                    });
                                r.inherits(o, n);
                            }.call(this, t('buffer').Buffer));
                        },
                        {
                            './chunkstream': 79,
                            './filter-parse': 85,
                            buffer: 17,
                            util: 134
                        }
                    ],
                    84: [
                        function(t, e, i) {
                            (function(e) {
                                var r = t('./sync-reader'),
                                    n = t('./filter-parse');
                                i.process = function(t, i) {
                                    var a = [],
                                        o = new r(t);
                                    return (
                                        new n(i, {
                                            read: o.read.bind(o),
                                            write: function(t) {
                                                a.push(t);
                                            },
                                            complete: function() {}
                                        }).start(),
                                        o.process(),
                                        e.concat(a)
                                    );
                                };
                            }.call(this, t('buffer').Buffer));
                        },
                        {
                            './filter-parse': 85,
                            './sync-reader': 98,
                            buffer: 17
                        }
                    ],
                    85: [
                        function(t, e, i) {
                            (function(i) {
                                var r = t('./interlace'),
                                    n = t('./paeth-predictor');
                                function a(t, e, i) {
                                    var r = t * e;
                                    return (
                                        8 !== i && (r = Math.ceil(r / (8 / i))),
                                        r
                                    );
                                }
                                var o = (e.exports = function(t, e) {
                                    var i = t.width,
                                        n = t.height,
                                        o = t.interlace,
                                        s = t.bpp,
                                        l = t.depth;
                                    if (
                                        ((this.read = e.read),
                                        (this.write = e.write),
                                        (this.complete = e.complete),
                                        (this._imageIndex = 0),
                                        (this._images = []),
                                        o)
                                    )
                                        for (
                                            var f = r.getImagePasses(i, n),
                                                h = 0;
                                            h < f.length;
                                            h++
                                        )
                                            this._images.push({
                                                byteWidth: a(f[h].width, s, l),
                                                height: f[h].height,
                                                lineIndex: 0
                                            });
                                    else
                                        this._images.push({
                                            byteWidth: a(i, s, l),
                                            height: n,
                                            lineIndex: 0
                                        });
                                    this._xComparison =
                                        8 === l ? s : 16 === l ? 2 * s : 1;
                                });
                                (o.prototype.start = function() {
                                    this.read(
                                        this._images[this._imageIndex]
                                            .byteWidth + 1,
                                        this._reverseFilterLine.bind(this)
                                    );
                                }),
                                    (o.prototype._unFilterType1 = function(
                                        t,
                                        e,
                                        i
                                    ) {
                                        for (
                                            var r = this._xComparison,
                                                n = r - 1,
                                                a = 0;
                                            a < i;
                                            a++
                                        ) {
                                            var o = t[1 + a],
                                                s = a > n ? e[a - r] : 0;
                                            e[a] = o + s;
                                        }
                                    }),
                                    (o.prototype._unFilterType2 = function(
                                        t,
                                        e,
                                        i
                                    ) {
                                        for (
                                            var r = this._lastLine, n = 0;
                                            n < i;
                                            n++
                                        ) {
                                            var a = t[1 + n],
                                                o = r ? r[n] : 0;
                                            e[n] = a + o;
                                        }
                                    }),
                                    (o.prototype._unFilterType3 = function(
                                        t,
                                        e,
                                        i
                                    ) {
                                        for (
                                            var r = this._xComparison,
                                                n = r - 1,
                                                a = this._lastLine,
                                                o = 0;
                                            o < i;
                                            o++
                                        ) {
                                            var s = t[1 + o],
                                                l = a ? a[o] : 0,
                                                f = o > n ? e[o - r] : 0,
                                                h = Math.floor((f + l) / 2);
                                            e[o] = s + h;
                                        }
                                    }),
                                    (o.prototype._unFilterType4 = function(
                                        t,
                                        e,
                                        i
                                    ) {
                                        for (
                                            var r = this._xComparison,
                                                a = r - 1,
                                                o = this._lastLine,
                                                s = 0;
                                            s < i;
                                            s++
                                        ) {
                                            var l = t[1 + s],
                                                f = o ? o[s] : 0,
                                                h = s > a ? e[s - r] : 0,
                                                c = s > a && o ? o[s - r] : 0,
                                                u = n(h, f, c);
                                            e[s] = l + u;
                                        }
                                    }),
                                    (o.prototype._reverseFilterLine = function(
                                        t
                                    ) {
                                        var e,
                                            r = t[0],
                                            n = this._images[this._imageIndex],
                                            a = n.byteWidth;
                                        if (0 === r) e = t.slice(1, a + 1);
                                        else
                                            switch (((e = new i(a)), r)) {
                                                case 1:
                                                    this._unFilterType1(
                                                        t,
                                                        e,
                                                        a
                                                    );
                                                    break;
                                                case 2:
                                                    this._unFilterType2(
                                                        t,
                                                        e,
                                                        a
                                                    );
                                                    break;
                                                case 3:
                                                    this._unFilterType3(
                                                        t,
                                                        e,
                                                        a
                                                    );
                                                    break;
                                                case 4:
                                                    this._unFilterType4(
                                                        t,
                                                        e,
                                                        a
                                                    );
                                                    break;
                                                default:
                                                    throw new Error(
                                                        'Unrecognised filter type - ' +
                                                            r
                                                    );
                                            }
                                        this.write(e),
                                            n.lineIndex++,
                                            n.lineIndex >= n.height
                                                ? ((this._lastLine = null),
                                                  this._imageIndex++,
                                                  (n = this._images[
                                                      this._imageIndex
                                                  ]))
                                                : (this._lastLine = e),
                                            n
                                                ? this.read(
                                                      n.byteWidth + 1,
                                                      this._reverseFilterLine.bind(
                                                          this
                                                      )
                                                  )
                                                : ((this._lastLine = null),
                                                  this.complete());
                                    });
                            }.call(this, t('buffer').Buffer));
                        },
                        {
                            './interlace': 87,
                            './paeth-predictor': 91,
                            buffer: 17
                        }
                    ],
                    86: [
                        function(t, e, i) {
                            (function(t) {
                                e.exports = function(e, i) {
                                    var r = i.depth,
                                        n = i.width,
                                        a = i.height,
                                        o = i.colorType,
                                        s = i.transColor,
                                        l = i.palette,
                                        f = e;
                                    return (
                                        3 === o
                                            ? (function(t, e, i, r, n) {
                                                  for (
                                                      var a = 0, o = 0;
                                                      o < r;
                                                      o++
                                                  )
                                                      for (
                                                          var s = 0;
                                                          s < i;
                                                          s++
                                                      ) {
                                                          var l = n[t[a]];
                                                          if (!l)
                                                              throw new Error(
                                                                  'index ' +
                                                                      t[a] +
                                                                      ' not in palette'
                                                              );
                                                          for (
                                                              var f = 0;
                                                              f < 4;
                                                              f++
                                                          )
                                                              e[a + f] = l[f];
                                                          a += 4;
                                                      }
                                              })(e, f, n, a, l)
                                            : (s &&
                                                  (function(t, e, i, r, n) {
                                                      for (
                                                          var a = 0, o = 0;
                                                          o < r;
                                                          o++
                                                      )
                                                          for (
                                                              var s = 0;
                                                              s < i;
                                                              s++
                                                          ) {
                                                              var l = !1;
                                                              if (
                                                                  (1 ===
                                                                  n.length
                                                                      ? n[0] ===
                                                                            t[
                                                                                a
                                                                            ] &&
                                                                        (l = !0)
                                                                      : n[0] ===
                                                                            t[
                                                                                a
                                                                            ] &&
                                                                        n[1] ===
                                                                            t[
                                                                                a +
                                                                                    1
                                                                            ] &&
                                                                        n[2] ===
                                                                            t[
                                                                                a +
                                                                                    2
                                                                            ] &&
                                                                        (l = !0),
                                                                  l)
                                                              )
                                                                  for (
                                                                      var f = 0;
                                                                      f < 4;
                                                                      f++
                                                                  )
                                                                      e[
                                                                          a + f
                                                                      ] = 0;
                                                              a += 4;
                                                          }
                                                  })(e, f, n, a, s),
                                              8 !== r &&
                                                  (16 === r &&
                                                      (f = new t(n * a * 4)),
                                                  (function(t, e, i, r, n) {
                                                      for (
                                                          var a =
                                                                  Math.pow(
                                                                      2,
                                                                      n
                                                                  ) - 1,
                                                              o = 0,
                                                              s = 0;
                                                          s < r;
                                                          s++
                                                      )
                                                          for (
                                                              var l = 0;
                                                              l < i;
                                                              l++
                                                          ) {
                                                              for (
                                                                  var f = 0;
                                                                  f < 4;
                                                                  f++
                                                              )
                                                                  e[
                                                                      o + f
                                                                  ] = Math.floor(
                                                                      (255 *
                                                                          t[
                                                                              o +
                                                                                  f
                                                                          ]) /
                                                                          a +
                                                                          0.5
                                                                  );
                                                              o += 4;
                                                          }
                                                  })(e, f, n, a, r))),
                                        f
                                    );
                                };
                            }.call(this, t('buffer').Buffer));
                        },
                        { buffer: 17 }
                    ],
                    87: [
                        function(t, e, i) {
                            var r = [
                                { x: [0], y: [0] },
                                { x: [4], y: [0] },
                                { x: [0, 4], y: [4] },
                                { x: [2, 6], y: [0, 4] },
                                { x: [0, 2, 4, 6], y: [2, 6] },
                                { x: [1, 3, 5, 7], y: [0, 2, 4, 6] },
                                { x: [0, 1, 2, 3, 4, 5, 6, 7], y: [1, 3, 5, 7] }
                            ];
                            (i.getImagePasses = function(t, e) {
                                for (
                                    var i = [],
                                        n = t % 8,
                                        a = e % 8,
                                        o = (t - n) / 8,
                                        s = (e - a) / 8,
                                        l = 0;
                                    l < r.length;
                                    l++
                                ) {
                                    for (
                                        var f = r[l],
                                            h = o * f.x.length,
                                            c = s * f.y.length,
                                            u = 0;
                                        u < f.x.length && f.x[u] < n;
                                        u++
                                    )
                                        h++;
                                    for (
                                        u = 0;
                                        u < f.y.length && f.y[u] < a;
                                        u++
                                    )
                                        c++;
                                    h > 0 &&
                                        c > 0 &&
                                        i.push({
                                            width: h,
                                            height: c,
                                            index: l
                                        });
                                }
                                return i;
                            }),
                                (i.getInterlaceIterator = function(t) {
                                    return function(e, i, n) {
                                        var a = e % r[n].x.length,
                                            o =
                                                ((e - a) / r[n].x.length) * 8 +
                                                r[n].x[a],
                                            s = i % r[n].y.length;
                                        return (
                                            4 * o +
                                            (((i - s) / r[n].y.length) * 8 +
                                                r[n].y[s]) *
                                                t *
                                                4
                                        );
                                    };
                                });
                        },
                        {}
                    ],
                    88: [
                        function(t, e, i) {
                            (function(i) {
                                var r = t('util'),
                                    n = t('stream'),
                                    a = t('./constants'),
                                    o = t('./packer'),
                                    s = (e.exports = function(t) {
                                        n.call(this);
                                        var e = t || {};
                                        (this._packer = new o(e)),
                                            (this._deflate = this._packer.createDeflate()),
                                            (this.readable = !0);
                                    });
                                r.inherits(s, n),
                                    (s.prototype.pack = function(t, e, r, n) {
                                        this.emit(
                                            'data',
                                            new i(a.PNG_SIGNATURE)
                                        ),
                                            this.emit(
                                                'data',
                                                this._packer.packIHDR(e, r)
                                            ),
                                            n &&
                                                this.emit(
                                                    'data',
                                                    this._packer.packGAMA(n)
                                                );
                                        var o = this._packer.filterData(
                                            t,
                                            e,
                                            r
                                        );
                                        this._deflate.on(
                                            'error',
                                            this.emit.bind(this, 'error')
                                        ),
                                            this._deflate.on(
                                                'data',
                                                function(t) {
                                                    this.emit(
                                                        'data',
                                                        this._packer.packIDAT(t)
                                                    );
                                                }.bind(this)
                                            ),
                                            this._deflate.on(
                                                'end',
                                                function() {
                                                    this.emit(
                                                        'data',
                                                        this._packer.packIEND()
                                                    ),
                                                        this.emit('end');
                                                }.bind(this)
                                            ),
                                            this._deflate.end(o);
                                    });
                            }.call(this, t('buffer').Buffer));
                        },
                        {
                            './constants': 80,
                            './packer': 90,
                            buffer: 17,
                            stream: 118,
                            util: 134
                        }
                    ],
                    89: [
                        function(t, e, i) {
                            (function(i) {
                                var r = !0,
                                    n = t('zlib');
                                n.deflateSync || (r = !1);
                                var a = t('./constants'),
                                    o = t('./packer');
                                e.exports = function(t, e) {
                                    if (!r)
                                        throw new Error(
                                            'To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0'
                                        );
                                    var s = new o(e || {}),
                                        l = [];
                                    l.push(new i(a.PNG_SIGNATURE)),
                                        l.push(s.packIHDR(t.width, t.height)),
                                        t.gamma && l.push(s.packGAMA(t.gamma));
                                    var f = s.filterData(
                                            t.data,
                                            t.width,
                                            t.height
                                        ),
                                        h = n.deflateSync(
                                            f,
                                            s.getDeflateOptions()
                                        );
                                    if (((f = null), !h || !h.length))
                                        throw new Error(
                                            'bad png - invalid compressed data response'
                                        );
                                    return (
                                        l.push(s.packIDAT(h)),
                                        l.push(s.packIEND()),
                                        i.concat(l)
                                    );
                                };
                            }.call(this, t('buffer').Buffer));
                        },
                        {
                            './constants': 80,
                            './packer': 90,
                            buffer: 17,
                            zlib: 13
                        }
                    ],
                    90: [
                        function(t, e, i) {
                            (function(i) {
                                var r = t('./constants'),
                                    n = t('./crc'),
                                    a = t('./bitpacker'),
                                    o = t('./filter-pack'),
                                    s = t('zlib'),
                                    l = (e.exports = function(t) {
                                        if (
                                            ((this._options = t),
                                            (t.deflateChunkSize =
                                                t.deflateChunkSize || 32768),
                                            (t.deflateLevel =
                                                null != t.deflateLevel
                                                    ? t.deflateLevel
                                                    : 9),
                                            (t.deflateStrategy =
                                                null != t.deflateStrategy
                                                    ? t.deflateStrategy
                                                    : 3),
                                            (t.inputHasAlpha =
                                                null == t.inputHasAlpha ||
                                                t.inputHasAlpha),
                                            (t.deflateFactory =
                                                t.deflateFactory ||
                                                s.createDeflate),
                                            (t.bitDepth = t.bitDepth || 8),
                                            (t.colorType =
                                                'number' == typeof t.colorType
                                                    ? t.colorType
                                                    : r.COLORTYPE_COLOR_ALPHA),
                                            (t.inputColorType =
                                                'number' ==
                                                typeof t.inputColorType
                                                    ? t.inputColorType
                                                    : r.COLORTYPE_COLOR_ALPHA),
                                            -1 ===
                                                [
                                                    r.COLORTYPE_GRAYSCALE,
                                                    r.COLORTYPE_COLOR,
                                                    r.COLORTYPE_COLOR_ALPHA,
                                                    r.COLORTYPE_ALPHA
                                                ].indexOf(t.colorType))
                                        )
                                            throw new Error(
                                                'option color type:' +
                                                    t.colorType +
                                                    ' is not supported at present'
                                            );
                                        if (
                                            -1 ===
                                            [
                                                r.COLORTYPE_GRAYSCALE,
                                                r.COLORTYPE_COLOR,
                                                r.COLORTYPE_COLOR_ALPHA,
                                                r.COLORTYPE_ALPHA
                                            ].indexOf(t.inputColorType)
                                        )
                                            throw new Error(
                                                'option input color type:' +
                                                    t.inputColorType +
                                                    ' is not supported at present'
                                            );
                                        if (
                                            8 !== t.bitDepth &&
                                            16 !== t.bitDepth
                                        )
                                            throw new Error(
                                                'option bit depth:' +
                                                    t.bitDepth +
                                                    ' is not supported at present'
                                            );
                                    });
                                (l.prototype.getDeflateOptions = function() {
                                    return {
                                        chunkSize: this._options
                                            .deflateChunkSize,
                                        level: this._options.deflateLevel,
                                        strategy: this._options.deflateStrategy
                                    };
                                }),
                                    (l.prototype.createDeflate = function() {
                                        return this._options.deflateFactory(
                                            this.getDeflateOptions()
                                        );
                                    }),
                                    (l.prototype.filterData = function(
                                        t,
                                        e,
                                        i
                                    ) {
                                        var n = a(t, e, i, this._options),
                                            s =
                                                r.COLORTYPE_TO_BPP_MAP[
                                                    this._options.colorType
                                                ];
                                        return o(n, e, i, this._options, s);
                                    }),
                                    (l.prototype._packChunk = function(t, e) {
                                        var r = e ? e.length : 0,
                                            a = new i(r + 12);
                                        return (
                                            a.writeUInt32BE(r, 0),
                                            a.writeUInt32BE(t, 4),
                                            e && e.copy(a, 8),
                                            a.writeInt32BE(
                                                n.crc32(
                                                    a.slice(4, a.length - 4)
                                                ),
                                                a.length - 4
                                            ),
                                            a
                                        );
                                    }),
                                    (l.prototype.packGAMA = function(t) {
                                        var e = new i(4);
                                        return (
                                            e.writeUInt32BE(
                                                Math.floor(
                                                    t * r.GAMMA_DIVISION
                                                ),
                                                0
                                            ),
                                            this._packChunk(r.TYPE_gAMA, e)
                                        );
                                    }),
                                    (l.prototype.packIHDR = function(t, e) {
                                        var n = new i(13);
                                        return (
                                            n.writeUInt32BE(t, 0),
                                            n.writeUInt32BE(e, 4),
                                            (n[8] = this._options.bitDepth),
                                            (n[9] = this._options.colorType),
                                            (n[10] = 0),
                                            (n[11] = 0),
                                            (n[12] = 0),
                                            this._packChunk(r.TYPE_IHDR, n)
                                        );
                                    }),
                                    (l.prototype.packIDAT = function(t) {
                                        return this._packChunk(r.TYPE_IDAT, t);
                                    }),
                                    (l.prototype.packIEND = function() {
                                        return this._packChunk(
                                            r.TYPE_IEND,
                                            null
                                        );
                                    });
                            }.call(this, t('buffer').Buffer));
                        },
                        {
                            './bitpacker': 78,
                            './constants': 80,
                            './crc': 81,
                            './filter-pack': 82,
                            buffer: 17,
                            zlib: 13
                        }
                    ],
                    91: [
                        function(t, e, i) {
                            e.exports = function(t, e, i) {
                                var r = t + e - i,
                                    n = Math.abs(r - t),
                                    a = Math.abs(r - e),
                                    o = Math.abs(r - i);
                                return n <= a && n <= o ? t : a <= o ? e : i;
                            };
                        },
                        {}
                    ],
                    92: [
                        function(t, e, i) {
                            var r = t('util'),
                                n = t('zlib'),
                                a = t('./chunkstream'),
                                o = t('./filter-parse-async'),
                                s = t('./parser'),
                                l = t('./bitmapper'),
                                f = t('./format-normaliser'),
                                h = (e.exports = function(t) {
                                    a.call(this),
                                        (this._parser = new s(t, {
                                            read: this.read.bind(this),
                                            error: this._handleError.bind(this),
                                            metadata: this._handleMetaData.bind(
                                                this
                                            ),
                                            gamma: this.emit.bind(
                                                this,
                                                'gamma'
                                            ),
                                            palette: this._handlePalette.bind(
                                                this
                                            ),
                                            transColor: this._handleTransColor.bind(
                                                this
                                            ),
                                            finished: this._finished.bind(this),
                                            inflateData: this._inflateData.bind(
                                                this
                                            )
                                        })),
                                        (this._options = t),
                                        (this.writable = !0),
                                        this._parser.start();
                                });
                            r.inherits(h, a),
                                (h.prototype._handleError = function(t) {
                                    this.emit('error', t),
                                        (this.writable = !1),
                                        this.destroy(),
                                        this._inflate &&
                                            this._inflate.destroy &&
                                            this._inflate.destroy(),
                                        this._filter &&
                                            (this._filter.destroy(),
                                            this._filter.on(
                                                'error',
                                                function() {}
                                            )),
                                        (this.errord = !0);
                                }),
                                (h.prototype._inflateData = function(t) {
                                    if (!this._inflate)
                                        if (this._bitmapInfo.interlace)
                                            (this._inflate = n.createInflate()),
                                                this._inflate.on(
                                                    'error',
                                                    this.emit.bind(
                                                        this,
                                                        'error'
                                                    )
                                                ),
                                                this._filter.on(
                                                    'complete',
                                                    this._complete.bind(this)
                                                ),
                                                this._inflate.pipe(
                                                    this._filter
                                                );
                                        else {
                                            var e =
                                                    (1 +
                                                        ((this._bitmapInfo
                                                            .width *
                                                            this._bitmapInfo
                                                                .bpp *
                                                            this._bitmapInfo
                                                                .depth +
                                                            7) >>
                                                            3)) *
                                                    this._bitmapInfo.height,
                                                i = Math.max(e, n.Z_MIN_CHUNK);
                                            this._inflate = n.createInflate({
                                                chunkSize: i
                                            });
                                            var r = e,
                                                a = this.emit.bind(
                                                    this,
                                                    'error'
                                                );
                                            this._inflate.on('error', function(
                                                t
                                            ) {
                                                r && a(t);
                                            }),
                                                this._filter.on(
                                                    'complete',
                                                    this._complete.bind(this)
                                                );
                                            var o = this._filter.write.bind(
                                                this._filter
                                            );
                                            this._inflate.on('data', function(
                                                t
                                            ) {
                                                r &&
                                                    (t.length > r &&
                                                        (t = t.slice(0, r)),
                                                    (r -= t.length),
                                                    o(t));
                                            }),
                                                this._inflate.on(
                                                    'end',
                                                    this._filter.end.bind(
                                                        this._filter
                                                    )
                                                );
                                        }
                                    this._inflate.write(t);
                                }),
                                (h.prototype._handleMetaData = function(t) {
                                    this.emit('metadata', t),
                                        (this._bitmapInfo = Object.create(t)),
                                        (this._filter = new o(
                                            this._bitmapInfo
                                        ));
                                }),
                                (h.prototype._handleTransColor = function(t) {
                                    this._bitmapInfo.transColor = t;
                                }),
                                (h.prototype._handlePalette = function(t) {
                                    this._bitmapInfo.palette = t;
                                }),
                                (h.prototype._finished = function() {
                                    this.errord ||
                                        (this._inflate
                                            ? this._inflate.end()
                                            : this.emit(
                                                  'error',
                                                  'No Inflate block'
                                              ),
                                        this.destroySoon());
                                }),
                                (h.prototype._complete = function(t) {
                                    if (!this.errord) {
                                        try {
                                            var e = l.dataToBitMap(
                                                    t,
                                                    this._bitmapInfo
                                                ),
                                                i = f(e, this._bitmapInfo);
                                            e = null;
                                        } catch (t) {
                                            return void this._handleError(t);
                                        }
                                        this.emit('parsed', i);
                                    }
                                });
                        },
                        {
                            './bitmapper': 77,
                            './chunkstream': 79,
                            './filter-parse-async': 83,
                            './format-normaliser': 86,
                            './parser': 94,
                            util: 134,
                            zlib: 13
                        }
                    ],
                    93: [
                        function(t, e, i) {
                            (function(i) {
                                var r = !0,
                                    n = t('zlib'),
                                    a = t('./sync-inflate');
                                n.deflateSync || (r = !1);
                                var o = t('./sync-reader'),
                                    s = t('./filter-parse-sync'),
                                    l = t('./parser'),
                                    f = t('./bitmapper'),
                                    h = t('./format-normaliser');
                                e.exports = function(t, e) {
                                    if (!r)
                                        throw new Error(
                                            'To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0'
                                        );
                                    var c, u, p;
                                    var d = [];
                                    var m = new o(t);
                                    if (
                                        (new l(e, {
                                            read: m.read.bind(m),
                                            error: function(t) {
                                                c = t;
                                            },
                                            metadata: function(t) {
                                                u = t;
                                            },
                                            gamma: function(t) {
                                                p = t;
                                            },
                                            palette: function(t) {
                                                u.palette = t;
                                            },
                                            transColor: function(t) {
                                                u.transColor = t;
                                            },
                                            inflateData: function(t) {
                                                d.push(t);
                                            }
                                        }).start(),
                                        m.process(),
                                        c)
                                    )
                                        throw c;
                                    var g,
                                        b = i.concat(d);
                                    if (((d.length = 0), u.interlace))
                                        g = n.inflateSync(b);
                                    else {
                                        var v =
                                            (1 +
                                                ((u.width * u.bpp * u.depth +
                                                    7) >>
                                                    3)) *
                                            u.height;
                                        g = a(b, {
                                            chunkSize: v,
                                            maxLength: v
                                        });
                                    }
                                    if (((b = null), !g || !g.length))
                                        throw new Error(
                                            'bad png - invalid inflate data response'
                                        );
                                    var y = s.process(g, u);
                                    b = null;
                                    var w = f.dataToBitMap(y, u);
                                    y = null;
                                    var _ = h(w, u);
                                    return (u.data = _), (u.gamma = p || 0), u;
                                };
                            }.call(this, t('buffer').Buffer));
                        },
                        {
                            './bitmapper': 77,
                            './filter-parse-sync': 84,
                            './format-normaliser': 86,
                            './parser': 94,
                            './sync-inflate': 97,
                            './sync-reader': 98,
                            buffer: 17,
                            zlib: 13
                        }
                    ],
                    94: [
                        function(t, e, i) {
                            (function(i) {
                                var r = t('./constants'),
                                    n = t('./crc'),
                                    a = (e.exports = function(t, e) {
                                        (this._options = t),
                                            (t.checkCRC = !1 !== t.checkCRC),
                                            (this._hasIHDR = !1),
                                            (this._hasIEND = !1),
                                            (this._palette = []),
                                            (this._colorType = 0),
                                            (this._chunks = {}),
                                            (this._chunks[
                                                r.TYPE_IHDR
                                            ] = this._handleIHDR.bind(this)),
                                            (this._chunks[
                                                r.TYPE_IEND
                                            ] = this._handleIEND.bind(this)),
                                            (this._chunks[
                                                r.TYPE_IDAT
                                            ] = this._handleIDAT.bind(this)),
                                            (this._chunks[
                                                r.TYPE_PLTE
                                            ] = this._handlePLTE.bind(this)),
                                            (this._chunks[
                                                r.TYPE_tRNS
                                            ] = this._handleTRNS.bind(this)),
                                            (this._chunks[
                                                r.TYPE_gAMA
                                            ] = this._handleGAMA.bind(this)),
                                            (this.read = e.read),
                                            (this.error = e.error),
                                            (this.metadata = e.metadata),
                                            (this.gamma = e.gamma),
                                            (this.transColor = e.transColor),
                                            (this.palette = e.palette),
                                            (this.parsed = e.parsed),
                                            (this.inflateData = e.inflateData),
                                            (this.finished = e.finished);
                                    });
                                (a.prototype.start = function() {
                                    this.read(
                                        r.PNG_SIGNATURE.length,
                                        this._parseSignature.bind(this)
                                    );
                                }),
                                    (a.prototype._parseSignature = function(t) {
                                        for (
                                            var e = r.PNG_SIGNATURE, i = 0;
                                            i < e.length;
                                            i++
                                        )
                                            if (t[i] !== e[i])
                                                return void this.error(
                                                    new Error(
                                                        'Invalid file signature'
                                                    )
                                                );
                                        this.read(
                                            8,
                                            this._parseChunkBegin.bind(this)
                                        );
                                    }),
                                    (a.prototype._parseChunkBegin = function(
                                        t
                                    ) {
                                        for (
                                            var e = t.readUInt32BE(0),
                                                a = t.readUInt32BE(4),
                                                o = '',
                                                s = 4;
                                            s < 8;
                                            s++
                                        )
                                            o += String.fromCharCode(t[s]);
                                        var l = Boolean(32 & t[4]);
                                        if (
                                            this._hasIHDR ||
                                            a === r.TYPE_IHDR
                                        ) {
                                            if (
                                                ((this._crc = new n()),
                                                this._crc.write(new i(o)),
                                                this._chunks[a])
                                            )
                                                return this._chunks[a](e);
                                            l
                                                ? this.read(
                                                      e + 4,
                                                      this._skipChunk.bind(this)
                                                  )
                                                : this.error(
                                                      new Error(
                                                          'Unsupported critical chunk type ' +
                                                              o
                                                      )
                                                  );
                                        } else
                                            this.error(
                                                new Error(
                                                    'Expected IHDR on beggining'
                                                )
                                            );
                                    }),
                                    (a.prototype._skipChunk = function() {
                                        this.read(
                                            8,
                                            this._parseChunkBegin.bind(this)
                                        );
                                    }),
                                    (a.prototype._handleChunkEnd = function() {
                                        this.read(
                                            4,
                                            this._parseChunkEnd.bind(this)
                                        );
                                    }),
                                    (a.prototype._parseChunkEnd = function(t) {
                                        var e = t.readInt32BE(0),
                                            i = this._crc.crc32();
                                        this._options.checkCRC && i !== e
                                            ? this.error(
                                                  new Error(
                                                      'Crc error - ' +
                                                          e +
                                                          ' - ' +
                                                          i
                                                  )
                                              )
                                            : this._hasIEND ||
                                              this.read(
                                                  8,
                                                  this._parseChunkBegin.bind(
                                                      this
                                                  )
                                              );
                                    }),
                                    (a.prototype._handleIHDR = function(t) {
                                        this.read(
                                            t,
                                            this._parseIHDR.bind(this)
                                        );
                                    }),
                                    (a.prototype._parseIHDR = function(t) {
                                        this._crc.write(t);
                                        var e = t.readUInt32BE(0),
                                            i = t.readUInt32BE(4),
                                            n = t[8],
                                            a = t[9],
                                            o = t[10],
                                            s = t[11],
                                            l = t[12];
                                        if (
                                            8 === n ||
                                            4 === n ||
                                            2 === n ||
                                            1 === n ||
                                            16 === n
                                        )
                                            if (a in r.COLORTYPE_TO_BPP_MAP)
                                                if (0 === o)
                                                    if (0 === s)
                                                        if (
                                                            0 === l ||
                                                            1 === l
                                                        ) {
                                                            this._colorType = a;
                                                            var f =
                                                                r
                                                                    .COLORTYPE_TO_BPP_MAP[
                                                                    this
                                                                        ._colorType
                                                                ];
                                                            (this._hasIHDR = !0),
                                                                this.metadata({
                                                                    width: e,
                                                                    height: i,
                                                                    depth: n,
                                                                    interlace: Boolean(
                                                                        l
                                                                    ),
                                                                    palette: Boolean(
                                                                        a &
                                                                            r.COLORTYPE_PALETTE
                                                                    ),
                                                                    color: Boolean(
                                                                        a &
                                                                            r.COLORTYPE_COLOR
                                                                    ),
                                                                    alpha: Boolean(
                                                                        a &
                                                                            r.COLORTYPE_ALPHA
                                                                    ),
                                                                    bpp: f,
                                                                    colorType: a
                                                                }),
                                                                this._handleChunkEnd();
                                                        } else
                                                            this.error(
                                                                new Error(
                                                                    'Unsupported interlace method'
                                                                )
                                                            );
                                                    else
                                                        this.error(
                                                            new Error(
                                                                'Unsupported filter method'
                                                            )
                                                        );
                                                else
                                                    this.error(
                                                        new Error(
                                                            'Unsupported compression method'
                                                        )
                                                    );
                                            else
                                                this.error(
                                                    new Error(
                                                        'Unsupported color type'
                                                    )
                                                );
                                        else
                                            this.error(
                                                new Error(
                                                    'Unsupported bit depth ' + n
                                                )
                                            );
                                    }),
                                    (a.prototype._handlePLTE = function(t) {
                                        this.read(
                                            t,
                                            this._parsePLTE.bind(this)
                                        );
                                    }),
                                    (a.prototype._parsePLTE = function(t) {
                                        this._crc.write(t);
                                        for (
                                            var e = Math.floor(t.length / 3),
                                                i = 0;
                                            i < e;
                                            i++
                                        )
                                            this._palette.push([
                                                t[3 * i],
                                                t[3 * i + 1],
                                                t[3 * i + 2],
                                                255
                                            ]);
                                        this.palette(this._palette),
                                            this._handleChunkEnd();
                                    }),
                                    (a.prototype._handleTRNS = function(t) {
                                        this.read(
                                            t,
                                            this._parseTRNS.bind(this)
                                        );
                                    }),
                                    (a.prototype._parseTRNS = function(t) {
                                        if (
                                            (this._crc.write(t),
                                            this._colorType ===
                                                r.COLORTYPE_PALETTE_COLOR)
                                        ) {
                                            if (0 === this._palette.length)
                                                return void this.error(
                                                    new Error(
                                                        'Transparency chunk must be after palette'
                                                    )
                                                );
                                            if (t.length > this._palette.length)
                                                return void this.error(
                                                    new Error(
                                                        'More transparent colors than palette size'
                                                    )
                                                );
                                            for (var e = 0; e < t.length; e++)
                                                this._palette[e][3] = t[e];
                                            this.palette(this._palette);
                                        }
                                        this._colorType ===
                                            r.COLORTYPE_GRAYSCALE &&
                                            this.transColor([
                                                t.readUInt16BE(0)
                                            ]),
                                            this._colorType ===
                                                r.COLORTYPE_COLOR &&
                                                this.transColor([
                                                    t.readUInt16BE(0),
                                                    t.readUInt16BE(2),
                                                    t.readUInt16BE(4)
                                                ]),
                                            this._handleChunkEnd();
                                    }),
                                    (a.prototype._handleGAMA = function(t) {
                                        this.read(
                                            t,
                                            this._parseGAMA.bind(this)
                                        );
                                    }),
                                    (a.prototype._parseGAMA = function(t) {
                                        this._crc.write(t),
                                            this.gamma(
                                                t.readUInt32BE(0) /
                                                    r.GAMMA_DIVISION
                                            ),
                                            this._handleChunkEnd();
                                    }),
                                    (a.prototype._handleIDAT = function(t) {
                                        this.read(
                                            -t,
                                            this._parseIDAT.bind(this, t)
                                        );
                                    }),
                                    (a.prototype._parseIDAT = function(t, e) {
                                        if (
                                            (this._crc.write(e),
                                            this._colorType ===
                                                r.COLORTYPE_PALETTE_COLOR &&
                                                0 === this._palette.length)
                                        )
                                            throw new Error(
                                                'Expected palette not found'
                                            );
                                        this.inflateData(e);
                                        var i = t - e.length;
                                        i > 0
                                            ? this._handleIDAT(i)
                                            : this._handleChunkEnd();
                                    }),
                                    (a.prototype._handleIEND = function(t) {
                                        this.read(
                                            t,
                                            this._parseIEND.bind(this)
                                        );
                                    }),
                                    (a.prototype._parseIEND = function(t) {
                                        this._crc.write(t),
                                            (this._hasIEND = !0),
                                            this._handleChunkEnd(),
                                            this.finished && this.finished();
                                    });
                            }.call(this, t('buffer').Buffer));
                        },
                        { './constants': 80, './crc': 81, buffer: 17 }
                    ],
                    95: [
                        function(t, e, i) {
                            var r = t('./parser-sync'),
                                n = t('./packer-sync');
                            (i.read = function(t, e) {
                                return r(t, e || {});
                            }),
                                (i.write = function(t, e) {
                                    return n(t, e);
                                });
                        },
                        { './packer-sync': 89, './parser-sync': 93 }
                    ],
                    96: [
                        function(t, e, i) {
                            (function(e, r) {
                                var n = t('util'),
                                    a = t('stream'),
                                    o = t('./parser-async'),
                                    s = t('./packer-async'),
                                    l = t('./png-sync'),
                                    f = (i.PNG = function(t) {
                                        a.call(this),
                                            (t = t || {}),
                                            (this.width = 0 | t.width),
                                            (this.height = 0 | t.height),
                                            (this.data =
                                                this.width > 0 &&
                                                this.height > 0
                                                    ? new r(
                                                          4 *
                                                              this.width *
                                                              this.height
                                                      )
                                                    : null),
                                            t.fill &&
                                                this.data &&
                                                this.data.fill(0),
                                            (this.gamma = 0),
                                            (this.readable = this.writable = !0),
                                            (this._parser = new o(t)),
                                            this._parser.on(
                                                'error',
                                                this.emit.bind(this, 'error')
                                            ),
                                            this._parser.on(
                                                'close',
                                                this._handleClose.bind(this)
                                            ),
                                            this._parser.on(
                                                'metadata',
                                                this._metadata.bind(this)
                                            ),
                                            this._parser.on(
                                                'gamma',
                                                this._gamma.bind(this)
                                            ),
                                            this._parser.on(
                                                'parsed',
                                                function(t) {
                                                    (this.data = t),
                                                        this.emit('parsed', t);
                                                }.bind(this)
                                            ),
                                            (this._packer = new s(t)),
                                            this._packer.on(
                                                'data',
                                                this.emit.bind(this, 'data')
                                            ),
                                            this._packer.on(
                                                'end',
                                                this.emit.bind(this, 'end')
                                            ),
                                            this._parser.on(
                                                'close',
                                                this._handleClose.bind(this)
                                            ),
                                            this._packer.on(
                                                'error',
                                                this.emit.bind(this, 'error')
                                            );
                                    });
                                n.inherits(f, a),
                                    (f.sync = l),
                                    (f.prototype.pack = function() {
                                        return this.data && this.data.length
                                            ? (e.nextTick(
                                                  function() {
                                                      this._packer.pack(
                                                          this.data,
                                                          this.width,
                                                          this.height,
                                                          this.gamma
                                                      );
                                                  }.bind(this)
                                              ),
                                              this)
                                            : (this.emit(
                                                  'error',
                                                  'No data provided'
                                              ),
                                              this);
                                    }),
                                    (f.prototype.parse = function(t, e) {
                                        var i, r;
                                        e &&
                                            ((i = function(t) {
                                                this.removeListener('error', r),
                                                    (this.data = t),
                                                    e(null, this);
                                            }.bind(this)),
                                            (r = function(t) {
                                                this.removeListener(
                                                    'parsed',
                                                    i
                                                ),
                                                    e(t, null);
                                            }.bind(this)),
                                            this.once('parsed', i),
                                            this.once('error', r));
                                        return this.end(t), this;
                                    }),
                                    (f.prototype.write = function(t) {
                                        return this._parser.write(t), !0;
                                    }),
                                    (f.prototype.end = function(t) {
                                        this._parser.end(t);
                                    }),
                                    (f.prototype._metadata = function(t) {
                                        (this.width = t.width),
                                            (this.height = t.height),
                                            this.emit('metadata', t);
                                    }),
                                    (f.prototype._gamma = function(t) {
                                        this.gamma = t;
                                    }),
                                    (f.prototype._handleClose = function() {
                                        this._parser.writable ||
                                            this._packer.readable ||
                                            this.emit('close');
                                    }),
                                    (f.bitblt = function(
                                        t,
                                        e,
                                        i,
                                        r,
                                        n,
                                        a,
                                        o,
                                        s
                                    ) {
                                        if (
                                            ((r |= 0),
                                            (n |= 0),
                                            (a |= 0),
                                            (o |= 0),
                                            (s |= 0),
                                            (i |= 0) > t.width ||
                                                r > t.height ||
                                                i + n > t.width ||
                                                r + a > t.height)
                                        )
                                            throw new Error(
                                                'bitblt reading outside image'
                                            );
                                        if (
                                            o > e.width ||
                                            s > e.height ||
                                            o + n > e.width ||
                                            s + a > e.height
                                        )
                                            throw new Error(
                                                'bitblt writing outside image'
                                            );
                                        for (var l = 0; l < a; l++)
                                            t.data.copy(
                                                e.data,
                                                ((s + l) * e.width + o) << 2,
                                                ((r + l) * t.width + i) << 2,
                                                ((r + l) * t.width + i + n) << 2
                                            );
                                    }),
                                    (f.prototype.bitblt = function(
                                        t,
                                        e,
                                        i,
                                        r,
                                        n,
                                        a,
                                        o
                                    ) {
                                        return (
                                            f.bitblt(this, t, e, i, r, n, a, o),
                                            this
                                        );
                                    }),
                                    (f.adjustGamma = function(t) {
                                        if (t.gamma) {
                                            for (var e = 0; e < t.height; e++)
                                                for (
                                                    var i = 0;
                                                    i < t.width;
                                                    i++
                                                )
                                                    for (
                                                        var r =
                                                                (t.width * e +
                                                                    i) <<
                                                                2,
                                                            n = 0;
                                                        n < 3;
                                                        n++
                                                    ) {
                                                        var a =
                                                            t.data[r + n] / 255;
                                                        (a = Math.pow(
                                                            a,
                                                            1 / 2.2 / t.gamma
                                                        )),
                                                            (t.data[
                                                                r + n
                                                            ] = Math.round(
                                                                255 * a
                                                            ));
                                                    }
                                            t.gamma = 0;
                                        }
                                    }),
                                    (f.prototype.adjustGamma = function() {
                                        f.adjustGamma(this);
                                    });
                            }.call(this, t('_process'), t('buffer').Buffer));
                        },
                        {
                            './packer-async': 88,
                            './parser-async': 92,
                            './png-sync': 95,
                            _process: 15,
                            buffer: 17,
                            stream: 118,
                            util: 134
                        }
                    ],
                    97: [
                        function(t, e, i) {
                            (function(r, n) {
                                var a = t('assert').ok,
                                    o = t('zlib'),
                                    s = t('util'),
                                    l = t('buffer').kMaxLength;
                                function f(t) {
                                    if (!(this instanceof f)) return new f(t);
                                    t &&
                                        t.chunkSize < o.Z_MIN_CHUNK &&
                                        (t.chunkSize = o.Z_MIN_CHUNK),
                                        o.Inflate.call(this, t),
                                        (this._offset =
                                            void 0 === this._offset
                                                ? this._outOffset
                                                : this._offset),
                                        (this._buffer =
                                            this._buffer || this._outBuffer),
                                        t &&
                                            null != t.maxLength &&
                                            (this._maxLength = t.maxLength);
                                }
                                function h(t, e) {
                                    e && r.nextTick(e),
                                        t._handle &&
                                            (t._handle.close(),
                                            (t._handle = null));
                                }
                                function c(t, e) {
                                    return (function(t, e) {
                                        if (
                                            ('string' == typeof e &&
                                                (e = n.from(e)),
                                            !(e instanceof n))
                                        )
                                            throw new TypeError(
                                                'Not a string or buffer'
                                            );
                                        var i = t._finishFlushFlag;
                                        return (
                                            null == i && (i = o.Z_FINISH),
                                            t._processChunk(e, i)
                                        );
                                    })(new f(e), t);
                                }
                                (f.prototype._processChunk = function(t, e, i) {
                                    if ('function' == typeof i)
                                        return o.Inflate._processChunk.call(
                                            this,
                                            t,
                                            e,
                                            i
                                        );
                                    var r,
                                        s = this,
                                        f = t && t.length,
                                        c = this._chunkSize - this._offset,
                                        u = this._maxLength,
                                        p = 0,
                                        d = [],
                                        m = 0;
                                    function g(t, e) {
                                        if (!s._hadError) {
                                            var i = c - e;
                                            if (
                                                (a(
                                                    i >= 0,
                                                    'have should not go down'
                                                ),
                                                i > 0)
                                            ) {
                                                var r = s._buffer.slice(
                                                    s._offset,
                                                    s._offset + i
                                                );
                                                if (
                                                    ((s._offset += i),
                                                    r.length > u &&
                                                        (r = r.slice(0, u)),
                                                    d.push(r),
                                                    (m += r.length),
                                                    0 === (u -= r.length))
                                                )
                                                    return !1;
                                            }
                                            return (
                                                (0 === e ||
                                                    s._offset >=
                                                        s._chunkSize) &&
                                                    ((c = s._chunkSize),
                                                    (s._offset = 0),
                                                    (s._buffer = n.allocUnsafe(
                                                        s._chunkSize
                                                    ))),
                                                0 === e &&
                                                    ((p += f - t), (f = t), !0)
                                            );
                                        }
                                    }
                                    this.on('error', function(t) {
                                        r = t;
                                    }),
                                        a(this._handle, 'zlib binding closed');
                                    do {
                                        var b = this._handle.writeSync(
                                            e,
                                            t,
                                            p,
                                            f,
                                            this._buffer,
                                            this._offset,
                                            c
                                        );
                                        b = b || this._writeState;
                                    } while (!this._hadError && g(b[0], b[1]));
                                    if (this._hadError) throw r;
                                    if (m >= l)
                                        throw (h(this),
                                        new RangeError(
                                            'Cannot create final Buffer. It would be larger than 0x' +
                                                l.toString(16) +
                                                ' bytes'
                                        ));
                                    var v = n.concat(d, m);
                                    return h(this), v;
                                }),
                                    s.inherits(f, o.Inflate),
                                    (e.exports = i = c),
                                    (i.Inflate = f),
                                    (i.createInflate = function(t) {
                                        return new f(t);
                                    }),
                                    (i.inflateSync = c);
                            }.call(this, t('_process'), t('buffer').Buffer));
                        },
                        {
                            _process: 15,
                            assert: 2,
                            buffer: 17,
                            util: 134,
                            zlib: 13
                        }
                    ],
                    98: [
                        function(t, e, i) {
                            var r = (e.exports = function(t) {
                                (this._buffer = t), (this._reads = []);
                            });
                            (r.prototype.read = function(t, e) {
                                this._reads.push({
                                    length: Math.abs(t),
                                    allowLess: t < 0,
                                    func: e
                                });
                            }),
                                (r.prototype.process = function() {
                                    for (
                                        ;
                                        this._reads.length > 0 &&
                                        this._buffer.length;

                                    ) {
                                        var t = this._reads[0];
                                        if (
                                            !this._buffer.length ||
                                            !(
                                                this._buffer.length >=
                                                    t.length || t.allowLess
                                            )
                                        )
                                            break;
                                        this._reads.shift();
                                        var e = this._buffer;
                                        (this._buffer = e.slice(t.length)),
                                            t.func.call(
                                                this,
                                                e.slice(0, t.length)
                                            );
                                    }
                                    return this._reads.length > 0
                                        ? new Error(
                                              'There are some read requests waitng on finished stream'
                                          )
                                        : this._buffer.length > 0
                                            ? new Error(
                                                  'unrecognised content at end of stream'
                                              )
                                            : void 0;
                                });
                        },
                        {}
                    ],
                    99: [
                        function(t, e, i) {
                            (function(t) {
                                !t.version ||
                                0 === t.version.indexOf('v0.') ||
                                (0 === t.version.indexOf('v1.') &&
                                    0 !== t.version.indexOf('v1.8.'))
                                    ? (e.exports = {
                                          nextTick: function(e, i, r, n) {
                                              if ('function' != typeof e)
                                                  throw new TypeError(
                                                      '"callback" argument must be a function'
                                                  );
                                              var a,
                                                  o,
                                                  s = arguments.length;
                                              switch (s) {
                                                  case 0:
                                                  case 1:
                                                      return t.nextTick(e);
                                                  case 2:
                                                      return t.nextTick(
                                                          function() {
                                                              e.call(null, i);
                                                          }
                                                      );
                                                  case 3:
                                                      return t.nextTick(
                                                          function() {
                                                              e.call(
                                                                  null,
                                                                  i,
                                                                  r
                                                              );
                                                          }
                                                      );
                                                  case 4:
                                                      return t.nextTick(
                                                          function() {
                                                              e.call(
                                                                  null,
                                                                  i,
                                                                  r,
                                                                  n
                                                              );
                                                          }
                                                      );
                                                  default:
                                                      for (
                                                          a = new Array(s - 1),
                                                              o = 0;
                                                          o < a.length;

                                                      )
                                                          a[o++] = arguments[o];
                                                      return t.nextTick(
                                                          function() {
                                                              e.apply(null, a);
                                                          }
                                                      );
                                              }
                                          }
                                      })
                                    : (e.exports = t);
                            }.call(this, t('_process')));
                        },
                        { _process: 15 }
                    ],
                    100: [
                        function(e, r, o) {
                            (function(t) {
                                !(function(e) {
                                    var s =
                                            'object' ==
                                                (void 0 === o
                                                    ? 'undefined'
                                                    : a(o)) &&
                                            o &&
                                            !o.nodeType &&
                                            o,
                                        l =
                                            'object' ==
                                                (void 0 === r
                                                    ? 'undefined'
                                                    : a(r)) &&
                                            r &&
                                            !r.nodeType &&
                                            r,
                                        f =
                                            'object' ==
                                                (void 0 === t
                                                    ? 'undefined'
                                                    : a(t)) && t;
                                    (f.global !== f &&
                                        f.window !== f &&
                                        f.self !== f) ||
                                        (e = f);
                                    var h,
                                        c,
                                        u = 2147483647,
                                        p = 36,
                                        d = 1,
                                        m = 26,
                                        g = 38,
                                        b = 700,
                                        v = 72,
                                        y = 128,
                                        w = '-',
                                        _ = /^xn--/,
                                        x = /[^\x20-\x7E]/,
                                        k = /[\x2E\u3002\uFF0E\uFF61]/g,
                                        E = {
                                            overflow:
                                                'Overflow: input needs wider integers to process',
                                            'not-basic':
                                                'Illegal input >= 0x80 (not a basic code point)',
                                            'invalid-input': 'Invalid input'
                                        },
                                        I = p - d,
                                        S = Math.floor,
                                        A = String.fromCharCode;
                                    function T(t) {
                                        throw new RangeError(E[t]);
                                    }
                                    function C(t, e) {
                                        for (var i = t.length, r = []; i--; )
                                            r[i] = e(t[i]);
                                        return r;
                                    }
                                    function M(t, e) {
                                        var i = t.split('@'),
                                            r = '';
                                        return (
                                            i.length > 1 &&
                                                ((r = i[0] + '@'), (t = i[1])),
                                            r +
                                                C(
                                                    (t = t.replace(
                                                        k,
                                                        '.'
                                                    )).split('.'),
                                                    e
                                                ).join('.')
                                        );
                                    }
                                    function P(t) {
                                        for (
                                            var e,
                                                i,
                                                r = [],
                                                n = 0,
                                                a = t.length;
                                            n < a;

                                        )
                                            (e = t.charCodeAt(n++)) >= 55296 &&
                                            e <= 56319 &&
                                            n < a
                                                ? 56320 ==
                                                  (64512 &
                                                      (i = t.charCodeAt(n++)))
                                                    ? r.push(
                                                          ((1023 & e) << 10) +
                                                              (1023 & i) +
                                                              65536
                                                      )
                                                    : (r.push(e), n--)
                                                : r.push(e);
                                        return r;
                                    }
                                    function L(t) {
                                        return C(t, function(t) {
                                            var e = '';
                                            return (
                                                t > 65535 &&
                                                    ((e += A(
                                                        (((t -= 65536) >>> 10) &
                                                            1023) |
                                                            55296
                                                    )),
                                                    (t = 56320 | (1023 & t))),
                                                (e += A(t))
                                            );
                                        }).join('');
                                    }
                                    function O(t) {
                                        return t - 48 < 10
                                            ? t - 22
                                            : t - 65 < 26
                                                ? t - 65
                                                : t - 97 < 26
                                                    ? t - 97
                                                    : p;
                                    }
                                    function R(t, e) {
                                        return (
                                            t +
                                            22 +
                                            75 * (t < 26) -
                                            ((0 != e) << 5)
                                        );
                                    }
                                    function B(t, e, i) {
                                        var r = 0;
                                        for (
                                            t = i ? S(t / b) : t >> 1,
                                                t += S(t / e);
                                            t > (I * m) >> 1;
                                            r += p
                                        )
                                            t = S(t / I);
                                        return S(r + ((I + 1) * t) / (t + g));
                                    }
                                    function D(t) {
                                        var e,
                                            i,
                                            r,
                                            n,
                                            a,
                                            o,
                                            s,
                                            l,
                                            f,
                                            h,
                                            c = [],
                                            g = t.length,
                                            b = 0,
                                            _ = y,
                                            x = v;
                                        for (
                                            (i = t.lastIndexOf(w)) < 0 &&
                                                (i = 0),
                                                r = 0;
                                            r < i;
                                            ++r
                                        )
                                            t.charCodeAt(r) >= 128 &&
                                                T('not-basic'),
                                                c.push(t.charCodeAt(r));
                                        for (n = i > 0 ? i + 1 : 0; n < g; ) {
                                            for (
                                                a = b, o = 1, s = p;
                                                n >= g && T('invalid-input'),
                                                    ((l = O(
                                                        t.charCodeAt(n++)
                                                    )) >= p ||
                                                        l > S((u - b) / o)) &&
                                                        T('overflow'),
                                                    (b += l * o),
                                                    !(
                                                        l <
                                                        (f =
                                                            s <= x
                                                                ? d
                                                                : s >= x + m
                                                                    ? m
                                                                    : s - x)
                                                    );
                                                s += p
                                            )
                                                o > S(u / (h = p - f)) &&
                                                    T('overflow'),
                                                    (o *= h);
                                            (x = B(
                                                b - a,
                                                (e = c.length + 1),
                                                0 == a
                                            )),
                                                S(b / e) > u - _ &&
                                                    T('overflow'),
                                                (_ += S(b / e)),
                                                (b %= e),
                                                c.splice(b++, 0, _);
                                        }
                                        return L(c);
                                    }
                                    function z(t) {
                                        var e,
                                            i,
                                            r,
                                            n,
                                            a,
                                            o,
                                            s,
                                            l,
                                            f,
                                            h,
                                            c,
                                            g,
                                            b,
                                            _,
                                            x,
                                            k = [];
                                        for (
                                            g = (t = P(t)).length,
                                                e = y,
                                                i = 0,
                                                a = v,
                                                o = 0;
                                            o < g;
                                            ++o
                                        )
                                            (c = t[o]) < 128 && k.push(A(c));
                                        for (
                                            r = n = k.length, n && k.push(w);
                                            r < g;

                                        ) {
                                            for (s = u, o = 0; o < g; ++o)
                                                (c = t[o]) >= e &&
                                                    c < s &&
                                                    (s = c);
                                            for (
                                                s - e >
                                                    S((u - i) / (b = r + 1)) &&
                                                    T('overflow'),
                                                    i += (s - e) * b,
                                                    e = s,
                                                    o = 0;
                                                o < g;
                                                ++o
                                            )
                                                if (
                                                    ((c = t[o]) < e &&
                                                        ++i > u &&
                                                        T('overflow'),
                                                    c == e)
                                                ) {
                                                    for (
                                                        l = i, f = p;
                                                        !(
                                                            l <
                                                            (h =
                                                                f <= a
                                                                    ? d
                                                                    : f >= a + m
                                                                        ? m
                                                                        : f - a)
                                                        );
                                                        f += p
                                                    )
                                                        (x = l - h),
                                                            (_ = p - h),
                                                            k.push(
                                                                A(
                                                                    R(
                                                                        h +
                                                                            (x %
                                                                                _),
                                                                        0
                                                                    )
                                                                )
                                                            ),
                                                            (l = S(x / _));
                                                    k.push(A(R(l, 0))),
                                                        (a = B(i, b, r == n)),
                                                        (i = 0),
                                                        ++r;
                                                }
                                            ++i, ++e;
                                        }
                                        return k.join('');
                                    }
                                    if (
                                        ((h = {
                                            version: '1.4.1',
                                            ucs2: { decode: P, encode: L },
                                            decode: D,
                                            encode: z,
                                            toASCII: function(t) {
                                                return M(t, function(t) {
                                                    return x.test(t)
                                                        ? 'xn--' + z(t)
                                                        : t;
                                                });
                                            },
                                            toUnicode: function(t) {
                                                return M(t, function(t) {
                                                    return _.test(t)
                                                        ? D(
                                                              t
                                                                  .slice(4)
                                                                  .toLowerCase()
                                                          )
                                                        : t;
                                                });
                                            }
                                        }),
                                        'object' == a(i(0)) && i(0))
                                    )
                                        void 0 ===
                                            (n = function() {
                                                return h;
                                            }.call(o, i, o, r)) ||
                                            (r.exports = n);
                                    else if (s && l)
                                        if (r.exports == s) l.exports = h;
                                        else
                                            for (c in h)
                                                h.hasOwnProperty(c) &&
                                                    (s[c] = h[c]);
                                    else e.punycode = h;
                                })(this);
                            }.call(
                                this,
                                void 0 !== t
                                    ? t
                                    : 'undefined' != typeof self
                                        ? self
                                        : void 0 !== f
                                            ? f
                                            : {}
                            ));
                        },
                        {}
                    ],
                    101: [
                        function(t, e, i) {
                            function r(t, e) {
                                return Object.prototype.hasOwnProperty.call(
                                    t,
                                    e
                                );
                            }
                            e.exports = function(t, e, i, a) {
                                (e = e || '&'), (i = i || '=');
                                var o = {};
                                if ('string' != typeof t || 0 === t.length)
                                    return o;
                                var s = /\+/g;
                                t = t.split(e);
                                var l = 1e3;
                                a &&
                                    'number' == typeof a.maxKeys &&
                                    (l = a.maxKeys);
                                var f = t.length;
                                l > 0 && f > l && (f = l);
                                for (var h = 0; h < f; ++h) {
                                    var c,
                                        u,
                                        p,
                                        d,
                                        m = t[h].replace(s, '%20'),
                                        g = m.indexOf(i);
                                    g >= 0
                                        ? ((c = m.substr(0, g)),
                                          (u = m.substr(g + 1)))
                                        : ((c = m), (u = '')),
                                        (p = decodeURIComponent(c)),
                                        (d = decodeURIComponent(u)),
                                        r(o, p)
                                            ? n(o[p])
                                                ? o[p].push(d)
                                                : (o[p] = [o[p], d])
                                            : (o[p] = d);
                                }
                                return o;
                            };
                            var n =
                                Array.isArray ||
                                function(t) {
                                    return (
                                        '[object Array]' ===
                                        Object.prototype.toString.call(t)
                                    );
                                };
                        },
                        {}
                    ],
                    102: [
                        function(t, e, i) {
                            var r = function(t) {
                                switch (void 0 === t ? 'undefined' : a(t)) {
                                    case 'string':
                                        return t;
                                    case 'boolean':
                                        return t ? 'true' : 'false';
                                    case 'number':
                                        return isFinite(t) ? t : '';
                                    default:
                                        return '';
                                }
                            };
                            e.exports = function(t, e, i, l) {
                                return (
                                    (e = e || '&'),
                                    (i = i || '='),
                                    null === t && (t = void 0),
                                    'object' ===
                                    (void 0 === t ? 'undefined' : a(t))
                                        ? o(s(t), function(a) {
                                              var s =
                                                  encodeURIComponent(r(a)) + i;
                                              return n(t[a])
                                                  ? o(t[a], function(t) {
                                                        return (
                                                            s +
                                                            encodeURIComponent(
                                                                r(t)
                                                            )
                                                        );
                                                    }).join(e)
                                                  : s +
                                                        encodeURIComponent(
                                                            r(t[a])
                                                        );
                                          }).join(e)
                                        : l
                                            ? encodeURIComponent(r(l)) +
                                              i +
                                              encodeURIComponent(r(t))
                                            : ''
                                );
                            };
                            var n =
                                Array.isArray ||
                                function(t) {
                                    return (
                                        '[object Array]' ===
                                        Object.prototype.toString.call(t)
                                    );
                                };
                            function o(t, e) {
                                if (t.map) return t.map(e);
                                for (var i = [], r = 0; r < t.length; r++)
                                    i.push(e(t[r], r));
                                return i;
                            }
                            var s =
                                Object.keys ||
                                function(t) {
                                    var e = [];
                                    for (var i in t)
                                        Object.prototype.hasOwnProperty.call(
                                            t,
                                            i
                                        ) && e.push(i);
                                    return e;
                                };
                        },
                        {}
                    ],
                    103: [
                        function(t, e, i) {
                            (i.decode = i.parse = t('./decode')),
                                (i.encode = i.stringify = t('./encode'));
                        },
                        { './decode': 101, './encode': 102 }
                    ],
                    104: [
                        function(t, e, i) {
                            e.exports = t('./lib/_stream_duplex.js');
                        },
                        { './lib/_stream_duplex.js': 105 }
                    ],
                    105: [
                        function(t, e, i) {
                            var r = t('process-nextick-args'),
                                n =
                                    Object.keys ||
                                    function(t) {
                                        var e = [];
                                        for (var i in t) e.push(i);
                                        return e;
                                    };
                            e.exports = c;
                            var a = t('core-util-is');
                            a.inherits = t('inherits');
                            var o = t('./_stream_readable'),
                                s = t('./_stream_writable');
                            a.inherits(c, o);
                            for (
                                var l = n(s.prototype), f = 0;
                                f < l.length;
                                f++
                            ) {
                                var h = l[f];
                                c.prototype[h] ||
                                    (c.prototype[h] = s.prototype[h]);
                            }
                            function c(t) {
                                if (!(this instanceof c)) return new c(t);
                                o.call(this, t),
                                    s.call(this, t),
                                    t &&
                                        !1 === t.readable &&
                                        (this.readable = !1),
                                    t &&
                                        !1 === t.writable &&
                                        (this.writable = !1),
                                    (this.allowHalfOpen = !0),
                                    t &&
                                        !1 === t.allowHalfOpen &&
                                        (this.allowHalfOpen = !1),
                                    this.once('end', u);
                            }
                            function u() {
                                this.allowHalfOpen ||
                                    this._writableState.ended ||
                                    r.nextTick(p, this);
                            }
                            function p(t) {
                                t.end();
                            }
                            Object.defineProperty(
                                c.prototype,
                                'writableHighWaterMark',
                                {
                                    enumerable: !1,
                                    get: function() {
                                        return this._writableState
                                            .highWaterMark;
                                    }
                                }
                            ),
                                Object.defineProperty(
                                    c.prototype,
                                    'destroyed',
                                    {
                                        get: function() {
                                            return (
                                                void 0 !==
                                                    this._readableState &&
                                                void 0 !==
                                                    this._writableState &&
                                                (this._readableState
                                                    .destroyed &&
                                                    this._writableState
                                                        .destroyed)
                                            );
                                        },
                                        set: function(t) {
                                            void 0 !== this._readableState &&
                                                void 0 !==
                                                    this._writableState &&
                                                ((this._readableState.destroyed = t),
                                                (this._writableState.destroyed = t));
                                        }
                                    }
                                ),
                                (c.prototype._destroy = function(t, e) {
                                    this.push(null),
                                        this.end(),
                                        r.nextTick(e, t);
                                });
                        },
                        {
                            './_stream_readable': 107,
                            './_stream_writable': 109,
                            'core-util-is': 19,
                            inherits: 36,
                            'process-nextick-args': 99
                        }
                    ],
                    106: [
                        function(t, e, i) {
                            e.exports = a;
                            var r = t('./_stream_transform'),
                                n = t('core-util-is');
                            function a(t) {
                                if (!(this instanceof a)) return new a(t);
                                r.call(this, t);
                            }
                            (n.inherits = t('inherits')),
                                n.inherits(a, r),
                                (a.prototype._transform = function(t, e, i) {
                                    i(null, t);
                                });
                        },
                        {
                            './_stream_transform': 108,
                            'core-util-is': 19,
                            inherits: 36
                        }
                    ],
                    107: [
                        function(e, i, r) {
                            (function(t, r) {
                                var n = e('process-nextick-args');
                                i.exports = y;
                                var a,
                                    o = e('isarray');
                                y.ReadableState = v;
                                e('events').EventEmitter;
                                var s = function(t, e) {
                                        return t.listeners(e).length;
                                    },
                                    l = e('./internal/streams/stream'),
                                    f = e('safe-buffer').Buffer,
                                    h = r.Uint8Array || function() {};
                                var c = e('core-util-is');
                                c.inherits = e('inherits');
                                var u = e('util'),
                                    p = void 0;
                                p =
                                    u && u.debuglog
                                        ? u.debuglog('stream')
                                        : function() {};
                                var d,
                                    m = e('./internal/streams/BufferList'),
                                    g = e('./internal/streams/destroy');
                                c.inherits(y, l);
                                var b = [
                                    'error',
                                    'close',
                                    'destroy',
                                    'pause',
                                    'resume'
                                ];
                                function v(t, i) {
                                    (a = a || e('./_stream_duplex')),
                                        (t = t || {});
                                    var r = i instanceof a;
                                    (this.objectMode = !!t.objectMode),
                                        r &&
                                            (this.objectMode =
                                                this.objectMode ||
                                                !!t.readableObjectMode);
                                    var n = t.highWaterMark,
                                        o = t.readableHighWaterMark,
                                        s = this.objectMode ? 16 : 16384;
                                    (this.highWaterMark =
                                        n || 0 === n
                                            ? n
                                            : r && (o || 0 === o)
                                                ? o
                                                : s),
                                        (this.highWaterMark = Math.floor(
                                            this.highWaterMark
                                        )),
                                        (this.buffer = new m()),
                                        (this.length = 0),
                                        (this.pipes = null),
                                        (this.pipesCount = 0),
                                        (this.flowing = null),
                                        (this.ended = !1),
                                        (this.endEmitted = !1),
                                        (this.reading = !1),
                                        (this.sync = !0),
                                        (this.needReadable = !1),
                                        (this.emittedReadable = !1),
                                        (this.readableListening = !1),
                                        (this.resumeScheduled = !1),
                                        (this.destroyed = !1),
                                        (this.defaultEncoding =
                                            t.defaultEncoding || 'utf8'),
                                        (this.awaitDrain = 0),
                                        (this.readingMore = !1),
                                        (this.decoder = null),
                                        (this.encoding = null),
                                        t.encoding &&
                                            (d ||
                                                (d = e('string_decoder/')
                                                    .StringDecoder),
                                            (this.decoder = new d(t.encoding)),
                                            (this.encoding = t.encoding));
                                }
                                function y(t) {
                                    if (
                                        ((a = a || e('./_stream_duplex')),
                                        !(this instanceof y))
                                    )
                                        return new y(t);
                                    (this._readableState = new v(t, this)),
                                        (this.readable = !0),
                                        t &&
                                            ('function' == typeof t.read &&
                                                (this._read = t.read),
                                            'function' == typeof t.destroy &&
                                                (this._destroy = t.destroy)),
                                        l.call(this);
                                }
                                function w(t, e, i, r, n) {
                                    var a,
                                        o = t._readableState;
                                    null === e
                                        ? ((o.reading = !1),
                                          (function(t, e) {
                                              if (e.ended) return;
                                              if (e.decoder) {
                                                  var i = e.decoder.end();
                                                  i &&
                                                      i.length &&
                                                      (e.buffer.push(i),
                                                      (e.length += e.objectMode
                                                          ? 1
                                                          : i.length));
                                              }
                                              (e.ended = !0), E(t);
                                          })(t, o))
                                        : (n ||
                                              (a = (function(t, e) {
                                                  var i;
                                                  (function(t) {
                                                      return (
                                                          f.isBuffer(t) ||
                                                          t instanceof h
                                                      );
                                                  })(e) ||
                                                      'string' == typeof e ||
                                                      void 0 === e ||
                                                      t.objectMode ||
                                                      (i = new TypeError(
                                                          'Invalid non-string/buffer chunk'
                                                      ));
                                                  return i;
                                              })(o, e)),
                                          a
                                              ? t.emit('error', a)
                                              : o.objectMode ||
                                                (e && e.length > 0)
                                                  ? ('string' == typeof e ||
                                                        o.objectMode ||
                                                        Object.getPrototypeOf(
                                                            e
                                                        ) === f.prototype ||
                                                        (e = (function(t) {
                                                            return f.from(t);
                                                        })(e)),
                                                    r
                                                        ? o.endEmitted
                                                            ? t.emit(
                                                                  'error',
                                                                  new Error(
                                                                      'stream.unshift() after end event'
                                                                  )
                                                              )
                                                            : _(t, o, e, !0)
                                                        : o.ended
                                                            ? t.emit(
                                                                  'error',
                                                                  new Error(
                                                                      'stream.push() after EOF'
                                                                  )
                                                              )
                                                            : ((o.reading = !1),
                                                              o.decoder && !i
                                                                  ? ((e = o.decoder.write(
                                                                        e
                                                                    )),
                                                                    o.objectMode ||
                                                                    0 !==
                                                                        e.length
                                                                        ? _(
                                                                              t,
                                                                              o,
                                                                              e,
                                                                              !1
                                                                          )
                                                                        : S(
                                                                              t,
                                                                              o
                                                                          ))
                                                                  : _(
                                                                        t,
                                                                        o,
                                                                        e,
                                                                        !1
                                                                    )))
                                                  : r || (o.reading = !1));
                                    return (function(t) {
                                        return (
                                            !t.ended &&
                                            (t.needReadable ||
                                                t.length < t.highWaterMark ||
                                                0 === t.length)
                                        );
                                    })(o);
                                }
                                function _(t, e, i, r) {
                                    e.flowing && 0 === e.length && !e.sync
                                        ? (t.emit('data', i), t.read(0))
                                        : ((e.length += e.objectMode
                                              ? 1
                                              : i.length),
                                          r
                                              ? e.buffer.unshift(i)
                                              : e.buffer.push(i),
                                          e.needReadable && E(t)),
                                        S(t, e);
                                }
                                Object.defineProperty(
                                    y.prototype,
                                    'destroyed',
                                    {
                                        get: function() {
                                            return (
                                                void 0 !==
                                                    this._readableState &&
                                                this._readableState.destroyed
                                            );
                                        },
                                        set: function(t) {
                                            this._readableState &&
                                                (this._readableState.destroyed = t);
                                        }
                                    }
                                ),
                                    (y.prototype.destroy = g.destroy),
                                    (y.prototype._undestroy = g.undestroy),
                                    (y.prototype._destroy = function(t, e) {
                                        this.push(null), e(t);
                                    }),
                                    (y.prototype.push = function(t, e) {
                                        var i,
                                            r = this._readableState;
                                        return (
                                            r.objectMode
                                                ? (i = !0)
                                                : 'string' == typeof t &&
                                                  ((e =
                                                      e ||
                                                      r.defaultEncoding) !==
                                                      r.encoding &&
                                                      ((t = f.from(t, e)),
                                                      (e = '')),
                                                  (i = !0)),
                                            w(this, t, e, !1, i)
                                        );
                                    }),
                                    (y.prototype.unshift = function(t) {
                                        return w(this, t, null, !0, !1);
                                    }),
                                    (y.prototype.isPaused = function() {
                                        return (
                                            !1 === this._readableState.flowing
                                        );
                                    }),
                                    (y.prototype.setEncoding = function(t) {
                                        return (
                                            d ||
                                                (d = e('string_decoder/')
                                                    .StringDecoder),
                                            (this._readableState.decoder = new d(
                                                t
                                            )),
                                            (this._readableState.encoding = t),
                                            this
                                        );
                                    });
                                var x = 8388608;
                                function k(t, e) {
                                    return t <= 0 || (0 === e.length && e.ended)
                                        ? 0
                                        : e.objectMode
                                            ? 1
                                            : t != t
                                                ? e.flowing && e.length
                                                    ? e.buffer.head.data.length
                                                    : e.length
                                                : (t > e.highWaterMark &&
                                                      (e.highWaterMark = (function(
                                                          t
                                                      ) {
                                                          return (
                                                              t >= x
                                                                  ? (t = x)
                                                                  : (t--,
                                                                    (t |=
                                                                        t >>>
                                                                        1),
                                                                    (t |=
                                                                        t >>>
                                                                        2),
                                                                    (t |=
                                                                        t >>>
                                                                        4),
                                                                    (t |=
                                                                        t >>>
                                                                        8),
                                                                    (t |=
                                                                        t >>>
                                                                        16),
                                                                    t++),
                                                              t
                                                          );
                                                      })(t)),
                                                  t <= e.length
                                                      ? t
                                                      : e.ended
                                                          ? e.length
                                                          : ((e.needReadable = !0),
                                                            0));
                                }
                                function E(t) {
                                    var e = t._readableState;
                                    (e.needReadable = !1),
                                        e.emittedReadable ||
                                            (p('emitReadable', e.flowing),
                                            (e.emittedReadable = !0),
                                            e.sync ? n.nextTick(I, t) : I(t));
                                }
                                function I(t) {
                                    p('emit readable'),
                                        t.emit('readable'),
                                        M(t);
                                }
                                function S(t, e) {
                                    e.readingMore ||
                                        ((e.readingMore = !0),
                                        n.nextTick(A, t, e));
                                }
                                function A(t, e) {
                                    for (
                                        var i = e.length;
                                        !e.reading &&
                                        !e.flowing &&
                                        !e.ended &&
                                        e.length < e.highWaterMark &&
                                        (p('maybeReadMore read 0'),
                                        t.read(0),
                                        i !== e.length);

                                    )
                                        i = e.length;
                                    e.readingMore = !1;
                                }
                                function T(t) {
                                    p('readable nexttick read 0'), t.read(0);
                                }
                                function C(t, e) {
                                    e.reading ||
                                        (p('resume read 0'), t.read(0)),
                                        (e.resumeScheduled = !1),
                                        (e.awaitDrain = 0),
                                        t.emit('resume'),
                                        M(t),
                                        e.flowing && !e.reading && t.read(0);
                                }
                                function M(t) {
                                    var e = t._readableState;
                                    for (
                                        p('flow', e.flowing);
                                        e.flowing && null !== t.read();

                                    );
                                }
                                function P(t, e) {
                                    return 0 === e.length
                                        ? null
                                        : (e.objectMode
                                              ? (i = e.buffer.shift())
                                              : !t || t >= e.length
                                                  ? ((i = e.decoder
                                                        ? e.buffer.join('')
                                                        : 1 === e.buffer.length
                                                            ? e.buffer.head.data
                                                            : e.buffer.concat(
                                                                  e.length
                                                              )),
                                                    e.buffer.clear())
                                                  : (i = (function(t, e, i) {
                                                        var r;
                                                        t < e.head.data.length
                                                            ? ((r = e.head.data.slice(
                                                                  0,
                                                                  t
                                                              )),
                                                              (e.head.data = e.head.data.slice(
                                                                  t
                                                              )))
                                                            : (r =
                                                                  t ===
                                                                  e.head.data
                                                                      .length
                                                                      ? e.shift()
                                                                      : i
                                                                          ? (function(
                                                                                t,
                                                                                e
                                                                            ) {
                                                                                var i =
                                                                                        e.head,
                                                                                    r = 1,
                                                                                    n =
                                                                                        i.data;
                                                                                t -=
                                                                                    n.length;
                                                                                for (
                                                                                    ;
                                                                                    (i =
                                                                                        i.next);

                                                                                ) {
                                                                                    var a =
                                                                                            i.data,
                                                                                        o =
                                                                                            t >
                                                                                            a.length
                                                                                                ? a.length
                                                                                                : t;
                                                                                    if (
                                                                                        (o ===
                                                                                        a.length
                                                                                            ? (n += a)
                                                                                            : (n += a.slice(
                                                                                                  0,
                                                                                                  t
                                                                                              )),
                                                                                        0 ===
                                                                                            (t -= o))
                                                                                    ) {
                                                                                        o ===
                                                                                        a.length
                                                                                            ? (++r,
                                                                                              i.next
                                                                                                  ? (e.head =
                                                                                                        i.next)
                                                                                                  : (e.head = e.tail = null))
                                                                                            : ((e.head = i),
                                                                                              (i.data = a.slice(
                                                                                                  o
                                                                                              )));
                                                                                        break;
                                                                                    }
                                                                                    ++r;
                                                                                }
                                                                                return (
                                                                                    (e.length -= r),
                                                                                    n
                                                                                );
                                                                            })(
                                                                                t,
                                                                                e
                                                                            )
                                                                          : (function(
                                                                                t,
                                                                                e
                                                                            ) {
                                                                                var i = f.allocUnsafe(
                                                                                        t
                                                                                    ),
                                                                                    r =
                                                                                        e.head,
                                                                                    n = 1;
                                                                                r.data.copy(
                                                                                    i
                                                                                ),
                                                                                    (t -=
                                                                                        r
                                                                                            .data
                                                                                            .length);
                                                                                for (
                                                                                    ;
                                                                                    (r =
                                                                                        r.next);

                                                                                ) {
                                                                                    var a =
                                                                                            r.data,
                                                                                        o =
                                                                                            t >
                                                                                            a.length
                                                                                                ? a.length
                                                                                                : t;
                                                                                    if (
                                                                                        (a.copy(
                                                                                            i,
                                                                                            i.length -
                                                                                                t,
                                                                                            0,
                                                                                            o
                                                                                        ),
                                                                                        0 ===
                                                                                            (t -= o))
                                                                                    ) {
                                                                                        o ===
                                                                                        a.length
                                                                                            ? (++n,
                                                                                              r.next
                                                                                                  ? (e.head =
                                                                                                        r.next)
                                                                                                  : (e.head = e.tail = null))
                                                                                            : ((e.head = r),
                                                                                              (r.data = a.slice(
                                                                                                  o
                                                                                              )));
                                                                                        break;
                                                                                    }
                                                                                    ++n;
                                                                                }
                                                                                return (
                                                                                    (e.length -= n),
                                                                                    i
                                                                                );
                                                                            })(
                                                                                t,
                                                                                e
                                                                            ));
                                                        return r;
                                                    })(t, e.buffer, e.decoder)),
                                          i);
                                    var i;
                                }
                                function L(t) {
                                    var e = t._readableState;
                                    if (e.length > 0)
                                        throw new Error(
                                            '"endReadable()" called on non-empty stream'
                                        );
                                    e.endEmitted ||
                                        ((e.ended = !0), n.nextTick(O, e, t));
                                }
                                function O(t, e) {
                                    t.endEmitted ||
                                        0 !== t.length ||
                                        ((t.endEmitted = !0),
                                        (e.readable = !1),
                                        e.emit('end'));
                                }
                                function R(t, e) {
                                    for (var i = 0, r = t.length; i < r; i++)
                                        if (t[i] === e) return i;
                                    return -1;
                                }
                                (y.prototype.read = function(t) {
                                    p('read', t), (t = parseInt(t, 10));
                                    var e = this._readableState,
                                        i = t;
                                    if (
                                        (0 !== t && (e.emittedReadable = !1),
                                        0 === t &&
                                            e.needReadable &&
                                            (e.length >= e.highWaterMark ||
                                                e.ended))
                                    )
                                        return (
                                            p(
                                                'read: emitReadable',
                                                e.length,
                                                e.ended
                                            ),
                                            0 === e.length && e.ended
                                                ? L(this)
                                                : E(this),
                                            null
                                        );
                                    if (0 === (t = k(t, e)) && e.ended)
                                        return 0 === e.length && L(this), null;
                                    var r,
                                        n = e.needReadable;
                                    return (
                                        p('need readable', n),
                                        (0 === e.length ||
                                            e.length - t < e.highWaterMark) &&
                                            p(
                                                'length less than watermark',
                                                (n = !0)
                                            ),
                                        e.ended || e.reading
                                            ? p('reading or ended', (n = !1))
                                            : n &&
                                              (p('do read'),
                                              (e.reading = !0),
                                              (e.sync = !0),
                                              0 === e.length &&
                                                  (e.needReadable = !0),
                                              this._read(e.highWaterMark),
                                              (e.sync = !1),
                                              e.reading || (t = k(i, e))),
                                        null === (r = t > 0 ? P(t, e) : null)
                                            ? ((e.needReadable = !0), (t = 0))
                                            : (e.length -= t),
                                        0 === e.length &&
                                            (e.ended || (e.needReadable = !0),
                                            i !== t && e.ended && L(this)),
                                        null !== r && this.emit('data', r),
                                        r
                                    );
                                }),
                                    (y.prototype._read = function(t) {
                                        this.emit(
                                            'error',
                                            new Error(
                                                '_read() is not implemented'
                                            )
                                        );
                                    }),
                                    (y.prototype.pipe = function(e, i) {
                                        var r = this,
                                            a = this._readableState;
                                        switch (a.pipesCount) {
                                            case 0:
                                                a.pipes = e;
                                                break;
                                            case 1:
                                                a.pipes = [a.pipes, e];
                                                break;
                                            default:
                                                a.pipes.push(e);
                                        }
                                        (a.pipesCount += 1),
                                            p(
                                                'pipe count=%d opts=%j',
                                                a.pipesCount,
                                                i
                                            );
                                        var l =
                                            (!i || !1 !== i.end) &&
                                            e !== t.stdout &&
                                            e !== t.stderr
                                                ? h
                                                : y;
                                        function f(t, i) {
                                            p('onunpipe'),
                                                t === r &&
                                                    i &&
                                                    !1 === i.hasUnpiped &&
                                                    ((i.hasUnpiped = !0),
                                                    p('cleanup'),
                                                    e.removeListener(
                                                        'close',
                                                        b
                                                    ),
                                                    e.removeListener(
                                                        'finish',
                                                        v
                                                    ),
                                                    e.removeListener(
                                                        'drain',
                                                        c
                                                    ),
                                                    e.removeListener(
                                                        'error',
                                                        g
                                                    ),
                                                    e.removeListener(
                                                        'unpipe',
                                                        f
                                                    ),
                                                    r.removeListener('end', h),
                                                    r.removeListener('end', y),
                                                    r.removeListener('data', m),
                                                    (u = !0),
                                                    !a.awaitDrain ||
                                                        (e._writableState &&
                                                            !e._writableState
                                                                .needDrain) ||
                                                        c());
                                        }
                                        function h() {
                                            p('onend'), e.end();
                                        }
                                        a.endEmitted
                                            ? n.nextTick(l)
                                            : r.once('end', l),
                                            e.on('unpipe', f);
                                        var c = (function(t) {
                                            return function() {
                                                var e = t._readableState;
                                                p('pipeOnDrain', e.awaitDrain),
                                                    e.awaitDrain &&
                                                        e.awaitDrain--,
                                                    0 === e.awaitDrain &&
                                                        s(t, 'data') &&
                                                        ((e.flowing = !0),
                                                        M(t));
                                            };
                                        })(r);
                                        e.on('drain', c);
                                        var u = !1;
                                        var d = !1;
                                        function m(t) {
                                            p('ondata'),
                                                (d = !1),
                                                !1 !== e.write(t) ||
                                                    d ||
                                                    (((1 === a.pipesCount &&
                                                        a.pipes === e) ||
                                                        (a.pipesCount > 1 &&
                                                            -1 !==
                                                                R(
                                                                    a.pipes,
                                                                    e
                                                                ))) &&
                                                        !u &&
                                                        (p(
                                                            'false write response, pause',
                                                            r._readableState
                                                                .awaitDrain
                                                        ),
                                                        r._readableState
                                                            .awaitDrain++,
                                                        (d = !0)),
                                                    r.pause());
                                        }
                                        function g(t) {
                                            p('onerror', t),
                                                y(),
                                                e.removeListener('error', g),
                                                0 === s(e, 'error') &&
                                                    e.emit('error', t);
                                        }
                                        function b() {
                                            e.removeListener('finish', v), y();
                                        }
                                        function v() {
                                            p('onfinish'),
                                                e.removeListener('close', b),
                                                y();
                                        }
                                        function y() {
                                            p('unpipe'), r.unpipe(e);
                                        }
                                        return (
                                            r.on('data', m),
                                            (function(t, e, i) {
                                                if (
                                                    'function' ==
                                                    typeof t.prependListener
                                                )
                                                    return t.prependListener(
                                                        e,
                                                        i
                                                    );
                                                t._events && t._events[e]
                                                    ? o(t._events[e])
                                                        ? t._events[e].unshift(
                                                              i
                                                          )
                                                        : (t._events[e] = [
                                                              i,
                                                              t._events[e]
                                                          ])
                                                    : t.on(e, i);
                                            })(e, 'error', g),
                                            e.once('close', b),
                                            e.once('finish', v),
                                            e.emit('pipe', r),
                                            a.flowing ||
                                                (p('pipe resume'), r.resume()),
                                            e
                                        );
                                    }),
                                    (y.prototype.unpipe = function(t) {
                                        var e = this._readableState,
                                            i = { hasUnpiped: !1 };
                                        if (0 === e.pipesCount) return this;
                                        if (1 === e.pipesCount)
                                            return t && t !== e.pipes
                                                ? this
                                                : (t || (t = e.pipes),
                                                  (e.pipes = null),
                                                  (e.pipesCount = 0),
                                                  (e.flowing = !1),
                                                  t &&
                                                      t.emit('unpipe', this, i),
                                                  this);
                                        if (!t) {
                                            var r = e.pipes,
                                                n = e.pipesCount;
                                            (e.pipes = null),
                                                (e.pipesCount = 0),
                                                (e.flowing = !1);
                                            for (var a = 0; a < n; a++)
                                                r[a].emit('unpipe', this, i);
                                            return this;
                                        }
                                        var o = R(e.pipes, t);
                                        return -1 === o
                                            ? this
                                            : (e.pipes.splice(o, 1),
                                              (e.pipesCount -= 1),
                                              1 === e.pipesCount &&
                                                  (e.pipes = e.pipes[0]),
                                              t.emit('unpipe', this, i),
                                              this);
                                    }),
                                    (y.prototype.on = function(t, e) {
                                        var i = l.prototype.on.call(this, t, e);
                                        if ('data' === t)
                                            !1 !==
                                                this._readableState.flowing &&
                                                this.resume();
                                        else if ('readable' === t) {
                                            var r = this._readableState;
                                            r.endEmitted ||
                                                r.readableListening ||
                                                ((r.readableListening = r.needReadable = !0),
                                                (r.emittedReadable = !1),
                                                r.reading
                                                    ? r.length && E(this)
                                                    : n.nextTick(T, this));
                                        }
                                        return i;
                                    }),
                                    (y.prototype.addListener = y.prototype.on),
                                    (y.prototype.resume = function() {
                                        var t = this._readableState;
                                        return (
                                            t.flowing ||
                                                (p('resume'),
                                                (t.flowing = !0),
                                                (function(t, e) {
                                                    e.resumeScheduled ||
                                                        ((e.resumeScheduled = !0),
                                                        n.nextTick(C, t, e));
                                                })(this, t)),
                                            this
                                        );
                                    }),
                                    (y.prototype.pause = function() {
                                        return (
                                            p(
                                                'call pause flowing=%j',
                                                this._readableState.flowing
                                            ),
                                            !1 !==
                                                this._readableState.flowing &&
                                                (p('pause'),
                                                (this._readableState.flowing = !1),
                                                this.emit('pause')),
                                            this
                                        );
                                    }),
                                    (y.prototype.wrap = function(t) {
                                        var e = this,
                                            i = this._readableState,
                                            r = !1;
                                        for (var n in (t.on('end', function() {
                                            if (
                                                (p('wrapped end'),
                                                i.decoder && !i.ended)
                                            ) {
                                                var t = i.decoder.end();
                                                t && t.length && e.push(t);
                                            }
                                            e.push(null);
                                        }),
                                        t.on('data', function(n) {
                                            (p('wrapped data'),
                                            i.decoder &&
                                                (n = i.decoder.write(n)),
                                            !i.objectMode ||
                                                (null !== n && void 0 !== n)) &&
                                                ((i.objectMode ||
                                                    (n && n.length)) &&
                                                    (e.push(n) ||
                                                        ((r = !0), t.pause())));
                                        }),
                                        t))
                                            void 0 === this[n] &&
                                                'function' == typeof t[n] &&
                                                (this[n] = (function(e) {
                                                    return function() {
                                                        return t[e].apply(
                                                            t,
                                                            arguments
                                                        );
                                                    };
                                                })(n));
                                        for (var a = 0; a < b.length; a++)
                                            t.on(
                                                b[a],
                                                this.emit.bind(this, b[a])
                                            );
                                        return (
                                            (this._read = function(e) {
                                                p('wrapped _read', e),
                                                    r && ((r = !1), t.resume());
                                            }),
                                            this
                                        );
                                    }),
                                    Object.defineProperty(
                                        y.prototype,
                                        'readableHighWaterMark',
                                        {
                                            enumerable: !1,
                                            get: function() {
                                                return this._readableState
                                                    .highWaterMark;
                                            }
                                        }
                                    ),
                                    (y._fromList = P);
                            }.call(
                                this,
                                e('_process'),
                                void 0 !== t
                                    ? t
                                    : 'undefined' != typeof self
                                        ? self
                                        : void 0 !== f
                                            ? f
                                            : {}
                            ));
                        },
                        {
                            './_stream_duplex': 105,
                            './internal/streams/BufferList': 110,
                            './internal/streams/destroy': 111,
                            './internal/streams/stream': 112,
                            _process: 15,
                            'core-util-is': 19,
                            events: 21,
                            inherits: 36,
                            isarray: 40,
                            'process-nextick-args': 99,
                            'safe-buffer': 117,
                            'string_decoder/': 123,
                            util: 11
                        }
                    ],
                    108: [
                        function(t, e, i) {
                            e.exports = a;
                            var r = t('./_stream_duplex'),
                                n = t('core-util-is');
                            function a(t) {
                                if (!(this instanceof a)) return new a(t);
                                r.call(this, t),
                                    (this._transformState = {
                                        afterTransform: function(t, e) {
                                            var i = this._transformState;
                                            i.transforming = !1;
                                            var r = i.writecb;
                                            if (!r)
                                                return this.emit(
                                                    'error',
                                                    new Error(
                                                        'write callback called multiple times'
                                                    )
                                                );
                                            (i.writechunk = null),
                                                (i.writecb = null),
                                                null != e && this.push(e),
                                                r(t);
                                            var n = this._readableState;
                                            (n.reading = !1),
                                                (n.needReadable ||
                                                    n.length <
                                                        n.highWaterMark) &&
                                                    this._read(n.highWaterMark);
                                        }.bind(this),
                                        needTransform: !1,
                                        transforming: !1,
                                        writecb: null,
                                        writechunk: null,
                                        writeencoding: null
                                    }),
                                    (this._readableState.needReadable = !0),
                                    (this._readableState.sync = !1),
                                    t &&
                                        ('function' == typeof t.transform &&
                                            (this._transform = t.transform),
                                        'function' == typeof t.flush &&
                                            (this._flush = t.flush)),
                                    this.on('prefinish', o);
                            }
                            function o() {
                                var t = this;
                                'function' == typeof this._flush
                                    ? this._flush(function(e, i) {
                                          s(t, e, i);
                                      })
                                    : s(this, null, null);
                            }
                            function s(t, e, i) {
                                if (e) return t.emit('error', e);
                                if (
                                    (null != i && t.push(i),
                                    t._writableState.length)
                                )
                                    throw new Error(
                                        'Calling transform done when ws.length != 0'
                                    );
                                if (t._transformState.transforming)
                                    throw new Error(
                                        'Calling transform done when still transforming'
                                    );
                                return t.push(null);
                            }
                            (n.inherits = t('inherits')),
                                n.inherits(a, r),
                                (a.prototype.push = function(t, e) {
                                    return (
                                        (this._transformState.needTransform = !1),
                                        r.prototype.push.call(this, t, e)
                                    );
                                }),
                                (a.prototype._transform = function(t, e, i) {
                                    throw new Error(
                                        '_transform() is not implemented'
                                    );
                                }),
                                (a.prototype._write = function(t, e, i) {
                                    var r = this._transformState;
                                    if (
                                        ((r.writecb = i),
                                        (r.writechunk = t),
                                        (r.writeencoding = e),
                                        !r.transforming)
                                    ) {
                                        var n = this._readableState;
                                        (r.needTransform ||
                                            n.needReadable ||
                                            n.length < n.highWaterMark) &&
                                            this._read(n.highWaterMark);
                                    }
                                }),
                                (a.prototype._read = function(t) {
                                    var e = this._transformState;
                                    null !== e.writechunk &&
                                    e.writecb &&
                                    !e.transforming
                                        ? ((e.transforming = !0),
                                          this._transform(
                                              e.writechunk,
                                              e.writeencoding,
                                              e.afterTransform
                                          ))
                                        : (e.needTransform = !0);
                                }),
                                (a.prototype._destroy = function(t, e) {
                                    var i = this;
                                    r.prototype._destroy.call(this, t, function(
                                        t
                                    ) {
                                        e(t), i.emit('close');
                                    });
                                });
                        },
                        {
                            './_stream_duplex': 105,
                            'core-util-is': 19,
                            inherits: 36
                        }
                    ],
                    109: [
                        function(e, i, r) {
                            (function(t, r, n) {
                                var a = e('process-nextick-args');
                                function o(t) {
                                    var e = this;
                                    (this.next = null),
                                        (this.entry = null),
                                        (this.finish = function() {
                                            !(function(t, e, i) {
                                                var r = t.entry;
                                                t.entry = null;
                                                for (; r; ) {
                                                    var n = r.callback;
                                                    e.pendingcb--,
                                                        n(i),
                                                        (r = r.next);
                                                }
                                                e.corkedRequestsFree
                                                    ? (e.corkedRequestsFree.next = t)
                                                    : (e.corkedRequestsFree = t);
                                            })(e, t);
                                        });
                                }
                                i.exports = v;
                                var s,
                                    l =
                                        !t.browser &&
                                        ['v0.10', 'v0.9.'].indexOf(
                                            t.version.slice(0, 5)
                                        ) > -1
                                            ? n
                                            : a.nextTick;
                                v.WritableState = b;
                                var f = e('core-util-is');
                                f.inherits = e('inherits');
                                var h = { deprecate: e('util-deprecate') },
                                    c = e('./internal/streams/stream'),
                                    u = e('safe-buffer').Buffer,
                                    p = r.Uint8Array || function() {};
                                var d,
                                    m = e('./internal/streams/destroy');
                                function g() {}
                                function b(t, i) {
                                    (s = s || e('./_stream_duplex')),
                                        (t = t || {});
                                    var r = i instanceof s;
                                    (this.objectMode = !!t.objectMode),
                                        r &&
                                            (this.objectMode =
                                                this.objectMode ||
                                                !!t.writableObjectMode);
                                    var n = t.highWaterMark,
                                        f = t.writableHighWaterMark,
                                        h = this.objectMode ? 16 : 16384;
                                    (this.highWaterMark =
                                        n || 0 === n
                                            ? n
                                            : r && (f || 0 === f)
                                                ? f
                                                : h),
                                        (this.highWaterMark = Math.floor(
                                            this.highWaterMark
                                        )),
                                        (this.finalCalled = !1),
                                        (this.needDrain = !1),
                                        (this.ending = !1),
                                        (this.ended = !1),
                                        (this.finished = !1),
                                        (this.destroyed = !1);
                                    var c = !1 === t.decodeStrings;
                                    (this.decodeStrings = !c),
                                        (this.defaultEncoding =
                                            t.defaultEncoding || 'utf8'),
                                        (this.length = 0),
                                        (this.writing = !1),
                                        (this.corked = 0),
                                        (this.sync = !0),
                                        (this.bufferProcessing = !1),
                                        (this.onwrite = function(t) {
                                            !(function(t, e) {
                                                var i = t._writableState,
                                                    r = i.sync,
                                                    n = i.writecb;
                                                if (
                                                    ((function(t) {
                                                        (t.writing = !1),
                                                            (t.writecb = null),
                                                            (t.length -=
                                                                t.writelen),
                                                            (t.writelen = 0);
                                                    })(i),
                                                    e)
                                                )
                                                    !(function(t, e, i, r, n) {
                                                        --e.pendingcb,
                                                            i
                                                                ? (a.nextTick(
                                                                      n,
                                                                      r
                                                                  ),
                                                                  a.nextTick(
                                                                      E,
                                                                      t,
                                                                      e
                                                                  ),
                                                                  (t._writableState.errorEmitted = !0),
                                                                  t.emit(
                                                                      'error',
                                                                      r
                                                                  ))
                                                                : (n(r),
                                                                  (t._writableState.errorEmitted = !0),
                                                                  t.emit(
                                                                      'error',
                                                                      r
                                                                  ),
                                                                  E(t, e));
                                                    })(t, i, r, e, n);
                                                else {
                                                    var o = x(i);
                                                    o ||
                                                        i.corked ||
                                                        i.bufferProcessing ||
                                                        !i.bufferedRequest ||
                                                        _(t, i),
                                                        r
                                                            ? l(w, t, i, o, n)
                                                            : w(t, i, o, n);
                                                }
                                            })(i, t);
                                        }),
                                        (this.writecb = null),
                                        (this.writelen = 0),
                                        (this.bufferedRequest = null),
                                        (this.lastBufferedRequest = null),
                                        (this.pendingcb = 0),
                                        (this.prefinished = !1),
                                        (this.errorEmitted = !1),
                                        (this.bufferedRequestCount = 0),
                                        (this.corkedRequestsFree = new o(this));
                                }
                                function v(t) {
                                    if (
                                        ((s = s || e('./_stream_duplex')),
                                        !(d.call(v, this) || this instanceof s))
                                    )
                                        return new v(t);
                                    (this._writableState = new b(t, this)),
                                        (this.writable = !0),
                                        t &&
                                            ('function' == typeof t.write &&
                                                (this._write = t.write),
                                            'function' == typeof t.writev &&
                                                (this._writev = t.writev),
                                            'function' == typeof t.destroy &&
                                                (this._destroy = t.destroy),
                                            'function' == typeof t.final &&
                                                (this._final = t.final)),
                                        c.call(this);
                                }
                                function y(t, e, i, r, n, a, o) {
                                    (e.writelen = r),
                                        (e.writecb = o),
                                        (e.writing = !0),
                                        (e.sync = !0),
                                        i
                                            ? t._writev(n, e.onwrite)
                                            : t._write(n, a, e.onwrite),
                                        (e.sync = !1);
                                }
                                function w(t, e, i, r) {
                                    i ||
                                        (function(t, e) {
                                            0 === e.length &&
                                                e.needDrain &&
                                                ((e.needDrain = !1),
                                                t.emit('drain'));
                                        })(t, e),
                                        e.pendingcb--,
                                        r(),
                                        E(t, e);
                                }
                                function _(t, e) {
                                    e.bufferProcessing = !0;
                                    var i = e.bufferedRequest;
                                    if (t._writev && i && i.next) {
                                        var r = e.bufferedRequestCount,
                                            n = new Array(r),
                                            a = e.corkedRequestsFree;
                                        a.entry = i;
                                        for (var s = 0, l = !0; i; )
                                            (n[s] = i),
                                                i.isBuf || (l = !1),
                                                (i = i.next),
                                                (s += 1);
                                        (n.allBuffers = l),
                                            y(
                                                t,
                                                e,
                                                !0,
                                                e.length,
                                                n,
                                                '',
                                                a.finish
                                            ),
                                            e.pendingcb++,
                                            (e.lastBufferedRequest = null),
                                            a.next
                                                ? ((e.corkedRequestsFree =
                                                      a.next),
                                                  (a.next = null))
                                                : (e.corkedRequestsFree = new o(
                                                      e
                                                  )),
                                            (e.bufferedRequestCount = 0);
                                    } else {
                                        for (; i; ) {
                                            var f = i.chunk,
                                                h = i.encoding,
                                                c = i.callback;
                                            if (
                                                (y(
                                                    t,
                                                    e,
                                                    !1,
                                                    e.objectMode ? 1 : f.length,
                                                    f,
                                                    h,
                                                    c
                                                ),
                                                (i = i.next),
                                                e.bufferedRequestCount--,
                                                e.writing)
                                            )
                                                break;
                                        }
                                        null === i &&
                                            (e.lastBufferedRequest = null);
                                    }
                                    (e.bufferedRequest = i),
                                        (e.bufferProcessing = !1);
                                }
                                function x(t) {
                                    return (
                                        t.ending &&
                                        0 === t.length &&
                                        null === t.bufferedRequest &&
                                        !t.finished &&
                                        !t.writing
                                    );
                                }
                                function k(t, e) {
                                    t._final(function(i) {
                                        e.pendingcb--,
                                            i && t.emit('error', i),
                                            (e.prefinished = !0),
                                            t.emit('prefinish'),
                                            E(t, e);
                                    });
                                }
                                function E(t, e) {
                                    var i = x(e);
                                    return (
                                        i &&
                                            (!(function(t, e) {
                                                e.prefinished ||
                                                    e.finalCalled ||
                                                    ('function' ==
                                                    typeof t._final
                                                        ? (e.pendingcb++,
                                                          (e.finalCalled = !0),
                                                          a.nextTick(k, t, e))
                                                        : ((e.prefinished = !0),
                                                          t.emit('prefinish')));
                                            })(t, e),
                                            0 === e.pendingcb &&
                                                ((e.finished = !0),
                                                t.emit('finish'))),
                                        i
                                    );
                                }
                                f.inherits(v, c),
                                    (b.prototype.getBuffer = function() {
                                        for (
                                            var t = this.bufferedRequest,
                                                e = [];
                                            t;

                                        )
                                            e.push(t), (t = t.next);
                                        return e;
                                    }),
                                    (function() {
                                        try {
                                            Object.defineProperty(
                                                b.prototype,
                                                'buffer',
                                                {
                                                    get: h.deprecate(
                                                        function() {
                                                            return this.getBuffer();
                                                        },
                                                        '_writableState.buffer is deprecated. Use _writableState.getBuffer instead.',
                                                        'DEP0003'
                                                    )
                                                }
                                            );
                                        } catch (t) {}
                                    })(),
                                    'function' == typeof Symbol &&
                                    Symbol.hasInstance &&
                                    'function' ==
                                        typeof Function.prototype[
                                            Symbol.hasInstance
                                        ]
                                        ? ((d =
                                              Function.prototype[
                                                  Symbol.hasInstance
                                              ]),
                                          Object.defineProperty(
                                              v,
                                              Symbol.hasInstance,
                                              {
                                                  value: function(t) {
                                                      return (
                                                          !!d.call(this, t) ||
                                                          (this === v &&
                                                              (t &&
                                                                  t._writableState instanceof
                                                                      b))
                                                      );
                                                  }
                                              }
                                          ))
                                        : (d = function(t) {
                                              return t instanceof this;
                                          }),
                                    (v.prototype.pipe = function() {
                                        this.emit(
                                            'error',
                                            new Error(
                                                'Cannot pipe, not readable'
                                            )
                                        );
                                    }),
                                    (v.prototype.write = function(t, e, i) {
                                        var r = this._writableState,
                                            n = !1,
                                            o =
                                                !r.objectMode &&
                                                (function(t) {
                                                    return (
                                                        u.isBuffer(t) ||
                                                        t instanceof p
                                                    );
                                                })(t);
                                        return (
                                            o &&
                                                !u.isBuffer(t) &&
                                                (t = (function(t) {
                                                    return u.from(t);
                                                })(t)),
                                            'function' == typeof e &&
                                                ((i = e), (e = null)),
                                            o
                                                ? (e = 'buffer')
                                                : e || (e = r.defaultEncoding),
                                            'function' != typeof i && (i = g),
                                            r.ended
                                                ? (function(t, e) {
                                                      var i = new Error(
                                                          'write after end'
                                                      );
                                                      t.emit('error', i),
                                                          a.nextTick(e, i);
                                                  })(this, i)
                                                : (o ||
                                                      (function(t, e, i, r) {
                                                          var n = !0,
                                                              o = !1;
                                                          return (
                                                              null === i
                                                                  ? (o = new TypeError(
                                                                        'May not write null values to stream'
                                                                    ))
                                                                  : 'string' ==
                                                                        typeof i ||
                                                                    void 0 ===
                                                                        i ||
                                                                    e.objectMode ||
                                                                    (o = new TypeError(
                                                                        'Invalid non-string/buffer chunk'
                                                                    )),
                                                              o &&
                                                                  (t.emit(
                                                                      'error',
                                                                      o
                                                                  ),
                                                                  a.nextTick(
                                                                      r,
                                                                      o
                                                                  ),
                                                                  (n = !1)),
                                                              n
                                                          );
                                                      })(this, r, t, i)) &&
                                                  (r.pendingcb++,
                                                  (n = (function(
                                                      t,
                                                      e,
                                                      i,
                                                      r,
                                                      n,
                                                      a
                                                  ) {
                                                      if (!i) {
                                                          var o = (function(
                                                              t,
                                                              e,
                                                              i
                                                          ) {
                                                              t.objectMode ||
                                                                  !1 ===
                                                                      t.decodeStrings ||
                                                                  'string' !=
                                                                      typeof e ||
                                                                  (e = u.from(
                                                                      e,
                                                                      i
                                                                  ));
                                                              return e;
                                                          })(e, r, n);
                                                          r !== o &&
                                                              ((i = !0),
                                                              (n = 'buffer'),
                                                              (r = o));
                                                      }
                                                      var s = e.objectMode
                                                          ? 1
                                                          : r.length;
                                                      e.length += s;
                                                      var l =
                                                          e.length <
                                                          e.highWaterMark;
                                                      l || (e.needDrain = !0);
                                                      if (
                                                          e.writing ||
                                                          e.corked
                                                      ) {
                                                          var f =
                                                              e.lastBufferedRequest;
                                                          (e.lastBufferedRequest = {
                                                              chunk: r,
                                                              encoding: n,
                                                              isBuf: i,
                                                              callback: a,
                                                              next: null
                                                          }),
                                                              f
                                                                  ? (f.next =
                                                                        e.lastBufferedRequest)
                                                                  : (e.bufferedRequest =
                                                                        e.lastBufferedRequest),
                                                              (e.bufferedRequestCount += 1);
                                                      } else
                                                          y(
                                                              t,
                                                              e,
                                                              !1,
                                                              s,
                                                              r,
                                                              n,
                                                              a
                                                          );
                                                      return l;
                                                  })(this, r, o, t, e, i))),
                                            n
                                        );
                                    }),
                                    (v.prototype.cork = function() {
                                        this._writableState.corked++;
                                    }),
                                    (v.prototype.uncork = function() {
                                        var t = this._writableState;
                                        t.corked &&
                                            (t.corked--,
                                            t.writing ||
                                                t.corked ||
                                                t.finished ||
                                                t.bufferProcessing ||
                                                !t.bufferedRequest ||
                                                _(this, t));
                                    }),
                                    (v.prototype.setDefaultEncoding = function(
                                        t
                                    ) {
                                        if (
                                            ('string' == typeof t &&
                                                (t = t.toLowerCase()),
                                            !(
                                                [
                                                    'hex',
                                                    'utf8',
                                                    'utf-8',
                                                    'ascii',
                                                    'binary',
                                                    'base64',
                                                    'ucs2',
                                                    'ucs-2',
                                                    'utf16le',
                                                    'utf-16le',
                                                    'raw'
                                                ].indexOf(
                                                    (t + '').toLowerCase()
                                                ) > -1
                                            ))
                                        )
                                            throw new TypeError(
                                                'Unknown encoding: ' + t
                                            );
                                        return (
                                            (this._writableState.defaultEncoding = t),
                                            this
                                        );
                                    }),
                                    Object.defineProperty(
                                        v.prototype,
                                        'writableHighWaterMark',
                                        {
                                            enumerable: !1,
                                            get: function() {
                                                return this._writableState
                                                    .highWaterMark;
                                            }
                                        }
                                    ),
                                    (v.prototype._write = function(t, e, i) {
                                        i(
                                            new Error(
                                                '_write() is not implemented'
                                            )
                                        );
                                    }),
                                    (v.prototype._writev = null),
                                    (v.prototype.end = function(t, e, i) {
                                        var r = this._writableState;
                                        'function' == typeof t
                                            ? ((i = t), (t = null), (e = null))
                                            : 'function' == typeof e &&
                                              ((i = e), (e = null)),
                                            null !== t &&
                                                void 0 !== t &&
                                                this.write(t, e),
                                            r.corked &&
                                                ((r.corked = 1), this.uncork()),
                                            r.ending ||
                                                r.finished ||
                                                (function(t, e, i) {
                                                    (e.ending = !0),
                                                        E(t, e),
                                                        i &&
                                                            (e.finished
                                                                ? a.nextTick(i)
                                                                : t.once(
                                                                      'finish',
                                                                      i
                                                                  ));
                                                    (e.ended = !0),
                                                        (t.writable = !1);
                                                })(this, r, i);
                                    }),
                                    Object.defineProperty(
                                        v.prototype,
                                        'destroyed',
                                        {
                                            get: function() {
                                                return (
                                                    void 0 !==
                                                        this._writableState &&
                                                    this._writableState
                                                        .destroyed
                                                );
                                            },
                                            set: function(t) {
                                                this._writableState &&
                                                    (this._writableState.destroyed = t);
                                            }
                                        }
                                    ),
                                    (v.prototype.destroy = m.destroy),
                                    (v.prototype._undestroy = m.undestroy),
                                    (v.prototype._destroy = function(t, e) {
                                        this.end(), e(t);
                                    });
                            }.call(
                                this,
                                e('_process'),
                                void 0 !== t
                                    ? t
                                    : 'undefined' != typeof self
                                        ? self
                                        : void 0 !== f
                                            ? f
                                            : {},
                                e('timers').setImmediate
                            ));
                        },
                        {
                            './_stream_duplex': 105,
                            './internal/streams/destroy': 111,
                            './internal/streams/stream': 112,
                            _process: 15,
                            'core-util-is': 19,
                            inherits: 36,
                            'process-nextick-args': 99,
                            'safe-buffer': 117,
                            timers: 124,
                            'util-deprecate': 132
                        }
                    ],
                    110: [
                        function(t, e, i) {
                            var r = t('safe-buffer').Buffer,
                                n = t('util');
                            function a(t, e, i) {
                                t.copy(e, i);
                            }
                            (e.exports = (function() {
                                function t() {
                                    !(function(t, e) {
                                        if (!(t instanceof e))
                                            throw new TypeError(
                                                'Cannot call a class as a function'
                                            );
                                    })(this, t),
                                        (this.head = null),
                                        (this.tail = null),
                                        (this.length = 0);
                                }
                                return (
                                    (t.prototype.push = function(t) {
                                        var e = { data: t, next: null };
                                        this.length > 0
                                            ? (this.tail.next = e)
                                            : (this.head = e),
                                            (this.tail = e),
                                            ++this.length;
                                    }),
                                    (t.prototype.unshift = function(t) {
                                        var e = { data: t, next: this.head };
                                        0 === this.length && (this.tail = e),
                                            (this.head = e),
                                            ++this.length;
                                    }),
                                    (t.prototype.shift = function() {
                                        if (0 !== this.length) {
                                            var t = this.head.data;
                                            return (
                                                1 === this.length
                                                    ? (this.head = this.tail = null)
                                                    : (this.head = this.head.next),
                                                --this.length,
                                                t
                                            );
                                        }
                                    }),
                                    (t.prototype.clear = function() {
                                        (this.head = this.tail = null),
                                            (this.length = 0);
                                    }),
                                    (t.prototype.join = function(t) {
                                        if (0 === this.length) return '';
                                        for (
                                            var e = this.head, i = '' + e.data;
                                            (e = e.next);

                                        )
                                            i += t + e.data;
                                        return i;
                                    }),
                                    (t.prototype.concat = function(t) {
                                        if (0 === this.length)
                                            return r.alloc(0);
                                        if (1 === this.length)
                                            return this.head.data;
                                        for (
                                            var e = r.allocUnsafe(t >>> 0),
                                                i = this.head,
                                                n = 0;
                                            i;

                                        )
                                            a(i.data, e, n),
                                                (n += i.data.length),
                                                (i = i.next);
                                        return e;
                                    }),
                                    t
                                );
                            })()),
                                n &&
                                    n.inspect &&
                                    n.inspect.custom &&
                                    (e.exports.prototype[
                                        n.inspect.custom
                                    ] = function() {
                                        var t = n.inspect({
                                            length: this.length
                                        });
                                        return this.constructor.name + ' ' + t;
                                    });
                        },
                        { 'safe-buffer': 117, util: 11 }
                    ],
                    111: [
                        function(t, e, i) {
                            var r = t('process-nextick-args');
                            function n(t, e) {
                                t.emit('error', e);
                            }
                            e.exports = {
                                destroy: function(t, e) {
                                    var i = this,
                                        a =
                                            this._readableState &&
                                            this._readableState.destroyed,
                                        o =
                                            this._writableState &&
                                            this._writableState.destroyed;
                                    return a || o
                                        ? (e
                                              ? e(t)
                                              : !t ||
                                                (this._writableState &&
                                                    this._writableState
                                                        .errorEmitted) ||
                                                r.nextTick(n, this, t),
                                          this)
                                        : (this._readableState &&
                                              (this._readableState.destroyed = !0),
                                          this._writableState &&
                                              (this._writableState.destroyed = !0),
                                          this._destroy(t || null, function(t) {
                                              !e && t
                                                  ? (r.nextTick(n, i, t),
                                                    i._writableState &&
                                                        (i._writableState.errorEmitted = !0))
                                                  : e && e(t);
                                          }),
                                          this);
                                },
                                undestroy: function() {
                                    this._readableState &&
                                        ((this._readableState.destroyed = !1),
                                        (this._readableState.reading = !1),
                                        (this._readableState.ended = !1),
                                        (this._readableState.endEmitted = !1)),
                                        this._writableState &&
                                            ((this._writableState.destroyed = !1),
                                            (this._writableState.ended = !1),
                                            (this._writableState.ending = !1),
                                            (this._writableState.finished = !1),
                                            (this._writableState.errorEmitted = !1));
                                }
                            };
                        },
                        { 'process-nextick-args': 99 }
                    ],
                    112: [
                        function(t, e, i) {
                            e.exports = t('events').EventEmitter;
                        },
                        { events: 21 }
                    ],
                    113: [
                        function(t, e, i) {
                            e.exports = t('./readable').PassThrough;
                        },
                        { './readable': 114 }
                    ],
                    114: [
                        function(t, e, i) {
                            ((i = e.exports = t(
                                './lib/_stream_readable.js'
                            )).Stream = i),
                                (i.Readable = i),
                                (i.Writable = t('./lib/_stream_writable.js')),
                                (i.Duplex = t('./lib/_stream_duplex.js')),
                                (i.Transform = t('./lib/_stream_transform.js')),
                                (i.PassThrough = t(
                                    './lib/_stream_passthrough.js'
                                ));
                        },
                        {
                            './lib/_stream_duplex.js': 105,
                            './lib/_stream_passthrough.js': 106,
                            './lib/_stream_readable.js': 107,
                            './lib/_stream_transform.js': 108,
                            './lib/_stream_writable.js': 109
                        }
                    ],
                    115: [
                        function(t, e, i) {
                            e.exports = t('./readable').Transform;
                        },
                        { './readable': 114 }
                    ],
                    116: [
                        function(t, e, i) {
                            e.exports = t('./lib/_stream_writable.js');
                        },
                        { './lib/_stream_writable.js': 109 }
                    ],
                    117: [
                        function(t, e, i) {
                            var r = t('buffer'),
                                n = r.Buffer;
                            function a(t, e) {
                                for (var i in t) e[i] = t[i];
                            }
                            function o(t, e, i) {
                                return n(t, e, i);
                            }
                            n.from &&
                            n.alloc &&
                            n.allocUnsafe &&
                            n.allocUnsafeSlow
                                ? (e.exports = r)
                                : (a(r, i), (i.Buffer = o)),
                                a(n, o),
                                (o.from = function(t, e, i) {
                                    if ('number' == typeof t)
                                        throw new TypeError(
                                            'Argument must not be a number'
                                        );
                                    return n(t, e, i);
                                }),
                                (o.alloc = function(t, e, i) {
                                    if ('number' != typeof t)
                                        throw new TypeError(
                                            'Argument must be a number'
                                        );
                                    var r = n(t);
                                    return (
                                        void 0 !== e
                                            ? 'string' == typeof i
                                                ? r.fill(e, i)
                                                : r.fill(e)
                                            : r.fill(0),
                                        r
                                    );
                                }),
                                (o.allocUnsafe = function(t) {
                                    if ('number' != typeof t)
                                        throw new TypeError(
                                            'Argument must be a number'
                                        );
                                    return n(t);
                                }),
                                (o.allocUnsafeSlow = function(t) {
                                    if ('number' != typeof t)
                                        throw new TypeError(
                                            'Argument must be a number'
                                        );
                                    return r.SlowBuffer(t);
                                });
                        },
                        { buffer: 17 }
                    ],
                    118: [
                        function(t, e, i) {
                            e.exports = n;
                            var r = t('events').EventEmitter;
                            function n() {
                                r.call(this);
                            }
                            t('inherits')(n, r),
                                (n.Readable = t('readable-stream/readable.js')),
                                (n.Writable = t('readable-stream/writable.js')),
                                (n.Duplex = t('readable-stream/duplex.js')),
                                (n.Transform = t(
                                    'readable-stream/transform.js'
                                )),
                                (n.PassThrough = t(
                                    'readable-stream/passthrough.js'
                                )),
                                (n.Stream = n),
                                (n.prototype.pipe = function(t, e) {
                                    var i = this;
                                    function n(e) {
                                        t.writable &&
                                            !1 === t.write(e) &&
                                            i.pause &&
                                            i.pause();
                                    }
                                    function a() {
                                        i.readable && i.resume && i.resume();
                                    }
                                    i.on('data', n),
                                        t.on('drain', a),
                                        t._isStdio ||
                                            (e && !1 === e.end) ||
                                            (i.on('end', s), i.on('close', l));
                                    var o = !1;
                                    function s() {
                                        o || ((o = !0), t.end());
                                    }
                                    function l() {
                                        o ||
                                            ((o = !0),
                                            'function' == typeof t.destroy &&
                                                t.destroy());
                                    }
                                    function f(t) {
                                        if (
                                            (h(),
                                            0 ===
                                                r.listenerCount(this, 'error'))
                                        )
                                            throw t;
                                    }
                                    function h() {
                                        i.removeListener('data', n),
                                            t.removeListener('drain', a),
                                            i.removeListener('end', s),
                                            i.removeListener('close', l),
                                            i.removeListener('error', f),
                                            t.removeListener('error', f),
                                            i.removeListener('end', h),
                                            i.removeListener('close', h),
                                            t.removeListener('close', h);
                                    }
                                    return (
                                        i.on('error', f),
                                        t.on('error', f),
                                        i.on('end', h),
                                        i.on('close', h),
                                        t.on('close', h),
                                        t.emit('pipe', i),
                                        t
                                    );
                                });
                        },
                        {
                            events: 21,
                            inherits: 36,
                            'readable-stream/duplex.js': 104,
                            'readable-stream/passthrough.js': 113,
                            'readable-stream/readable.js': 114,
                            'readable-stream/transform.js': 115,
                            'readable-stream/writable.js': 116
                        }
                    ],
                    119: [
                        function(e, i, r) {
                            (function(t) {
                                var i = e('./lib/request'),
                                    n = e('./lib/response'),
                                    a = e('xtend'),
                                    o = e('builtin-status-codes'),
                                    s = e('url'),
                                    l = r;
                                (l.request = function(e, r) {
                                    e =
                                        'string' == typeof e
                                            ? s.parse(e)
                                            : a(e);
                                    var n =
                                            -1 ===
                                            t.location.protocol.search(
                                                /^https?:$/
                                            )
                                                ? 'http:'
                                                : '',
                                        o = e.protocol || n,
                                        l = e.hostname || e.host,
                                        f = e.port,
                                        h = e.path || '/';
                                    l &&
                                        -1 !== l.indexOf(':') &&
                                        (l = '[' + l + ']'),
                                        (e.url =
                                            (l ? o + '//' + l : '') +
                                            (f ? ':' + f : '') +
                                            h),
                                        (e.method = (
                                            e.method || 'GET'
                                        ).toUpperCase()),
                                        (e.headers = e.headers || {});
                                    var c = new i(e);
                                    return r && c.on('response', r), c;
                                }),
                                    (l.get = function(t, e) {
                                        var i = l.request(t, e);
                                        return i.end(), i;
                                    }),
                                    (l.ClientRequest = i),
                                    (l.IncomingMessage = n.IncomingMessage),
                                    (l.Agent = function() {}),
                                    (l.Agent.defaultMaxSockets = 4),
                                    (l.globalAgent = new l.Agent()),
                                    (l.STATUS_CODES = o),
                                    (l.METHODS = [
                                        'CHECKOUT',
                                        'CONNECT',
                                        'COPY',
                                        'DELETE',
                                        'GET',
                                        'HEAD',
                                        'LOCK',
                                        'M-SEARCH',
                                        'MERGE',
                                        'MKACTIVITY',
                                        'MKCOL',
                                        'MOVE',
                                        'NOTIFY',
                                        'OPTIONS',
                                        'PATCH',
                                        'POST',
                                        'PROPFIND',
                                        'PROPPATCH',
                                        'PURGE',
                                        'PUT',
                                        'REPORT',
                                        'SEARCH',
                                        'SUBSCRIBE',
                                        'TRACE',
                                        'UNLOCK',
                                        'UNSUBSCRIBE'
                                    ]);
                            }.call(
                                this,
                                void 0 !== t
                                    ? t
                                    : 'undefined' != typeof self
                                        ? self
                                        : void 0 !== f
                                            ? f
                                            : {}
                            ));
                        },
                        {
                            './lib/request': 121,
                            './lib/response': 122,
                            'builtin-status-codes': 18,
                            url: 129,
                            xtend: 137
                        }
                    ],
                    120: [
                        function(e, i, r) {
                            (function(t) {
                                (r.fetch = s(t.fetch) && s(t.ReadableStream)),
                                    (r.writableStream = s(t.WritableStream)),
                                    (r.abortController = s(t.AbortController)),
                                    (r.blobConstructor = !1);
                                try {
                                    new Blob([new ArrayBuffer(1)]),
                                        (r.blobConstructor = !0);
                                } catch (t) {}
                                var e;
                                function i() {
                                    if (void 0 !== e) return e;
                                    if (t.XMLHttpRequest) {
                                        e = new t.XMLHttpRequest();
                                        try {
                                            e.open(
                                                'GET',
                                                t.XDomainRequest
                                                    ? '/'
                                                    : 'https://example.com'
                                            );
                                        } catch (t) {
                                            e = null;
                                        }
                                    } else e = null;
                                    return e;
                                }
                                function n(t) {
                                    var e = i();
                                    if (!e) return !1;
                                    try {
                                        return (
                                            (e.responseType = t),
                                            e.responseType === t
                                        );
                                    } catch (t) {}
                                    return !1;
                                }
                                var a = void 0 !== t.ArrayBuffer,
                                    o = a && s(t.ArrayBuffer.prototype.slice);
                                function s(t) {
                                    return 'function' == typeof t;
                                }
                                (r.arraybuffer =
                                    r.fetch || (a && n('arraybuffer'))),
                                    (r.msstream =
                                        !r.fetch && o && n('ms-stream')),
                                    (r.mozchunkedarraybuffer =
                                        !r.fetch &&
                                        a &&
                                        n('moz-chunked-arraybuffer')),
                                    (r.overrideMimeType =
                                        r.fetch ||
                                        (!!i() && s(i().overrideMimeType))),
                                    (r.vbArray = s(t.VBArray)),
                                    (e = null);
                            }.call(
                                this,
                                void 0 !== t
                                    ? t
                                    : 'undefined' != typeof self
                                        ? self
                                        : void 0 !== f
                                            ? f
                                            : {}
                            ));
                        },
                        {}
                    ],
                    121: [
                        function(e, i, r) {
                            (function(t, r, n) {
                                var a = e('./capability'),
                                    o = e('inherits'),
                                    s = e('./response'),
                                    l = e('readable-stream'),
                                    f = e('to-arraybuffer'),
                                    h = s.IncomingMessage,
                                    c = s.readyStates;
                                var u = (i.exports = function(t) {
                                    var e,
                                        i = this;
                                    l.Writable.call(i),
                                        (i._opts = t),
                                        (i._body = []),
                                        (i._headers = {}),
                                        t.auth &&
                                            i.setHeader(
                                                'Authorization',
                                                'Basic ' +
                                                    new n(t.auth).toString(
                                                        'base64'
                                                    )
                                            ),
                                        Object.keys(t.headers).forEach(function(
                                            e
                                        ) {
                                            i.setHeader(e, t.headers[e]);
                                        });
                                    var r = !0;
                                    if (
                                        'disable-fetch' === t.mode ||
                                        ('requestTimeout' in t &&
                                            !a.abortController)
                                    )
                                        (r = !1), (e = !0);
                                    else if ('prefer-streaming' === t.mode)
                                        e = !1;
                                    else if (
                                        'allow-wrong-content-type' === t.mode
                                    )
                                        e = !a.overrideMimeType;
                                    else {
                                        if (
                                            t.mode &&
                                            'default' !== t.mode &&
                                            'prefer-fast' !== t.mode
                                        )
                                            throw new Error(
                                                'Invalid value for opts.mode'
                                            );
                                        e = !0;
                                    }
                                    (i._mode = (function(t, e) {
                                        return a.fetch && e
                                            ? 'fetch'
                                            : a.mozchunkedarraybuffer
                                                ? 'moz-chunked-arraybuffer'
                                                : a.msstream
                                                    ? 'ms-stream'
                                                    : a.arraybuffer && t
                                                        ? 'arraybuffer'
                                                        : a.vbArray && t
                                                            ? 'text:vbarray'
                                                            : 'text';
                                    })(e, r)),
                                        (i._fetchTimer = null),
                                        i.on('finish', function() {
                                            i._onFinish();
                                        });
                                });
                                o(u, l.Writable),
                                    (u.prototype.setHeader = function(t, e) {
                                        var i = t.toLowerCase();
                                        -1 === p.indexOf(i) &&
                                            (this._headers[i] = {
                                                name: t,
                                                value: e
                                            });
                                    }),
                                    (u.prototype.getHeader = function(t) {
                                        var e = this._headers[t.toLowerCase()];
                                        return e ? e.value : null;
                                    }),
                                    (u.prototype.removeHeader = function(t) {
                                        delete this._headers[t.toLowerCase()];
                                    }),
                                    (u.prototype._onFinish = function() {
                                        var e = this;
                                        if (!e._destroyed) {
                                            var i = e._opts,
                                                o = e._headers,
                                                s = null;
                                            'GET' !== i.method &&
                                                'HEAD' !== i.method &&
                                                (s = a.arraybuffer
                                                    ? f(n.concat(e._body))
                                                    : a.blobConstructor
                                                        ? new r.Blob(
                                                              e._body.map(
                                                                  function(t) {
                                                                      return f(
                                                                          t
                                                                      );
                                                                  }
                                                              ),
                                                              {
                                                                  type:
                                                                      (
                                                                          o[
                                                                              'content-type'
                                                                          ] ||
                                                                          {}
                                                                      ).value ||
                                                                      ''
                                                              }
                                                          )
                                                        : n
                                                              .concat(e._body)
                                                              .toString());
                                            var l = [];
                                            if (
                                                (Object.keys(o).forEach(
                                                    function(t) {
                                                        var e = o[t].name,
                                                            i = o[t].value;
                                                        Array.isArray(i)
                                                            ? i.forEach(
                                                                  function(t) {
                                                                      l.push([
                                                                          e,
                                                                          t
                                                                      ]);
                                                                  }
                                                              )
                                                            : l.push([e, i]);
                                                    }
                                                ),
                                                'fetch' === e._mode)
                                            ) {
                                                var h = null;
                                                if (a.abortController) {
                                                    var u = new AbortController();
                                                    (h = u.signal),
                                                        (e._fetchAbortController = u),
                                                        'requestTimeout' in i &&
                                                            0 !==
                                                                i.requestTimeout &&
                                                            (e._fetchTimer = r.setTimeout(
                                                                function() {
                                                                    e.emit(
                                                                        'requestTimeout'
                                                                    ),
                                                                        e._fetchAbortController &&
                                                                            e._fetchAbortController.abort();
                                                                },
                                                                i.requestTimeout
                                                            ));
                                                }
                                                r.fetch(e._opts.url, {
                                                    method: e._opts.method,
                                                    headers: l,
                                                    body: s || void 0,
                                                    mode: 'cors',
                                                    credentials: i.withCredentials
                                                        ? 'include'
                                                        : 'same-origin',
                                                    signal: h
                                                }).then(
                                                    function(t) {
                                                        (e._fetchResponse = t),
                                                            e._connect();
                                                    },
                                                    function(t) {
                                                        r.clearTimeout(
                                                            e._fetchTimer
                                                        ),
                                                            e._destroyed ||
                                                                e.emit(
                                                                    'error',
                                                                    t
                                                                );
                                                    }
                                                );
                                            } else {
                                                var p = (e._xhr = new r.XMLHttpRequest());
                                                try {
                                                    p.open(
                                                        e._opts.method,
                                                        e._opts.url,
                                                        !0
                                                    );
                                                } catch (i) {
                                                    return void t.nextTick(
                                                        function() {
                                                            e.emit('error', i);
                                                        }
                                                    );
                                                }
                                                'responseType' in p &&
                                                    (p.responseType = e._mode.split(
                                                        ':'
                                                    )[0]),
                                                    'withCredentials' in p &&
                                                        (p.withCredentials = !!i.withCredentials),
                                                    'text' === e._mode &&
                                                        'overrideMimeType' in
                                                            p &&
                                                        p.overrideMimeType(
                                                            'text/plain; charset=x-user-defined'
                                                        ),
                                                    'requestTimeout' in i &&
                                                        ((p.timeout =
                                                            i.requestTimeout),
                                                        (p.ontimeout = function() {
                                                            e.emit(
                                                                'requestTimeout'
                                                            );
                                                        })),
                                                    l.forEach(function(t) {
                                                        p.setRequestHeader(
                                                            t[0],
                                                            t[1]
                                                        );
                                                    }),
                                                    (e._response = null),
                                                    (p.onreadystatechange = function() {
                                                        switch (p.readyState) {
                                                            case c.LOADING:
                                                            case c.DONE:
                                                                e._onXHRProgress();
                                                        }
                                                    }),
                                                    'moz-chunked-arraybuffer' ===
                                                        e._mode &&
                                                        (p.onprogress = function() {
                                                            e._onXHRProgress();
                                                        }),
                                                    (p.onerror = function() {
                                                        e._destroyed ||
                                                            e.emit(
                                                                'error',
                                                                new Error(
                                                                    'XHR error'
                                                                )
                                                            );
                                                    });
                                                try {
                                                    p.send(s);
                                                } catch (i) {
                                                    return void t.nextTick(
                                                        function() {
                                                            e.emit('error', i);
                                                        }
                                                    );
                                                }
                                            }
                                        }
                                    }),
                                    (u.prototype._onXHRProgress = function() {
                                        (function(t) {
                                            try {
                                                var e = t.status;
                                                return null !== e && 0 !== e;
                                            } catch (t) {
                                                return !1;
                                            }
                                        })(this._xhr) &&
                                            !this._destroyed &&
                                            (this._response || this._connect(),
                                            this._response._onXHRProgress());
                                    }),
                                    (u.prototype._connect = function() {
                                        var t = this;
                                        t._destroyed ||
                                            ((t._response = new h(
                                                t._xhr,
                                                t._fetchResponse,
                                                t._mode,
                                                t._fetchTimer
                                            )),
                                            t._response.on('error', function(
                                                e
                                            ) {
                                                t.emit('error', e);
                                            }),
                                            t.emit('response', t._response));
                                    }),
                                    (u.prototype._write = function(t, e, i) {
                                        this._body.push(t), i();
                                    }),
                                    (u.prototype.abort = u.prototype.destroy = function() {
                                        (this._destroyed = !0),
                                            r.clearTimeout(this._fetchTimer),
                                            this._response &&
                                                (this._response._destroyed = !0),
                                            this._xhr
                                                ? this._xhr.abort()
                                                : this._fetchAbortController &&
                                                  this._fetchAbortController.abort();
                                    }),
                                    (u.prototype.end = function(t, e, i) {
                                        'function' == typeof t &&
                                            ((i = t), (t = void 0)),
                                            l.Writable.prototype.end.call(
                                                this,
                                                t,
                                                e,
                                                i
                                            );
                                    }),
                                    (u.prototype.flushHeaders = function() {}),
                                    (u.prototype.setTimeout = function() {}),
                                    (u.prototype.setNoDelay = function() {}),
                                    (u.prototype.setSocketKeepAlive = function() {});
                                var p = [
                                    'accept-charset',
                                    'accept-encoding',
                                    'access-control-request-headers',
                                    'access-control-request-method',
                                    'connection',
                                    'content-length',
                                    'cookie',
                                    'cookie2',
                                    'date',
                                    'dnt',
                                    'expect',
                                    'host',
                                    'keep-alive',
                                    'origin',
                                    'referer',
                                    'te',
                                    'trailer',
                                    'transfer-encoding',
                                    'upgrade',
                                    'via'
                                ];
                            }.call(
                                this,
                                e('_process'),
                                void 0 !== t
                                    ? t
                                    : 'undefined' != typeof self
                                        ? self
                                        : void 0 !== f
                                            ? f
                                            : {},
                                e('buffer').Buffer
                            ));
                        },
                        {
                            './capability': 120,
                            './response': 122,
                            _process: 15,
                            buffer: 17,
                            inherits: 36,
                            'readable-stream': 114,
                            'to-arraybuffer': 127
                        }
                    ],
                    122: [
                        function(e, i, r) {
                            (function(t, i, n) {
                                var a = e('./capability'),
                                    o = e('inherits'),
                                    s = e('readable-stream'),
                                    l = (r.readyStates = {
                                        UNSENT: 0,
                                        OPENED: 1,
                                        HEADERS_RECEIVED: 2,
                                        LOADING: 3,
                                        DONE: 4
                                    }),
                                    f = (r.IncomingMessage = function(
                                        e,
                                        r,
                                        o,
                                        l
                                    ) {
                                        var f = this;
                                        if (
                                            (s.Readable.call(f),
                                            (f._mode = o),
                                            (f.headers = {}),
                                            (f.rawHeaders = []),
                                            (f.trailers = {}),
                                            (f.rawTrailers = []),
                                            f.on('end', function() {
                                                t.nextTick(function() {
                                                    f.emit('close');
                                                });
                                            }),
                                            'fetch' === o)
                                        ) {
                                            if (
                                                ((f._fetchResponse = r),
                                                (f.url = r.url),
                                                (f.statusCode = r.status),
                                                (f.statusMessage =
                                                    r.statusText),
                                                r.headers.forEach(function(
                                                    t,
                                                    e
                                                ) {
                                                    (f.headers[
                                                        e.toLowerCase()
                                                    ] = t),
                                                        f.rawHeaders.push(e, t);
                                                }),
                                                a.writableStream)
                                            ) {
                                                var h = new WritableStream({
                                                    write: function(t) {
                                                        return new Promise(
                                                            function(e, i) {
                                                                f._destroyed
                                                                    ? i()
                                                                    : f.push(
                                                                          new n(
                                                                              t
                                                                          )
                                                                      )
                                                                        ? e()
                                                                        : (f._resumeFetch = e);
                                                            }
                                                        );
                                                    },
                                                    close: function() {
                                                        i.clearTimeout(l),
                                                            f._destroyed ||
                                                                f.push(null);
                                                    },
                                                    abort: function(t) {
                                                        f._destroyed ||
                                                            f.emit('error', t);
                                                    }
                                                });
                                                try {
                                                    return void r.body
                                                        .pipeTo(h)
                                                        .catch(function(t) {
                                                            i.clearTimeout(l),
                                                                f._destroyed ||
                                                                    f.emit(
                                                                        'error',
                                                                        t
                                                                    );
                                                        });
                                                } catch (t) {}
                                            }
                                            var c = r.body.getReader();
                                            !(function t() {
                                                c.read()
                                                    .then(function(e) {
                                                        if (!f._destroyed) {
                                                            if (e.done)
                                                                return (
                                                                    i.clearTimeout(
                                                                        l
                                                                    ),
                                                                    void f.push(
                                                                        null
                                                                    )
                                                                );
                                                            f.push(
                                                                new n(e.value)
                                                            ),
                                                                t();
                                                        }
                                                    })
                                                    .catch(function(t) {
                                                        i.clearTimeout(l),
                                                            f._destroyed ||
                                                                f.emit(
                                                                    'error',
                                                                    t
                                                                );
                                                    });
                                            })();
                                        } else {
                                            if (
                                                ((f._xhr = e),
                                                (f._pos = 0),
                                                (f.url = e.responseURL),
                                                (f.statusCode = e.status),
                                                (f.statusMessage =
                                                    e.statusText),
                                                e
                                                    .getAllResponseHeaders()
                                                    .split(/\r?\n/)
                                                    .forEach(function(t) {
                                                        var e = t.match(
                                                            /^([^:]+):\s*(.*)/
                                                        );
                                                        if (e) {
                                                            var i = e[1].toLowerCase();
                                                            'set-cookie' === i
                                                                ? (void 0 ===
                                                                      f.headers[
                                                                          i
                                                                      ] &&
                                                                      (f.headers[
                                                                          i
                                                                      ] = []),
                                                                  f.headers[
                                                                      i
                                                                  ].push(e[2]))
                                                                : void 0 !==
                                                                  f.headers[i]
                                                                    ? (f.headers[
                                                                          i
                                                                      ] +=
                                                                          ', ' +
                                                                          e[2])
                                                                    : (f.headers[
                                                                          i
                                                                      ] =
                                                                          e[2]),
                                                                f.rawHeaders.push(
                                                                    e[1],
                                                                    e[2]
                                                                );
                                                        }
                                                    }),
                                                (f._charset = 'x-user-defined'),
                                                !a.overrideMimeType)
                                            ) {
                                                var u =
                                                    f.rawHeaders['mime-type'];
                                                if (u) {
                                                    var p = u.match(
                                                        /;\s*charset=([^;])(;|$)/
                                                    );
                                                    p &&
                                                        (f._charset = p[1].toLowerCase());
                                                }
                                                f._charset ||
                                                    (f._charset = 'utf-8');
                                            }
                                        }
                                    });
                                o(f, s.Readable),
                                    (f.prototype._read = function() {
                                        var t = this._resumeFetch;
                                        t && ((this._resumeFetch = null), t());
                                    }),
                                    (f.prototype._onXHRProgress = function() {
                                        var t = this,
                                            e = t._xhr,
                                            r = null;
                                        switch (t._mode) {
                                            case 'text:vbarray':
                                                if (e.readyState !== l.DONE)
                                                    break;
                                                try {
                                                    r = new i.VBArray(
                                                        e.responseBody
                                                    ).toArray();
                                                } catch (t) {}
                                                if (null !== r) {
                                                    t.push(new n(r));
                                                    break;
                                                }
                                            case 'text':
                                                try {
                                                    r = e.responseText;
                                                } catch (e) {
                                                    t._mode = 'text:vbarray';
                                                    break;
                                                }
                                                if (r.length > t._pos) {
                                                    var a = r.substr(t._pos);
                                                    if (
                                                        'x-user-defined' ===
                                                        t._charset
                                                    ) {
                                                        for (
                                                            var o = new n(
                                                                    a.length
                                                                ),
                                                                s = 0;
                                                            s < a.length;
                                                            s++
                                                        )
                                                            o[s] =
                                                                255 &
                                                                a.charCodeAt(s);
                                                        t.push(o);
                                                    } else
                                                        t.push(a, t._charset);
                                                    t._pos = r.length;
                                                }
                                                break;
                                            case 'arraybuffer':
                                                if (
                                                    e.readyState !== l.DONE ||
                                                    !e.response
                                                )
                                                    break;
                                                (r = e.response),
                                                    t.push(
                                                        new n(new Uint8Array(r))
                                                    );
                                                break;
                                            case 'moz-chunked-arraybuffer':
                                                if (
                                                    ((r = e.response),
                                                    e.readyState !==
                                                        l.LOADING || !r)
                                                )
                                                    break;
                                                t.push(
                                                    new n(new Uint8Array(r))
                                                );
                                                break;
                                            case 'ms-stream':
                                                if (
                                                    ((r = e.response),
                                                    e.readyState !== l.LOADING)
                                                )
                                                    break;
                                                var f = new i.MSStreamReader();
                                                (f.onprogress = function() {
                                                    f.result.byteLength >
                                                        t._pos &&
                                                        (t.push(
                                                            new n(
                                                                new Uint8Array(
                                                                    f.result.slice(
                                                                        t._pos
                                                                    )
                                                                )
                                                            )
                                                        ),
                                                        (t._pos =
                                                            f.result.byteLength));
                                                }),
                                                    (f.onload = function() {
                                                        t.push(null);
                                                    }),
                                                    f.readAsArrayBuffer(r);
                                        }
                                        t._xhr.readyState === l.DONE &&
                                            'ms-stream' !== t._mode &&
                                            t.push(null);
                                    });
                            }.call(
                                this,
                                e('_process'),
                                void 0 !== t
                                    ? t
                                    : 'undefined' != typeof self
                                        ? self
                                        : void 0 !== f
                                            ? f
                                            : {},
                                e('buffer').Buffer
                            ));
                        },
                        {
                            './capability': 120,
                            _process: 15,
                            buffer: 17,
                            inherits: 36,
                            'readable-stream': 114
                        }
                    ],
                    123: [
                        function(t, e, i) {
                            var r = t('safe-buffer').Buffer,
                                n =
                                    r.isEncoding ||
                                    function(t) {
                                        switch (
                                            (t = '' + t) && t.toLowerCase()
                                        ) {
                                            case 'hex':
                                            case 'utf8':
                                            case 'utf-8':
                                            case 'ascii':
                                            case 'binary':
                                            case 'base64':
                                            case 'ucs2':
                                            case 'ucs-2':
                                            case 'utf16le':
                                            case 'utf-16le':
                                            case 'raw':
                                                return !0;
                                            default:
                                                return !1;
                                        }
                                    };
                            function a(t) {
                                var e;
                                switch (
                                    ((this.encoding = (function(t) {
                                        var e = (function(t) {
                                            if (!t) return 'utf8';
                                            for (var e; ; )
                                                switch (t) {
                                                    case 'utf8':
                                                    case 'utf-8':
                                                        return 'utf8';
                                                    case 'ucs2':
                                                    case 'ucs-2':
                                                    case 'utf16le':
                                                    case 'utf-16le':
                                                        return 'utf16le';
                                                    case 'latin1':
                                                    case 'binary':
                                                        return 'latin1';
                                                    case 'base64':
                                                    case 'ascii':
                                                    case 'hex':
                                                        return t;
                                                    default:
                                                        if (e) return;
                                                        (t = (
                                                            '' + t
                                                        ).toLowerCase()),
                                                            (e = !0);
                                                }
                                        })(t);
                                        if (
                                            'string' != typeof e &&
                                            (r.isEncoding === n || !n(t))
                                        )
                                            throw new Error(
                                                'Unknown encoding: ' + t
                                            );
                                        return e || t;
                                    })(t)),
                                    this.encoding)
                                ) {
                                    case 'utf16le':
                                        (this.text = l),
                                            (this.end = f),
                                            (e = 4);
                                        break;
                                    case 'utf8':
                                        (this.fillLast = s), (e = 4);
                                        break;
                                    case 'base64':
                                        (this.text = h),
                                            (this.end = c),
                                            (e = 3);
                                        break;
                                    default:
                                        return (
                                            (this.write = u),
                                            void (this.end = p)
                                        );
                                }
                                (this.lastNeed = 0),
                                    (this.lastTotal = 0),
                                    (this.lastChar = r.allocUnsafe(e));
                            }
                            function o(t) {
                                return t <= 127
                                    ? 0
                                    : t >> 5 == 6
                                        ? 2
                                        : t >> 4 == 14
                                            ? 3
                                            : t >> 3 == 30
                                                ? 4
                                                : t >> 6 == 2
                                                    ? -1
                                                    : -2;
                            }
                            function s(t) {
                                var e = this.lastTotal - this.lastNeed,
                                    i = (function(t, e, i) {
                                        if (128 != (192 & e[0]))
                                            return (t.lastNeed = 0), '�';
                                        if (t.lastNeed > 1 && e.length > 1) {
                                            if (128 != (192 & e[1]))
                                                return (t.lastNeed = 1), '�';
                                            if (
                                                t.lastNeed > 2 &&
                                                e.length > 2 &&
                                                128 != (192 & e[2])
                                            )
                                                return (t.lastNeed = 2), '�';
                                        }
                                    })(this, t);
                                return void 0 !== i
                                    ? i
                                    : this.lastNeed <= t.length
                                        ? (t.copy(
                                              this.lastChar,
                                              e,
                                              0,
                                              this.lastNeed
                                          ),
                                          this.lastChar.toString(
                                              this.encoding,
                                              0,
                                              this.lastTotal
                                          ))
                                        : (t.copy(
                                              this.lastChar,
                                              e,
                                              0,
                                              t.length
                                          ),
                                          void (this.lastNeed -= t.length));
                            }
                            function l(t, e) {
                                if ((t.length - e) % 2 == 0) {
                                    var i = t.toString('utf16le', e);
                                    if (i) {
                                        var r = i.charCodeAt(i.length - 1);
                                        if (r >= 55296 && r <= 56319)
                                            return (
                                                (this.lastNeed = 2),
                                                (this.lastTotal = 4),
                                                (this.lastChar[0] =
                                                    t[t.length - 2]),
                                                (this.lastChar[1] =
                                                    t[t.length - 1]),
                                                i.slice(0, -1)
                                            );
                                    }
                                    return i;
                                }
                                return (
                                    (this.lastNeed = 1),
                                    (this.lastTotal = 2),
                                    (this.lastChar[0] = t[t.length - 1]),
                                    t.toString('utf16le', e, t.length - 1)
                                );
                            }
                            function f(t) {
                                var e = t && t.length ? this.write(t) : '';
                                if (this.lastNeed) {
                                    var i = this.lastTotal - this.lastNeed;
                                    return (
                                        e +
                                        this.lastChar.toString('utf16le', 0, i)
                                    );
                                }
                                return e;
                            }
                            function h(t, e) {
                                var i = (t.length - e) % 3;
                                return 0 === i
                                    ? t.toString('base64', e)
                                    : ((this.lastNeed = 3 - i),
                                      (this.lastTotal = 3),
                                      1 === i
                                          ? (this.lastChar[0] = t[t.length - 1])
                                          : ((this.lastChar[0] =
                                                t[t.length - 2]),
                                            (this.lastChar[1] =
                                                t[t.length - 1])),
                                      t.toString('base64', e, t.length - i));
                            }
                            function c(t) {
                                var e = t && t.length ? this.write(t) : '';
                                return this.lastNeed
                                    ? e +
                                          this.lastChar.toString(
                                              'base64',
                                              0,
                                              3 - this.lastNeed
                                          )
                                    : e;
                            }
                            function u(t) {
                                return t.toString(this.encoding);
                            }
                            function p(t) {
                                return t && t.length ? this.write(t) : '';
                            }
                            (i.StringDecoder = a),
                                (a.prototype.write = function(t) {
                                    if (0 === t.length) return '';
                                    var e, i;
                                    if (this.lastNeed) {
                                        if (void 0 === (e = this.fillLast(t)))
                                            return '';
                                        (i = this.lastNeed),
                                            (this.lastNeed = 0);
                                    } else i = 0;
                                    return i < t.length
                                        ? e
                                            ? e + this.text(t, i)
                                            : this.text(t, i)
                                        : e || '';
                                }),
                                (a.prototype.end = function(t) {
                                    var e = t && t.length ? this.write(t) : '';
                                    return this.lastNeed ? e + '�' : e;
                                }),
                                (a.prototype.text = function(t, e) {
                                    var i = (function(t, e, i) {
                                        var r = e.length - 1;
                                        if (r < i) return 0;
                                        var n = o(e[r]);
                                        if (n >= 0)
                                            return (
                                                n > 0 && (t.lastNeed = n - 1), n
                                            );
                                        if (--r < i || -2 === n) return 0;
                                        if ((n = o(e[r])) >= 0)
                                            return (
                                                n > 0 && (t.lastNeed = n - 2), n
                                            );
                                        if (--r < i || -2 === n) return 0;
                                        if ((n = o(e[r])) >= 0)
                                            return (
                                                n > 0 &&
                                                    (2 === n
                                                        ? (n = 0)
                                                        : (t.lastNeed = n - 3)),
                                                n
                                            );
                                        return 0;
                                    })(this, t, e);
                                    if (!this.lastNeed)
                                        return t.toString('utf8', e);
                                    this.lastTotal = i;
                                    var r = t.length - (i - this.lastNeed);
                                    return (
                                        t.copy(this.lastChar, 0, r),
                                        t.toString('utf8', e, r)
                                    );
                                }),
                                (a.prototype.fillLast = function(t) {
                                    if (this.lastNeed <= t.length)
                                        return (
                                            t.copy(
                                                this.lastChar,
                                                this.lastTotal - this.lastNeed,
                                                0,
                                                this.lastNeed
                                            ),
                                            this.lastChar.toString(
                                                this.encoding,
                                                0,
                                                this.lastTotal
                                            )
                                        );
                                    t.copy(
                                        this.lastChar,
                                        this.lastTotal - this.lastNeed,
                                        0,
                                        t.length
                                    ),
                                        (this.lastNeed -= t.length);
                                });
                        },
                        { 'safe-buffer': 117 }
                    ],
                    124: [
                        function(t, e, i) {
                            (function(e, r) {
                                var n = t('process/browser.js').nextTick,
                                    a = Function.prototype.apply,
                                    o = Array.prototype.slice,
                                    s = {},
                                    l = 0;
                                function h(t, e) {
                                    (this._id = t), (this._clearFn = e);
                                }
                                (i.setTimeout = function() {
                                    return new h(
                                        a.call(setTimeout, f, arguments),
                                        clearTimeout
                                    );
                                }),
                                    (i.setInterval = function() {
                                        return new h(
                                            a.call(setInterval, f, arguments),
                                            clearInterval
                                        );
                                    }),
                                    (i.clearTimeout = i.clearInterval = function(
                                        t
                                    ) {
                                        t.close();
                                    }),
                                    (h.prototype.unref = h.prototype.ref = function() {}),
                                    (h.prototype.close = function() {
                                        this._clearFn.call(f, this._id);
                                    }),
                                    (i.enroll = function(t, e) {
                                        clearTimeout(t._idleTimeoutId),
                                            (t._idleTimeout = e);
                                    }),
                                    (i.unenroll = function(t) {
                                        clearTimeout(t._idleTimeoutId),
                                            (t._idleTimeout = -1);
                                    }),
                                    (i._unrefActive = i.active = function(t) {
                                        clearTimeout(t._idleTimeoutId);
                                        var e = t._idleTimeout;
                                        e >= 0 &&
                                            (t._idleTimeoutId = setTimeout(
                                                function() {
                                                    t._onTimeout &&
                                                        t._onTimeout();
                                                },
                                                e
                                            ));
                                    }),
                                    (i.setImmediate =
                                        'function' == typeof e
                                            ? e
                                            : function(t) {
                                                  var e = l++,
                                                      r =
                                                          !(
                                                              arguments.length <
                                                              2
                                                          ) &&
                                                          o.call(arguments, 1);
                                                  return (
                                                      (s[e] = !0),
                                                      n(function() {
                                                          s[e] &&
                                                              (r
                                                                  ? t.apply(
                                                                        null,
                                                                        r
                                                                    )
                                                                  : t.call(
                                                                        null
                                                                    ),
                                                              i.clearImmediate(
                                                                  e
                                                              ));
                                                      }),
                                                      e
                                                  );
                                              }),
                                    (i.clearImmediate =
                                        'function' == typeof r
                                            ? r
                                            : function(t) {
                                                  delete s[t];
                                              });
                            }.call(
                                this,
                                t('timers').setImmediate,
                                t('timers').clearImmediate
                            ));
                        },
                        { 'process/browser.js': 125, timers: 124 }
                    ],
                    125: [
                        function(t, e, i) {
                            arguments[4][15][0].apply(i, arguments);
                        },
                        { dup: 15 }
                    ],
                    126: [
                        function(t, e, r) {
                            !(function(t) {
                                var o = /^\s+/,
                                    s = /\s+$/,
                                    l = 0,
                                    f = t.round,
                                    h = t.min,
                                    c = t.max,
                                    u = t.random;
                                function p(e, i) {
                                    if (
                                        ((e = e || ''),
                                        (i = i || {}),
                                        e instanceof p)
                                    )
                                        return e;
                                    if (!(this instanceof p))
                                        return new p(e, i);
                                    var r = (function(e) {
                                        var i = { r: 0, g: 0, b: 0 },
                                            r = 1,
                                            n = null,
                                            l = null,
                                            f = null,
                                            u = !1,
                                            p = !1;
                                        'string' == typeof e &&
                                            (e = (function(t) {
                                                t = t
                                                    .replace(o, '')
                                                    .replace(s, '')
                                                    .toLowerCase();
                                                var e,
                                                    i = !1;
                                                if (P[t]) (t = P[t]), (i = !0);
                                                else if ('transparent' == t)
                                                    return {
                                                        r: 0,
                                                        g: 0,
                                                        b: 0,
                                                        a: 0,
                                                        format: 'name'
                                                    };
                                                if ((e = j.rgb.exec(t)))
                                                    return {
                                                        r: e[1],
                                                        g: e[2],
                                                        b: e[3]
                                                    };
                                                if ((e = j.rgba.exec(t)))
                                                    return {
                                                        r: e[1],
                                                        g: e[2],
                                                        b: e[3],
                                                        a: e[4]
                                                    };
                                                if ((e = j.hsl.exec(t)))
                                                    return {
                                                        h: e[1],
                                                        s: e[2],
                                                        l: e[3]
                                                    };
                                                if ((e = j.hsla.exec(t)))
                                                    return {
                                                        h: e[1],
                                                        s: e[2],
                                                        l: e[3],
                                                        a: e[4]
                                                    };
                                                if ((e = j.hsv.exec(t)))
                                                    return {
                                                        h: e[1],
                                                        s: e[2],
                                                        v: e[3]
                                                    };
                                                if ((e = j.hsva.exec(t)))
                                                    return {
                                                        h: e[1],
                                                        s: e[2],
                                                        v: e[3],
                                                        a: e[4]
                                                    };
                                                if ((e = j.hex8.exec(t)))
                                                    return {
                                                        r: D(e[1]),
                                                        g: D(e[2]),
                                                        b: D(e[3]),
                                                        a: F(e[4]),
                                                        format: i
                                                            ? 'name'
                                                            : 'hex8'
                                                    };
                                                if ((e = j.hex6.exec(t)))
                                                    return {
                                                        r: D(e[1]),
                                                        g: D(e[2]),
                                                        b: D(e[3]),
                                                        format: i
                                                            ? 'name'
                                                            : 'hex'
                                                    };
                                                if ((e = j.hex4.exec(t)))
                                                    return {
                                                        r: D(e[1] + '' + e[1]),
                                                        g: D(e[2] + '' + e[2]),
                                                        b: D(e[3] + '' + e[3]),
                                                        a: F(e[4] + '' + e[4]),
                                                        format: i
                                                            ? 'name'
                                                            : 'hex8'
                                                    };
                                                if ((e = j.hex3.exec(t)))
                                                    return {
                                                        r: D(e[1] + '' + e[1]),
                                                        g: D(e[2] + '' + e[2]),
                                                        b: D(e[3] + '' + e[3]),
                                                        format: i
                                                            ? 'name'
                                                            : 'hex'
                                                    };
                                                return !1;
                                            })(e));
                                        'object' ==
                                            (void 0 === e
                                                ? 'undefined'
                                                : a(e)) &&
                                            (H(e.r) && H(e.g) && H(e.b)
                                                ? ((i = (function(t, e, i) {
                                                      return {
                                                          r: 255 * R(t, 255),
                                                          g: 255 * R(e, 255),
                                                          b: 255 * R(i, 255)
                                                      };
                                                  })(e.r, e.g, e.b)),
                                                  (u = !0),
                                                  (p =
                                                      '%' ===
                                                      String(e.r).substr(-1)
                                                          ? 'prgb'
                                                          : 'rgb'))
                                                : H(e.h) && H(e.s) && H(e.v)
                                                    ? ((n = U(e.s)),
                                                      (l = U(e.v)),
                                                      (i = (function(e, i, r) {
                                                          (e = 6 * R(e, 360)),
                                                              (i = R(i, 100)),
                                                              (r = R(r, 100));
                                                          var n = t.floor(e),
                                                              a = e - n,
                                                              o = r * (1 - i),
                                                              s =
                                                                  r *
                                                                  (1 - a * i),
                                                              l =
                                                                  r *
                                                                  (1 -
                                                                      (1 - a) *
                                                                          i),
                                                              f = n % 6;
                                                          return {
                                                              r:
                                                                  255 *
                                                                  [
                                                                      r,
                                                                      s,
                                                                      o,
                                                                      o,
                                                                      l,
                                                                      r
                                                                  ][f],
                                                              g:
                                                                  255 *
                                                                  [
                                                                      l,
                                                                      r,
                                                                      r,
                                                                      s,
                                                                      o,
                                                                      o
                                                                  ][f],
                                                              b:
                                                                  255 *
                                                                  [
                                                                      o,
                                                                      o,
                                                                      l,
                                                                      r,
                                                                      r,
                                                                      s
                                                                  ][f]
                                                          };
                                                      })(e.h, n, l)),
                                                      (u = !0),
                                                      (p = 'hsv'))
                                                    : H(e.h) &&
                                                      H(e.s) &&
                                                      H(e.l) &&
                                                      ((n = U(e.s)),
                                                      (f = U(e.l)),
                                                      (i = (function(t, e, i) {
                                                          var r, n, a;
                                                          function o(t, e, i) {
                                                              return (
                                                                  i < 0 &&
                                                                      (i += 1),
                                                                  i > 1 &&
                                                                      (i -= 1),
                                                                  i < 1 / 6
                                                                      ? t +
                                                                        6 *
                                                                            (e -
                                                                                t) *
                                                                            i
                                                                      : i < 0.5
                                                                          ? e
                                                                          : i <
                                                                            2 /
                                                                                3
                                                                              ? t +
                                                                                (e -
                                                                                    t) *
                                                                                    (2 /
                                                                                        3 -
                                                                                        i) *
                                                                                    6
                                                                              : t
                                                              );
                                                          }
                                                          if (
                                                              ((t = R(t, 360)),
                                                              (e = R(e, 100)),
                                                              (i = R(i, 100)),
                                                              0 === e)
                                                          )
                                                              r = n = a = i;
                                                          else {
                                                              var s =
                                                                      i < 0.5
                                                                          ? i *
                                                                            (1 +
                                                                                e)
                                                                          : i +
                                                                            e -
                                                                            i *
                                                                                e,
                                                                  l = 2 * i - s;
                                                              (r = o(
                                                                  l,
                                                                  s,
                                                                  t + 1 / 3
                                                              )),
                                                                  (n = o(
                                                                      l,
                                                                      s,
                                                                      t
                                                                  )),
                                                                  (a = o(
                                                                      l,
                                                                      s,
                                                                      t - 1 / 3
                                                                  ));
                                                          }
                                                          return {
                                                              r: 255 * r,
                                                              g: 255 * n,
                                                              b: 255 * a
                                                          };
                                                      })(e.h, n, f)),
                                                      (u = !0),
                                                      (p = 'hsl')),
                                            e.hasOwnProperty('a') && (r = e.a));
                                        return (
                                            (r = O(r)),
                                            {
                                                ok: u,
                                                format: e.format || p,
                                                r: h(255, c(i.r, 0)),
                                                g: h(255, c(i.g, 0)),
                                                b: h(255, c(i.b, 0)),
                                                a: r
                                            }
                                        );
                                    })(e);
                                    (this._originalInput = e),
                                        (this._r = r.r),
                                        (this._g = r.g),
                                        (this._b = r.b),
                                        (this._a = r.a),
                                        (this._roundA = f(100 * this._a) / 100),
                                        (this._format = i.format || r.format),
                                        (this._gradientType = i.gradientType),
                                        this._r < 1 && (this._r = f(this._r)),
                                        this._g < 1 && (this._g = f(this._g)),
                                        this._b < 1 && (this._b = f(this._b)),
                                        (this._ok = r.ok),
                                        (this._tc_id = l++);
                                }
                                function d(t, e, i) {
                                    (t = R(t, 255)),
                                        (e = R(e, 255)),
                                        (i = R(i, 255));
                                    var r,
                                        n,
                                        a = c(t, e, i),
                                        o = h(t, e, i),
                                        s = (a + o) / 2;
                                    if (a == o) r = n = 0;
                                    else {
                                        var l = a - o;
                                        switch (
                                            ((n =
                                                s > 0.5
                                                    ? l / (2 - a - o)
                                                    : l / (a + o)),
                                            a)
                                        ) {
                                            case t:
                                                r =
                                                    (e - i) / l +
                                                    (e < i ? 6 : 0);
                                                break;
                                            case e:
                                                r = (i - t) / l + 2;
                                                break;
                                            case i:
                                                r = (t - e) / l + 4;
                                        }
                                        r /= 6;
                                    }
                                    return { h: r, s: n, l: s };
                                }
                                function m(t, e, i) {
                                    (t = R(t, 255)),
                                        (e = R(e, 255)),
                                        (i = R(i, 255));
                                    var r,
                                        n,
                                        a = c(t, e, i),
                                        o = h(t, e, i),
                                        s = a,
                                        l = a - o;
                                    if (((n = 0 === a ? 0 : l / a), a == o))
                                        r = 0;
                                    else {
                                        switch (a) {
                                            case t:
                                                r =
                                                    (e - i) / l +
                                                    (e < i ? 6 : 0);
                                                break;
                                            case e:
                                                r = (i - t) / l + 2;
                                                break;
                                            case i:
                                                r = (t - e) / l + 4;
                                        }
                                        r /= 6;
                                    }
                                    return { h: r, s: n, v: s };
                                }
                                function g(t, e, i, r) {
                                    var n = [
                                        z(f(t).toString(16)),
                                        z(f(e).toString(16)),
                                        z(f(i).toString(16))
                                    ];
                                    return r &&
                                        n[0].charAt(0) == n[0].charAt(1) &&
                                        n[1].charAt(0) == n[1].charAt(1) &&
                                        n[2].charAt(0) == n[2].charAt(1)
                                        ? n[0].charAt(0) +
                                              n[1].charAt(0) +
                                              n[2].charAt(0)
                                        : n.join('');
                                }
                                function b(t, e, i, r) {
                                    return [
                                        z(N(r)),
                                        z(f(t).toString(16)),
                                        z(f(e).toString(16)),
                                        z(f(i).toString(16))
                                    ].join('');
                                }
                                function v(t, e) {
                                    e = 0 === e ? 0 : e || 10;
                                    var i = p(t).toHsl();
                                    return (
                                        (i.s -= e / 100), (i.s = B(i.s)), p(i)
                                    );
                                }
                                function y(t, e) {
                                    e = 0 === e ? 0 : e || 10;
                                    var i = p(t).toHsl();
                                    return (
                                        (i.s += e / 100), (i.s = B(i.s)), p(i)
                                    );
                                }
                                function w(t) {
                                    return p(t).desaturate(100);
                                }
                                function _(t, e) {
                                    e = 0 === e ? 0 : e || 10;
                                    var i = p(t).toHsl();
                                    return (
                                        (i.l += e / 100), (i.l = B(i.l)), p(i)
                                    );
                                }
                                function x(t, e) {
                                    e = 0 === e ? 0 : e || 10;
                                    var i = p(t).toRgb();
                                    return (
                                        (i.r = c(
                                            0,
                                            h(255, i.r - f((-e / 100) * 255))
                                        )),
                                        (i.g = c(
                                            0,
                                            h(255, i.g - f((-e / 100) * 255))
                                        )),
                                        (i.b = c(
                                            0,
                                            h(255, i.b - f((-e / 100) * 255))
                                        )),
                                        p(i)
                                    );
                                }
                                function k(t, e) {
                                    e = 0 === e ? 0 : e || 10;
                                    var i = p(t).toHsl();
                                    return (
                                        (i.l -= e / 100), (i.l = B(i.l)), p(i)
                                    );
                                }
                                function E(t, e) {
                                    var i = p(t).toHsl(),
                                        r = (i.h + e) % 360;
                                    return (i.h = r < 0 ? 360 + r : r), p(i);
                                }
                                function I(t) {
                                    var e = p(t).toHsl();
                                    return (e.h = (e.h + 180) % 360), p(e);
                                }
                                function S(t) {
                                    var e = p(t).toHsl(),
                                        i = e.h;
                                    return [
                                        p(t),
                                        p({
                                            h: (i + 120) % 360,
                                            s: e.s,
                                            l: e.l
                                        }),
                                        p({
                                            h: (i + 240) % 360,
                                            s: e.s,
                                            l: e.l
                                        })
                                    ];
                                }
                                function A(t) {
                                    var e = p(t).toHsl(),
                                        i = e.h;
                                    return [
                                        p(t),
                                        p({
                                            h: (i + 90) % 360,
                                            s: e.s,
                                            l: e.l
                                        }),
                                        p({
                                            h: (i + 180) % 360,
                                            s: e.s,
                                            l: e.l
                                        }),
                                        p({
                                            h: (i + 270) % 360,
                                            s: e.s,
                                            l: e.l
                                        })
                                    ];
                                }
                                function T(t) {
                                    var e = p(t).toHsl(),
                                        i = e.h;
                                    return [
                                        p(t),
                                        p({
                                            h: (i + 72) % 360,
                                            s: e.s,
                                            l: e.l
                                        }),
                                        p({
                                            h: (i + 216) % 360,
                                            s: e.s,
                                            l: e.l
                                        })
                                    ];
                                }
                                function C(t, e, i) {
                                    (e = e || 6), (i = i || 30);
                                    var r = p(t).toHsl(),
                                        n = 360 / i,
                                        a = [p(t)];
                                    for (
                                        r.h =
                                            (r.h - ((n * e) >> 1) + 720) % 360;
                                        --e;

                                    )
                                        (r.h = (r.h + n) % 360), a.push(p(r));
                                    return a;
                                }
                                function M(t, e) {
                                    e = e || 6;
                                    for (
                                        var i = p(t).toHsv(),
                                            r = i.h,
                                            n = i.s,
                                            a = i.v,
                                            o = [],
                                            s = 1 / e;
                                        e--;

                                    )
                                        o.push(p({ h: r, s: n, v: a })),
                                            (a = (a + s) % 1);
                                    return o;
                                }
                                (p.prototype = {
                                    isDark: function() {
                                        return this.getBrightness() < 128;
                                    },
                                    isLight: function() {
                                        return !this.isDark();
                                    },
                                    isValid: function() {
                                        return this._ok;
                                    },
                                    getOriginalInput: function() {
                                        return this._originalInput;
                                    },
                                    getFormat: function() {
                                        return this._format;
                                    },
                                    getAlpha: function() {
                                        return this._a;
                                    },
                                    getBrightness: function() {
                                        var t = this.toRgb();
                                        return (
                                            (299 * t.r +
                                                587 * t.g +
                                                114 * t.b) /
                                            1e3
                                        );
                                    },
                                    getLuminance: function() {
                                        var e,
                                            i,
                                            r,
                                            n = this.toRgb();
                                        return (
                                            (e = n.r / 255),
                                            (i = n.g / 255),
                                            (r = n.b / 255),
                                            0.2126 *
                                                (e <= 0.03928
                                                    ? e / 12.92
                                                    : t.pow(
                                                          (e + 0.055) / 1.055,
                                                          2.4
                                                      )) +
                                                0.7152 *
                                                    (i <= 0.03928
                                                        ? i / 12.92
                                                        : t.pow(
                                                              (i + 0.055) /
                                                                  1.055,
                                                              2.4
                                                          )) +
                                                0.0722 *
                                                    (r <= 0.03928
                                                        ? r / 12.92
                                                        : t.pow(
                                                              (r + 0.055) /
                                                                  1.055,
                                                              2.4
                                                          ))
                                        );
                                    },
                                    setAlpha: function(t) {
                                        return (
                                            (this._a = O(t)),
                                            (this._roundA =
                                                f(100 * this._a) / 100),
                                            this
                                        );
                                    },
                                    toHsv: function() {
                                        var t = m(this._r, this._g, this._b);
                                        return {
                                            h: 360 * t.h,
                                            s: t.s,
                                            v: t.v,
                                            a: this._a
                                        };
                                    },
                                    toHsvString: function() {
                                        var t = m(this._r, this._g, this._b),
                                            e = f(360 * t.h),
                                            i = f(100 * t.s),
                                            r = f(100 * t.v);
                                        return 1 == this._a
                                            ? 'hsv(' +
                                                  e +
                                                  ', ' +
                                                  i +
                                                  '%, ' +
                                                  r +
                                                  '%)'
                                            : 'hsva(' +
                                                  e +
                                                  ', ' +
                                                  i +
                                                  '%, ' +
                                                  r +
                                                  '%, ' +
                                                  this._roundA +
                                                  ')';
                                    },
                                    toHsl: function() {
                                        var t = d(this._r, this._g, this._b);
                                        return {
                                            h: 360 * t.h,
                                            s: t.s,
                                            l: t.l,
                                            a: this._a
                                        };
                                    },
                                    toHslString: function() {
                                        var t = d(this._r, this._g, this._b),
                                            e = f(360 * t.h),
                                            i = f(100 * t.s),
                                            r = f(100 * t.l);
                                        return 1 == this._a
                                            ? 'hsl(' +
                                                  e +
                                                  ', ' +
                                                  i +
                                                  '%, ' +
                                                  r +
                                                  '%)'
                                            : 'hsla(' +
                                                  e +
                                                  ', ' +
                                                  i +
                                                  '%, ' +
                                                  r +
                                                  '%, ' +
                                                  this._roundA +
                                                  ')';
                                    },
                                    toHex: function(t) {
                                        return g(this._r, this._g, this._b, t);
                                    },
                                    toHexString: function(t) {
                                        return '#' + this.toHex(t);
                                    },
                                    toHex8: function(t) {
                                        return (function(t, e, i, r, n) {
                                            var a = [
                                                z(f(t).toString(16)),
                                                z(f(e).toString(16)),
                                                z(f(i).toString(16)),
                                                z(N(r))
                                            ];
                                            if (
                                                n &&
                                                a[0].charAt(0) ==
                                                    a[0].charAt(1) &&
                                                a[1].charAt(0) ==
                                                    a[1].charAt(1) &&
                                                a[2].charAt(0) ==
                                                    a[2].charAt(1) &&
                                                a[3].charAt(0) == a[3].charAt(1)
                                            )
                                                return (
                                                    a[0].charAt(0) +
                                                    a[1].charAt(0) +
                                                    a[2].charAt(0) +
                                                    a[3].charAt(0)
                                                );
                                            return a.join('');
                                        })(
                                            this._r,
                                            this._g,
                                            this._b,
                                            this._a,
                                            t
                                        );
                                    },
                                    toHex8String: function(t) {
                                        return '#' + this.toHex8(t);
                                    },
                                    toRgb: function() {
                                        return {
                                            r: f(this._r),
                                            g: f(this._g),
                                            b: f(this._b),
                                            a: this._a
                                        };
                                    },
                                    toRgbString: function() {
                                        return 1 == this._a
                                            ? 'rgb(' +
                                                  f(this._r) +
                                                  ', ' +
                                                  f(this._g) +
                                                  ', ' +
                                                  f(this._b) +
                                                  ')'
                                            : 'rgba(' +
                                                  f(this._r) +
                                                  ', ' +
                                                  f(this._g) +
                                                  ', ' +
                                                  f(this._b) +
                                                  ', ' +
                                                  this._roundA +
                                                  ')';
                                    },
                                    toPercentageRgb: function() {
                                        return {
                                            r: f(100 * R(this._r, 255)) + '%',
                                            g: f(100 * R(this._g, 255)) + '%',
                                            b: f(100 * R(this._b, 255)) + '%',
                                            a: this._a
                                        };
                                    },
                                    toPercentageRgbString: function() {
                                        return 1 == this._a
                                            ? 'rgb(' +
                                                  f(100 * R(this._r, 255)) +
                                                  '%, ' +
                                                  f(100 * R(this._g, 255)) +
                                                  '%, ' +
                                                  f(100 * R(this._b, 255)) +
                                                  '%)'
                                            : 'rgba(' +
                                                  f(100 * R(this._r, 255)) +
                                                  '%, ' +
                                                  f(100 * R(this._g, 255)) +
                                                  '%, ' +
                                                  f(100 * R(this._b, 255)) +
                                                  '%, ' +
                                                  this._roundA +
                                                  ')';
                                    },
                                    toName: function() {
                                        return 0 === this._a
                                            ? 'transparent'
                                            : !(this._a < 1) &&
                                                  (L[
                                                      g(
                                                          this._r,
                                                          this._g,
                                                          this._b,
                                                          !0
                                                      )
                                                  ] ||
                                                      !1);
                                    },
                                    toFilter: function(t) {
                                        var e =
                                                '#' +
                                                b(
                                                    this._r,
                                                    this._g,
                                                    this._b,
                                                    this._a
                                                ),
                                            i = e,
                                            r = this._gradientType
                                                ? 'GradientType = 1, '
                                                : '';
                                        if (t) {
                                            var n = p(t);
                                            i = '#' + b(n._r, n._g, n._b, n._a);
                                        }
                                        return (
                                            'progid:DXImageTransform.Microsoft.gradient(' +
                                            r +
                                            'startColorstr=' +
                                            e +
                                            ',endColorstr=' +
                                            i +
                                            ')'
                                        );
                                    },
                                    toString: function(t) {
                                        var e = !!t;
                                        t = t || this._format;
                                        var i = !1,
                                            r = this._a < 1 && this._a >= 0;
                                        return e ||
                                            !r ||
                                            ('hex' !== t &&
                                                'hex6' !== t &&
                                                'hex3' !== t &&
                                                'hex4' !== t &&
                                                'hex8' !== t &&
                                                'name' !== t)
                                            ? ('rgb' === t &&
                                                  (i = this.toRgbString()),
                                              'prgb' === t &&
                                                  (i = this.toPercentageRgbString()),
                                              ('hex' !== t && 'hex6' !== t) ||
                                                  (i = this.toHexString()),
                                              'hex3' === t &&
                                                  (i = this.toHexString(!0)),
                                              'hex4' === t &&
                                                  (i = this.toHex8String(!0)),
                                              'hex8' === t &&
                                                  (i = this.toHex8String()),
                                              'name' === t &&
                                                  (i = this.toName()),
                                              'hsl' === t &&
                                                  (i = this.toHslString()),
                                              'hsv' === t &&
                                                  (i = this.toHsvString()),
                                              i || this.toHexString())
                                            : 'name' === t && 0 === this._a
                                                ? this.toName()
                                                : this.toRgbString();
                                    },
                                    clone: function() {
                                        return p(this.toString());
                                    },
                                    _applyModification: function(t, e) {
                                        var i = t.apply(
                                            null,
                                            [this].concat([].slice.call(e))
                                        );
                                        return (
                                            (this._r = i._r),
                                            (this._g = i._g),
                                            (this._b = i._b),
                                            this.setAlpha(i._a),
                                            this
                                        );
                                    },
                                    lighten: function() {
                                        return this._applyModification(
                                            _,
                                            arguments
                                        );
                                    },
                                    brighten: function() {
                                        return this._applyModification(
                                            x,
                                            arguments
                                        );
                                    },
                                    darken: function() {
                                        return this._applyModification(
                                            k,
                                            arguments
                                        );
                                    },
                                    desaturate: function() {
                                        return this._applyModification(
                                            v,
                                            arguments
                                        );
                                    },
                                    saturate: function() {
                                        return this._applyModification(
                                            y,
                                            arguments
                                        );
                                    },
                                    greyscale: function() {
                                        return this._applyModification(
                                            w,
                                            arguments
                                        );
                                    },
                                    spin: function() {
                                        return this._applyModification(
                                            E,
                                            arguments
                                        );
                                    },
                                    _applyCombination: function(t, e) {
                                        return t.apply(
                                            null,
                                            [this].concat([].slice.call(e))
                                        );
                                    },
                                    analogous: function() {
                                        return this._applyCombination(
                                            C,
                                            arguments
                                        );
                                    },
                                    complement: function() {
                                        return this._applyCombination(
                                            I,
                                            arguments
                                        );
                                    },
                                    monochromatic: function() {
                                        return this._applyCombination(
                                            M,
                                            arguments
                                        );
                                    },
                                    splitcomplement: function() {
                                        return this._applyCombination(
                                            T,
                                            arguments
                                        );
                                    },
                                    triad: function() {
                                        return this._applyCombination(
                                            S,
                                            arguments
                                        );
                                    },
                                    tetrad: function() {
                                        return this._applyCombination(
                                            A,
                                            arguments
                                        );
                                    }
                                }),
                                    (p.fromRatio = function(t, e) {
                                        if (
                                            'object' ==
                                            (void 0 === t ? 'undefined' : a(t))
                                        ) {
                                            var i = {};
                                            for (var r in t)
                                                t.hasOwnProperty(r) &&
                                                    (i[r] =
                                                        'a' === r
                                                            ? t[r]
                                                            : U(t[r]));
                                            t = i;
                                        }
                                        return p(t, e);
                                    }),
                                    (p.equals = function(t, e) {
                                        return (
                                            !(!t || !e) &&
                                            p(t).toRgbString() ==
                                                p(e).toRgbString()
                                        );
                                    }),
                                    (p.random = function() {
                                        return p.fromRatio({
                                            r: u(),
                                            g: u(),
                                            b: u()
                                        });
                                    }),
                                    (p.mix = function(t, e, i) {
                                        i = 0 === i ? 0 : i || 50;
                                        var r = p(t).toRgb(),
                                            n = p(e).toRgb(),
                                            a = i / 100;
                                        return p({
                                            r: (n.r - r.r) * a + r.r,
                                            g: (n.g - r.g) * a + r.g,
                                            b: (n.b - r.b) * a + r.b,
                                            a: (n.a - r.a) * a + r.a
                                        });
                                    }),
                                    (p.readability = function(e, i) {
                                        var r = p(e),
                                            n = p(i);
                                        return (
                                            (t.max(
                                                r.getLuminance(),
                                                n.getLuminance()
                                            ) +
                                                0.05) /
                                            (t.min(
                                                r.getLuminance(),
                                                n.getLuminance()
                                            ) +
                                                0.05)
                                        );
                                    }),
                                    (p.isReadable = function(t, e, i) {
                                        var r,
                                            n,
                                            a = p.readability(t, e);
                                        switch (
                                            ((n = !1),
                                            (r = (function(t) {
                                                var e, i;
                                                (e = (
                                                    (t = t || {
                                                        level: 'AA',
                                                        size: 'small'
                                                    }).level || 'AA'
                                                ).toUpperCase()),
                                                    (i = (
                                                        t.size || 'small'
                                                    ).toLowerCase()),
                                                    'AA' !== e &&
                                                        'AAA' !== e &&
                                                        (e = 'AA');
                                                'small' !== i &&
                                                    'large' !== i &&
                                                    (i = 'small');
                                                return { level: e, size: i };
                                            })(i)).level + r.size)
                                        ) {
                                            case 'AAsmall':
                                            case 'AAAlarge':
                                                n = a >= 4.5;
                                                break;
                                            case 'AAlarge':
                                                n = a >= 3;
                                                break;
                                            case 'AAAsmall':
                                                n = a >= 7;
                                        }
                                        return n;
                                    }),
                                    (p.mostReadable = function(t, e, i) {
                                        var r,
                                            n,
                                            a,
                                            o,
                                            s = null,
                                            l = 0;
                                        (n = (i = i || {})
                                            .includeFallbackColors),
                                            (a = i.level),
                                            (o = i.size);
                                        for (var f = 0; f < e.length; f++)
                                            (r = p.readability(t, e[f])) > l &&
                                                ((l = r), (s = p(e[f])));
                                        return p.isReadable(t, s, {
                                            level: a,
                                            size: o
                                        }) || !n
                                            ? s
                                            : ((i.includeFallbackColors = !1),
                                              p.mostReadable(
                                                  t,
                                                  ['#fff', '#000'],
                                                  i
                                              ));
                                    });
                                var P = (p.names = {
                                        aliceblue: 'f0f8ff',
                                        antiquewhite: 'faebd7',
                                        aqua: '0ff',
                                        aquamarine: '7fffd4',
                                        azure: 'f0ffff',
                                        beige: 'f5f5dc',
                                        bisque: 'ffe4c4',
                                        black: '000',
                                        blanchedalmond: 'ffebcd',
                                        blue: '00f',
                                        blueviolet: '8a2be2',
                                        brown: 'a52a2a',
                                        burlywood: 'deb887',
                                        burntsienna: 'ea7e5d',
                                        cadetblue: '5f9ea0',
                                        chartreuse: '7fff00',
                                        chocolate: 'd2691e',
                                        coral: 'ff7f50',
                                        cornflowerblue: '6495ed',
                                        cornsilk: 'fff8dc',
                                        crimson: 'dc143c',
                                        cyan: '0ff',
                                        darkblue: '00008b',
                                        darkcyan: '008b8b',
                                        darkgoldenrod: 'b8860b',
                                        darkgray: 'a9a9a9',
                                        darkgreen: '006400',
                                        darkgrey: 'a9a9a9',
                                        darkkhaki: 'bdb76b',
                                        darkmagenta: '8b008b',
                                        darkolivegreen: '556b2f',
                                        darkorange: 'ff8c00',
                                        darkorchid: '9932cc',
                                        darkred: '8b0000',
                                        darksalmon: 'e9967a',
                                        darkseagreen: '8fbc8f',
                                        darkslateblue: '483d8b',
                                        darkslategray: '2f4f4f',
                                        darkslategrey: '2f4f4f',
                                        darkturquoise: '00ced1',
                                        darkviolet: '9400d3',
                                        deeppink: 'ff1493',
                                        deepskyblue: '00bfff',
                                        dimgray: '696969',
                                        dimgrey: '696969',
                                        dodgerblue: '1e90ff',
                                        firebrick: 'b22222',
                                        floralwhite: 'fffaf0',
                                        forestgreen: '228b22',
                                        fuchsia: 'f0f',
                                        gainsboro: 'dcdcdc',
                                        ghostwhite: 'f8f8ff',
                                        gold: 'ffd700',
                                        goldenrod: 'daa520',
                                        gray: '808080',
                                        green: '008000',
                                        greenyellow: 'adff2f',
                                        grey: '808080',
                                        honeydew: 'f0fff0',
                                        hotpink: 'ff69b4',
                                        indianred: 'cd5c5c',
                                        indigo: '4b0082',
                                        ivory: 'fffff0',
                                        khaki: 'f0e68c',
                                        lavender: 'e6e6fa',
                                        lavenderblush: 'fff0f5',
                                        lawngreen: '7cfc00',
                                        lemonchiffon: 'fffacd',
                                        lightblue: 'add8e6',
                                        lightcoral: 'f08080',
                                        lightcyan: 'e0ffff',
                                        lightgoldenrodyellow: 'fafad2',
                                        lightgray: 'd3d3d3',
                                        lightgreen: '90ee90',
                                        lightgrey: 'd3d3d3',
                                        lightpink: 'ffb6c1',
                                        lightsalmon: 'ffa07a',
                                        lightseagreen: '20b2aa',
                                        lightskyblue: '87cefa',
                                        lightslategray: '789',
                                        lightslategrey: '789',
                                        lightsteelblue: 'b0c4de',
                                        lightyellow: 'ffffe0',
                                        lime: '0f0',
                                        limegreen: '32cd32',
                                        linen: 'faf0e6',
                                        magenta: 'f0f',
                                        maroon: '800000',
                                        mediumaquamarine: '66cdaa',
                                        mediumblue: '0000cd',
                                        mediumorchid: 'ba55d3',
                                        mediumpurple: '9370db',
                                        mediumseagreen: '3cb371',
                                        mediumslateblue: '7b68ee',
                                        mediumspringgreen: '00fa9a',
                                        mediumturquoise: '48d1cc',
                                        mediumvioletred: 'c71585',
                                        midnightblue: '191970',
                                        mintcream: 'f5fffa',
                                        mistyrose: 'ffe4e1',
                                        moccasin: 'ffe4b5',
                                        navajowhite: 'ffdead',
                                        navy: '000080',
                                        oldlace: 'fdf5e6',
                                        olive: '808000',
                                        olivedrab: '6b8e23',
                                        orange: 'ffa500',
                                        orangered: 'ff4500',
                                        orchid: 'da70d6',
                                        palegoldenrod: 'eee8aa',
                                        palegreen: '98fb98',
                                        paleturquoise: 'afeeee',
                                        palevioletred: 'db7093',
                                        papayawhip: 'ffefd5',
                                        peachpuff: 'ffdab9',
                                        peru: 'cd853f',
                                        pink: 'ffc0cb',
                                        plum: 'dda0dd',
                                        powderblue: 'b0e0e6',
                                        purple: '800080',
                                        rebeccapurple: '663399',
                                        red: 'f00',
                                        rosybrown: 'bc8f8f',
                                        royalblue: '4169e1',
                                        saddlebrown: '8b4513',
                                        salmon: 'fa8072',
                                        sandybrown: 'f4a460',
                                        seagreen: '2e8b57',
                                        seashell: 'fff5ee',
                                        sienna: 'a0522d',
                                        silver: 'c0c0c0',
                                        skyblue: '87ceeb',
                                        slateblue: '6a5acd',
                                        slategray: '708090',
                                        slategrey: '708090',
                                        snow: 'fffafa',
                                        springgreen: '00ff7f',
                                        steelblue: '4682b4',
                                        tan: 'd2b48c',
                                        teal: '008080',
                                        thistle: 'd8bfd8',
                                        tomato: 'ff6347',
                                        turquoise: '40e0d0',
                                        violet: 'ee82ee',
                                        wheat: 'f5deb3',
                                        white: 'fff',
                                        whitesmoke: 'f5f5f5',
                                        yellow: 'ff0',
                                        yellowgreen: '9acd32'
                                    }),
                                    L = (p.hexNames = (function(t) {
                                        var e = {};
                                        for (var i in t)
                                            t.hasOwnProperty(i) &&
                                                (e[t[i]] = i);
                                        return e;
                                    })(P));
                                function O(t) {
                                    return (
                                        (t = parseFloat(t)),
                                        (isNaN(t) || t < 0 || t > 1) && (t = 1),
                                        t
                                    );
                                }
                                function R(e, i) {
                                    (function(t) {
                                        return (
                                            'string' == typeof t &&
                                            -1 != t.indexOf('.') &&
                                            1 === parseFloat(t)
                                        );
                                    })(e) && (e = '100%');
                                    var r = (function(t) {
                                        return (
                                            'string' == typeof t &&
                                            -1 != t.indexOf('%')
                                        );
                                    })(e);
                                    return (
                                        (e = h(i, c(0, parseFloat(e)))),
                                        r && (e = parseInt(e * i, 10) / 100),
                                        t.abs(e - i) < 1e-6
                                            ? 1
                                            : (e % i) / parseFloat(i)
                                    );
                                }
                                function B(t) {
                                    return h(1, c(0, t));
                                }
                                function D(t) {
                                    return parseInt(t, 16);
                                }
                                function z(t) {
                                    return 1 == t.length ? '0' + t : '' + t;
                                }
                                function U(t) {
                                    return t <= 1 && (t = 100 * t + '%'), t;
                                }
                                function N(e) {
                                    return t
                                        .round(255 * parseFloat(e))
                                        .toString(16);
                                }
                                function F(t) {
                                    return D(t) / 255;
                                }
                                var j = (function() {
                                    var t =
                                            '(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)',
                                        e =
                                            '[\\s|\\(]+(' +
                                            t +
                                            ')[,|\\s]+(' +
                                            t +
                                            ')[,|\\s]+(' +
                                            t +
                                            ')\\s*\\)?',
                                        i =
                                            '[\\s|\\(]+(' +
                                            t +
                                            ')[,|\\s]+(' +
                                            t +
                                            ')[,|\\s]+(' +
                                            t +
                                            ')[,|\\s]+(' +
                                            t +
                                            ')\\s*\\)?';
                                    return {
                                        CSS_UNIT: new RegExp(t),
                                        rgb: new RegExp('rgb' + e),
                                        rgba: new RegExp('rgba' + i),
                                        hsl: new RegExp('hsl' + e),
                                        hsla: new RegExp('hsla' + i),
                                        hsv: new RegExp('hsv' + e),
                                        hsva: new RegExp('hsva' + i),
                                        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
                                        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
                                        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
                                        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
                                    };
                                })();
                                function H(t) {
                                    return !!j.CSS_UNIT.exec(t);
                                }
                                void 0 !== e && e.exports
                                    ? (e.exports = p)
                                    : void 0 ===
                                          (n = function() {
                                              return p;
                                          }.call(r, i, r, e)) ||
                                      (e.exports = n);
                            })(Math);
                        },
                        {}
                    ],
                    127: [
                        function(t, e, i) {
                            var r = t('buffer').Buffer;
                            e.exports = function(t) {
                                if (t instanceof Uint8Array) {
                                    if (
                                        0 === t.byteOffset &&
                                        t.byteLength === t.buffer.byteLength
                                    )
                                        return t.buffer;
                                    if ('function' == typeof t.buffer.slice)
                                        return t.buffer.slice(
                                            t.byteOffset,
                                            t.byteOffset + t.byteLength
                                        );
                                }
                                if (r.isBuffer(t)) {
                                    for (
                                        var e = new Uint8Array(t.length),
                                            i = t.length,
                                            n = 0;
                                        n < i;
                                        n++
                                    )
                                        e[n] = t[n];
                                    return e.buffer;
                                }
                                throw new Error('Argument must be a Buffer');
                            };
                        },
                        { buffer: 17 }
                    ],
                    128: [
                        function(t, e, i) {
                            ((i = e.exports = function(t) {
                                return t.replace(/^\s*|\s*$/g, '');
                            }).left = function(t) {
                                return t.replace(/^\s*/, '');
                            }),
                                (i.right = function(t) {
                                    return t.replace(/\s*$/, '');
                                });
                        },
                        {}
                    ],
                    129: [
                        function(t, e, i) {
                            var r = t('punycode'),
                                n = t('./util');
                            function o() {
                                (this.protocol = null),
                                    (this.slashes = null),
                                    (this.auth = null),
                                    (this.host = null),
                                    (this.port = null),
                                    (this.hostname = null),
                                    (this.hash = null),
                                    (this.search = null),
                                    (this.query = null),
                                    (this.pathname = null),
                                    (this.path = null),
                                    (this.href = null);
                            }
                            (i.parse = w),
                                (i.resolve = function(t, e) {
                                    return w(t, !1, !0).resolve(e);
                                }),
                                (i.resolveObject = function(t, e) {
                                    return t
                                        ? w(t, !1, !0).resolveObject(e)
                                        : e;
                                }),
                                (i.format = function(t) {
                                    n.isString(t) && (t = w(t));
                                    return t instanceof o
                                        ? t.format()
                                        : o.prototype.format.call(t);
                                }),
                                (i.Url = o);
                            var s = /^([a-z0-9.+-]+:)/i,
                                l = /:[0-9]*$/,
                                f = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,
                                h = ['{', '}', '|', '\\', '^', '`'].concat([
                                    '<',
                                    '>',
                                    '"',
                                    '`',
                                    ' ',
                                    '\r',
                                    '\n',
                                    '\t'
                                ]),
                                c = ["'"].concat(h),
                                u = ['%', '/', '?', ';', '#'].concat(c),
                                p = ['/', '?', '#'],
                                d = /^[+a-z0-9A-Z_-]{0,63}$/,
                                m = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
                                g = { javascript: !0, 'javascript:': !0 },
                                b = { javascript: !0, 'javascript:': !0 },
                                v = {
                                    http: !0,
                                    https: !0,
                                    ftp: !0,
                                    gopher: !0,
                                    file: !0,
                                    'http:': !0,
                                    'https:': !0,
                                    'ftp:': !0,
                                    'gopher:': !0,
                                    'file:': !0
                                },
                                y = t('querystring');
                            function w(t, e, i) {
                                if (t && n.isObject(t) && t instanceof o)
                                    return t;
                                var r = new o();
                                return r.parse(t, e, i), r;
                            }
                            (o.prototype.parse = function(t, e, i) {
                                if (!n.isString(t))
                                    throw new TypeError(
                                        "Parameter 'url' must be a string, not " +
                                            (void 0 === t ? 'undefined' : a(t))
                                    );
                                var o = t.indexOf('?'),
                                    l =
                                        -1 !== o && o < t.indexOf('#')
                                            ? '?'
                                            : '#',
                                    h = t.split(l);
                                h[0] = h[0].replace(/\\/g, '/');
                                var w = (t = h.join(l));
                                if (
                                    ((w = w.trim()),
                                    !i && 1 === t.split('#').length)
                                ) {
                                    var _ = f.exec(w);
                                    if (_)
                                        return (
                                            (this.path = w),
                                            (this.href = w),
                                            (this.pathname = _[1]),
                                            _[2]
                                                ? ((this.search = _[2]),
                                                  (this.query = e
                                                      ? y.parse(
                                                            this.search.substr(
                                                                1
                                                            )
                                                        )
                                                      : this.search.substr(1)))
                                                : e &&
                                                  ((this.search = ''),
                                                  (this.query = {})),
                                            this
                                        );
                                }
                                var x = s.exec(w);
                                if (x) {
                                    var k = (x = x[0]).toLowerCase();
                                    (this.protocol = k),
                                        (w = w.substr(x.length));
                                }
                                if (i || x || w.match(/^\/\/[^@\/]+@[^@\/]+/)) {
                                    var E = '//' === w.substr(0, 2);
                                    !E ||
                                        (x && b[x]) ||
                                        ((w = w.substr(2)),
                                        (this.slashes = !0));
                                }
                                if (!b[x] && (E || (x && !v[x]))) {
                                    for (
                                        var I, S, A = -1, T = 0;
                                        T < p.length;
                                        T++
                                    ) {
                                        -1 !== (C = w.indexOf(p[T])) &&
                                            (-1 === A || C < A) &&
                                            (A = C);
                                    }
                                    -1 !==
                                        (S =
                                            -1 === A
                                                ? w.lastIndexOf('@')
                                                : w.lastIndexOf('@', A)) &&
                                        ((I = w.slice(0, S)),
                                        (w = w.slice(S + 1)),
                                        (this.auth = decodeURIComponent(I))),
                                        (A = -1);
                                    for (T = 0; T < u.length; T++) {
                                        var C;
                                        -1 !== (C = w.indexOf(u[T])) &&
                                            (-1 === A || C < A) &&
                                            (A = C);
                                    }
                                    -1 === A && (A = w.length),
                                        (this.host = w.slice(0, A)),
                                        (w = w.slice(A)),
                                        this.parseHost(),
                                        (this.hostname = this.hostname || '');
                                    var M =
                                        '[' === this.hostname[0] &&
                                        ']' ===
                                            this.hostname[
                                                this.hostname.length - 1
                                            ];
                                    if (!M)
                                        for (
                                            var P = this.hostname.split(/\./),
                                                L = ((T = 0), P.length);
                                            T < L;
                                            T++
                                        ) {
                                            var O = P[T];
                                            if (O && !O.match(d)) {
                                                for (
                                                    var R = '',
                                                        B = 0,
                                                        D = O.length;
                                                    B < D;
                                                    B++
                                                )
                                                    O.charCodeAt(B) > 127
                                                        ? (R += 'x')
                                                        : (R += O[B]);
                                                if (!R.match(d)) {
                                                    var z = P.slice(0, T),
                                                        U = P.slice(T + 1),
                                                        N = O.match(m);
                                                    N &&
                                                        (z.push(N[1]),
                                                        U.unshift(N[2])),
                                                        U.length &&
                                                            (w =
                                                                '/' +
                                                                U.join('.') +
                                                                w),
                                                        (this.hostname = z.join(
                                                            '.'
                                                        ));
                                                    break;
                                                }
                                            }
                                        }
                                    this.hostname.length > 255
                                        ? (this.hostname = '')
                                        : (this.hostname = this.hostname.toLowerCase()),
                                        M ||
                                            (this.hostname = r.toASCII(
                                                this.hostname
                                            ));
                                    var F = this.port ? ':' + this.port : '',
                                        j = this.hostname || '';
                                    (this.host = j + F),
                                        (this.href += this.host),
                                        M &&
                                            ((this.hostname = this.hostname.substr(
                                                1,
                                                this.hostname.length - 2
                                            )),
                                            '/' !== w[0] && (w = '/' + w));
                                }
                                if (!g[k])
                                    for (T = 0, L = c.length; T < L; T++) {
                                        var H = c[T];
                                        if (-1 !== w.indexOf(H)) {
                                            var G = encodeURIComponent(H);
                                            G === H && (G = escape(H)),
                                                (w = w.split(H).join(G));
                                        }
                                    }
                                var q = w.indexOf('#');
                                -1 !== q &&
                                    ((this.hash = w.substr(q)),
                                    (w = w.slice(0, q)));
                                var W = w.indexOf('?');
                                if (
                                    (-1 !== W
                                        ? ((this.search = w.substr(W)),
                                          (this.query = w.substr(W + 1)),
                                          e &&
                                              (this.query = y.parse(
                                                  this.query
                                              )),
                                          (w = w.slice(0, W)))
                                        : e &&
                                          ((this.search = ''),
                                          (this.query = {})),
                                    w && (this.pathname = w),
                                    v[k] &&
                                        this.hostname &&
                                        !this.pathname &&
                                        (this.pathname = '/'),
                                    this.pathname || this.search)
                                ) {
                                    F = this.pathname || '';
                                    var Z = this.search || '';
                                    this.path = F + Z;
                                }
                                return (this.href = this.format()), this;
                            }),
                                (o.prototype.format = function() {
                                    var t = this.auth || '';
                                    t &&
                                        ((t = (t = encodeURIComponent(
                                            t
                                        )).replace(/%3A/i, ':')),
                                        (t += '@'));
                                    var e = this.protocol || '',
                                        i = this.pathname || '',
                                        r = this.hash || '',
                                        a = !1,
                                        o = '';
                                    this.host
                                        ? (a = t + this.host)
                                        : this.hostname &&
                                          ((a =
                                              t +
                                              (-1 === this.hostname.indexOf(':')
                                                  ? this.hostname
                                                  : '[' + this.hostname + ']')),
                                          this.port && (a += ':' + this.port)),
                                        this.query &&
                                            n.isObject(this.query) &&
                                            Object.keys(this.query).length &&
                                            (o = y.stringify(this.query));
                                    var s = this.search || (o && '?' + o) || '';
                                    return (
                                        e && ':' !== e.substr(-1) && (e += ':'),
                                        this.slashes ||
                                        ((!e || v[e]) && !1 !== a)
                                            ? ((a = '//' + (a || '')),
                                              i &&
                                                  '/' !== i.charAt(0) &&
                                                  (i = '/' + i))
                                            : a || (a = ''),
                                        r &&
                                            '#' !== r.charAt(0) &&
                                            (r = '#' + r),
                                        s &&
                                            '?' !== s.charAt(0) &&
                                            (s = '?' + s),
                                        e +
                                            a +
                                            (i = i.replace(/[?#]/g, function(
                                                t
                                            ) {
                                                return encodeURIComponent(t);
                                            })) +
                                            (s = s.replace('#', '%23')) +
                                            r
                                    );
                                }),
                                (o.prototype.resolve = function(t) {
                                    return this.resolveObject(
                                        w(t, !1, !0)
                                    ).format();
                                }),
                                (o.prototype.resolveObject = function(t) {
                                    if (n.isString(t)) {
                                        var e = new o();
                                        e.parse(t, !1, !0), (t = e);
                                    }
                                    for (
                                        var i = new o(),
                                            r = Object.keys(this),
                                            a = 0;
                                        a < r.length;
                                        a++
                                    ) {
                                        var s = r[a];
                                        i[s] = this[s];
                                    }
                                    if (((i.hash = t.hash), '' === t.href))
                                        return (i.href = i.format()), i;
                                    if (t.slashes && !t.protocol) {
                                        for (
                                            var l = Object.keys(t), f = 0;
                                            f < l.length;
                                            f++
                                        ) {
                                            var h = l[f];
                                            'protocol' !== h && (i[h] = t[h]);
                                        }
                                        return (
                                            v[i.protocol] &&
                                                i.hostname &&
                                                !i.pathname &&
                                                (i.path = i.pathname = '/'),
                                            (i.href = i.format()),
                                            i
                                        );
                                    }
                                    if (
                                        t.protocol &&
                                        t.protocol !== i.protocol
                                    ) {
                                        if (!v[t.protocol]) {
                                            for (
                                                var c = Object.keys(t), u = 0;
                                                u < c.length;
                                                u++
                                            ) {
                                                var p = c[u];
                                                i[p] = t[p];
                                            }
                                            return (i.href = i.format()), i;
                                        }
                                        if (
                                            ((i.protocol = t.protocol),
                                            t.host || b[t.protocol])
                                        )
                                            i.pathname = t.pathname;
                                        else {
                                            for (
                                                var d = (
                                                    t.pathname || ''
                                                ).split('/');
                                                d.length &&
                                                !(t.host = d.shift());

                                            );
                                            t.host || (t.host = ''),
                                                t.hostname || (t.hostname = ''),
                                                '' !== d[0] && d.unshift(''),
                                                d.length < 2 && d.unshift(''),
                                                (i.pathname = d.join('/'));
                                        }
                                        if (
                                            ((i.search = t.search),
                                            (i.query = t.query),
                                            (i.host = t.host || ''),
                                            (i.auth = t.auth),
                                            (i.hostname = t.hostname || t.host),
                                            (i.port = t.port),
                                            i.pathname || i.search)
                                        ) {
                                            var m = i.pathname || '',
                                                g = i.search || '';
                                            i.path = m + g;
                                        }
                                        return (
                                            (i.slashes =
                                                i.slashes || t.slashes),
                                            (i.href = i.format()),
                                            i
                                        );
                                    }
                                    var y =
                                            i.pathname &&
                                            '/' === i.pathname.charAt(0),
                                        w =
                                            t.host ||
                                            (t.pathname &&
                                                '/' === t.pathname.charAt(0)),
                                        _ = w || y || (i.host && t.pathname),
                                        x = _,
                                        k =
                                            (i.pathname &&
                                                i.pathname.split('/')) ||
                                            [],
                                        E = ((d =
                                            (t.pathname &&
                                                t.pathname.split('/')) ||
                                            []),
                                        i.protocol && !v[i.protocol]);
                                    if (
                                        (E &&
                                            ((i.hostname = ''),
                                            (i.port = null),
                                            i.host &&
                                                ('' === k[0]
                                                    ? (k[0] = i.host)
                                                    : k.unshift(i.host)),
                                            (i.host = ''),
                                            t.protocol &&
                                                ((t.hostname = null),
                                                (t.port = null),
                                                t.host &&
                                                    ('' === d[0]
                                                        ? (d[0] = t.host)
                                                        : d.unshift(t.host)),
                                                (t.host = null)),
                                            (_ =
                                                _ &&
                                                ('' === d[0] || '' === k[0]))),
                                        w)
                                    )
                                        (i.host =
                                            t.host || '' === t.host
                                                ? t.host
                                                : i.host),
                                            (i.hostname =
                                                t.hostname || '' === t.hostname
                                                    ? t.hostname
                                                    : i.hostname),
                                            (i.search = t.search),
                                            (i.query = t.query),
                                            (k = d);
                                    else if (d.length)
                                        k || (k = []),
                                            k.pop(),
                                            (k = k.concat(d)),
                                            (i.search = t.search),
                                            (i.query = t.query);
                                    else if (!n.isNullOrUndefined(t.search)) {
                                        if (E)
                                            (i.hostname = i.host = k.shift()),
                                                (C =
                                                    !!(
                                                        i.host &&
                                                        i.host.indexOf('@') > 0
                                                    ) && i.host.split('@')) &&
                                                    ((i.auth = C.shift()),
                                                    (i.host = i.hostname = C.shift()));
                                        return (
                                            (i.search = t.search),
                                            (i.query = t.query),
                                            (n.isNull(i.pathname) &&
                                                n.isNull(i.search)) ||
                                                (i.path =
                                                    (i.pathname
                                                        ? i.pathname
                                                        : '') +
                                                    (i.search ? i.search : '')),
                                            (i.href = i.format()),
                                            i
                                        );
                                    }
                                    if (!k.length)
                                        return (
                                            (i.pathname = null),
                                            i.search
                                                ? (i.path = '/' + i.search)
                                                : (i.path = null),
                                            (i.href = i.format()),
                                            i
                                        );
                                    for (
                                        var I = k.slice(-1)[0],
                                            S =
                                                ((i.host ||
                                                    t.host ||
                                                    k.length > 1) &&
                                                    ('.' === I ||
                                                        '..' === I)) ||
                                                '' === I,
                                            A = 0,
                                            T = k.length;
                                        T >= 0;
                                        T--
                                    )
                                        '.' === (I = k[T])
                                            ? k.splice(T, 1)
                                            : '..' === I
                                                ? (k.splice(T, 1), A++)
                                                : A && (k.splice(T, 1), A--);
                                    if (!_ && !x)
                                        for (; A--; A) k.unshift('..');
                                    !_ ||
                                        '' === k[0] ||
                                        (k[0] && '/' === k[0].charAt(0)) ||
                                        k.unshift(''),
                                        S &&
                                            '/' !== k.join('/').substr(-1) &&
                                            k.push('');
                                    var C,
                                        M =
                                            '' === k[0] ||
                                            (k[0] && '/' === k[0].charAt(0));
                                    E &&
                                        ((i.hostname = i.host = M
                                            ? ''
                                            : k.length
                                                ? k.shift()
                                                : ''),
                                        (C =
                                            !!(
                                                i.host &&
                                                i.host.indexOf('@') > 0
                                            ) && i.host.split('@')) &&
                                            ((i.auth = C.shift()),
                                            (i.host = i.hostname = C.shift())));
                                    return (
                                        (_ = _ || (i.host && k.length)) &&
                                            !M &&
                                            k.unshift(''),
                                        k.length
                                            ? (i.pathname = k.join('/'))
                                            : ((i.pathname = null),
                                              (i.path = null)),
                                        (n.isNull(i.pathname) &&
                                            n.isNull(i.search)) ||
                                            (i.path =
                                                (i.pathname ? i.pathname : '') +
                                                (i.search ? i.search : '')),
                                        (i.auth = t.auth || i.auth),
                                        (i.slashes = i.slashes || t.slashes),
                                        (i.href = i.format()),
                                        i
                                    );
                                }),
                                (o.prototype.parseHost = function() {
                                    var t = this.host,
                                        e = l.exec(t);
                                    e &&
                                        (':' !== (e = e[0]) &&
                                            (this.port = e.substr(1)),
                                        (t = t.substr(0, t.length - e.length))),
                                        t && (this.hostname = t);
                                });
                        },
                        { './util': 130, punycode: 100, querystring: 103 }
                    ],
                    130: [
                        function(t, e, i) {
                            e.exports = {
                                isString: function(t) {
                                    return 'string' == typeof t;
                                },
                                isObject: function(t) {
                                    return (
                                        'object' ===
                                            (void 0 === t
                                                ? 'undefined'
                                                : a(t)) && null !== t
                                    );
                                },
                                isNull: function(t) {
                                    return null === t;
                                },
                                isNullOrUndefined: function(t) {
                                    return null == t;
                                }
                            };
                        },
                        {}
                    ],
                    131: [
                        function(t, e, i) {
                            (function(i) {
                                !(function() {
                                    var r,
                                        n,
                                        o = {};
                                    function s() {
                                        (void 0 !== i &&
                                            'development' != i.env.NODE_ENV) ||
                                            console.log.apply(
                                                console,
                                                arguments
                                            );
                                    }
                                    'object' ==
                                    (void 0 === e ? 'undefined' : a(e))
                                        ? (e.exports = o)
                                        : (self.UTIF = o),
                                        'function' == typeof t
                                            ? ((r = t('pako')),
                                              (n = t('jpgjs').JpegDecoder))
                                            : ((r = self.pako),
                                              (n = self.JpegDecoder)),
                                        (function(t, e, i) {
                                            (t.encodeImage = function(
                                                e,
                                                i,
                                                r,
                                                n
                                            ) {
                                                var a = {
                                                    t256: [i],
                                                    t257: [r],
                                                    t258: [8, 8, 8, 8],
                                                    t259: [1],
                                                    t262: [2],
                                                    t273: [1e3],
                                                    t277: [4],
                                                    t278: [r],
                                                    t279: [i * r * 4],
                                                    t282: [1],
                                                    t283: [1],
                                                    t284: [1],
                                                    t286: [0],
                                                    t287: [0],
                                                    t296: [1],
                                                    t305: [
                                                        'Photopea (UTIF.js)'
                                                    ],
                                                    t338: [1]
                                                };
                                                if (n)
                                                    for (var o in n)
                                                        a[o] = n[o];
                                                var s = new Uint8Array(
                                                        t.encode([a])
                                                    ),
                                                    l = new Uint8Array(e),
                                                    f = new Uint8Array(
                                                        1e3 + i * r * 4
                                                    );
                                                for (o = 0; o < s.length; o++)
                                                    f[o] = s[o];
                                                for (o = 0; o < l.length; o++)
                                                    f[1e3 + o] = l[o];
                                                return f.buffer;
                                            }),
                                                (t.encode = function(e) {
                                                    var i = new Uint8Array(2e4),
                                                        r = 4,
                                                        n = t._binBE;
                                                    (i[0] = 77),
                                                        (i[1] = 77),
                                                        (i[3] = 42);
                                                    var a = 8;
                                                    n.writeUint(i, r, a),
                                                        (r += 4);
                                                    for (
                                                        var o = 0;
                                                        o < e.length;
                                                        o++
                                                    ) {
                                                        var s = t._writeIFD(
                                                            n,
                                                            i,
                                                            a,
                                                            e[o]
                                                        );
                                                        (a = s[1]),
                                                            o < e.length - 1 &&
                                                                n.writeUint(
                                                                    i,
                                                                    s[0],
                                                                    a
                                                                );
                                                    }
                                                    return i.slice(0, a).buffer;
                                                }),
                                                (t.decode = function(e) {
                                                    t.decode._decodeG3.allow2D = null;
                                                    var i = new Uint8Array(e),
                                                        r = 0,
                                                        n = t._binBE.readASCII(
                                                            i,
                                                            r,
                                                            2
                                                        );
                                                    r += 2;
                                                    var a =
                                                        'II' == n
                                                            ? t._binLE
                                                            : t._binBE;
                                                    a.readUshort(i, r);
                                                    r += 2;
                                                    var o = a.readUint(i, r);
                                                    r += 4;
                                                    for (var s = []; ; ) {
                                                        var l = t._readIFD(
                                                            a,
                                                            i,
                                                            o,
                                                            s
                                                        );
                                                        if (
                                                            0 ==
                                                            (o = a.readUint(
                                                                i,
                                                                l
                                                            ))
                                                        )
                                                            break;
                                                    }
                                                    return s;
                                                }),
                                                (t.decodeImages = function(
                                                    e,
                                                    i
                                                ) {
                                                    for (
                                                        var r = new Uint8Array(
                                                                e
                                                            ),
                                                            n = t._binBE.readASCII(
                                                                r,
                                                                0,
                                                                2
                                                            ),
                                                            a = 0;
                                                        a < i.length;
                                                        a++
                                                    ) {
                                                        var o = i[a];
                                                        if (null != o.t256) {
                                                            (o.isLE =
                                                                'II' == n),
                                                                (o.width =
                                                                    o.t256[0]),
                                                                (o.height =
                                                                    o.t257[0]);
                                                            var l = o.t259
                                                                    ? o.t259[0]
                                                                    : 1,
                                                                f = o.t266
                                                                    ? o.t266[0]
                                                                    : 1;
                                                            o.t284 &&
                                                                2 ==
                                                                    o.t284[0] &&
                                                                s(
                                                                    'PlanarConfiguration 2 should not be used!'
                                                                );
                                                            var h =
                                                                    (o.t258
                                                                        ? Math.min(
                                                                              32,
                                                                              o
                                                                                  .t258[0]
                                                                          )
                                                                        : 1) *
                                                                    (o.t277
                                                                        ? o
                                                                              .t277[0]
                                                                        : 1),
                                                                c =
                                                                    8 *
                                                                    Math.ceil(
                                                                        (o.width *
                                                                            h) /
                                                                            8
                                                                    ),
                                                                u = o.t273;
                                                            null == u &&
                                                                (u = o.t324);
                                                            var p = o.t279;
                                                            1 == l &&
                                                                1 == u.length &&
                                                                (p = [
                                                                    o.height *
                                                                        (c >>>
                                                                            3)
                                                                ]),
                                                                null == p &&
                                                                    (p =
                                                                        o.t325);
                                                            var d = new Uint8Array(
                                                                    o.height *
                                                                        (c >>>
                                                                            3)
                                                                ),
                                                                m = 0;
                                                            if (
                                                                null != o.t322
                                                            ) {
                                                                for (
                                                                    var g =
                                                                            o
                                                                                .t322[0],
                                                                        b =
                                                                            o
                                                                                .t323[0],
                                                                        v = Math.floor(
                                                                            (o.width +
                                                                                g -
                                                                                1) /
                                                                                g
                                                                        ),
                                                                        y = Math.floor(
                                                                            (o.height +
                                                                                b -
                                                                                1) /
                                                                                b
                                                                        ),
                                                                        w = new Uint8Array(
                                                                            0 |
                                                                                Math.ceil(
                                                                                    (g *
                                                                                        b *
                                                                                        h) /
                                                                                        8
                                                                                )
                                                                        ),
                                                                        _ = 0;
                                                                    _ < y;
                                                                    _++
                                                                )
                                                                    for (
                                                                        var x = 0;
                                                                        x < v;
                                                                        x++
                                                                    ) {
                                                                        for (
                                                                            var k =
                                                                                    _ *
                                                                                        v +
                                                                                    x,
                                                                                E = 0;
                                                                            E <
                                                                            w.length;
                                                                            E++
                                                                        )
                                                                            w[
                                                                                E
                                                                            ] = 0;
                                                                        t.decode._decompress(
                                                                            o,
                                                                            r,
                                                                            u[
                                                                                k
                                                                            ],
                                                                            p[
                                                                                k
                                                                            ],
                                                                            l,
                                                                            w,
                                                                            0,
                                                                            f
                                                                        ),
                                                                            6 ==
                                                                            l
                                                                                ? (d = w)
                                                                                : t._copyTile(
                                                                                      w,
                                                                                      0 |
                                                                                          Math.ceil(
                                                                                              (g *
                                                                                                  h) /
                                                                                                  8
                                                                                          ),
                                                                                      b,
                                                                                      d,
                                                                                      0 |
                                                                                          Math.ceil(
                                                                                              (o.width *
                                                                                                  h) /
                                                                                                  8
                                                                                          ),
                                                                                      o.height,
                                                                                      0 |
                                                                                          Math.ceil(
                                                                                              (x *
                                                                                                  g *
                                                                                                  h) /
                                                                                                  8
                                                                                          ),
                                                                                      _ *
                                                                                          b
                                                                                  );
                                                                    }
                                                                m =
                                                                    8 *
                                                                    d.length;
                                                            } else {
                                                                var I = o.t278
                                                                    ? o.t278[0]
                                                                    : o.height;
                                                                I = Math.min(
                                                                    I,
                                                                    o.height
                                                                );
                                                                for (
                                                                    k = 0;
                                                                    k <
                                                                    u.length;
                                                                    k++
                                                                )
                                                                    t.decode._decompress(
                                                                        o,
                                                                        r,
                                                                        u[k],
                                                                        p[k],
                                                                        l,
                                                                        d,
                                                                        0 |
                                                                            Math.ceil(
                                                                                m /
                                                                                    8
                                                                            ),
                                                                        f
                                                                    ),
                                                                        (m +=
                                                                            c *
                                                                            I);
                                                                m = Math.min(
                                                                    m,
                                                                    8 * d.length
                                                                );
                                                            }
                                                            o.data = new Uint8Array(
                                                                d.buffer,
                                                                0,
                                                                0 |
                                                                    Math.ceil(
                                                                        m / 8
                                                                    )
                                                            );
                                                        }
                                                    }
                                                }),
                                                (t.decode._decompress = function(
                                                    i,
                                                    r,
                                                    n,
                                                    a,
                                                    o,
                                                    l,
                                                    f,
                                                    h
                                                ) {
                                                    if (1 == o)
                                                        for (
                                                            var c = 0;
                                                            c < a;
                                                            c++
                                                        )
                                                            l[f + c] = r[n + c];
                                                    else if (3 == o)
                                                        t.decode._decodeG3(
                                                            r,
                                                            n,
                                                            a,
                                                            l,
                                                            f,
                                                            i.width,
                                                            h
                                                        );
                                                    else if (4 == o)
                                                        t.decode._decodeG4(
                                                            r,
                                                            n,
                                                            a,
                                                            l,
                                                            f,
                                                            i.width,
                                                            h
                                                        );
                                                    else if (5 == o)
                                                        t.decode._decodeLZW(
                                                            r,
                                                            n,
                                                            l,
                                                            f
                                                        );
                                                    else if (6 == o)
                                                        t.decode._decodeOldJPEG(
                                                            i,
                                                            r,
                                                            n,
                                                            a,
                                                            l,
                                                            f
                                                        );
                                                    else if (7 == o)
                                                        t.decode._decodeNewJPEG(
                                                            i,
                                                            r,
                                                            n,
                                                            a,
                                                            l,
                                                            f
                                                        );
                                                    else if (8 == o)
                                                        for (
                                                            var u = new Uint8Array(
                                                                    r.buffer,
                                                                    n,
                                                                    a
                                                                ),
                                                                p = e.inflate(
                                                                    u
                                                                ),
                                                                d = 0;
                                                            d < p.length;
                                                            d++
                                                        )
                                                            l[f + d] = p[d];
                                                    else
                                                        32773 == o
                                                            ? t.decode._decodePackBits(
                                                                  r,
                                                                  n,
                                                                  a,
                                                                  l,
                                                                  f
                                                              )
                                                            : 32809 == o
                                                                ? t.decode._decodeThunder(
                                                                      r,
                                                                      n,
                                                                      a,
                                                                      l,
                                                                      f
                                                                  )
                                                                : s(
                                                                      'Unknown compression',
                                                                      o
                                                                  );
                                                    if (
                                                        i.t317 &&
                                                        2 == i.t317[0]
                                                    )
                                                        for (
                                                            var m = i.t277
                                                                    ? i.t277[0]
                                                                    : 1,
                                                                g = i.t278
                                                                    ? i.t278[0]
                                                                    : i.height,
                                                                b = i.width * m,
                                                                v = 0;
                                                            v < g;
                                                            v++
                                                        ) {
                                                            var y = f + v * b;
                                                            if (3 == m)
                                                                for (
                                                                    c = 3;
                                                                    c < b;
                                                                    c += 3
                                                                )
                                                                    (l[y + c] =
                                                                        (l[
                                                                            y +
                                                                                c
                                                                        ] +
                                                                            l[
                                                                                y +
                                                                                    c -
                                                                                    3
                                                                            ]) &
                                                                        255),
                                                                        (l[
                                                                            y +
                                                                                c +
                                                                                1
                                                                        ] =
                                                                            (l[
                                                                                y +
                                                                                    c +
                                                                                    1
                                                                            ] +
                                                                                l[
                                                                                    y +
                                                                                        c -
                                                                                        2
                                                                                ]) &
                                                                            255),
                                                                        (l[
                                                                            y +
                                                                                c +
                                                                                2
                                                                        ] =
                                                                            (l[
                                                                                y +
                                                                                    c +
                                                                                    2
                                                                            ] +
                                                                                l[
                                                                                    y +
                                                                                        c -
                                                                                        1
                                                                                ]) &
                                                                            255);
                                                            else
                                                                for (
                                                                    c = m;
                                                                    c < b;
                                                                    c++
                                                                )
                                                                    l[y + c] =
                                                                        (l[
                                                                            y +
                                                                                c
                                                                        ] +
                                                                            l[
                                                                                y +
                                                                                    c -
                                                                                    m
                                                                            ]) &
                                                                        255;
                                                        }
                                                }),
                                                (t.decode._decodeNikon = function(
                                                    t,
                                                    e,
                                                    i,
                                                    r,
                                                    n
                                                ) {
                                                    var a, o;
                                                    s(t.slice(e, e + 100)),
                                                        (a = t[e]),
                                                        (o = t[++e]),
                                                        e++,
                                                        s(
                                                            a.toString(16),
                                                            o.toString(16),
                                                            i
                                                        );
                                                }),
                                                (t.decode._decodeNewJPEG = function(
                                                    t,
                                                    e,
                                                    r,
                                                    n,
                                                    a,
                                                    o
                                                ) {
                                                    if (void 0 !== i) {
                                                        var l = t.t347,
                                                            f = l
                                                                ? l.length
                                                                : 0,
                                                            h = new Uint8Array(
                                                                f + n
                                                            );
                                                        if (l) {
                                                            for (
                                                                var c = 0,
                                                                    u = 0;
                                                                u < f - 1 &&
                                                                (255 != l[u] ||
                                                                    217 !=
                                                                        l[
                                                                            u +
                                                                                1
                                                                        ]);
                                                                u++
                                                            )
                                                                h[c++] = l[u];
                                                            var p = e[r],
                                                                d = e[r + 1];
                                                            (255 == p &&
                                                                216 == d) ||
                                                                ((h[c++] = p),
                                                                (h[c++] = d));
                                                            for (
                                                                u = 2;
                                                                u < n;
                                                                u++
                                                            )
                                                                h[c++] =
                                                                    e[r + u];
                                                        } else
                                                            for (
                                                                u = 0;
                                                                u < n;
                                                                u++
                                                            )
                                                                h[u] = e[r + u];
                                                        if (32803 == t.t262) {
                                                            var m = t.t258[0],
                                                                g = new LosslessJpegDecoder().decode(
                                                                    h
                                                                ),
                                                                b = g.length;
                                                            if (16 == m)
                                                                for (
                                                                    u = 0;
                                                                    u < b;
                                                                    u++
                                                                )
                                                                    (a[o++] =
                                                                        255 &
                                                                        g[u]),
                                                                        (a[
                                                                            o++
                                                                        ] =
                                                                            g[
                                                                                u
                                                                            ] >>>
                                                                            8);
                                                            else {
                                                                if (12 != m)
                                                                    throw 'unsupported bit depth ' +
                                                                        m;
                                                                for (
                                                                    u = 0;
                                                                    u < b;
                                                                    u += 2
                                                                )
                                                                    (a[o++] =
                                                                        g[u] >>>
                                                                        4),
                                                                        (a[
                                                                            o++
                                                                        ] =
                                                                            255 &
                                                                            ((g[
                                                                                u
                                                                            ] <<
                                                                                4) |
                                                                                (g[
                                                                                    u +
                                                                                        1
                                                                                ] >>>
                                                                                    8))),
                                                                        (a[
                                                                            o++
                                                                        ] =
                                                                            255 &
                                                                            g[
                                                                                u +
                                                                                    1
                                                                            ]);
                                                            }
                                                        } else {
                                                            var v = new i();
                                                            v.parse(h);
                                                            var y = v.getData(
                                                                v.width,
                                                                v.height
                                                            );
                                                            for (
                                                                u = 0;
                                                                u < y.length;
                                                                u++
                                                            )
                                                                a[o + u] = y[u];
                                                        }
                                                        6 == t.t262[0] &&
                                                            (t.t262[0] = 2);
                                                    } else
                                                        s(
                                                            'jpg.js required for handling JPEG compressed images'
                                                        );
                                                }),
                                                (t.decode._decodeOldJPEGInit = function(
                                                    t,
                                                    e,
                                                    i,
                                                    r
                                                ) {
                                                    var n,
                                                        a,
                                                        o,
                                                        l,
                                                        f,
                                                        h = 0,
                                                        c = 0,
                                                        u = !1,
                                                        p = t.t513,
                                                        d = p ? p[0] : 0,
                                                        m = t.t514,
                                                        g = m ? m[0] : 0,
                                                        b =
                                                            t.t324 ||
                                                            t.t273 ||
                                                            p,
                                                        v = t.t530,
                                                        y = 0,
                                                        w = 0,
                                                        _ = t.t277
                                                            ? t.t277[0]
                                                            : 1,
                                                        x = t.t515;
                                                    if (
                                                        (b &&
                                                            ((c = b[0]),
                                                            (u = b.length > 1)),
                                                        !u)
                                                    ) {
                                                        if (
                                                            255 == e[i] &&
                                                            216 == e[i + 1]
                                                        )
                                                            return {
                                                                jpegOffset: i
                                                            };
                                                        if (
                                                            null != p &&
                                                            (255 == e[i + d] &&
                                                            216 == e[i + d + 1]
                                                                ? (h = i + d)
                                                                : s(
                                                                      'JPEGInterchangeFormat does not point to SOI'
                                                                  ),
                                                            null == m
                                                                ? s(
                                                                      'JPEGInterchangeFormatLength field is missing'
                                                                  )
                                                                : (d >= c ||
                                                                      d + g <=
                                                                          c) &&
                                                                  s(
                                                                      'JPEGInterchangeFormatLength field value is invalid'
                                                                  ),
                                                            null != h)
                                                        )
                                                            return {
                                                                jpegOffset: h
                                                            };
                                                    }
                                                    if (
                                                        (null != v &&
                                                            ((y = v[0]),
                                                            (w = v[1])),
                                                        null != p && null != m)
                                                    )
                                                        if (
                                                            g >= 2 &&
                                                            d + g <= c
                                                        ) {
                                                            for (
                                                                n =
                                                                    255 ==
                                                                        e[
                                                                            i +
                                                                                d +
                                                                                g -
                                                                                2
                                                                        ] &&
                                                                    216 ==
                                                                        e[
                                                                            i +
                                                                                d +
                                                                                g -
                                                                                1
                                                                        ]
                                                                        ? new Uint8Array(
                                                                              g -
                                                                                  2
                                                                          )
                                                                        : new Uint8Array(
                                                                              g
                                                                          ),
                                                                    o = 0;
                                                                o < n.length;
                                                                o++
                                                            )
                                                                n[o] =
                                                                    e[
                                                                        i +
                                                                            d +
                                                                            o
                                                                    ];
                                                            s(
                                                                'Incorrect JPEG interchange format: using JPEGInterchangeFormat offset to derive tables'
                                                            );
                                                        } else
                                                            s(
                                                                'JPEGInterchangeFormat+JPEGInterchangeFormatLength > offset to first strip or tile'
                                                            );
                                                    if (null == n) {
                                                        var k = 0,
                                                            E = [];
                                                        (E[k++] = 255),
                                                            (E[k++] = 216);
                                                        var I = t.t519;
                                                        if (null == I)
                                                            throw 'JPEGQTables tag is missing';
                                                        for (
                                                            o = 0;
                                                            o < I.length;
                                                            o++
                                                        )
                                                            for (
                                                                E[k++] = 255,
                                                                    E[
                                                                        k++
                                                                    ] = 219,
                                                                    E[k++] = 0,
                                                                    E[k++] = 67,
                                                                    E[k++] = o,
                                                                    l = 0;
                                                                l < 64;
                                                                l++
                                                            )
                                                                E[k++] =
                                                                    e[
                                                                        i +
                                                                            I[
                                                                                o
                                                                            ] +
                                                                            l
                                                                    ];
                                                        for (
                                                            f = 0;
                                                            f < 2;
                                                            f++
                                                        ) {
                                                            var S =
                                                                t[
                                                                    0 == f
                                                                        ? 't520'
                                                                        : 't521'
                                                                ];
                                                            if (null == S)
                                                                throw (0 == f
                                                                    ? 'JPEGDCTables'
                                                                    : 'JPEGACTables') +
                                                                    ' tag is missing';
                                                            for (
                                                                o = 0;
                                                                o < S.length;
                                                                o++
                                                            ) {
                                                                (E[k++] = 255),
                                                                    (E[
                                                                        k++
                                                                    ] = 196);
                                                                var A = 19;
                                                                for (
                                                                    l = 0;
                                                                    l < 16;
                                                                    l++
                                                                )
                                                                    A +=
                                                                        e[
                                                                            i +
                                                                                S[
                                                                                    o
                                                                                ] +
                                                                                l
                                                                        ];
                                                                for (
                                                                    E[k++] =
                                                                        A >>> 8,
                                                                        E[k++] =
                                                                            255 &
                                                                            A,
                                                                        E[k++] =
                                                                            o |
                                                                            (f <<
                                                                                4),
                                                                        l = 0;
                                                                    l < 16;
                                                                    l++
                                                                )
                                                                    E[k++] =
                                                                        e[
                                                                            i +
                                                                                S[
                                                                                    o
                                                                                ] +
                                                                                l
                                                                        ];
                                                                for (
                                                                    l = 0;
                                                                    l < A;
                                                                    l++
                                                                )
                                                                    E[k++] =
                                                                        e[
                                                                            i +
                                                                                S[
                                                                                    o
                                                                                ] +
                                                                                16 +
                                                                                l
                                                                        ];
                                                            }
                                                        }
                                                        if (
                                                            ((E[k++] = 255),
                                                            (E[k++] = 192),
                                                            (E[k++] = 0),
                                                            (E[k++] =
                                                                8 + 3 * _),
                                                            (E[k++] = 8),
                                                            (E[k++] =
                                                                (t.height >>>
                                                                    8) &
                                                                255),
                                                            (E[k++] =
                                                                255 & t.height),
                                                            (E[k++] =
                                                                (t.width >>>
                                                                    8) &
                                                                255),
                                                            (E[k++] =
                                                                255 & t.width),
                                                            (E[k++] = _),
                                                            1 == _)
                                                        )
                                                            (E[k++] = 1),
                                                                (E[k++] = 17),
                                                                (E[k++] = 0);
                                                        else
                                                            for (
                                                                o = 0;
                                                                o < 3;
                                                                o++
                                                            )
                                                                (E[k++] =
                                                                    o + 1),
                                                                    (E[k++] =
                                                                        0 != o
                                                                            ? 17
                                                                            : ((15 &
                                                                                  y) <<
                                                                                  4) |
                                                                              (15 &
                                                                                  w)),
                                                                    (E[
                                                                        k++
                                                                    ] = o);
                                                        null != x &&
                                                            0 != x[0] &&
                                                            ((E[k++] = 255),
                                                            (E[k++] = 221),
                                                            (E[k++] = 0),
                                                            (E[k++] = 4),
                                                            (E[k++] =
                                                                (x[0] >>> 8) &
                                                                255),
                                                            (E[k++] =
                                                                255 & x[0])),
                                                            (n = new Uint8Array(
                                                                E
                                                            ));
                                                    }
                                                    var T = -1;
                                                    for (
                                                        o = 0;
                                                        o < n.length - 1;

                                                    ) {
                                                        if (
                                                            255 == n[o] &&
                                                            192 == n[o + 1]
                                                        ) {
                                                            T = o;
                                                            break;
                                                        }
                                                        o++;
                                                    }
                                                    if (-1 == T) {
                                                        var C = new Uint8Array(
                                                            n.length +
                                                                10 +
                                                                3 * _
                                                        );
                                                        C.set(n);
                                                        var M = n.length;
                                                        if (
                                                            ((T = n.length),
                                                            ((n = C)[
                                                                M++
                                                            ] = 255),
                                                            (n[M++] = 192),
                                                            (n[M++] = 0),
                                                            (n[M++] =
                                                                8 + 3 * _),
                                                            (n[M++] = 8),
                                                            (n[M++] =
                                                                (t.height >>>
                                                                    8) &
                                                                255),
                                                            (n[M++] =
                                                                255 & t.height),
                                                            (n[M++] =
                                                                (t.width >>>
                                                                    8) &
                                                                255),
                                                            (n[M++] =
                                                                255 & t.width),
                                                            (n[M++] = _),
                                                            1 == _)
                                                        )
                                                            (n[M++] = 1),
                                                                (n[M++] = 17),
                                                                (n[M++] = 0);
                                                        else
                                                            for (
                                                                o = 0;
                                                                o < 3;
                                                                o++
                                                            )
                                                                (n[M++] =
                                                                    o + 1),
                                                                    (n[M++] =
                                                                        0 != o
                                                                            ? 17
                                                                            : ((15 &
                                                                                  y) <<
                                                                                  4) |
                                                                              (15 &
                                                                                  w)),
                                                                    (n[
                                                                        M++
                                                                    ] = o);
                                                    }
                                                    if (
                                                        255 == e[c] &&
                                                        218 == e[c + 1]
                                                    ) {
                                                        var P =
                                                            (e[c + 2] << 8) |
                                                            e[c + 3];
                                                        for (
                                                            (a = new Uint8Array(
                                                                P + 2
                                                            ))[0] =
                                                                e[c],
                                                                a[1] = e[c + 1],
                                                                a[2] = e[c + 2],
                                                                a[3] = e[c + 3],
                                                                o = 0;
                                                            o < P - 2;
                                                            o++
                                                        )
                                                            a[o + 4] =
                                                                e[c + o + 4];
                                                    } else {
                                                        var L = 0;
                                                        if (
                                                            (((a = new Uint8Array(
                                                                8 + 2 * _
                                                            ))[L++] = 255),
                                                            (a[L++] = 218),
                                                            (a[L++] = 0),
                                                            (a[L++] =
                                                                6 + 2 * _),
                                                            (a[L++] = _),
                                                            1 == _)
                                                        )
                                                            (a[L++] = 1),
                                                                (a[L++] = 0);
                                                        else
                                                            for (
                                                                o = 0;
                                                                o < 3;
                                                                o++
                                                            )
                                                                (a[L++] =
                                                                    o + 1),
                                                                    (a[L++] =
                                                                        (o <<
                                                                            4) |
                                                                        o);
                                                        (a[L++] = 0),
                                                            (a[L++] = 63),
                                                            (a[L++] = 0);
                                                    }
                                                    return {
                                                        jpegOffset: i,
                                                        tables: n,
                                                        sosMarker: a,
                                                        sofPosition: T
                                                    };
                                                }),
                                                (t.decode._decodeOldJPEG = function(
                                                    e,
                                                    r,
                                                    n,
                                                    a,
                                                    o,
                                                    l
                                                ) {
                                                    if (void 0 !== i) {
                                                        var f,
                                                            h,
                                                            c,
                                                            u = t.decode._decodeOldJPEGInit(
                                                                e,
                                                                r,
                                                                n,
                                                                a
                                                            );
                                                        if (
                                                            null != u.jpegOffset
                                                        )
                                                            for (
                                                                f =
                                                                    n +
                                                                    a -
                                                                    u.jpegOffset,
                                                                    c = new Uint8Array(
                                                                        f
                                                                    ),
                                                                    m = 0;
                                                                m < f;
                                                                m++
                                                            )
                                                                c[m] =
                                                                    r[
                                                                        u.jpegOffset +
                                                                            m
                                                                    ];
                                                        else {
                                                            for (
                                                                h =
                                                                    u.tables
                                                                        .length,
                                                                    (c = new Uint8Array(
                                                                        h +
                                                                            u
                                                                                .sosMarker
                                                                                .length +
                                                                            a +
                                                                            2
                                                                    )).set(
                                                                        u.tables
                                                                    ),
                                                                    h,
                                                                    c[
                                                                        u.sofPosition +
                                                                            5
                                                                    ] =
                                                                        (e.height >>>
                                                                            8) &
                                                                        255,
                                                                    c[
                                                                        u.sofPosition +
                                                                            6
                                                                    ] =
                                                                        255 &
                                                                        e.height,
                                                                    c[
                                                                        u.sofPosition +
                                                                            7
                                                                    ] =
                                                                        (e.width >>>
                                                                            8) &
                                                                        255,
                                                                    c[
                                                                        u.sofPosition +
                                                                            8
                                                                    ] =
                                                                        255 &
                                                                        e.width,
                                                                    (255 ==
                                                                        r[n] &&
                                                                        r[
                                                                            n +
                                                                                1
                                                                        ] ==
                                                                            SOS) ||
                                                                        (c.set(
                                                                            u.sosMarker,
                                                                            bufoff
                                                                        ),
                                                                        (bufoff +=
                                                                            sosMarker.length)),
                                                                    m = 0;
                                                                m < a;
                                                                m++
                                                            )
                                                                c[bufoff++] =
                                                                    r[n + m];
                                                            (c[bufoff++] = 255),
                                                                (c[
                                                                    bufoff++
                                                                ] = EOI);
                                                        }
                                                        var p = new i();
                                                        p.parse(c);
                                                        for (
                                                            var d = p.getData(
                                                                    p.width,
                                                                    p.height
                                                                ),
                                                                m = 0;
                                                            m < d.length;
                                                            m++
                                                        )
                                                            o[l + m] = d[m];
                                                        6 == e.t262[0] &&
                                                            (e.t262[0] = 2);
                                                    } else
                                                        s(
                                                            'jpg.js required for handling JPEG compressed images'
                                                        );
                                                }),
                                                (t.decode._decodePackBits = function(
                                                    t,
                                                    e,
                                                    i,
                                                    r,
                                                    n
                                                ) {
                                                    for (
                                                        var a = new Int8Array(
                                                                t.buffer
                                                            ),
                                                            o = new Int8Array(
                                                                r.buffer
                                                            ),
                                                            s = e + i;
                                                        e < s;

                                                    ) {
                                                        var l = a[e];
                                                        if (
                                                            (e++,
                                                            l >= 0 && l < 128)
                                                        )
                                                            for (
                                                                var f = 0;
                                                                f < l + 1;
                                                                f++
                                                            )
                                                                (o[n] = a[e]),
                                                                    n++,
                                                                    e++;
                                                        if (
                                                            l >= -127 &&
                                                            l < 0
                                                        ) {
                                                            for (
                                                                f = 0;
                                                                f < 1 - l;
                                                                f++
                                                            )
                                                                (o[n] = a[e]),
                                                                    n++;
                                                            e++;
                                                        }
                                                    }
                                                }),
                                                (t.decode._decodeThunder = function(
                                                    t,
                                                    e,
                                                    i,
                                                    r,
                                                    n
                                                ) {
                                                    for (
                                                        var a = [0, 1, 0, -1],
                                                            o = [
                                                                0,
                                                                1,
                                                                2,
                                                                3,
                                                                0,
                                                                -3,
                                                                -2,
                                                                -1
                                                            ],
                                                            s = e + i,
                                                            l = 2 * n,
                                                            f = 0;
                                                        e < s;

                                                    ) {
                                                        var h = t[e],
                                                            c = h >>> 6,
                                                            u = 63 & h;
                                                        if (
                                                            (e++,
                                                            3 == c &&
                                                                ((f = 15 & u),
                                                                (r[l >>> 1] |=
                                                                    f <<
                                                                    (4 *
                                                                        ((1 -
                                                                            l) &
                                                                            1))),
                                                                l++),
                                                            0 == c)
                                                        )
                                                            for (
                                                                var p = 0;
                                                                p < u;
                                                                p++
                                                            )
                                                                (r[l >>> 1] |=
                                                                    f <<
                                                                    (4 *
                                                                        ((1 -
                                                                            l) &
                                                                            1))),
                                                                    l++;
                                                        if (2 == c)
                                                            for (
                                                                p = 0;
                                                                p < 2;
                                                                p++
                                                            ) {
                                                                4 !=
                                                                    (d =
                                                                        (u >>>
                                                                            (3 *
                                                                                (1 -
                                                                                    p))) &
                                                                        7) &&
                                                                    ((f +=
                                                                        o[d]),
                                                                    (r[
                                                                        l >>> 1
                                                                    ] |=
                                                                        f <<
                                                                        (4 *
                                                                            ((1 -
                                                                                l) &
                                                                                1))),
                                                                    l++);
                                                            }
                                                        if (1 == c)
                                                            for (
                                                                p = 0;
                                                                p < 3;
                                                                p++
                                                            ) {
                                                                var d;
                                                                2 !=
                                                                    (d =
                                                                        (u >>>
                                                                            (2 *
                                                                                (2 -
                                                                                    p))) &
                                                                        3) &&
                                                                    ((f +=
                                                                        a[d]),
                                                                    (r[
                                                                        l >>> 1
                                                                    ] |=
                                                                        f <<
                                                                        (4 *
                                                                            ((1 -
                                                                                l) &
                                                                                1))),
                                                                    l++);
                                                            }
                                                    }
                                                }),
                                                (t.decode._dmap = {
                                                    1: 0,
                                                    '011': 1,
                                                    '000011': 2,
                                                    '0000011': 3,
                                                    '010': -1,
                                                    '000010': -2,
                                                    '0000010': -3
                                                }),
                                                (t.decode._lens = (function() {
                                                    var t = function(
                                                            t,
                                                            e,
                                                            i,
                                                            r
                                                        ) {
                                                            for (
                                                                var n = 0;
                                                                n < e.length;
                                                                n++
                                                            )
                                                                t[e[n]] =
                                                                    i + n * r;
                                                        },
                                                        e =
                                                            '00110101,000111,0111,1000,1011,1100,1110,1111,10011,10100,00111,01000,001000,000011,110100,110101,101010,101011,0100111,0001100,0001000,0010111,0000011,0000100,0101000,0101011,0010011,0100100,0011000,00000010,00000011,00011010,00011011,00010010,00010011,00010100,00010101,00010110,00010111,00101000,00101001,00101010,00101011,00101100,00101101,00000100,00000101,00001010,00001011,01010010,01010011,01010100,01010101,00100100,00100101,01011000,01011001,01011010,01011011,01001010,01001011,00110010,00110011,00110100',
                                                        i =

                                                        r =
                                                            '11011,10010,010111,0110111,00110110,00110111,01100100,01100101,01101000,01100111,011001100,011001101,011010010,011010011,011010100,011010101,011010110,011010111,011011000,011011001,011011010,011011011,010011000,010011001,010011010,011000,010011011',
                                                        n =
                                                            '0000001111,000011001000,000011001001,000001011011,000000110011,000000110100,000000110101,0000001101100,0000001101101,0000001001010,0000001001011,0000001001100,0000001001101,0000001110010,0000001110011,0000001110100,0000001110101,0000001110110,0000001110111,0000001010010,0000001010011,0000001010100,0000001010101,0000001011010,0000001011011,0000001100100,0000001100101',
                                                        a =
                                                            '00000001000,00000001100,00000001101,000000010010,000000010011,000000010100,000000010101,000000010110,000000010111,000000011100,000000011101,000000011110,000000011111';
                                                    (e = e.split(',')),
                                                        (i = i.split(',')),
                                                        (r = r.split(',')),
                                                        (n = n.split(',')),
                                                        (a = a.split(','));
                                                    var o = {},
                                                        s = {};
                                                    return (
                                                        t(o, e, 0, 1),
                                                        t(o, r, 64, 64),
                                                        t(o, a, 1792, 64),
                                                        t(s, i, 0, 1),
                                                        t(s, n, 64, 64),
                                                        t(s, a, 1792, 64),
                                                        [o, s]
                                                    );
                                                })()),
                                                (t.decode._decodeG4 = function(
                                                    e,
                                                    i,
                                                    r,
                                                    n,
                                                    a,
                                                    o,
                                                    s
                                                ) {
                                                    for (
                                                        var l = t.decode,
                                                            f = i << 3,
                                                            h = 0,
                                                            c = '',
                                                            u = [],
                                                            p = [],
                                                            d = 0;
                                                        d < o;
                                                        d++
                                                    )
                                                        p.push(0);
                                                    p = l._makeDiff(p);
                                                    for (
                                                        var m = 0,
                                                            g = 0,
                                                            b = 0,
                                                            v = 0,
                                                            y = 0,
                                                            w = 0,
                                                            _ = '',
                                                            x = 0,
                                                            k =
                                                                8 *
                                                                Math.ceil(
                                                                    o / 8
                                                                );
                                                        f >>> 3 < i + r;

                                                    ) {
                                                        (b = l._findDiff(
                                                            p,
                                                            m +
                                                                (0 == m
                                                                    ? 0
                                                                    : 1),
                                                            1 - y
                                                        )),
                                                            (v = l._findDiff(
                                                                p,
                                                                b,
                                                                y
                                                            ));
                                                        var E = 0;
                                                        if (
                                                            (1 == s &&
                                                                (E =
                                                                    (e[
                                                                        f >>> 3
                                                                    ] >>>
                                                                        (7 -
                                                                            (7 &
                                                                                f))) &
                                                                    1),
                                                            2 == s &&
                                                                (E =
                                                                    (e[
                                                                        f >>> 3
                                                                    ] >>>
                                                                        (7 &
                                                                            f)) &
                                                                    1),
                                                            f++,
                                                            (c += E),
                                                            'H' == _)
                                                        ) {
                                                            if (
                                                                null !=
                                                                l._lens[y][c]
                                                            ) {
                                                                var I =
                                                                    l._lens[y][
                                                                        c
                                                                    ];
                                                                (c = ''),
                                                                    (h += I),
                                                                    I < 64 &&
                                                                        (l._addNtimes(
                                                                            u,
                                                                            h,
                                                                            y
                                                                        ),
                                                                        (m += h),
                                                                        (y =
                                                                            1 -
                                                                            y),
                                                                        (h = 0),
                                                                        0 ==
                                                                            --x &&
                                                                            (_ =
                                                                                ''));
                                                            }
                                                        } else
                                                            '0001' == c &&
                                                                ((c = ''),
                                                                l._addNtimes(
                                                                    u,
                                                                    v - m,
                                                                    y
                                                                ),
                                                                (m = v)),
                                                                '001' == c &&
                                                                    ((c = ''),
                                                                    (_ = 'H'),
                                                                    (x = 2)),
                                                                null !=
                                                                    l._dmap[
                                                                        c
                                                                    ] &&
                                                                    ((g =
                                                                        b +
                                                                        l._dmap[
                                                                            c
                                                                        ]),
                                                                    l._addNtimes(
                                                                        u,
                                                                        g - m,
                                                                        y
                                                                    ),
                                                                    (m = g),
                                                                    (c = ''),
                                                                    (y =
                                                                        1 - y));
                                                        u.length == o &&
                                                            '' == _ &&
                                                            (l._writeBits(
                                                                u,
                                                                n,
                                                                8 * a + w * k
                                                            ),
                                                            (y = 0),
                                                            w++,
                                                            (m = 0),
                                                            (p = l._makeDiff(
                                                                u
                                                            )),
                                                            (u = []));
                                                    }
                                                }),
                                                (t.decode._findDiff = function(
                                                    t,
                                                    e,
                                                    i
                                                ) {
                                                    for (
                                                        var r = 0;
                                                        r < t.length;
                                                        r += 2
                                                    )
                                                        if (
                                                            t[r] >= e &&
                                                            t[r + 1] == i
                                                        )
                                                            return t[r];
                                                }),
                                                (t.decode._makeDiff = function(
                                                    t
                                                ) {
                                                    var e = [];
                                                    1 == t[0] && e.push(0, 1);
                                                    for (
                                                        var i = 1;
                                                        i < t.length;
                                                        i++
                                                    )
                                                        t[i - 1] != t[i] &&
                                                            e.push(i, t[i]);
                                                    return (
                                                        e.push(
                                                            t.length,
                                                            0,
                                                            t.length,
                                                            1
                                                        ),
                                                        e
                                                    );
                                                }),
                                                (t.decode._decodeG3 = function(
                                                    e,
                                                    i,
                                                    r,
                                                    n,
                                                    a,
                                                    o,
                                                    s
                                                ) {
                                                    for (
                                                        var l = t.decode,
                                                            f = i << 3,
                                                            h = 0,
                                                            c = '',
                                                            u = [],
                                                            p = [],
                                                            d = 0;
                                                        d < o;
                                                        d++
                                                    )
                                                        u.push(0);
                                                    for (
                                                        var m = 0,
                                                            g = 0,
                                                            b = 0,
                                                            v = 0,
                                                            y = 0,
                                                            w = -1,
                                                            _ = '',
                                                            x = 0,
                                                            k = !1,
                                                            E =
                                                                8 *
                                                                Math.ceil(
                                                                    o / 8
                                                                );
                                                        f >>> 3 < i + r;

                                                    ) {
                                                        (b = l._findDiff(
                                                            p,
                                                            m +
                                                                (0 == m
                                                                    ? 0
                                                                    : 1),
                                                            1 - y
                                                        )),
                                                            (v = l._findDiff(
                                                                p,
                                                                b,
                                                                y
                                                            ));
                                                        var I = 0;
                                                        if (
                                                            (1 == s &&
                                                                (I =
                                                                    (e[
                                                                        f >>> 3
                                                                    ] >>>
                                                                        (7 -
                                                                            (7 &
                                                                                f))) &
                                                                    1),
                                                            2 == s &&
                                                                (I =
                                                                    (e[
                                                                        f >>> 3
                                                                    ] >>>
                                                                        (7 &
                                                                            f)) &
                                                                    1),
                                                            f++,
                                                            (c += I),
                                                            k)
                                                        ) {
                                                            if (
                                                                null !=
                                                                l._lens[y][c]
                                                            ) {
                                                                var S =
                                                                    l._lens[y][
                                                                        c
                                                                    ];
                                                                (c = ''),
                                                                    (h += S),
                                                                    S < 64 &&
                                                                        (l._addNtimes(
                                                                            u,
                                                                            h,
                                                                            y
                                                                        ),
                                                                        (y =
                                                                            1 -
                                                                            y),
                                                                        (h = 0));
                                                            }
                                                        } else if ('H' == _) {
                                                            if (
                                                                null !=
                                                                l._lens[y][c]
                                                            ) {
                                                                S =
                                                                    l._lens[y][
                                                                        c
                                                                    ];
                                                                (c = ''),
                                                                    (h += S),
                                                                    S < 64 &&
                                                                        (l._addNtimes(
                                                                            u,
                                                                            h,
                                                                            y
                                                                        ),
                                                                        (m += h),
                                                                        (y =
                                                                            1 -
                                                                            y),
                                                                        (h = 0),
                                                                        0 ==
                                                                            --x &&
                                                                            (_ =
                                                                                ''));
                                                            }
                                                        } else
                                                            '0001' == c &&
                                                                ((c = ''),
                                                                l._addNtimes(
                                                                    u,
                                                                    v - m,
                                                                    y
                                                                ),
                                                                (m = v)),
                                                                '001' == c &&
                                                                    ((c = ''),
                                                                    (_ = 'H'),
                                                                    (x = 2)),
                                                                null !=
                                                                    l._dmap[
                                                                        c
                                                                    ] &&
                                                                    ((g =
                                                                        b +
                                                                        l._dmap[
                                                                            c
                                                                        ]),
                                                                    l._addNtimes(
                                                                        u,
                                                                        g - m,
                                                                        y
                                                                    ),
                                                                    (m = g),
                                                                    (c = ''),
                                                                    (y =
                                                                        1 - y));
                                                        c.endsWith(
                                                            '000000000001'
                                                        ) &&
                                                            (w >= 0 &&
                                                                l._writeBits(
                                                                    u,
                                                                    n,
                                                                    8 * a +
                                                                        w * E
                                                                ),
                                                            1 == s &&
                                                                (k =
                                                                    1 ==
                                                                    ((e[
                                                                        f >>> 3
                                                                    ] >>>
                                                                        (7 -
                                                                            (7 &
                                                                                f))) &
                                                                        1)),
                                                            2 == s &&
                                                                (k =
                                                                    1 ==
                                                                    ((e[
                                                                        f >>> 3
                                                                    ] >>>
                                                                        (7 &
                                                                            f)) &
                                                                        1)),
                                                            f++,
                                                            null ==
                                                                l._decodeG3
                                                                    .allow2D &&
                                                                (l._decodeG3.allow2D = k),
                                                            l._decodeG3
                                                                .allow2D ||
                                                                ((k = !0), f--),
                                                            (c = ''),
                                                            (y = 0),
                                                            w++,
                                                            (m = 0),
                                                            (p = l._makeDiff(
                                                                u
                                                            )),
                                                            (u = []));
                                                    }
                                                    u.length == o &&
                                                        l._writeBits(
                                                            u,
                                                            n,
                                                            8 * a + w * E
                                                        );
                                                }),
                                                (t.decode._addNtimes = function(
                                                    t,
                                                    e,
                                                    i
                                                ) {
                                                    for (var r = 0; r < e; r++)
                                                        t.push(i);
                                                }),
                                                (t.decode._writeBits = function(
                                                    t,
                                                    e,
                                                    i
                                                ) {
                                                    for (
                                                        var r = 0;
                                                        r < t.length;
                                                        r++
                                                    )
                                                        e[(i + r) >>> 3] |=
                                                            t[r] <<
                                                            (7 - ((i + r) & 7));
                                                }),
                                                (t.decode._decodeLZW = function(
                                                    e,
                                                    i,
                                                    r,
                                                    n
                                                ) {
                                                    if (
                                                        null == t.decode._lzwTab
                                                    ) {
                                                        for (
                                                            var a = new Uint32Array(
                                                                    65535
                                                                ),
                                                                o = new Uint16Array(
                                                                    65535
                                                                ),
                                                                s = new Uint8Array(
                                                                    2e6
                                                                ),
                                                                l = 0;
                                                            l < 256;
                                                            l++
                                                        )
                                                            (s[l << 2] = l),
                                                                (a[l] = l << 2),
                                                                (o[l] = 1);
                                                        t.decode._lzwTab = [
                                                            a,
                                                            o,
                                                            s
                                                        ];
                                                    }
                                                    for (
                                                        var f =
                                                                t.decode
                                                                    ._copyData,
                                                            h =
                                                                t.decode
                                                                    ._lzwTab[0],
                                                            c =
                                                                t.decode
                                                                    ._lzwTab[1],
                                                            u = ((s =
                                                                t.decode
                                                                    ._lzwTab[2]),
                                                            258),
                                                            p = 1032,
                                                            d = 9,
                                                            m = i << 3,
                                                            g = 0,
                                                            b = 0;
                                                        (g =
                                                            (((e[m >>> 3] <<
                                                                16) |
                                                                (e[
                                                                    (m + 8) >>>
                                                                        3
                                                                ] <<
                                                                    8) |
                                                                e[
                                                                    (m + 16) >>>
                                                                        3
                                                                ]) >>
                                                                (24 -
                                                                    (7 & m) -
                                                                    d)) &
                                                            ((1 << d) - 1)),
                                                            (m += d),
                                                            257 != g;

                                                    ) {
                                                        if (256 == g) {
                                                            if (
                                                                ((d = 9),
                                                                (u = 258),
                                                                (p = 1032),
                                                                (g =
                                                                    (((e[
                                                                        m >>> 3
                                                                    ] <<
                                                                        16) |
                                                                        (e[
                                                                            (m +
                                                                                8) >>>
                                                                                3
                                                                        ] <<
                                                                            8) |
                                                                        e[
                                                                            (m +
                                                                                16) >>>
                                                                                3
                                                                        ]) >>
                                                                        (24 -
                                                                            (7 &
                                                                                m) -
                                                                            d)) &
                                                                    ((1 << d) -
                                                                        1)),
                                                                (m += d),
                                                                257 == g)
                                                            )
                                                                break;
                                                            (r[n] = g), n++;
                                                        } else if (g < u) {
                                                            var v = h[g],
                                                                y = c[g];
                                                            if (
                                                                (f(
                                                                    s,
                                                                    v,
                                                                    r,
                                                                    n,
                                                                    y
                                                                ),
                                                                (n += y),
                                                                b >= u)
                                                            )
                                                                (h[u] = p),
                                                                    (s[h[u]] =
                                                                        v[0]),
                                                                    (c[u] = 1),
                                                                    (p =
                                                                        (p +
                                                                            1 +
                                                                            3) &
                                                                        -4),
                                                                    u++;
                                                            else
                                                                (h[u] = p),
                                                                    f(
                                                                        s,
                                                                        h[b],
                                                                        s,
                                                                        p,
                                                                        (w =
                                                                            c[
                                                                                b
                                                                            ])
                                                                    ),
                                                                    (s[p + w] =
                                                                        s[v]),
                                                                    w++,
                                                                    (c[u] = w),
                                                                    u++,
                                                                    (p =
                                                                        (p +
                                                                            w +
                                                                            3) &
                                                                        -4);
                                                            u + 1 == 1 << d &&
                                                                d++;
                                                        } else {
                                                            var w;
                                                            if (b >= u)
                                                                (h[u] = p),
                                                                    (c[u] = 0),
                                                                    u++;
                                                            else
                                                                (h[u] = p),
                                                                    f(
                                                                        s,
                                                                        h[b],
                                                                        s,
                                                                        p,
                                                                        (w =
                                                                            c[
                                                                                b
                                                                            ])
                                                                    ),
                                                                    (s[p + w] =
                                                                        s[p]),
                                                                    w++,
                                                                    (c[u] = w),
                                                                    u++,
                                                                    f(
                                                                        s,
                                                                        p,
                                                                        r,
                                                                        n,
                                                                        w
                                                                    ),
                                                                    (n += w),
                                                                    (p =
                                                                        (p +
                                                                            w +
                                                                            3) &
                                                                        -4);
                                                            u + 1 == 1 << d &&
                                                                d++;
                                                        }
                                                        b = g;
                                                    }
                                                }),
                                                (t.decode._copyData = function(
                                                    t,
                                                    e,
                                                    i,
                                                    r,
                                                    n
                                                ) {
                                                    for (
                                                        var a = 0;
                                                        a < n;
                                                        a += 4
                                                    )
                                                        (i[r + a] = t[e + a]),
                                                            (i[r + a + 1] =
                                                                t[e + a + 1]),
                                                            (i[r + a + 2] =
                                                                t[e + a + 2]),
                                                            (i[r + a + 3] =
                                                                t[e + a + 3]);
                                                }),
                                                (t.tags = {
                                                    254: 'NewSubfileType',
                                                    255: 'SubfileType',
                                                    256: 'ImageWidth',
                                                    257: 'ImageLength',
                                                    258: 'BitsPerSample',
                                                    259: 'Compression',
                                                    262: 'PhotometricInterpretation',
                                                    266: 'FillOrder',
                                                    269: 'DocumentName',
                                                    270: 'ImageDescription',
                                                    271: 'Make',
                                                    272: 'Model',
                                                    273: 'StripOffset',
                                                    274: 'Orientation',
                                                    277: 'SamplesPerPixel',
                                                    278: 'RowsPerStrip',
                                                    279: 'StripByteCounts',
                                                    280: 'MinSampleValue',
                                                    281: 'MaxSampleValue',
                                                    282: 'XResolution',
                                                    283: 'YResolution',
                                                    284: 'PlanarConfiguration',
                                                    285: 'PageName',
                                                    286: 'XPosition',
                                                    287: 'YPosition',
                                                    292: 'T4Options',
                                                    296: 'ResolutionUnit',
                                                    297: 'PageNumber',
                                                    305: 'Software',
                                                    306: 'DateTime',
                                                    315: 'Artist',
                                                    316: 'HostComputer',
                                                    317: 'Predictor',
                                                    320: 'ColorMap',
                                                    321: 'HalftoneHints',
                                                    322: 'TileWidth',
                                                    323: 'TileLength',
                                                    324: 'TileOffset',
                                                    325: 'TileByteCounts',
                                                    330: 'SubIFDs',
                                                    336: 'DotRange',
                                                    338: 'ExtraSample',
                                                    339: 'SampleFormat',
                                                    347: 'JPEGTables',
                                                    512: 'JPEGProc',
                                                    513: 'JPEGInterchangeFormat',
                                                    514: 'JPEGInterchangeFormatLength',
                                                    519: 'JPEGQTables',
                                                    520: 'JPEGDCTables',
                                                    521: 'JPEGACTables',
                                                    529: 'YCbCrCoefficients',
                                                    530: 'YCbCrSubSampling',
                                                    531: 'YCbCrPositioning',
                                                    532: 'ReferenceBlackWhite',
                                                    700: 'XMP',
                                                    33421: 'CFARepeatPatternDim',
                                                    33422: 'CFAPattern',
                                                    33432: 'Copyright',
                                                    33434: 'ExposureTime',
                                                    33437: 'FNumber',
                                                    33723: 'IPTC/NAA',
                                                    34377: 'Photoshop',
                                                    34665: 'ExifIFD',
                                                    34850: 'ExposureProgram',
                                                    34853: 'GPSInfo',
                                                    34855: 'ISOSpeedRatings',
                                                    34858: 'TimeZoneOffset',
                                                    34859: 'SelfTimeMode',
                                                    36867: 'DateTimeOriginal',
                                                    36868: 'DateTimeDigitized',
                                                    37377: 'ShutterSpeedValue',
                                                    37378: 'ApertureValue',
                                                    37380: 'ExposureBiasValue',
                                                    37383: 'MeteringMode',
                                                    37385: 'Flash',
                                                    37386: 'FocalLength',
                                                    37390: 'FocalPlaneXResolution',
                                                    37391: 'FocalPlaneYResolution',
                                                    37392: 'FocalPlaneResolutionUnit',
                                                    37393: 'ImageNumber',
                                                    37398: 'TIFF/EPStandardID',
                                                    37399: 'SensingMethod',
                                                    37500: 'MakerNote',
                                                    37510: 'UserComment',
                                                    40092: 'XPComment',
                                                    40094: 'XPKeywords',
                                                    40961: 'ColorSpace',
                                                    40962: 'PixelXDimension',
                                                    40963: 'PixelXDimension',
                                                    41486: 'FocalPlaneXResolution',
                                                    41487: 'FocalPlaneYResolution',
                                                    41488: 'FocalPlaneResolutionUnit',
                                                    41985: 'CustomRendered',
                                                    41986: 'ExposureMode',
                                                    41987: 'WhiteBalance',
                                                    41990: 'SceneCaptureType',
                                                    50706: 'DNGVersion',
                                                    50707: 'DNGBackwardVersion',
                                                    50708: 'UniqueCameraModel',
                                                    50709: 'LocalizedCameraModel',
                                                    50710: 'CFAPlaneColor',
                                                    50711: 'CFALayout',
                                                    50712: 'LinearizationTable',
                                                    50713: 'BlackLevelRepeatDim',
                                                    50714: 'BlackLevel',
                                                    50716: 'BlackLevelDeltaV',
                                                    50717: 'WhiteLevel',
                                                    50718: 'DefaultScale',
                                                    50719: 'DefaultCropOrigin',
                                                    50720: 'DefaultCropSize',
                                                    50733: 'BayerGreenSplit',
                                                    50738: 'AntiAliasStrength',
                                                    50721: 'ColorMatrix1',
                                                    50722: 'ColorMatrix2',
                                                    50723: 'CameraCalibration1',
                                                    50724: 'CameraCalibration2',
                                                    50727: 'AnalogBalance',
                                                    50728: 'AsShotNeutral',
                                                    50730: 'BaselineExposure',
                                                    50731: 'BaselineNoise',
                                                    50732: 'BaselineSharpness',
                                                    50734: 'LinearResponseLimit',
                                                    50735: 'CameraSerialNumber',
                                                    50736: 'LensInfo',
                                                    50739: 'ShadowScale',
                                                    50740: 'DNGPrivateData',
                                                    50741: 'MakerNoteSafety',
                                                    50778: 'CalibrationIlluminant1',
                                                    50779: 'CalibrationIlluminant2',
                                                    50780: 'BestQualityScale',
                                                    50781: 'RawDataUniqueID',
                                                    50827: 'OriginalRawFileName',
                                                    50829: 'ActiveArea',
                                                    50830: 'MaskedAreas',
                                                    50931: 'CameraCalibrationSignature',
                                                    50932: 'ProfileCalibrationSignature',
                                                    50935: 'NoiseReductionApplied',
                                                    50936: 'ProfileName',
                                                    50937: 'ProfileHueSatMapDims',
                                                    50938: 'ProfileHueSatMapData1',
                                                    50939: 'ProfileHueSatMapData2',
                                                    50940: 'ProfileToneCurve',
                                                    50941: 'ProfileEmbedPolicy',
                                                    50942: 'ProfileCopyright',
                                                    50964: 'ForwardMatrix1',
                                                    50965: 'ForwardMatrix2',
                                                    50966: 'PreviewApplicationName',
                                                    50967: 'PreviewApplicationVersion',
                                                    50969: 'PreviewSettingsDigest',
                                                    50970: 'PreviewColorSpace',
                                                    50971: 'PreviewDateTime',
                                                    50972: 'RawImageDigest',
                                                    51008: 'OpcodeList1',
                                                    51009: 'OpcodeList2',
                                                    51022: 'OpcodeList3',
                                                    51041: 'NoiseProfile',
                                                    51089: 'OriginalDefaultFinalSize',
                                                    51090: 'OriginalBestQualityFinalSize',
                                                    51091: 'OriginalDefaultCropSize',
                                                    51125: 'DefaultUserCrop'
                                                }),
                                                (t.ttypes = {
                                                    256: 3,
                                                    257: 3,
                                                    258: 3,
                                                    259: 3,
                                                    262: 3,
                                                    273: 4,
                                                    274: 3,
                                                    277: 3,
                                                    278: 4,
                                                    279: 4,
                                                    282: 5,
                                                    283: 5,
                                                    284: 3,
                                                    286: 5,
                                                    287: 5,
                                                    296: 3,
                                                    305: 2,
                                                    306: 2,
                                                    338: 3,
                                                    513: 4,
                                                    514: 4,
                                                    34665: 4
                                                }),
                                                (t._readIFD = function(
                                                    e,
                                                    i,
                                                    r,
                                                    n
                                                ) {
                                                    var a = e.readUshort(i, r);
                                                    r += 2;
                                                    var o = {};
                                                    n.push(o);
                                                    for (
                                                        var l = 0;
                                                        l < a;
                                                        l++
                                                    ) {
                                                        var f = e.readUshort(
                                                            i,
                                                            r
                                                        );
                                                        r += 2;
                                                        var h = e.readUshort(
                                                            i,
                                                            r
                                                        );
                                                        r += 2;
                                                        var c = e.readUint(
                                                            i,
                                                            r
                                                        );
                                                        r += 4;
                                                        var u = e.readUint(
                                                            i,
                                                            r
                                                        );
                                                        r += 4;
                                                        var p = [];
                                                        if (
                                                            ((o['t' + f] = p),
                                                            1 == h || 7 == h)
                                                        )
                                                            for (
                                                                var d = 0;
                                                                d < c;
                                                                d++
                                                            )
                                                                p.push(
                                                                    i[
                                                                        (c < 5
                                                                            ? r -
                                                                              4
                                                                            : u) +
                                                                            d
                                                                    ]
                                                                );
                                                        if (
                                                            (2 == h &&
                                                                p.push(
                                                                    e.readASCII(
                                                                        i,
                                                                        c < 5
                                                                            ? r -
                                                                              4
                                                                            : u,
                                                                        c - 1
                                                                    )
                                                                ),
                                                            3 == h)
                                                        )
                                                            for (
                                                                d = 0;
                                                                d < c;
                                                                d++
                                                            )
                                                                p.push(
                                                                    e.readUshort(
                                                                        i,
                                                                        (c < 3
                                                                            ? r -
                                                                              4
                                                                            : u) +
                                                                            2 *
                                                                                d
                                                                    )
                                                                );
                                                        if (4 == h)
                                                            for (
                                                                d = 0;
                                                                d < c;
                                                                d++
                                                            )
                                                                p.push(
                                                                    e.readUint(
                                                                        i,
                                                                        (c < 2
                                                                            ? r -
                                                                              4
                                                                            : u) +
                                                                            4 *
                                                                                d
                                                                    )
                                                                );
                                                        if (5 == h)
                                                            for (
                                                                d = 0;
                                                                d < c;
                                                                d++
                                                            )
                                                                p.push(
                                                                    e.readUint(
                                                                        i,
                                                                        u +
                                                                            8 *
                                                                                d
                                                                    ) /
                                                                        e.readUint(
                                                                            i,
                                                                            u +
                                                                                8 *
                                                                                    d +
                                                                                4
                                                                        )
                                                                );
                                                        if (8 == h)
                                                            for (
                                                                d = 0;
                                                                d < c;
                                                                d++
                                                            )
                                                                p.push(
                                                                    e.readShort(
                                                                        i,
                                                                        (c < 3
                                                                            ? r -
                                                                              4
                                                                            : u) +
                                                                            2 *
                                                                                d
                                                                    )
                                                                );
                                                        if (9 == h)
                                                            for (
                                                                d = 0;
                                                                d < c;
                                                                d++
                                                            )
                                                                p.push(
                                                                    e.readInt(
                                                                        i,
                                                                        (c < 2
                                                                            ? r -
                                                                              4
                                                                            : u) +
                                                                            4 *
                                                                                d
                                                                    )
                                                                );
                                                        if (10 == h)
                                                            for (
                                                                d = 0;
                                                                d < c;
                                                                d++
                                                            )
                                                                p.push(
                                                                    e.readInt(
                                                                        i,
                                                                        u +
                                                                            8 *
                                                                                d
                                                                    ) /
                                                                        e.readInt(
                                                                            i,
                                                                            u +
                                                                                8 *
                                                                                    d +
                                                                                4
                                                                        )
                                                                );
                                                        if (11 == h)
                                                            for (
                                                                d = 0;
                                                                d < c;
                                                                d++
                                                            )
                                                                p.push(
                                                                    e.readFloat(
                                                                        i,
                                                                        u +
                                                                            4 *
                                                                                d
                                                                    )
                                                                );
                                                        if (12 == h)
                                                            for (
                                                                d = 0;
                                                                d < c;
                                                                d++
                                                            )
                                                                p.push(
                                                                    e.readDouble(
                                                                        i,
                                                                        u +
                                                                            8 *
                                                                                d
                                                                    )
                                                                );
                                                        if (
                                                            (0 != c &&
                                                                0 == p.length &&
                                                                s(
                                                                    'unknown TIFF tag type: ',
                                                                    h,
                                                                    'num:',
                                                                    c
                                                                ),
                                                            330 == f)
                                                        )
                                                            for (
                                                                d = 0;
                                                                d < c;
                                                                d++
                                                            )
                                                                t._readIFD(
                                                                    e,
                                                                    i,
                                                                    p[d],
                                                                    n
                                                                );
                                                    }
                                                    return r;
                                                }),
                                                (t._writeIFD = function(
                                                    e,
                                                    i,
                                                    r,
                                                    n
                                                ) {
                                                    var a = Object.keys(n);
                                                    e.writeUshort(
                                                        i,
                                                        r,
                                                        a.length
                                                    );
                                                    for (
                                                        var o =
                                                                (r += 2) +
                                                                12 * a.length +
                                                                4,
                                                            s = 0;
                                                        s < a.length;
                                                        s++
                                                    ) {
                                                        var l = a[s],
                                                            f = parseInt(
                                                                l.slice(1)
                                                            ),
                                                            h = t.ttypes[f];
                                                        if (null == h)
                                                            throw 'unknown type of tag: ' +
                                                                f;
                                                        var c = n[l];
                                                        2 == h &&
                                                            (c = c[0] + '\0');
                                                        var u = c.length;
                                                        e.writeUshort(i, r, f),
                                                            (r += 2),
                                                            e.writeUshort(
                                                                i,
                                                                r,
                                                                h
                                                            ),
                                                            (r += 2),
                                                            e.writeUint(
                                                                i,
                                                                r,
                                                                u
                                                            );
                                                        var p =
                                                                [
                                                                    -1,
                                                                    1,
                                                                    1,
                                                                    2,
                                                                    4,
                                                                    8,
                                                                    0,
                                                                    0,
                                                                    0,
                                                                    0,
                                                                    0,
                                                                    0,
                                                                    8
                                                                ][h] * u,
                                                            d = (r += 4);
                                                        if (
                                                            (p > 4 &&
                                                                (e.writeUint(
                                                                    i,
                                                                    r,
                                                                    o
                                                                ),
                                                                (d = o)),
                                                            2 == h &&
                                                                e.writeASCII(
                                                                    i,
                                                                    d,
                                                                    c
                                                                ),
                                                            3 == h)
                                                        )
                                                            for (
                                                                var m = 0;
                                                                m < u;
                                                                m++
                                                            )
                                                                e.writeUshort(
                                                                    i,
                                                                    d + 2 * m,
                                                                    c[m]
                                                                );
                                                        if (4 == h)
                                                            for (
                                                                m = 0;
                                                                m < u;
                                                                m++
                                                            )
                                                                e.writeUint(
                                                                    i,
                                                                    d + 4 * m,
                                                                    c[m]
                                                                );
                                                        if (5 == h)
                                                            for (
                                                                m = 0;
                                                                m < u;
                                                                m++
                                                            )
                                                                e.writeUint(
                                                                    i,
                                                                    d + 8 * m,
                                                                    Math.round(
                                                                        1e4 *
                                                                            c[m]
                                                                    )
                                                                ),
                                                                    e.writeUint(
                                                                        i,
                                                                        d +
                                                                            8 *
                                                                                m +
                                                                            4,
                                                                        1e4
                                                                    );
                                                        if (12 == h)
                                                            for (
                                                                m = 0;
                                                                m < u;
                                                                m++
                                                            )
                                                                e.writeDouble(
                                                                    i,
                                                                    d + 8 * m,
                                                                    c[m]
                                                                );
                                                        p > 4 &&
                                                            (o += p += 1 & p),
                                                            (r += 4);
                                                    }
                                                    return [r, o];
                                                }),
                                                (t.toRGBA8 = function(t) {
                                                    var e = t.width,
                                                        i = t.height,
                                                        r = e * i,
                                                        n = 4 * r,
                                                        a = t.data,
                                                        o = new Uint8Array(
                                                            4 * r
                                                        ),
                                                        l = t.t262[0],
                                                        f = t.t258
                                                            ? Math.min(
                                                                  32,
                                                                  t.t258[0]
                                                              )
                                                            : 1,
                                                        h = t.isLE ? 1 : 0;
                                                    if (0 == l)
                                                        for (
                                                            var c = Math.ceil(
                                                                    (f * e) / 8
                                                                ),
                                                                u = 0;
                                                            u < i;
                                                            u++
                                                        ) {
                                                            var p = u * c,
                                                                d = u * e;
                                                            if (1 == f)
                                                                for (
                                                                    var m = 0;
                                                                    m < e;
                                                                    m++
                                                                ) {
                                                                    var g =
                                                                            (d +
                                                                                m) <<
                                                                            2,
                                                                        b =
                                                                            (a[
                                                                                p +
                                                                                    (m >>
                                                                                        3)
                                                                            ] >>
                                                                                (7 -
                                                                                    (7 &
                                                                                        m))) &
                                                                            1;
                                                                    (o[g] = o[
                                                                        g + 1
                                                                    ] = o[
                                                                        g + 2
                                                                    ] =
                                                                        255 *
                                                                        (1 -
                                                                            b)),
                                                                        (o[
                                                                            g +
                                                                                3
                                                                        ] = 255);
                                                                }
                                                            if (4 == f)
                                                                for (
                                                                    m = 0;
                                                                    m < e;
                                                                    m++
                                                                ) {
                                                                    (g =
                                                                        (d +
                                                                            m) <<
                                                                        2),
                                                                        (b =
                                                                            (a[
                                                                                p +
                                                                                    (m >>
                                                                                        1)
                                                                            ] >>
                                                                                (4 -
                                                                                    4 *
                                                                                        (1 &
                                                                                            m))) &
                                                                            15);
                                                                    (o[g] = o[
                                                                        g + 1
                                                                    ] = o[
                                                                        g + 2
                                                                    ] =
                                                                        17 *
                                                                        (15 -
                                                                            b)),
                                                                        (o[
                                                                            g +
                                                                                3
                                                                        ] = 255);
                                                                }
                                                            if (8 == f)
                                                                for (
                                                                    m = 0;
                                                                    m < e;
                                                                    m++
                                                                ) {
                                                                    (g =
                                                                        (d +
                                                                            m) <<
                                                                        2),
                                                                        (b =
                                                                            a[
                                                                                p +
                                                                                    m
                                                                            ]);
                                                                    (o[g] = o[
                                                                        g + 1
                                                                    ] = o[
                                                                        g + 2
                                                                    ] =
                                                                        255 -
                                                                        b),
                                                                        (o[
                                                                            g +
                                                                                3
                                                                        ] = 255);
                                                                }
                                                        }
                                                    else if (1 == l)
                                                        for (
                                                            c = Math.ceil(
                                                                (f * e) / 8
                                                            ),
                                                                u = 0;
                                                            u < i;
                                                            u++
                                                        ) {
                                                            (p = u * c),
                                                                (d = u * e);
                                                            if (1 == f)
                                                                for (
                                                                    m = 0;
                                                                    m < e;
                                                                    m++
                                                                ) {
                                                                    (g =
                                                                        (d +
                                                                            m) <<
                                                                        2),
                                                                        (b =
                                                                            (a[
                                                                                p +
                                                                                    (m >>
                                                                                        3)
                                                                            ] >>
                                                                                (7 -
                                                                                    (7 &
                                                                                        m))) &
                                                                            1);
                                                                    (o[g] = o[
                                                                        g + 1
                                                                    ] = o[
                                                                        g + 2
                                                                    ] =
                                                                        255 *
                                                                        b),
                                                                        (o[
                                                                            g +
                                                                                3
                                                                        ] = 255);
                                                                }
                                                            if (2 == f)
                                                                for (
                                                                    m = 0;
                                                                    m < e;
                                                                    m++
                                                                ) {
                                                                    (g =
                                                                        (d +
                                                                            m) <<
                                                                        2),
                                                                        (b =
                                                                            (a[
                                                                                p +
                                                                                    (m >>
                                                                                        2)
                                                                            ] >>
                                                                                (6 -
                                                                                    2 *
                                                                                        (3 &
                                                                                            m))) &
                                                                            3);
                                                                    (o[g] = o[
                                                                        g + 1
                                                                    ] = o[
                                                                        g + 2
                                                                    ] =
                                                                        85 * b),
                                                                        (o[
                                                                            g +
                                                                                3
                                                                        ] = 255);
                                                                }
                                                            if (8 == f)
                                                                for (
                                                                    m = 0;
                                                                    m < e;
                                                                    m++
                                                                ) {
                                                                    (g =
                                                                        (d +
                                                                            m) <<
                                                                        2),
                                                                        (b =
                                                                            a[
                                                                                p +
                                                                                    m
                                                                            ]);
                                                                    (o[g] = o[
                                                                        g + 1
                                                                    ] = o[
                                                                        g + 2
                                                                    ] = b),
                                                                        (o[
                                                                            g +
                                                                                3
                                                                        ] = 255);
                                                                }
                                                            if (16 == f)
                                                                for (
                                                                    m = 0;
                                                                    m < e;
                                                                    m++
                                                                ) {
                                                                    (g =
                                                                        (d +
                                                                            m) <<
                                                                        2),
                                                                        (b =
                                                                            a[
                                                                                p +
                                                                                    (2 *
                                                                                        m +
                                                                                        h)
                                                                            ]);
                                                                    (o[g] = o[
                                                                        g + 1
                                                                    ] = o[
                                                                        g + 2
                                                                    ] = Math.min(
                                                                        255,
                                                                        b
                                                                    )),
                                                                        (o[
                                                                            g +
                                                                                3
                                                                        ] = 255);
                                                                }
                                                        }
                                                    else if (2 == l)
                                                        if (8 == f)
                                                            if (t.t338)
                                                                if (
                                                                    t.t338[0] >
                                                                    0
                                                                )
                                                                    for (
                                                                        m = 0;
                                                                        m < n;
                                                                        m++
                                                                    )
                                                                        o[m] =
                                                                            a[
                                                                                m
                                                                            ];
                                                                else
                                                                    for (
                                                                        m = 0;
                                                                        m < n;
                                                                        m += 4
                                                                    )
                                                                        (o[m] =
                                                                            a[
                                                                                m
                                                                            ]),
                                                                            (o[
                                                                                m +
                                                                                    1
                                                                            ] =
                                                                                a[
                                                                                    m +
                                                                                        1
                                                                                ]),
                                                                            (o[
                                                                                m +
                                                                                    2
                                                                            ] =
                                                                                a[
                                                                                    m +
                                                                                        2
                                                                                ]),
                                                                            (o[
                                                                                m +
                                                                                    3
                                                                            ] = 255);
                                                            else {
                                                                var v = t.t258
                                                                    ? t.t258
                                                                          .length
                                                                    : 3;
                                                                if (4 == v)
                                                                    for (
                                                                        m = 0;
                                                                        m < n;
                                                                        m++
                                                                    )
                                                                        o[m] =
                                                                            a[
                                                                                m
                                                                            ];
                                                                if (3 == v)
                                                                    for (
                                                                        m = 0;
                                                                        m < r;
                                                                        m++
                                                                    ) {
                                                                        var y =
                                                                            3 *
                                                                            m;
                                                                        (o[
                                                                            (g =
                                                                                m <<
                                                                                2)
                                                                        ] =
                                                                            a[
                                                                                y
                                                                            ]),
                                                                            (o[
                                                                                g +
                                                                                    1
                                                                            ] =
                                                                                a[
                                                                                    y +
                                                                                        1
                                                                                ]),
                                                                            (o[
                                                                                g +
                                                                                    2
                                                                            ] =
                                                                                a[
                                                                                    y +
                                                                                        2
                                                                                ]),
                                                                            (o[
                                                                                g +
                                                                                    3
                                                                            ] = 255);
                                                                    }
                                                            }
                                                        else
                                                            for (
                                                                m = 0;
                                                                m < r;
                                                                m++
                                                            ) {
                                                                y = 6 * m;
                                                                (o[
                                                                    (g = m << 2)
                                                                ] =
                                                                    a[y]),
                                                                    (o[g + 1] =
                                                                        a[
                                                                            y +
                                                                                2
                                                                        ]),
                                                                    (o[g + 2] =
                                                                        a[
                                                                            y +
                                                                                4
                                                                        ]),
                                                                    (o[
                                                                        g + 3
                                                                    ] = 255);
                                                            }
                                                    else if (3 == l) {
                                                        var w = t.t320;
                                                        for (
                                                            m = 0;
                                                            m < r;
                                                            m++
                                                        ) {
                                                            g = m << 2;
                                                            var _ = a[m];
                                                            (o[g] = w[_] >> 8),
                                                                (o[g + 1] =
                                                                    w[
                                                                        256 + _
                                                                    ] >> 8),
                                                                (o[g + 2] =
                                                                    w[
                                                                        512 + _
                                                                    ] >> 8),
                                                                (o[
                                                                    g + 3
                                                                ] = 255);
                                                        }
                                                    } else if (5 == l)
                                                        for (
                                                            m = 0;
                                                            m < r;
                                                            m++
                                                        ) {
                                                            var x =
                                                                    255 -
                                                                    a[
                                                                        (g =
                                                                            m <<
                                                                            2)
                                                                    ],
                                                                k =
                                                                    255 -
                                                                    a[g + 1],
                                                                E =
                                                                    255 -
                                                                    a[g + 2],
                                                                I =
                                                                    (255 -
                                                                        a[
                                                                            g +
                                                                                3
                                                                        ]) *
                                                                    (1 / 255);
                                                            (o[g] = Math.round(
                                                                x * I
                                                            )),
                                                                (o[
                                                                    g + 1
                                                                ] = Math.round(
                                                                    k * I
                                                                )),
                                                                (o[
                                                                    g + 2
                                                                ] = Math.round(
                                                                    E * I
                                                                )),
                                                                (o[
                                                                    g + 3
                                                                ] = 255);
                                                        }
                                                    else
                                                        s(
                                                            'Unknown Photometric interpretation: ' +
                                                                l
                                                        );
                                                    return o;
                                                }),
                                                (t.replaceIMG = function() {
                                                    for (
                                                        var e = document.getElementsByTagName(
                                                                'img'
                                                            ),
                                                            i = 0;
                                                        i < e.length;
                                                        i++
                                                    ) {
                                                        var r = e[i],
                                                            n = r.getAttribute(
                                                                'src'
                                                            );
                                                        if (null != n) {
                                                            var a = n
                                                                .split('.')
                                                                .pop()
                                                                .toLowerCase();
                                                            if (
                                                                'tif' == a ||
                                                                'tiff' == a
                                                            ) {
                                                                var o = new XMLHttpRequest();
                                                                t._xhrs.push(o),
                                                                    t._imgs.push(
                                                                        r
                                                                    ),
                                                                    o.open(
                                                                        'GET',
                                                                        n
                                                                    ),
                                                                    (o.responseType =
                                                                        'arraybuffer'),
                                                                    (o.onload =
                                                                        t._imgLoaded),
                                                                    o.send();
                                                            }
                                                        }
                                                    }
                                                }),
                                                (t._xhrs = []),
                                                (t._imgs = []),
                                                (t._imgLoaded = function(e) {
                                                    var i = e.target.response,
                                                        r = t.decode(i),
                                                        n = r[0];
                                                    t.decodeImages(i, r);
                                                    var a = t.toRGBA8(n),
                                                        o = n.width,
                                                        s = n.height,
                                                        l = t._xhrs.indexOf(
                                                            e.target
                                                        ),
                                                        f = t._imgs[l];
                                                    t._xhrs.splice(l, 1),
                                                        t._imgs.splice(l, 1);
                                                    var h = document.createElement(
                                                        'canvas'
                                                    );
                                                    (h.width = o),
                                                        (h.height = s);
                                                    for (
                                                        var c = h.getContext(
                                                                '2d'
                                                            ),
                                                            u = c.createImageData(
                                                                o,
                                                                s
                                                            ),
                                                            p = 0;
                                                        p < a.length;
                                                        p++
                                                    )
                                                        u.data[p] = a[p];
                                                    c.putImageData(u, 0, 0);
                                                    var d = [
                                                        'style',
                                                        'class',
                                                        'id'
                                                    ];
                                                    for (
                                                        p = 0;
                                                        p < d.length;
                                                        p++
                                                    )
                                                        h.setAttribute(
                                                            d[p],
                                                            f.getAttribute(d[p])
                                                        );
                                                    f.parentNode.replaceChild(
                                                        h,
                                                        f
                                                    );
                                                }),
                                                (t._binBE = {
                                                    nextZero: function(t, e) {
                                                        for (; 0 != t[e]; ) e++;
                                                        return e;
                                                    },
                                                    readUshort: function(t, e) {
                                                        return (
                                                            (t[e] << 8) |
                                                            t[e + 1]
                                                        );
                                                    },
                                                    readShort: function(e, i) {
                                                        var r = t._binBE.ui8;
                                                        return (
                                                            (r[0] = e[i + 1]),
                                                            (r[1] = e[i + 0]),
                                                            t._binBE.i16[0]
                                                        );
                                                    },
                                                    readInt: function(e, i) {
                                                        var r = t._binBE.ui8;
                                                        return (
                                                            (r[0] = e[i + 3]),
                                                            (r[1] = e[i + 2]),
                                                            (r[2] = e[i + 1]),
                                                            (r[3] = e[i + 0]),
                                                            t._binBE.i32[0]
                                                        );
                                                    },
                                                    readUint: function(e, i) {
                                                        var r = t._binBE.ui8;
                                                        return (
                                                            (r[0] = e[i + 3]),
                                                            (r[1] = e[i + 2]),
                                                            (r[2] = e[i + 1]),
                                                            (r[3] = e[i + 0]),
                                                            t._binBE.ui32[0]
                                                        );
                                                    },
                                                    readASCII: function(
                                                        t,
                                                        e,
                                                        i
                                                    ) {
                                                        for (
                                                            var r = '', n = 0;
                                                            n < i;
                                                            n++
                                                        )
                                                            r += String.fromCharCode(
                                                                t[e + n]
                                                            );
                                                        return r;
                                                    },
                                                    readFloat: function(e, i) {
                                                        for (
                                                            var r =
                                                                    t._binBE
                                                                        .ui8,
                                                                n = 0;
                                                            n < 4;
                                                            n++
                                                        )
                                                            r[n] = e[i + 3 - n];
                                                        return t._binBE.fl32[0];
                                                    },
                                                    readDouble: function(e, i) {
                                                        for (
                                                            var r =
                                                                    t._binBE
                                                                        .ui8,
                                                                n = 0;
                                                            n < 8;
                                                            n++
                                                        )
                                                            r[n] = e[i + 7 - n];
                                                        return t._binBE.fl64[0];
                                                    },
                                                    writeUshort: function(
                                                        t,
                                                        e,
                                                        i
                                                    ) {
                                                        (t[e] = (i >> 8) & 255),
                                                            (t[e + 1] =
                                                                255 & i);
                                                    },
                                                    writeUint: function(
                                                        t,
                                                        e,
                                                        i
                                                    ) {
                                                        (t[e] =
                                                            (i >> 24) & 255),
                                                            (t[e + 1] =
                                                                (i >> 16) &
                                                                255),
                                                            (t[e + 2] =
                                                                (i >> 8) & 255),
                                                            (t[e + 3] =
                                                                (i >> 0) & 255);
                                                    },
                                                    writeASCII: function(
                                                        t,
                                                        e,
                                                        i
                                                    ) {
                                                        for (
                                                            var r = 0;
                                                            r < i.length;
                                                            r++
                                                        )
                                                            t[
                                                                e + r
                                                            ] = i.charCodeAt(r);
                                                    },
                                                    writeDouble: function(
                                                        e,
                                                        i,
                                                        r
                                                    ) {
                                                        t._binBE.fl64[0] = r;
                                                        for (
                                                            var n = 0;
                                                            n < 8;
                                                            n++
                                                        )
                                                            e[i + n] =
                                                                t._binBE.ui8[
                                                                    7 - n
                                                                ];
                                                    }
                                                }),
                                                (t._binBE.ui8 = new Uint8Array(
                                                    8
                                                )),
                                                (t._binBE.i16 = new Int16Array(
                                                    t._binBE.ui8.buffer
                                                )),
                                                (t._binBE.i32 = new Int32Array(
                                                    t._binBE.ui8.buffer
                                                )),
                                                (t._binBE.ui32 = new Uint32Array(
                                                    t._binBE.ui8.buffer
                                                )),
                                                (t._binBE.fl32 = new Float32Array(
                                                    t._binBE.ui8.buffer
                                                )),
                                                (t._binBE.fl64 = new Float64Array(
                                                    t._binBE.ui8.buffer
                                                )),
                                                (t._binLE = {
                                                    nextZero: t._binBE.nextZero,
                                                    readUshort: function(t, e) {
                                                        return (
                                                            (t[e + 1] << 8) |
                                                            t[e]
                                                        );
                                                    },
                                                    readShort: function(e, i) {
                                                        var r = t._binBE.ui8;
                                                        return (
                                                            (r[0] = e[i + 0]),
                                                            (r[1] = e[i + 1]),
                                                            t._binBE.i16[0]
                                                        );
                                                    },
                                                    readInt: function(e, i) {
                                                        var r = t._binBE.ui8;
                                                        return (
                                                            (r[0] = e[i + 0]),
                                                            (r[1] = e[i + 1]),
                                                            (r[2] = e[i + 2]),
                                                            (r[3] = e[i + 3]),
                                                            t._binBE.i32[0]
                                                        );
                                                    },
                                                    readUint: function(e, i) {
                                                        var r = t._binBE.ui8;
                                                        return (
                                                            (r[0] = e[i + 0]),
                                                            (r[1] = e[i + 1]),
                                                            (r[2] = e[i + 2]),
                                                            (r[3] = e[i + 3]),
                                                            t._binBE.ui32[0]
                                                        );
                                                    },
                                                    readASCII:
                                                        t._binBE.readASCII,
                                                    readFloat: function(e, i) {
                                                        for (
                                                            var r =
                                                                    t._binBE
                                                                        .ui8,
                                                                n = 0;
                                                            n < 4;
                                                            n++
                                                        )
                                                            r[n] = e[i + n];
                                                        return t._binBE.fl32[0];
                                                    },
                                                    readDouble: function(e, i) {
                                                        for (
                                                            var r =
                                                                    t._binBE
                                                                        .ui8,
                                                                n = 0;
                                                            n < 8;
                                                            n++
                                                        )
                                                            r[n] = e[i + n];
                                                        return t._binBE.fl64[0];
                                                    }
                                                }),
                                                (t._copyTile = function(
                                                    t,
                                                    e,
                                                    i,
                                                    r,
                                                    n,
                                                    a,
                                                    o,
                                                    s
                                                ) {
                                                    for (
                                                        var l = Math.min(
                                                                e,
                                                                n - o
                                                            ),
                                                            f = Math.min(
                                                                i,
                                                                a - s
                                                            ),
                                                            h = 0;
                                                        h < f;
                                                        h++
                                                    )
                                                        for (
                                                            var c =
                                                                    (s + h) *
                                                                        n +
                                                                    o,
                                                                u = h * e,
                                                                p = 0;
                                                            p < l;
                                                            p++
                                                        )
                                                            r[c + p] = t[u + p];
                                                });
                                        })(o, r, n);
                                })();
                            }.call(this, t('_process')));
                        },
                        { _process: 15, jpgjs: 44, pako: 53 }
                    ],
                    132: [
                        function(e, i, r) {
                            (function(t) {
                                function e(e) {
                                    try {
                                        if (!t.localStorage) return !1;
                                    } catch (t) {
                                        return !1;
                                    }
                                    var i = t.localStorage[e];
                                    return (
                                        null != i &&
                                        'true' === String(i).toLowerCase()
                                    );
                                }
                                i.exports = function(t, i) {
                                    if (e('noDeprecation')) return t;
                                    var r = !1;
                                    return function() {
                                        if (!r) {
                                            if (e('throwDeprecation'))
                                                throw new Error(i);
                                            e('traceDeprecation')
                                                ? console.trace(i)
                                                : console.warn(i),
                                                (r = !0);
                                        }
                                        return t.apply(this, arguments);
                                    };
                                };
                            }.call(
                                this,
                                void 0 !== t
                                    ? t
                                    : 'undefined' != typeof self
                                        ? self
                                        : void 0 !== f
                                            ? f
                                            : {}
                            ));
                        },
                        {}
                    ],
                    133: [
                        function(t, e, i) {
                            arguments[4][4][0].apply(i, arguments);
                        },
                        { dup: 4 }
                    ],
                    134: [
                        function(e, i, r) {
                            (function(t, i) {
                                var n = /%[sdj%]/g;
                                (r.format = function(t) {
                                    if (!v(t)) {
                                        for (
                                            var e = [], i = 0;
                                            i < arguments.length;
                                            i++
                                        )
                                            e.push(l(arguments[i]));
                                        return e.join(' ');
                                    }
                                    i = 1;
                                    for (
                                        var r = arguments,
                                            a = r.length,
                                            o = String(t).replace(n, function(
                                                t
                                            ) {
                                                if ('%%' === t) return '%';
                                                if (i >= a) return t;
                                                switch (t) {
                                                    case '%s':
                                                        return String(r[i++]);
                                                    case '%d':
                                                        return Number(r[i++]);
                                                    case '%j':
                                                        try {
                                                            return JSON.stringify(
                                                                r[i++]
                                                            );
                                                        } catch (t) {
                                                            return '[Circular]';
                                                        }
                                                    default:
                                                        return t;
                                                }
                                            }),
                                            s = r[i];
                                        i < a;
                                        s = r[++i]
                                    )
                                        g(s) || !_(s)
                                            ? (o += ' ' + s)
                                            : (o += ' ' + l(s));
                                    return o;
                                }),
                                    (r.deprecate = function(e, n) {
                                        if (y(i.process))
                                            return function() {
                                                return r
                                                    .deprecate(e, n)
                                                    .apply(this, arguments);
                                            };
                                        if (!0 === t.noDeprecation) return e;
                                        var a = !1;
                                        return function() {
                                            if (!a) {
                                                if (t.throwDeprecation)
                                                    throw new Error(n);
                                                t.traceDeprecation
                                                    ? console.trace(n)
                                                    : console.error(n),
                                                    (a = !0);
                                            }
                                            return e.apply(this, arguments);
                                        };
                                    });
                                var o,
                                    s = {};
                                function l(t, e) {
                                    var i = { seen: [], stylize: h };
                                    return (
                                        arguments.length >= 3 &&
                                            (i.depth = arguments[2]),
                                        arguments.length >= 4 &&
                                            (i.colors = arguments[3]),
                                        m(e)
                                            ? (i.showHidden = e)
                                            : e && r._extend(i, e),
                                        y(i.showHidden) && (i.showHidden = !1),
                                        y(i.depth) && (i.depth = 2),
                                        y(i.colors) && (i.colors = !1),
                                        y(i.customInspect) &&
                                            (i.customInspect = !0),
                                        i.colors && (i.stylize = f),
                                        c(i, t, i.depth)
                                    );
                                }
                                function f(t, e) {
                                    var i = l.styles[e];
                                    return i
                                        ? '[' +
                                              l.colors[i][0] +
                                              'm' +
                                              t +
                                              '[' +
                                              l.colors[i][1] +
                                              'm'
                                        : t;
                                }
                                function h(t, e) {
                                    return t;
                                }
                                function c(t, e, i) {
                                    if (
                                        t.customInspect &&
                                        e &&
                                        E(e.inspect) &&
                                        e.inspect !== r.inspect &&
                                        (!e.constructor ||
                                            e.constructor.prototype !== e)
                                    ) {
                                        var n = e.inspect(i, t);
                                        return v(n) || (n = c(t, n, i)), n;
                                    }
                                    var a = (function(t, e) {
                                        if (y(e))
                                            return t.stylize(
                                                'undefined',
                                                'undefined'
                                            );
                                        if (v(e)) {
                                            var i =
                                                "'" +
                                                JSON.stringify(e)
                                                    .replace(/^"|"$/g, '')
                                                    .replace(/'/g, "\\'")
                                                    .replace(/\\"/g, '"') +
                                                "'";
                                            return t.stylize(i, 'string');
                                        }
                                        if (b(e))
                                            return t.stylize('' + e, 'number');
                                        if (m(e))
                                            return t.stylize('' + e, 'boolean');
                                        if (g(e))
                                            return t.stylize('null', 'null');
                                    })(t, e);
                                    if (a) return a;
                                    var o = Object.keys(e),
                                        s = (function(t) {
                                            var e = {};
                                            return (
                                                t.forEach(function(t, i) {
                                                    e[t] = !0;
                                                }),
                                                e
                                            );
                                        })(o);
                                    if (
                                        (t.showHidden &&
                                            (o = Object.getOwnPropertyNames(e)),
                                        k(e) &&
                                            (o.indexOf('message') >= 0 ||
                                                o.indexOf('description') >= 0))
                                    )
                                        return u(e);
                                    if (0 === o.length) {
                                        if (E(e)) {
                                            var l = e.name ? ': ' + e.name : '';
                                            return t.stylize(
                                                '[Function' + l + ']',
                                                'special'
                                            );
                                        }
                                        if (w(e))
                                            return t.stylize(
                                                RegExp.prototype.toString.call(
                                                    e
                                                ),
                                                'regexp'
                                            );
                                        if (x(e))
                                            return t.stylize(
                                                Date.prototype.toString.call(e),
                                                'date'
                                            );
                                        if (k(e)) return u(e);
                                    }
                                    var f,
                                        h = '',
                                        _ = !1,
                                        I = ['{', '}'];
                                    (d(e) && ((_ = !0), (I = ['[', ']'])),
                                    E(e)) &&
                                        (h =
                                            ' [Function' +
                                            (e.name ? ': ' + e.name : '') +
                                            ']');
                                    return (
                                        w(e) &&
                                            (h =
                                                ' ' +
                                                RegExp.prototype.toString.call(
                                                    e
                                                )),
                                        x(e) &&
                                            (h =
                                                ' ' +
                                                Date.prototype.toUTCString.call(
                                                    e
                                                )),
                                        k(e) && (h = ' ' + u(e)),
                                        0 !== o.length || (_ && 0 != e.length)
                                            ? i < 0
                                                ? w(e)
                                                    ? t.stylize(
                                                          RegExp.prototype.toString.call(
                                                              e
                                                          ),
                                                          'regexp'
                                                      )
                                                    : t.stylize(
                                                          '[Object]',
                                                          'special'
                                                      )
                                                : (t.seen.push(e),
                                                  (f = _
                                                      ? (function(
                                                            t,
                                                            e,
                                                            i,
                                                            r,
                                                            n
                                                        ) {
                                                            for (
                                                                var a = [],
                                                                    o = 0,
                                                                    s =
                                                                        e.length;
                                                                o < s;
                                                                ++o
                                                            )
                                                                T(e, String(o))
                                                                    ? a.push(
                                                                          p(
                                                                              t,
                                                                              e,
                                                                              i,
                                                                              r,
                                                                              String(
                                                                                  o
                                                                              ),
                                                                              !0
                                                                          )
                                                                      )
                                                                    : a.push(
                                                                          ''
                                                                      );
                                                            return (
                                                                n.forEach(
                                                                    function(
                                                                        n
                                                                    ) {
                                                                        n.match(
                                                                            /^\d+$/
                                                                        ) ||
                                                                            a.push(
                                                                                p(
                                                                                    t,
                                                                                    e,
                                                                                    i,
                                                                                    r,
                                                                                    n,
                                                                                    !0
                                                                                )
                                                                            );
                                                                    }
                                                                ),
                                                                a
                                                            );
                                                        })(t, e, i, s, o)
                                                      : o.map(function(r) {
                                                            return p(
                                                                t,
                                                                e,
                                                                i,
                                                                s,
                                                                r,
                                                                _
                                                            );
                                                        })),
                                                  t.seen.pop(),
                                                  (function(t, e, i) {
                                                      if (
                                                          t.reduce(function(
                                                              t,
                                                              e
                                                          ) {
                                                              return (
                                                                  0,
                                                                  e.indexOf(
                                                                      '\n'
                                                                  ) >= 0 && 0,
                                                                  t +
                                                                      e.replace(
                                                                          /\u001b\[\d\d?m/g,
                                                                          ''
                                                                      ).length +
                                                                      1
                                                              );
                                                          },
                                                          0) > 60
                                                      )
                                                          return (
                                                              i[0] +
                                                              ('' === e
                                                                  ? ''
                                                                  : e + '\n ') +
                                                              ' ' +
                                                              t.join(',\n  ') +
                                                              ' ' +
                                                              i[1]
                                                          );
                                                      return (
                                                          i[0] +
                                                          e +
                                                          ' ' +
                                                          t.join(', ') +
                                                          ' ' +
                                                          i[1]
                                                      );
                                                  })(f, h, I))
                                            : I[0] + h + I[1]
                                    );
                                }
                                function u(t) {
                                    return (
                                        '[' +
                                        Error.prototype.toString.call(t) +
                                        ']'
                                    );
                                }
                                function p(t, e, i, r, n, a) {
                                    var o, s, l;
                                    if (
                                        ((l = Object.getOwnPropertyDescriptor(
                                            e,
                                            n
                                        ) || { value: e[n] }).get
                                            ? (s = l.set
                                                  ? t.stylize(
                                                        '[Getter/Setter]',
                                                        'special'
                                                    )
                                                  : t.stylize(
                                                        '[Getter]',
                                                        'special'
                                                    ))
                                            : l.set &&
                                              (s = t.stylize(
                                                  '[Setter]',
                                                  'special'
                                              )),
                                        T(r, n) || (o = '[' + n + ']'),
                                        s ||
                                            (t.seen.indexOf(l.value) < 0
                                                ? (s = g(i)
                                                      ? c(t, l.value, null)
                                                      : c(
                                                            t,
                                                            l.value,
                                                            i - 1
                                                        )).indexOf('\n') > -1 &&
                                                  (s = a
                                                      ? s
                                                            .split('\n')
                                                            .map(function(t) {
                                                                return '  ' + t;
                                                            })
                                                            .join('\n')
                                                            .substr(2)
                                                      : '\n' +
                                                        s
                                                            .split('\n')
                                                            .map(function(t) {
                                                                return (
                                                                    '   ' + t
                                                                );
                                                            })
                                                            .join('\n'))
                                                : (s = t.stylize(
                                                      '[Circular]',
                                                      'special'
                                                  ))),
                                        y(o))
                                    ) {
                                        if (a && n.match(/^\d+$/)) return s;
                                        (o = JSON.stringify('' + n)).match(
                                            /^"([a-zA-Z_][a-zA-Z_0-9]*)"$/
                                        )
                                            ? ((o = o.substr(1, o.length - 2)),
                                              (o = t.stylize(o, 'name')))
                                            : ((o = o
                                                  .replace(/'/g, "\\'")
                                                  .replace(/\\"/g, '"')
                                                  .replace(/(^"|"$)/g, "'")),
                                              (o = t.stylize(o, 'string')));
                                    }
                                    return o + ': ' + s;
                                }
                                function d(t) {
                                    return Array.isArray(t);
                                }
                                function m(t) {
                                    return 'boolean' == typeof t;
                                }
                                function g(t) {
                                    return null === t;
                                }
                                function b(t) {
                                    return 'number' == typeof t;
                                }
                                function v(t) {
                                    return 'string' == typeof t;
                                }
                                function y(t) {
                                    return void 0 === t;
                                }
                                function w(t) {
                                    return _(t) && '[object RegExp]' === I(t);
                                }
                                function _(t) {
                                    return (
                                        'object' ===
                                            (void 0 === t
                                                ? 'undefined'
                                                : a(t)) && null !== t
                                    );
                                }
                                function x(t) {
                                    return _(t) && '[object Date]' === I(t);
                                }
                                function k(t) {
                                    return (
                                        _(t) &&
                                        ('[object Error]' === I(t) ||
                                            t instanceof Error)
                                    );
                                }
                                function E(t) {
                                    return 'function' == typeof t;
                                }
                                function I(t) {
                                    return Object.prototype.toString.call(t);
                                }
                                function S(t) {
                                    return t < 10
                                        ? '0' + t.toString(10)
                                        : t.toString(10);
                                }
                                (r.debuglog = function(e) {
                                    if (
                                        (y(o) && (o = t.env.NODE_DEBUG || ''),
                                        (e = e.toUpperCase()),
                                        !s[e])
                                    )
                                        if (
                                            new RegExp(
                                                '\\b' + e + '\\b',
                                                'i'
                                            ).test(o)
                                        ) {
                                            var i = t.pid;
                                            s[e] = function() {
                                                var t = r.format.apply(
                                                    r,
                                                    arguments
                                                );
                                                console.error(
                                                    '%s %d: %s',
                                                    e,
                                                    i,
                                                    t
                                                );
                                            };
                                        } else s[e] = function() {};
                                    return s[e];
                                }),
                                    (r.inspect = l),
                                    (l.colors = {
                                        bold: [1, 22],
                                        italic: [3, 23],
                                        underline: [4, 24],
                                        inverse: [7, 27],
                                        white: [37, 39],
                                        grey: [90, 39],
                                        black: [30, 39],
                                        blue: [34, 39],
                                        cyan: [36, 39],
                                        green: [32, 39],
                                        magenta: [35, 39],
                                        red: [31, 39],
                                        yellow: [33, 39]
                                    }),
                                    (l.styles = {
                                        special: 'cyan',
                                        number: 'yellow',
                                        boolean: 'yellow',
                                        undefined: 'grey',
                                        null: 'bold',
                                        string: 'green',
                                        date: 'magenta',
                                        regexp: 'red'
                                    }),
                                    (r.isArray = d),
                                    (r.isBoolean = m),
                                    (r.isNull = g),
                                    (r.isNullOrUndefined = function(t) {
                                        return null == t;
                                    }),
                                    (r.isNumber = b),
                                    (r.isString = v),
                                    (r.isSymbol = function(t) {
                                        return (
                                            'symbol' ===
                                            (void 0 === t ? 'undefined' : a(t))
                                        );
                                    }),
                                    (r.isUndefined = y),
                                    (r.isRegExp = w),
                                    (r.isObject = _),
                                    (r.isDate = x),
                                    (r.isError = k),
                                    (r.isFunction = E),
                                    (r.isPrimitive = function(t) {
                                        return (
                                            null === t ||
                                            'boolean' == typeof t ||
                                            'number' == typeof t ||
                                            'string' == typeof t ||
                                            'symbol' ===
                                                (void 0 === t
                                                    ? 'undefined'
                                                    : a(t)) ||
                                            void 0 === t
                                        );
                                    }),
                                    (r.isBuffer = e('./support/isBuffer'));
                                var A = [
                                    'Jan',
                                    'Feb',
                                    'Mar',
                                    'Apr',
                                    'May',
                                    'Jun',
                                    'Jul',
                                    'Aug',
                                    'Sep',
                                    'Oct',
                                    'Nov',
                                    'Dec'
                                ];
                                function T(t, e) {
                                    return Object.prototype.hasOwnProperty.call(
                                        t,
                                        e
                                    );
                                }
                                (r.log = function() {
                                    console.log(
                                        '%s - %s',
                                        (function() {
                                            var t = new Date(),
                                                e = [
                                                    S(t.getHours()),
                                                    S(t.getMinutes()),
                                                    S(t.getSeconds())
                                                ].join(':');
                                            return [
                                                t.getDate(),
                                                A[t.getMonth()],
                                                e
                                            ].join(' ');
                                        })(),
                                        r.format.apply(r, arguments)
                                    );
                                }),
                                    (r.inherits = e('inherits')),
                                    (r._extend = function(t, e) {
                                        if (!e || !_(e)) return t;
                                        for (
                                            var i = Object.keys(e),
                                                r = i.length;
                                            r--;

                                        )
                                            t[i[r]] = e[i[r]];
                                        return t;
                                    });
                            }.call(
                                this,
                                e('_process'),
                                void 0 !== t
                                    ? t
                                    : 'undefined' != typeof self
                                        ? self
                                        : void 0 !== f
                                            ? f
                                            : {}
                            ));
                        },
                        {
                            './support/isBuffer': 133,
                            _process: 15,
                            inherits: 36
                        }
                    ],
                    135: [
                        function(t, e, i) {
                            var r = t('global/window'),
                                n = t('is-function'),
                                a = t('parse-headers'),
                                o = t('xtend');
                            function s(t, e, i) {
                                var r = t;
                                return (
                                    n(e)
                                        ? ((i = e),
                                          'string' == typeof t &&
                                              (r = { uri: t }))
                                        : (r = o(e, { uri: t })),
                                    (r.callback = i),
                                    r
                                );
                            }
                            function l(t, e, i) {
                                return f((e = s(t, e, i)));
                            }
                            function f(t) {
                                if (void 0 === t.callback)
                                    throw new Error(
                                        'callback argument missing'
                                    );
                                var e = !1,
                                    i = function(i, r, n) {
                                        e || ((e = !0), t.callback(i, r, n));
                                    };
                                function r(t) {
                                    return (
                                        clearTimeout(h),
                                        t instanceof Error ||
                                            (t = new Error(
                                                '' +
                                                    (t ||
                                                        'Unknown XMLHttpRequest Error')
                                            )),
                                        (t.statusCode = 0),
                                        i(t, b)
                                    );
                                }
                                function n() {
                                    if (!s) {
                                        var e;
                                        clearTimeout(h),
                                            (e =
                                                t.useXDR && void 0 === f.status
                                                    ? 200
                                                    : 1223 === f.status
                                                        ? 204
                                                        : f.status);
                                        var r = b,
                                            n = null;
                                        return (
                                            0 !== e
                                                ? ((r = {
                                                      body: (function() {
                                                          var t = void 0;
                                                          if (
                                                              ((t = f.response
                                                                  ? f.response
                                                                  : f.responseText ||
                                                                    (function(
                                                                        t
                                                                    ) {
                                                                        try {
                                                                            if (
                                                                                'document' ===
                                                                                t.responseType
                                                                            )
                                                                                return t.responseXML;
                                                                            var e =
                                                                                t.responseXML &&
                                                                                'parsererror' ===
                                                                                    t
                                                                                        .responseXML
                                                                                        .documentElement
                                                                                        .nodeName;
                                                                            if (
                                                                                '' ===
                                                                                    t.responseType &&
                                                                                !e
                                                                            )
                                                                                return t.responseXML;
                                                                        } catch (t) {}
                                                                        return null;
                                                                    })(f)),
                                                              g)
                                                          )
                                                              try {
                                                                  t = JSON.parse(
                                                                      t
                                                                  );
                                                              } catch (t) {}
                                                          return t;
                                                      })(),
                                                      statusCode: e,
                                                      method: u,
                                                      headers: {},
                                                      url: c,
                                                      rawRequest: f
                                                  }),
                                                  f.getAllResponseHeaders &&
                                                      (r.headers = a(
                                                          f.getAllResponseHeaders()
                                                      )))
                                                : (n = new Error(
                                                      'Internal XMLHttpRequest Error'
                                                  )),
                                            i(n, r, r.body)
                                        );
                                    }
                                }
                                var o,
                                    s,
                                    f = t.xhr || null;
                                f ||
                                    (f =
                                        t.cors || t.useXDR
                                            ? new l.XDomainRequest()
                                            : new l.XMLHttpRequest());
                                var h,
                                    c = (f.url = t.uri || t.url),
                                    u = (f.method = t.method || 'GET'),
                                    p = t.body || t.data,
                                    d = (f.headers = t.headers || {}),
                                    m = !!t.sync,
                                    g = !1,
                                    b = {
                                        body: void 0,
                                        headers: {},
                                        statusCode: 0,
                                        method: u,
                                        url: c,
                                        rawRequest: f
                                    };
                                if (
                                    ('json' in t &&
                                        !1 !== t.json &&
                                        ((g = !0),
                                        d.accept ||
                                            d.Accept ||
                                            (d.Accept = 'application/json'),
                                        'GET' !== u &&
                                            'HEAD' !== u &&
                                            (d['content-type'] ||
                                                d['Content-Type'] ||
                                                (d['Content-Type'] =
                                                    'application/json'),
                                            (p = JSON.stringify(
                                                !0 === t.json ? p : t.json
                                            )))),
                                    (f.onreadystatechange = function() {
                                        4 === f.readyState && setTimeout(n, 0);
                                    }),
                                    (f.onload = n),
                                    (f.onerror = r),
                                    (f.onprogress = function() {}),
                                    (f.onabort = function() {
                                        s = !0;
                                    }),
                                    (f.ontimeout = r),
                                    f.open(u, c, !m, t.username, t.password),
                                    m ||
                                        (f.withCredentials = !!t.withCredentials),
                                    !m &&
                                        t.timeout > 0 &&
                                        (h = setTimeout(function() {
                                            if (!s) {
                                                (s = !0), f.abort('timeout');
                                                var t = new Error(
                                                    'XMLHttpRequest timeout'
                                                );
                                                (t.code = 'ETIMEDOUT'), r(t);
                                            }
                                        }, t.timeout)),
                                    f.setRequestHeader)
                                )
                                    for (o in d)
                                        d.hasOwnProperty(o) &&
                                            f.setRequestHeader(o, d[o]);
                                else if (
                                    t.headers &&
                                    !(function(t) {
                                        for (var e in t)
                                            if (t.hasOwnProperty(e)) return !1;
                                        return !0;
                                    })(t.headers)
                                )
                                    throw new Error(
                                        'Headers cannot be set on an XDomainRequest object'
                                    );
                                return (
                                    'responseType' in t &&
                                        (f.responseType = t.responseType),
                                    'beforeSend' in t &&
                                        'function' == typeof t.beforeSend &&
                                        t.beforeSend(f),
                                    f.send(p || null),
                                    f
                                );
                            }
                            (e.exports = l),
                                (e.exports.default = l),
                                (l.XMLHttpRequest =
                                    r.XMLHttpRequest || function() {}),
                                (l.XDomainRequest =
                                    'withCredentials' in new l.XMLHttpRequest()
                                        ? l.XMLHttpRequest
                                        : r.XDomainRequest),
                                (function(t, e) {
                                    for (var i = 0; i < t.length; i++) e(t[i]);
                                })(
                                    [
                                        'get',
                                        'put',
                                        'post',
                                        'patch',
                                        'head',
                                        'delete'
                                    ],
                                    function(t) {
                                        l[
                                            'delete' === t ? 'del' : t
                                        ] = function(e, i, r) {
                                            return (
                                                ((i = s(
                                                    e,
                                                    i,
                                                    r
                                                )).method = t.toUpperCase()),
                                                f(i)
                                            );
                                        };
                                    }
                                );
                        },
                        {
                            'global/window': 33,
                            'is-function': 39,
                            'parse-headers': 73,
                            xtend: 137
                        }
                    ],
                    136: [
                        function(t, e, i) {
                            e.exports =
                                void 0 !== self.DOMParser
                                    ? function(t) {
                                          return new self.DOMParser().parseFromString(
                                              t,
                                              'application/xml'
                                          );
                                      }
                                    : void 0 !== self.ActiveXObject &&
                                      new self.ActiveXObject('Microsoft.XMLDOM')
                                        ? function(t) {
                                              var e = new self.ActiveXObject(
                                                  'Microsoft.XMLDOM'
                                              );
                                              return (
                                                  (e.async = 'false'),
                                                  e.loadXML(t),
                                                  e
                                              );
                                          }
                                        : function(t) {
                                              var e = document.createElement(
                                                  'div'
                                              );
                                              return (e.innerHTML = t), e;
                                          };
                        },
                        {}
                    ],
                    137: [
                        function(t, e, i) {
                            e.exports = function() {
                                for (
                                    var t = {}, e = 0;
                                    e < arguments.length;
                                    e++
                                ) {
                                    var i = arguments[e];
                                    for (var n in i)
                                        r.call(i, n) && (t[n] = i[n]);
                                }
                                return t;
                            };
                            var r = Object.prototype.hasOwnProperty;
                        },
                        {}
                    ],
                    138: [
                        function(t, e, i) {
                            function r(t, e) {
                                (this.size = this.size || t),
                                    (this.smallerSize = this.smallerSize || e),
                                    (function(t) {
                                        for (var e = 1; e < t; e++) a[e] = 1;
                                        a[0] = 1 / Math.sqrt(2);
                                    })(this.size);
                            }
                            function n(t) {
                                var e = {};
                                return (
                                    (e.r = Math.floor(t / Math.pow(256, 3))),
                                    (e.g = Math.floor(
                                        (t - e.r * Math.pow(256, 3)) /
                                            Math.pow(256, 2)
                                    )),
                                    (e.b = Math.floor(
                                        (t -
                                            e.r * Math.pow(256, 3) -
                                            e.g * Math.pow(256, 2)) /
                                            Math.pow(256, 1)
                                    )),
                                    (e.a = Math.floor(
                                        (t -
                                            e.r * Math.pow(256, 3) -
                                            e.g * Math.pow(256, 2) -
                                            e.b * Math.pow(256, 1)) /
                                            Math.pow(256, 0)
                                    )),
                                    e
                                );
                            }
                            (r.prototype.size = 32),
                                (r.prototype.smallerSize = 8),
                                (r.prototype.distance = function(t, e) {
                                    for (var i = 0, r = 0; r < t.length; r++)
                                        t[r] !== e[r] && i++;
                                    return i / t.length;
                                }),
                                (r.prototype.getHash = function(t) {
                                    (t = t
                                        .clone()
                                        .resize(
                                            this.size,
                                            this.size
                                        )).grayscale();
                                    for (
                                        var e = [], i = 0;
                                        i < t.bitmap.width;
                                        i++
                                    ) {
                                        e[i] = [];
                                        for (
                                            var r = 0;
                                            r < t.bitmap.height;
                                            r++
                                        )
                                            e[i][r] = n(
                                                t.getPixelColor(i, r)
                                            ).b;
                                    }
                                    for (
                                        var o = (function(t, e) {
                                                for (
                                                    var i = e, r = [], n = 0;
                                                    n < i;
                                                    n++
                                                ) {
                                                    r[n] = [];
                                                    for (
                                                        var o = 0;
                                                        o < i;
                                                        o++
                                                    ) {
                                                        for (
                                                            var s = 0, l = 0;
                                                            l < i;
                                                            l++
                                                        )
                                                            for (
                                                                var f = 0;
                                                                f < i;
                                                                f++
                                                            )
                                                                s +=
                                                                    Math.cos(
                                                                        ((2 *
                                                                            l +
                                                                            1) /
                                                                            (2 *
                                                                                i)) *
                                                                            n *
                                                                            Math.PI
                                                                    ) *
                                                                    Math.cos(
                                                                        ((2 *
                                                                            f +
                                                                            1) /
                                                                            (2 *
                                                                                i)) *
                                                                            o *
                                                                            Math.PI
                                                                    ) *
                                                                    t[l][f];
                                                        (s *=
                                                            (a[n] * a[o]) / 4),
                                                            (r[n][o] = s);
                                                    }
                                                }
                                                return r;
                                            })(e, this.size),
                                            s = 0,
                                            l = 0;
                                        l < this.smallerSize;
                                        l++
                                    )
                                        for (
                                            var f = 0;
                                            f < this.smallerSize;
                                            f++
                                        )
                                            s += o[l][f];
                                    for (
                                        var h =
                                                s /
                                                (this.smallerSize *
                                                    this.smallerSize),
                                            c = '',
                                            u = 0;
                                        u < this.smallerSize;
                                        u++
                                    )
                                        for (
                                            var p = 0;
                                            p < this.smallerSize;
                                            p++
                                        )
                                            c += o[u][p] > h ? '1' : '0';
                                    return c;
                                });
                            var a = [];
                            e.exports = r;
                        },
                        {}
                    ],
                    139: [
                        function(t, e, i) {
                            function r(t, e, i, r, n, a, o) {
                                (this.widthOriginal = Math.abs(
                                    Math.floor(t) || 0
                                )),
                                    (this.heightOriginal = Math.abs(
                                        Math.floor(e) || 0
                                    )),
                                    (this.targetWidth = Math.abs(
                                        Math.floor(i) || 0
                                    )),
                                    (this.targetHeight = Math.abs(
                                        Math.floor(r) || 0
                                    )),
                                    (this.colorChannels = n ? 4 : 3),
                                    (this.interpolationPass = Boolean(a)),
                                    (this.resizeCallback =
                                        'function' == typeof o
                                            ? o
                                            : function() {}),
                                    (this.targetWidthMultipliedByChannels =
                                        this.targetWidth * this.colorChannels),
                                    (this.originalWidthMultipliedByChannels =
                                        this.widthOriginal *
                                        this.colorChannels),
                                    (this.originalHeightMultipliedByChannels =
                                        this.heightOriginal *
                                        this.colorChannels),
                                    (this.widthPassResultSize =
                                        this.targetWidthMultipliedByChannels *
                                        this.heightOriginal),
                                    (this.finalResultSize =
                                        this.targetWidthMultipliedByChannels *
                                        this.targetHeight),
                                    this.initialize();
                            }
                            (r.prototype.initialize = function() {
                                if (
                                    !(
                                        this.widthOriginal > 0 &&
                                        this.heightOriginal > 0 &&
                                        this.targetWidth > 0 &&
                                        this.targetHeight > 0
                                    )
                                )
                                    throw new Error(
                                        'Invalid settings specified for the resizer.'
                                    );
                                this.configurePasses();
                            }),
                                (r.prototype.configurePasses = function() {
                                    this.widthOriginal === this.targetWidth
                                        ? (this.resizeWidth = this.bypassResizer)
                                        : ((this.ratioWeightWidthPass =
                                              this.widthOriginal /
                                              this.targetWidth),
                                          this.ratioWeightWidthPass < 1 &&
                                          this.interpolationPass
                                              ? (this.initializeFirstPassBuffers(
                                                    !0
                                                ),
                                                (this.resizeWidth =
                                                    4 === this.colorChannels
                                                        ? this
                                                              .resizeWidthInterpolatedRGBA
                                                        : this
                                                              .resizeWidthInterpolatedRGB))
                                              : (this.initializeFirstPassBuffers(
                                                    !1
                                                ),
                                                (this.resizeWidth =
                                                    4 === this.colorChannels
                                                        ? this.resizeWidthRGBA
                                                        : this
                                                              .resizeWidthRGB))),
                                        this.heightOriginal ===
                                        this.targetHeight
                                            ? (this.resizeHeight = this.bypassResizer)
                                            : ((this.ratioWeightHeightPass =
                                                  this.heightOriginal /
                                                  this.targetHeight),
                                              this.ratioWeightHeightPass < 1 &&
                                              this.interpolationPass
                                                  ? (this.initializeSecondPassBuffers(
                                                        !0
                                                    ),
                                                    (this.resizeHeight = this.resizeHeightInterpolated))
                                                  : (this.initializeSecondPassBuffers(
                                                        !1
                                                    ),
                                                    (this.resizeHeight =
                                                        4 === this.colorChannels
                                                            ? this
                                                                  .resizeHeightRGBA
                                                            : this
                                                                  .resizeHeightRGB)));
                                }),
                                (r.prototype._resizeWidthInterpolatedRGBChannels = function(
                                    t,
                                    e
                                ) {
                                    var i = e ? 4 : 3,
                                        r = this.ratioWeightWidthPass,
                                        n = this.widthBuffer,
                                        a = 0,
                                        o = 0,
                                        s = 0,
                                        l = 0,
                                        f = 0,
                                        h = void 0;
                                    for (h = 0; a < 1 / 3; h += i, a += r)
                                        for (
                                            o = h, s = 0;
                                            o < this.widthPassResultSize;
                                            s += this
                                                .originalWidthMultipliedByChannels,
                                                o += this
                                                    .targetWidthMultipliedByChannels
                                        )
                                            (n[o] = t[s]),
                                                (n[o + 1] = t[s + 1]),
                                                (n[o + 2] = t[s + 2]),
                                                e && (n[o + 3] = t[s + 3]);
                                    a -= 1 / 3;
                                    var c = void 0;
                                    for (
                                        c = this.widthOriginal - 1;
                                        a < c;
                                        h += i, a += r
                                    )
                                        for (
                                            l = 1 - (f = a % 1),
                                                o = h,
                                                s = Math.floor(a) * i;
                                            o < this.widthPassResultSize;
                                            s += this
                                                .originalWidthMultipliedByChannels,
                                                o += this
                                                    .targetWidthMultipliedByChannels
                                        )
                                            (n[o + 0] =
                                                t[s + 0] * l +
                                                t[s + i + 0] * f),
                                                (n[o + 1] =
                                                    t[s + 1] * l +
                                                    t[s + i + 1] * f),
                                                (n[o + 2] =
                                                    t[s + 2] * l +
                                                    t[s + i + 2] * f),
                                                e &&
                                                    (n[o + 3] =
                                                        t[s + 3] * l +
                                                        t[s + i + 3] * f);
                                    for (
                                        c =
                                            this
                                                .originalWidthMultipliedByChannels -
                                            i;
                                        h <
                                        this.targetWidthMultipliedByChannels;
                                        h += i
                                    )
                                        for (
                                            o = h, s = c;
                                            o < this.widthPassResultSize;
                                            s += this
                                                .originalWidthMultipliedByChannels,
                                                o += this
                                                    .targetWidthMultipliedByChannels
                                        )
                                            (n[o] = t[s]),
                                                (n[o + 1] = t[s + 1]),
                                                (n[o + 2] = t[s + 2]),
                                                e && (n[o + 3] = t[s + 3]);
                                    return n;
                                }),
                                (r.prototype._resizeWidthRGBChannels = function(
                                    t,
                                    e
                                ) {
                                    var i = e ? 4 : 3,
                                        r = this.ratioWeightWidthPass,
                                        n = 1 / r,
                                        a =
                                            this
                                                .originalWidthMultipliedByChannels -
                                            i +
                                            1,
                                        o =
                                            this
                                                .targetWidthMultipliedByChannels -
                                            i +
                                            1,
                                        s = this.outputWidthWorkBench,
                                        l = this.widthBuffer,
                                        f = this
                                            .outputWidthWorkBenchOpaquePixelsCount,
                                        h = 0,
                                        c = 0,
                                        u = 0,
                                        p = 0,
                                        d = 0,
                                        m = 0,
                                        g = 0,
                                        b = 1,
                                        v = 0,
                                        y = 0,
                                        w = 0,
                                        _ = 0;
                                    do {
                                        for (
                                            d = 0;
                                            d <
                                            this
                                                .originalHeightMultipliedByChannels;

                                        )
                                            (s[d++] = 0),
                                                (s[d++] = 0),
                                                (s[d++] = 0),
                                                e &&
                                                    ((s[d++] = 0),
                                                    (f[d / i - 1] = 0));
                                        h = r;
                                        do {
                                            for (
                                                c = 1 + u - p,
                                                    b = Math.min(h, c),
                                                    d = 0,
                                                    m = u;
                                                d <
                                                this
                                                    .originalHeightMultipliedByChannels;
                                                m += a
                                            )
                                                (v = t[m]),
                                                    (y = t[++m]),
                                                    (w = t[++m]),
                                                    (_ = e ? t[++m] : 255),
                                                    (s[d++] += (_ ? v : 0) * b),
                                                    (s[d++] += (_ ? y : 0) * b),
                                                    (s[d++] += (_ ? w : 0) * b),
                                                    e &&
                                                        ((s[d++] += _ * b),
                                                        (f[d / i - 1] += _
                                                            ? b
                                                            : 0));
                                            if (!(h >= c)) {
                                                p += h;
                                                break;
                                            }
                                            (p = u += i), (h -= c);
                                        } while (
                                            h > 0 &&
                                            u <
                                                this
                                                    .originalWidthMultipliedByChannels
                                        );
                                        for (
                                            d = 0, m = g;
                                            d <
                                            this
                                                .originalHeightMultipliedByChannels;
                                            m += o
                                        )
                                            (h = e ? f[d / i] : 1),
                                                (b = e ? (h ? 1 / h : 0) : n),
                                                (l[m] = s[d++] * b),
                                                (l[++m] = s[d++] * b),
                                                (l[++m] = s[d++] * b),
                                                e && (l[++m] = s[d++] * n);
                                        g += i;
                                    } while (
                                        g < this.targetWidthMultipliedByChannels
                                    );
                                    return l;
                                }),
                                (r.prototype._resizeHeightRGBChannels = function(
                                    t,
                                    e
                                ) {
                                    var i = this.ratioWeightHeightPass,
                                        r = 1 / i,
                                        n = this.outputHeightWorkBench,
                                        a = this.heightBuffer,
                                        o = this
                                            .outputHeightWorkBenchOpaquePixelsCount,
                                        s = 0,
                                        l = 0,
                                        f = 0,
                                        h = 0,
                                        c = 0,
                                        u = 0,
                                        p = 0,
                                        d = 1,
                                        m = 0,
                                        g = 0,
                                        b = 0,
                                        v = 0;
                                    do {
                                        for (
                                            c = 0;
                                            c <
                                            this
                                                .targetWidthMultipliedByChannels;

                                        )
                                            (n[c++] = 0),
                                                (n[c++] = 0),
                                                (n[c++] = 0),
                                                e &&
                                                    ((n[c++] = 0),
                                                    (o[c / 4 - 1] = 0));
                                        s = i;
                                        do {
                                            for (
                                                l = 1 + f - h,
                                                    d = Math.min(s, l),
                                                    p = f,
                                                    c = 0;
                                                c <
                                                this
                                                    .targetWidthMultipliedByChannels;

                                            )
                                                (m = t[p++]),
                                                    (g = t[p++]),
                                                    (b = t[p++]),
                                                    (v = e ? t[p++] : 255),
                                                    (n[c++] += (v ? m : 0) * d),
                                                    (n[c++] += (v ? g : 0) * d),
                                                    (n[c++] += (v ? b : 0) * d),
                                                    e &&
                                                        ((n[c++] += v * d),
                                                        (o[c / 4 - 1] += v
                                                            ? d
                                                            : 0));
                                            if (!(s >= l)) {
                                                h += s;
                                                break;
                                            }
                                            (h = f = p), (s -= l);
                                        } while (
                                            s > 0 &&
                                            f < this.widthPassResultSize
                                        );
                                        for (
                                            c = 0;
                                            c <
                                            this
                                                .targetWidthMultipliedByChannels;

                                        )
                                            (s = e ? o[c / 4] : 1),
                                                (d = e ? (s ? 1 / s : 0) : r),
                                                (a[u++] = Math.round(
                                                    n[c++] * d
                                                )),
                                                (a[u++] = Math.round(
                                                    n[c++] * d
                                                )),
                                                (a[u++] = Math.round(
                                                    n[c++] * d
                                                )),
                                                e &&
                                                    (a[u++] = Math.round(
                                                        n[c++] * r
                                                    ));
                                    } while (u < this.finalResultSize);
                                    return a;
                                }),
                                (r.prototype.resizeWidthInterpolatedRGB = function(
                                    t
                                ) {
                                    return this._resizeWidthInterpolatedRGBChannels(
                                        t,
                                        !1
                                    );
                                }),
                                (r.prototype.resizeWidthInterpolatedRGBA = function(
                                    t
                                ) {
                                    return this._resizeWidthInterpolatedRGBChannels(
                                        t,
                                        !0
                                    );
                                }),
                                (r.prototype.resizeWidthRGB = function(t) {
                                    return this._resizeWidthRGBChannels(t, !1);
                                }),
                                (r.prototype.resizeWidthRGBA = function(t) {
                                    return this._resizeWidthRGBChannels(t, !0);
                                }),
                                (r.prototype.resizeHeightInterpolated = function(
                                    t
                                ) {
                                    for (
                                        var e,
                                            i = this.ratioWeightHeightPass,
                                            r = this.heightBuffer,
                                            n = 0,
                                            a = 0,
                                            o = 0,
                                            s = 0,
                                            l = 0,
                                            f = 0,
                                            h = 0;
                                        n < 1 / 3;
                                        n += i
                                    )
                                        for (
                                            o = 0;
                                            o <
                                            this
                                                .targetWidthMultipliedByChannels;

                                        )
                                            r[a++] = Math.round(t[o++]);
                                    for (
                                        n -= 1 / 3, e = this.heightOriginal - 1;
                                        n < e;
                                        n += i
                                    )
                                        for (
                                            f = 1 - (h = n % 1),
                                                l =
                                                    (s =
                                                        Math.floor(n) *
                                                        this
                                                            .targetWidthMultipliedByChannels) +
                                                    this
                                                        .targetWidthMultipliedByChannels,
                                                o = 0;
                                            o <
                                            this
                                                .targetWidthMultipliedByChannels;
                                            ++o
                                        )
                                            r[a++] = Math.round(
                                                t[s++] * f + t[l++] * h
                                            );
                                    for (; a < this.finalResultSize; )
                                        for (
                                            o = 0,
                                                s =
                                                    e *
                                                    this
                                                        .targetWidthMultipliedByChannels;
                                            o <
                                            this
                                                .targetWidthMultipliedByChannels;
                                            ++o
                                        )
                                            r[a++] = Math.round(t[s++]);
                                    return r;
                                }),
                                (r.prototype.resizeHeightRGB = function(t) {
                                    return this._resizeHeightRGBChannels(t, !1);
                                }),
                                (r.prototype.resizeHeightRGBA = function(t) {
                                    return this._resizeHeightRGBChannels(t, !0);
                                }),
                                (r.prototype.resize = function(t) {
                                    this.resizeCallback(
                                        this.resizeHeight(this.resizeWidth(t))
                                    );
                                }),
                                (r.prototype.bypassResizer = function(t) {
                                    return t;
                                }),
                                (r.prototype.initializeFirstPassBuffers = function(
                                    t
                                ) {
                                    (this.widthBuffer = this.generateFloatBuffer(
                                        this.widthPassResultSize
                                    )),
                                        t ||
                                            ((this.outputWidthWorkBench = this.generateFloatBuffer(
                                                this
                                                    .originalHeightMultipliedByChannels
                                            )),
                                            this.colorChannels > 3 &&
                                                (this.outputWidthWorkBenchOpaquePixelsCount = this.generateFloat64Buffer(
                                                    this.heightOriginal
                                                )));
                                }),
                                (r.prototype.initializeSecondPassBuffers = function(
                                    t
                                ) {
                                    (this.heightBuffer = this.generateUint8Buffer(
                                        this.finalResultSize
                                    )),
                                        t ||
                                            ((this.outputHeightWorkBench = this.generateFloatBuffer(
                                                this
                                                    .targetWidthMultipliedByChannels
                                            )),
                                            this.colorChannels > 3 &&
                                                (this.outputHeightWorkBenchOpaquePixelsCount = this.generateFloat64Buffer(
                                                    this.targetWidth
                                                )));
                                }),
                                (r.prototype.generateFloatBuffer = function(t) {
                                    try {
                                        return new Float32Array(t);
                                    } catch (t) {
                                        return [];
                                    }
                                }),
                                (r.prototype.generateFloat64Buffer = function(
                                    t
                                ) {
                                    try {
                                        return new Float64Array(t);
                                    } catch (t) {
                                        return [];
                                    }
                                }),
                                (r.prototype.generateUint8Buffer = function(t) {
                                    try {
                                        return new Uint8Array(t);
                                    } catch (t) {
                                        return [];
                                    }
                                }),
                                (e.exports = r);
                        },
                        {}
                    ],
                    140: [
                        function(t, e, i) {
                            (function(t) {
                                e.exports = {
                                    nearestNeighbor: function(t, e) {
                                        for (
                                            var i = t.width,
                                                r = t.height,
                                                n = e.width,
                                                a = e.height,
                                                o = t.data,
                                                s = e.data,
                                                l = 0;
                                            l < a;
                                            l++
                                        )
                                            for (var f = 0; f < n; f++) {
                                                var h = 4 * (l * n + f),
                                                    c =
                                                        4 *
                                                        (Math.floor(
                                                            (l * r) / a
                                                        ) *
                                                            i +
                                                            Math.floor(
                                                                (f * i) / n
                                                            ));
                                                (s[h++] = o[c++]),
                                                    (s[h++] = o[c++]),
                                                    (s[h++] = o[c++]),
                                                    (s[h++] = o[c++]);
                                            }
                                    },
                                    bilinearInterpolation: function(t, e) {
                                        for (
                                            var i = t.width,
                                                r = t.height,
                                                n = e.width,
                                                a = e.height,
                                                o = t.data,
                                                s = e.data,
                                                l = function(t, e, i, r, n) {
                                                    return e === r
                                                        ? i
                                                        : Math.round(
                                                              (t - e) * n +
                                                                  (r - t) * i
                                                          );
                                                },
                                                f = function(
                                                    t,
                                                    e,
                                                    r,
                                                    n,
                                                    a,
                                                    f,
                                                    h,
                                                    c
                                                ) {
                                                    var u = 4 * (h * i + n) + e,
                                                        p = 4 * (h * i + a) + e,
                                                        d = l(
                                                            r,
                                                            n,
                                                            o[u],
                                                            a,
                                                            o[p]
                                                        );
                                                    if (c === h) s[t + e] = d;
                                                    else {
                                                        p = 4 * (c * i + a) + e;
                                                        var m = l(
                                                            r,
                                                            n,
                                                            o[
                                                                (u =
                                                                    4 *
                                                                        (c * i +
                                                                            n) +
                                                                    e)
                                                            ],
                                                            a,
                                                            o[p]
                                                        );
                                                        s[t + e] = l(
                                                            f,
                                                            h,
                                                            d,
                                                            c,
                                                            m
                                                        );
                                                    }
                                                },
                                                h = 0;
                                            h < a;
                                            h++
                                        )
                                            for (var c = 0; c < n; c++) {
                                                var u = 4 * (h * n + c),
                                                    p = (c * i) / n,
                                                    d = Math.floor(p),
                                                    m = Math.min(
                                                        Math.ceil(p),
                                                        i - 1
                                                    ),
                                                    g = (h * r) / a,
                                                    b = Math.floor(g),
                                                    v = Math.min(
                                                        Math.ceil(g),
                                                        r - 1
                                                    );
                                                f(u, 0, p, d, m, g, b, v),
                                                    f(u, 1, p, d, m, g, b, v),
                                                    f(u, 2, p, d, m, g, b, v),
                                                    f(u, 3, p, d, m, g, b, v);
                                            }
                                    },
                                    _interpolate2D: function(e, i, r, n) {
                                        for (
                                            var a = e.data,
                                                o = i.data,
                                                s = e.width,
                                                l = e.height,
                                                f = i.width,
                                                h = i.height,
                                                c = Math.max(
                                                    1,
                                                    Math.floor(s / f)
                                                ),
                                                u = f * c,
                                                p = Math.max(
                                                    1,
                                                    Math.floor(l / h)
                                                ),
                                                d = h * p,
                                                m = t.alloc(u * l * 4),
                                                g = 0;
                                            g < l;
                                            g++
                                        )
                                            for (var b = 0; b < u; b++)
                                                for (
                                                    var v = (b * (s - 1)) / u,
                                                        y = Math.floor(v),
                                                        w = v - y,
                                                        _ = 4 * (g * s + y),
                                                        x = 4 * (g * u + b),
                                                        k = 0;
                                                    k < 4;
                                                    k++
                                                ) {
                                                    var E = _ + k,
                                                        I =
                                                            y > 0
                                                                ? a[E - 4]
                                                                : 2 * a[E] -
                                                                  a[E + 4],
                                                        S = a[E],
                                                        A = a[E + 4],
                                                        T =
                                                            y < s - 2
                                                                ? a[E + 8]
                                                                : 2 * a[E + 4] -
                                                                  a[E];
                                                    m[x + k] = n(I, S, A, T, w);
                                                }
                                        for (
                                            var C = t.alloc(u * d * 4), M = 0;
                                            M < d;
                                            M++
                                        )
                                            for (var P = 0; P < u; P++)
                                                for (
                                                    var L = (M * (l - 1)) / d,
                                                        O = Math.floor(L),
                                                        R = L - O,
                                                        B = 4 * (O * u + P),
                                                        D = 4 * (M * u + P),
                                                        z = 0;
                                                    z < 4;
                                                    z++
                                                ) {
                                                    var U = B + z,
                                                        N =
                                                            O > 0
                                                                ? m[U - 4 * u]
                                                                : 2 * m[U] -
                                                                  m[U + 4 * u],
                                                        F = m[U],
                                                        j = m[U + 4 * u],
                                                        H =
                                                            O < l - 2
                                                                ? m[U + 8 * u]
                                                                : 2 *
                                                                      m[
                                                                          U +
                                                                              4 *
                                                                                  u
                                                                      ] -
                                                                  m[U];
                                                    C[D + z] = n(N, F, j, H, R);
                                                }
                                        var G = c * p;
                                        if (G > 1)
                                            for (var q = 0; q < h; q++)
                                                for (var W = 0; W < f; W++) {
                                                    for (
                                                        var Z = 0,
                                                            X = 0,
                                                            Y = 0,
                                                            J = 0,
                                                            V = 0,
                                                            Q = 0;
                                                        Q < p;
                                                        Q++
                                                    )
                                                        for (
                                                            var K = q * p + Q,
                                                                $ = 0;
                                                            $ < c;
                                                            $++
                                                        ) {
                                                            var tt =
                                                                    4 *
                                                                    (K * u +
                                                                        (W * c +
                                                                            $)),
                                                                et = C[tt + 3];
                                                            et &&
                                                                ((Z += C[tt]),
                                                                (X +=
                                                                    C[tt + 1]),
                                                                (Y +=
                                                                    C[tt + 2]),
                                                                V++),
                                                                (J += et);
                                                        }
                                                    var it = 4 * (q * f + W);
                                                    (o[it] = V
                                                        ? Math.round(Z / V)
                                                        : 0),
                                                        (o[it + 1] = V
                                                            ? Math.round(X / V)
                                                            : 0),
                                                        (o[it + 2] = V
                                                            ? Math.round(Y / V)
                                                            : 0),
                                                        (o[it + 3] = Math.round(
                                                            J / G
                                                        ));
                                                }
                                        else i.data = C;
                                    },
                                    bicubicInterpolation: function(t, e, i) {
                                        return this._interpolate2D(
                                            t,
                                            e,
                                            i,
                                            function(t, e, i, r, n) {
                                                var a = r - i - t + e,
                                                    o = t - e - a,
                                                    s = i - t,
                                                    l = e;
                                                return Math.max(
                                                    0,
                                                    Math.min(
                                                        255,
                                                        a * (n * n * n) +
                                                            o * (n * n) +
                                                            s * n +
                                                            l
                                                    )
                                                );
                                            }
                                        );
                                    },
                                    hermiteInterpolation: function(t, e, i) {
                                        return this._interpolate2D(
                                            t,
                                            e,
                                            i,
                                            function(t, e, i, r, n) {
                                                var a = e,
                                                    o = 0.5 * (i - t),
                                                    s =
                                                        t -
                                                        2.5 * e +
                                                        2 * i -
                                                        0.5 * r,
                                                    l =
                                                        0.5 * (r - t) +
                                                        1.5 * (e - i);
                                                return Math.max(
                                                    0,
                                                    Math.min(
                                                        255,
                                                        Math.round(
                                                            ((l * n + s) * n +
                                                                o) *
                                                                n +
                                                                a
                                                        )
                                                    )
                                                );
                                            }
                                        );
                                    },
                                    bezierInterpolation: function(t, e, i) {
                                        return this._interpolate2D(
                                            t,
                                            e,
                                            i,
                                            function(t, e, i, r, n) {
                                                var a = 1 - n,
                                                    o = e * a * a * a,
                                                    s =
                                                        3 *
                                                        (e + (i - t) / 4) *
                                                        a *
                                                        a *
                                                        n,
                                                    l =
                                                        3 *
                                                        (i - (r - e) / 4) *
                                                        a *
                                                        n *
                                                        n,
                                                    f = i * n * n * n;
                                                return Math.max(
                                                    0,
                                                    Math.min(
                                                        255,
                                                        Math.round(
                                                            o + s + l + f
                                                        )
                                                    )
                                                );
                                            }
                                        );
                                    }
                                };
                            }.call(this, t('buffer').Buffer));
                        },
                        { buffer: 17 }
                    ],
                    141: [
                        function(t, e, i) {
                            (function(t, i) {
                                e.exports = function(t, e) {
                                    var r = new XMLHttpRequest();
                                    r.open('GET', t, !0),
                                        (r.responseType = 'arraybuffer'),
                                        r.addEventListener('load', function() {
                                            if (r.status < 400)
                                                try {
                                                    var n = i.from(
                                                        this.response
                                                    );
                                                    e(null, r, n);
                                                } catch (i) {
                                                    return e(
                                                        new Error(
                                                            'Response is not a buffer for url ' +
                                                                t +
                                                                '. Error: ' +
                                                                i.message
                                                        )
                                                    );
                                                }
                                            else
                                                e(
                                                    new Error(
                                                        'HTTP Status ' +
                                                            r.status +
                                                            ' for url ' +
                                                            t
                                                    )
                                                );
                                        }),
                                        r.addEventListener('error', function(
                                            t
                                        ) {
                                            e(t);
                                        }),
                                        r.send();
                                };
                            }.call(this, t('_process'), t('buffer').Buffer));
                        },
                        { _process: 15, buffer: 17, phin: 75 }
                    ]
                },
                {},
                [1]
            );
        }.call(this, i(2)));
    },
    function(t, e) {
        var i;
        i = (function() {
            return this;
        })();
        try {
            i = i || Function('return this')() || (0, eval)('this');
        } catch (t) {
            'object' == typeof window && (i = window);
        }
        t.exports = i;
    }
]);
